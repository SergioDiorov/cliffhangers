{"version":3,"file":"static/js/main.11687501.js","mappings":"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","sources":["../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","reportWebVitals.ts","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","assets/GameBackground1366.svg","assets/GameBackground1920.svg","assets/GameBackground2560.svg","assets/YellowRulerRotate.svg","assets/YodelyGuy.svg","components/GameScreen/constants.ts","context/GameContext.tsx","components/GameScreen/GameScreen.tsx","context/ProductContext.tsx","assets/ProductItem.svg","components/ProductScreen/ProductItem/ProductItem.tsx","assets/CrossIcon.svg","assets/AcceptImages.svg","components/SettingsModal/ConfirmationPopup/ConfirmationPopup.tsx","components/SettingsModal/SettingsModal.tsx","assets/Settings.svg","components/ProductScreen/ProdutScreen.tsx","App.tsx","index.tsx"],"sourcesContent":["/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"2832e561\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"cliffhangers:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/cliffhangers/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcliffhangers\"] = self[\"webpackChunkcliffhangers\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface HandlerResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => Promise<HandlerResult>\n  ) => Promise<HandlerResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<HandlerResult[]>;\n}\n\nexport interface AgnosticPatchRoutesOnNavigationFunction<\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> {\n  (opts: {\n    path: string;\n    matches: M[];\n    patch: (routeId: string | null, children: AgnosticRouteObject[]) => void;\n  }): void | Promise<void>;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  HandlerResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnNavigationFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  unstable_patchRoutesOnNavigation?: AgnosticPatchRoutesOnNavigationFunction;\n  unstable_dataStrategy?: DataStrategyFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n      unstable_flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.unstable_patchRoutesOnNavigation;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // FIFO queue of previously discovered routes to prevent re-calling on\n  // subsequent navigations to the same path\n  let discoveredRoutesMaxSize = 1000;\n  let discoveredRoutes = new Set<string>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = (m: AgnosticDataRouteMatch) => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (\n        typeof m.route.loader === \"function\" &&\n        m.route.loader.hydrate === true\n      ) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return (\n        (loaderData && loaderData[m.route.id] !== undefined) ||\n        (errors && errors[m.route.id] !== undefined)\n      );\n    };\n\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnNavigationFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: opts.viewTransitionOpts,\n        unstable_flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches\n      );\n      result = results[0];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(request, redirect.result, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors)\n        .filter(([id]) => !matchesToLoad.some((m) => m.route.id === id))\n        .forEach(([routeId, error]) => {\n          errors = Object.assign(errors || {}, { [routeId]: error });\n        });\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      fetchRequest,\n      [match],\n      requestMatches\n    );\n    let actionResult = actionResults[0];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, {\n            fetcherSubmission: submission,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(revalidationRequest, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      fetchRequest,\n      [match],\n      matches\n    );\n    let result = results[0];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[]\n  ): Promise<DataResult[]> {\n    try {\n      let results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        request,\n        matchesToLoad,\n        matches,\n        manifest,\n        mapRouteProperties\n      );\n\n      return await Promise.all(\n        results.map((result, i) => {\n          if (isRedirectHandlerResult(result)) {\n            let response = result.result as Response;\n            return {\n              type: ResultType.redirect,\n              response: normalizeRelativeRoutingRedirectResponse(\n                response,\n                request,\n                matchesToLoad[i].route.id,\n                matches,\n                basename,\n                future.v7_relativeSplatPath\n              ),\n            };\n          }\n\n          return convertHandlerResultToDataResult(result);\n        })\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      return matchesToLoad.map(() => ({\n        type: ResultType.error,\n        error: e,\n      }));\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let [loaderResults, ...fetcherResults] = await Promise.all([\n      matchesToLoad.length\n        ? callDataStrategy(\"loader\", request, matchesToLoad, matches)\n        : [],\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          let fetcherRequest = createClientSideRequest(\n            init.history,\n            f.path,\n            f.controller.signal\n          );\n          return callDataStrategy(\n            \"loader\",\n            fetcherRequest,\n            [f.match],\n            f.matches\n          ).then((r) => r[0]);\n        } else {\n          return Promise.resolve<DataResult>({\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path,\n            }),\n          });\n        }\n      }),\n    ]);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function handleDiscoverRouteError(\n    pathname: string,\n    discoverResult: DiscoverRoutesErrorResult\n  ) {\n    return {\n      boundaryId: findNearestBoundary(discoverResult.partialMatches).route.id,\n      error: getInternalRouterError(400, {\n        type: \"route-discovery\",\n        pathname,\n        message:\n          discoverResult.error != null && \"message\" in discoverResult.error\n            ? discoverResult.error\n            : String(discoverResult.error),\n      }),\n    };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnNavigationImpl) {\n      // Don't bother re-calling patchRouteOnMiss for a path we've already\n      // processed.  the last execution would have patched the route tree\n      // accordingly so `matches` here are already accurate.\n      if (discoveredRoutes.has(pathname)) {\n        return { active: false, matches };\n      }\n\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal\n  ): Promise<DiscoverRoutesResult> {\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      try {\n        await loadLazyRouteChildren(\n          patchRoutesOnNavigationImpl!,\n          pathname,\n          partialMatches,\n          routesToUse,\n          manifest,\n          mapRouteProperties,\n          pendingPatchRoutes,\n          signal\n        );\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return { type: \"success\", matches: newMatches };\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // Avoid loops if the second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        (partialMatches.length === newPartialMatches.length &&\n          partialMatches.every(\n            (m, i) => m.route.id === newPartialMatches![i].route.id\n          ))\n      ) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return { type: \"success\", matches: null };\n      }\n\n      partialMatches = newPartialMatches;\n    }\n  }\n\n  function addToFifoQueue(path: string, queue: Set<string>) {\n    if (queue.size >= discoveredRoutesMaxSize) {\n      let first = queue.values().next().value;\n      queue.delete(first);\n    }\n    queue.add(path);\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          unstable_dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `HandlerResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isHandlerResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        unstable_dataStrategy\n      );\n      result = results[0];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      unstable_dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      unstable_dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null\n  ): Promise<DataResult[]> {\n    let results = await callDataStrategyImpl(\n      unstable_dataStrategy || defaultDataStrategy,\n      type,\n      request,\n      matchesToLoad,\n      matches,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    return await Promise.all(\n      results.map((result, i) => {\n        if (isRedirectHandlerResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            matchesToLoad[i].route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        return convertHandlerResultToDataResult(result);\n      })\n    );\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isInitialLoad: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[0]\n      : undefined;\n  let boundaryMatches = boundaryId\n    ? getLoaderMatchesUntilBoundary(matches, boundaryId)\n    : matches;\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return (\n        state.loaderData[route.id] === undefined &&\n        // Don't re-run if the loader ran and threw an error\n        (!state.errors || state.errors[route.id] === undefined)\n      );\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      isInitialLoad ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Idempotent utility to execute patchRoutesOnNavigation() to lazily load route\n * definitions and update the routes/routeManifest\n */\nasync function loadLazyRouteChildren(\n  patchRoutesOnNavigationImpl: AgnosticPatchRoutesOnNavigationFunction,\n  path: string,\n  matches: AgnosticDataRouteMatch[],\n  routes: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  pendingRouteChildren: Map<\n    string,\n    ReturnType<typeof patchRoutesOnNavigationImpl>\n  >,\n  signal: AbortSignal\n) {\n  let key = [path, ...matches.map((m) => m.route.id)].join(\"-\");\n  try {\n    let pending = pendingRouteChildren.get(key);\n    if (!pending) {\n      pending = patchRoutesOnNavigationImpl({\n        path,\n        matches,\n        patch: (routeId, children) => {\n          if (!signal.aborted) {\n            patchRoutesImpl(\n              routeId,\n              children,\n              routes,\n              manifest,\n              mapRouteProperties\n            );\n          }\n        },\n      });\n      pendingRouteChildren.set(key, pending);\n    }\n\n    if (pending && isPromise<AgnosticRouteObject[]>(pending)) {\n      await pending;\n    }\n  } finally {\n    pendingRouteChildren.delete(key);\n  }\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [routeId, \"patch\", String(route.children?.length || \"0\")],\n      manifest\n    );\n    if (route.children) {\n      route.children.push(...dataChildren);\n    } else {\n      route.children = dataChildren;\n    }\n  } else {\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [\"patch\", String(routesToUse.length || \"0\")],\n      manifest\n    );\n    routesToUse.push(...dataChildren);\n  }\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nfunction defaultDataStrategy(\n  opts: DataStrategyFunctionArgs\n): ReturnType<DataStrategyFunction> {\n  return Promise.all(opts.matches.map((m) => m.resolve()));\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<HandlerResult[]> {\n  let routeIdsToLoad = matchesToLoad.reduce(\n    (acc, m) => acc.add(m.route.id),\n    new Set<string>()\n  );\n  let loadedMatches = new Set<string>();\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: matches.map((match) => {\n      let shouldLoad = routeIdsToLoad.has(match.route.id);\n      // `resolve` encapsulates the route.lazy, executing the\n      // loader/action, and mapping return values/thrown errors to a\n      // HandlerResult.  Users can pass a callback to take fine-grained control\n      // over the execution of the loader/action\n      let resolve: DataStrategyMatch[\"resolve\"] = (handlerOverride) => {\n        loadedMatches.add(match.route.id);\n        return shouldLoad\n          ? callLoaderOrAction(\n              type,\n              request,\n              match,\n              manifest,\n              mapRouteProperties,\n              handlerOverride,\n              requestContext\n            )\n          : Promise.resolve({ type: ResultType.data, result: undefined });\n      };\n\n      return {\n        ...match,\n        shouldLoad,\n        resolve,\n      };\n    }),\n    request,\n    params: matches[0].params,\n    context: requestContext,\n  });\n\n  // Throw if any loadRoute implementations not called since they are what\n  // ensures a route is fully loaded\n  matches.forEach((m) =>\n    invariant(\n      loadedMatches.has(m.route.id),\n      `\\`match.resolve()\\` was not called for route id \"${m.route.id}\". ` +\n        \"You must call `match.resolve()` on every match passed to \" +\n        \"`dataStrategy` to ensure all routes are properly loaded.\"\n    )\n  );\n\n  // Filter out any middleware-only matches for which we didn't need to run handlers\n  return results.filter((_, i) => routeIdsToLoad.has(matches[i].route.id));\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<HandlerResult> {\n  let result: HandlerResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<HandlerResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<HandlerResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<HandlerResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<HandlerResult>;\n    if (handlerOverride) {\n      handlerPromise = handlerOverride((ctx: unknown) => actualHandler(ctx));\n    } else {\n      handlerPromise = (async () => {\n        try {\n          let val = await actualHandler();\n          return { type: \"data\", result: val };\n        } catch (e) {\n          return { type: \"error\", result: e };\n        }\n      })();\n    }\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // HandlerResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertHandlerResultToDataResult(\n  handlerResult: HandlerResult\n): Promise<DataResult> {\n  let { result, type } = handlerResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n        };\n      }\n\n      // Convert thrown unstable_data() to ErrorResponse instances\n      result = new ErrorResponseImpl(\n        result.init?.status || 500,\n        undefined,\n        result.data\n      );\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\" | \"route-discovery\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (type === \"route-discovery\") {\n      errorMessage =\n        `Unable to match URL \"${pathname}\" - the \\`unstable_patchRoutesOnNavigation()\\` ` +\n        `function threw the following error:\\n${message}`;\n    } else if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isHandlerResult(result: unknown): result is HandlerResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectHandlerResult(result: HandlerResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else if (\n      future?.v7_partialHydration &&\n      parentMatches.length === 0 &&\n      !dataRouterState.initialized &&\n      dataRouterState.matches.length > 0\n    ) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  unstable_flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  unstable_PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n  unstable_HandlerResult,\n  unstable_PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  unstable_dataStrategy?: unstable_DataStrategyFunction;\n  unstable_patchRoutesOnNavigation?: unstable_PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts?.unstable_patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts?.unstable_patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103, _path104, _path105, _path106, _path107, _path108, _path109, _path110, _path111, _path112, _path113, _path114, _path115, _path116, _path117, _path118, _path119, _path120, _path121, _path122, _path123, _path124, _path125, _path126, _path127, _path128, _path129, _path130, _path131, _path132, _path133, _path134, _path135, _path136, _path137, _path138, _path139, _path140, _path141, _path142, _path143, _path144, _path145, _path146, _path147, _path148, _path149, _path150, _path151, _path152, _path153, _path154, _path155, _path156, _path157, _path158, _path159, _path160, _path161, _path162, _path163, _path164, _path165, _path166, _path167, _path168, _path169, _path170, _path171, _path172, _path173, _path174, _path175, _path176, _path177, _path178, _path179, _path180, _path181, _path182, _path183, _path184, _path185, _path186, _path187, _path188, _path189, _path190, _path191, _path192, _path193, _path194, _path195, _path196, _path197, _path198, _path199, _path200, _path201, _path202, _path203, _path204, _path205, _path206, _path207, _path208, _path209, _path210, _path211, _path212, _path213, _path214, _path215, _path216, _path217, _path218, _path219, _path220, _path221, _path222, _path223, _path224, _path225, _path226, _path227, _path228, _path229, _path230, _path231, _path232, _path233, _path234, _path235, _path236, _path237, _path238, _path239, _path240, _path241, _path242, _path243, _path244, _path245, _path246, _path247, _path248, _path249, _path250, _path251, _path252, _path253, _path254, _path255, _path256, _path257, _path258, _path259, _path260, _path261, _path262, _path263, _path264, _path265, _path266, _path267, _path268, _path269, _path270, _path271, _path272, _path273, _path274, _path275, _path276, _path277, _path278, _path279, _path280, _path281, _path282, _path283, _path284, _path285, _path286, _path287, _path288, _path289, _path290, _path291, _path292, _path293, _path294, _path295, _path296, _path297, _path298, _path299, _path300, _path301, _path302, _path303, _path304, _path305, _path306, _path307, _path308, _path309, _path310, _path311, _path312, _path313, _path314, _path315, _path316, _path317, _path318, _path319, _path320, _path321, _path322, _path323, _path324, _path325, _path326, _path327, _path328, _path329, _path330, _path331, _path332, _path333, _path334, _path335, _path336, _path337, _path338, _path339, _path340, _path341, _path342, _path343, _path344, _path345, _path346, _path347, _path348, _path349, _path350, _path351, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgGameBackground1366(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1341,\n    height: 595,\n    viewBox: \"0 0 1341 595\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M411.869 42.3116C436.177 39.6434 440.513 56.3839 442.754 56.8889C447.633 57.6209 448.875 53.3019 454.057 52.6418C466.214 51.0908 475.872 57.4924 475.339 66.5663C476.236 68.0761 486.728 68.8378 484.964 80.5412C485.508 81.196 492.503 80.5569 493.389 85.7279C499.054 86.0178 503.924 91.4311 501.648 95.4773C502.219 97.0464 515.069 96.7863 510.018 102.185L343.983 97.4804C349.17 92.8163 357.596 90.7486 365.521 90.4783C367.033 85.1469 374.592 85.4524 375.867 84.6816C378.219 83.2563 378.473 79.3584 385.748 77.7299C374.952 69.4768 379.539 60.6623 393.583 57.3987C392.383 51.115 404.603 43.1106 411.869 42.3116ZM413.838 43.8899C406.651 44.478 393.146 51.8903 397.605 58.2739C371.459 63.2651 385.282 77.4427 390.345 76.7184C392.475 76.4133 402.437 52.4961 421.432 71.8899C406.097 59.9609 387.54 73.6016 396.087 86.0158C389.225 76.8617 384.416 76.4514 378.849 86.2886C365.874 86.9182 368.377 91.6402 367.49 92.0566C366.799 92.3872 354.765 92.2517 352.166 95.4285C404.3 97.0351 456.435 98.6341 508.569 100.241C506.539 96.4152 500.088 99.3686 499.513 98.4617C496.801 94.16 504.135 81.7543 483.564 91.1587C500.046 81.3263 480.674 82.8403 479.846 81.9186C486.001 76.5513 481.908 70.1247 473.231 68.7903C475.899 55.3617 453.633 47.8797 446.665 60.8059C433.827 55.4637 435.112 42.1633 413.838 43.8899Z\",\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M413.838 43.891C435.112 42.1645 433.827 55.4648 446.665 60.807C453.633 47.8808 475.899 55.3628 473.231 68.7914C481.908 70.1258 486.001 76.5524 479.846 81.9197C480.674 82.8414 500.046 81.3274 483.564 91.1598C504.135 81.7554 496.801 94.1611 499.513 98.4628C500.088 99.3697 506.539 96.4163 508.569 100.242C456.435 98.6352 404.3 97.0362 352.166 95.4296C354.765 92.2528 366.799 92.3883 367.49 92.0577C368.377 91.6413 365.874 86.9192 378.849 86.2897C384.416 76.4525 389.225 76.8628 396.087 86.0169C387.54 73.6027 406.097 59.962 421.432 71.8911C402.437 52.4972 392.475 76.4144 390.345 76.7195C385.282 77.4438 371.459 63.2662 397.605 58.275C393.146 51.8914 406.651 44.4791 413.838 43.891Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M308.131 105.928C339.685 103.282 342.068 125.776 348.975 125.355C350.366 125.272 355.476 117.432 370.485 119.113C387.27 120.989 387.833 136.405 388.563 137.514C389.369 138.74 404.718 142.768 399.09 154.56C411.367 156.658 409.892 160.971 410.497 161.353C418.279 162.502 425.346 168.8 421.654 174.991C422.233 175.799 434.624 174.224 433.554 182.179C362.174 180.286 290.795 178.385 219.416 176.492C231.652 166.09 244.493 171.638 252.367 162.201C264.37 160.989 262.589 154.232 273.551 151.003C258.736 141.516 265.68 128.102 283.605 125.406C281.826 116.388 297.142 106.85 308.131 105.928ZM308.048 108.209C297.331 109.162 283.651 118.586 287.079 127.407C265.989 128.812 261.975 144.95 279.161 150.02C285.578 132.739 309.357 130.687 317.5 140.829C326.187 151.641 314.577 140.686 313.971 140.349C306.453 136.109 295.356 137.233 289.07 142.307C285.06 145.543 284.094 150.631 282.552 154.302C292.087 167.704 282.618 161.658 279.57 152.696C278.735 152.542 277.889 152.397 277.053 152.244C270.726 154.546 264.493 156.79 263.504 162.517C247.965 163.127 250.982 169.34 250.065 169.748C249.066 170.192 232.018 170.234 228.611 174.469C295.94 176.247 363.27 178.033 430.6 179.812C427.282 175.744 419.102 178.831 418.506 177.947C421.247 172.833 418.121 164.043 411.426 163.663C407.488 165.204 403.541 166.736 399.603 168.276C422.579 151.838 382.359 161.462 397.092 153.742C399.105 140.508 385.969 140.554 385.442 139.71C388.074 123.128 360.942 113.149 350.861 129.214C347.702 127.732 344.554 126.242 341.395 124.759C340.034 123.457 335.541 105.768 308.048 108.209Z\",\n    fill: \"black\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M308.048 108.208C335.541 105.767 340.034 123.455 341.395 124.758C344.554 126.24 347.702 127.73 350.861 129.213C360.942 113.147 388.074 123.127 385.442 139.708C385.969 140.552 399.105 140.506 397.092 153.74C382.359 161.46 422.579 151.836 399.603 168.275C403.541 166.734 407.488 165.202 411.426 163.662C418.121 164.042 421.247 172.831 418.506 177.945C419.102 178.83 427.282 175.742 430.6 179.81C363.27 178.032 295.94 176.246 228.611 174.467C232.018 170.233 249.066 170.19 250.065 169.747C250.982 169.339 247.965 163.125 263.504 162.515C264.493 156.788 270.726 154.544 277.053 152.242C277.889 152.395 278.735 152.541 279.57 152.694C282.618 161.656 292.087 167.702 282.552 154.301C284.094 150.63 285.06 145.542 289.07 142.306C295.356 137.231 306.453 136.107 313.971 140.347C314.577 140.684 326.187 151.64 317.5 140.828C309.357 130.686 285.578 132.737 279.161 150.018C261.975 144.948 265.989 128.81 287.079 127.405C283.651 118.585 297.331 109.16 308.048 108.208Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M927.829 30.3087C952.138 27.6405 956.473 44.3809 958.715 44.886C963.593 45.618 964.835 41.2989 970.018 40.6389C982.175 39.0879 991.833 45.4894 991.299 54.5634C992.197 56.0732 1002.69 56.8349 1000.92 68.5382C1001.47 69.1931 1008.46 68.554 1009.35 73.725C1015.01 74.0149 1019.88 79.4282 1017.61 83.4744C1018.18 85.0434 1031.03 84.7833 1025.98 90.182L859.944 85.4774C865.131 80.8134 873.557 78.7456 881.482 78.4754C882.994 73.1439 890.553 73.4495 891.828 72.6787C894.18 71.2533 894.434 67.3554 901.709 65.727C890.912 57.4738 895.5 48.6594 909.544 45.3958C908.344 39.1121 920.564 31.1077 927.829 30.3087ZM929.799 31.887C922.612 32.475 909.106 39.8873 913.566 46.271C887.419 51.2622 901.243 65.4398 906.306 64.7154C908.435 64.4104 918.398 40.4932 937.392 59.887C922.058 47.958 903.501 61.5986 912.048 74.0129C905.186 64.8588 900.377 64.4485 894.809 74.2856C881.835 74.9152 884.338 79.6373 883.451 80.0537C882.76 80.3842 870.725 80.2488 868.127 83.4256C920.261 85.0322 972.395 86.6312 1024.53 88.2378C1022.5 84.4122 1016.05 87.3657 1015.47 86.4588C1012.76 82.1571 1020.1 69.7513 999.524 79.1558C1016.01 69.3234 996.635 70.8374 995.807 69.9157C1001.96 64.5483 997.869 58.1218 989.192 56.7873C991.86 43.3587 969.593 35.8768 962.626 48.8029C949.788 43.4607 951.073 30.1604 929.799 31.887Z\",\n    fill: \"black\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M929.798 31.8881C951.073 30.1615 949.787 43.4618 962.625 48.8041C969.593 35.8779 991.859 43.3599 989.191 56.7885C997.868 58.1229 1001.96 64.5495 995.807 69.9168C996.635 70.8385 1016.01 69.3245 999.524 79.1569C1020.09 69.7524 1012.76 82.1582 1015.47 86.4599C1016.05 87.3668 1022.5 84.4133 1024.53 88.2389C972.395 86.6323 920.26 85.0333 868.126 83.4267C870.725 80.2499 882.76 80.3853 883.451 80.0548C884.337 79.6384 881.834 74.9163 894.809 74.2868C900.377 64.4496 905.186 64.8599 912.048 74.014C903.501 61.5997 922.057 47.9591 937.392 59.8881C918.397 40.4943 908.435 64.4115 906.306 64.7165C901.242 65.4409 887.419 51.2633 913.565 46.2721C909.106 39.8884 922.612 32.4761 929.798 31.8881Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M659.372 18.8981C675.519 17.5443 676.739 29.0549 680.273 28.8395C680.985 28.7974 683.6 24.7851 691.28 25.6455C699.87 26.6056 700.158 34.4944 700.532 35.062C700.944 35.6892 708.799 37.7504 705.919 43.7847C712.201 44.8587 711.447 47.0655 711.756 47.2612C715.738 47.8493 719.355 51.0721 717.466 54.2401C717.762 54.6536 724.103 53.8477 723.555 57.9186C687.028 56.9498 650.501 55.9772 613.973 55.0084C620.235 49.6854 626.806 52.5244 630.836 47.6952C636.978 47.0746 636.067 43.6168 641.676 41.9644C634.094 37.1101 637.648 30.2456 646.821 28.8655C645.911 24.2509 653.748 19.3699 659.372 18.8981ZM659.329 20.0656C653.845 20.553 646.845 25.3759 648.599 29.8898C637.806 30.6085 635.752 38.8671 644.547 41.4614C647.83 32.6182 659.999 31.5684 664.166 36.7584C668.612 42.2913 662.67 36.6849 662.36 36.5125C658.513 34.3428 652.834 34.9181 649.618 37.5148C647.566 39.1707 647.071 41.7745 646.282 43.6531C651.161 50.511 646.316 47.4171 644.756 42.8308C644.329 42.7524 643.896 42.6778 643.468 42.5995C640.23 43.7777 637.041 44.9261 636.534 47.8567C628.583 48.169 630.127 51.3486 629.658 51.5573C629.146 51.7844 620.422 51.806 618.678 53.9731C653.133 54.8831 687.588 55.7971 722.043 56.7071C720.346 54.6256 716.16 56.2054 715.855 55.7527C717.257 53.1357 715.658 48.6378 712.231 48.4434C710.216 49.2316 708.196 50.0158 706.181 50.804C717.939 42.3918 697.357 47.3168 704.897 43.3662C705.927 36.5939 699.204 36.6176 698.935 36.1854C700.281 27.7002 686.397 22.5933 681.238 30.8146C679.622 30.0559 678.011 29.2935 676.394 28.5349C675.698 27.8685 673.398 18.8164 659.329 20.0656Z\",\n    fill: \"black\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M659.329 20.0639C673.398 18.8148 675.697 27.8668 676.394 28.5332C678.01 29.2918 679.621 30.0543 681.238 30.8129C686.397 22.5916 700.281 27.6985 698.934 36.1837C699.204 36.6159 705.926 36.5922 704.896 43.3645C697.356 47.3151 717.938 42.3901 706.181 50.8023C708.196 50.0141 710.216 49.2299 712.231 48.4417C715.657 48.6361 717.256 53.134 715.854 55.751C716.159 56.2037 720.345 54.6239 722.043 56.7054C687.588 55.7954 653.133 54.8814 618.678 53.9714C620.422 51.8043 629.146 51.7827 629.657 51.5556C630.126 51.3469 628.582 48.1673 636.534 47.855C637.04 44.9244 640.23 43.776 643.468 42.5978C643.895 42.6761 644.328 42.7507 644.756 42.8291C646.315 47.4154 651.161 50.5094 646.282 43.6514C647.071 41.7728 647.565 39.169 649.617 37.5131C652.834 34.9164 658.513 34.3411 662.36 36.5108C662.67 36.6832 668.611 42.2896 664.166 36.7567C659.999 31.5668 647.83 32.6165 644.546 41.4597C635.752 38.8655 637.806 30.6068 648.598 29.8881C646.844 25.3742 653.845 20.5513 659.329 20.0639Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1087.78 106.057L1072.58 417.811C794.568 416.488 516.555 415.173 238.542 413.849L227.742 331.398L1087.78 106.057Z\",\n    fill: \"#7B52AC\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M512.784 380.863C518.26 374.156 523.83 366.775 529.264 358.697C535.358 349.639 540.42 340.969 544.665 332.882C547.171 333.214 550.745 333.384 554.332 332.254C563.235 329.444 565.586 320.697 567.57 316.338C570.998 308.775 580.217 299.198 605.866 290.721C606.059 287.942 607.063 282.583 612.35 278.231C614.326 276.612 617.338 274.13 620.92 274.396C624.951 274.701 626.6 278.261 630.874 282.373C633.742 285.126 638.515 288.827 646.583 292.144C646.351 293.438 645.364 297.704 640.432 301.2C634.777 305.212 627.958 305.331 626.422 305.331C627.284 306.717 628.319 308.733 628.874 311.247C630.706 319.627 625.487 326.237 623.782 328.34C618.305 335.064 610.434 338.086 607.114 339.18C610.281 338.168 618.393 335.188 623.782 328.34C631.993 317.903 627.205 306.993 626.434 305.331C627.97 305.331 634.788 305.212 640.444 301.2C645.375 297.705 646.363 293.43 646.594 292.144C648.144 288.926 657.222 270.862 676.842 268.069C678.839 267.787 681.061 267.642 683.518 267.738C684.523 263.914 686.954 257.442 693.49 251.113C696.376 248.314 701.637 242.452 705.821 243.316C708.675 243.9 708.559 247.072 711.588 250.498C715.403 254.822 722.099 257.12 729.68 258.254C741.991 276.022 754.313 293.799 766.623 311.568C769.897 316.813 773.753 320.037 776.763 322.048C779.706 324.014 783.145 325.664 783.707 328.63C784.152 330.985 782.275 331.461 782.381 333.303C782.724 339.125 801.877 339.936 808.603 349.661C810.194 351.961 810.646 354.117 810.808 355.379C786.732 376.497 761.492 386.452 746.838 391.129C737.736 394.038 685.353 410.051 627.911 397.267C601.698 391.433 587.655 382.542 552.607 380.195C535.994 379.083 522.126 379.939 512.818 380.881L512.784 380.863Z\",\n    fill: \"#7B52AC\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M623.782 328.34C625.487 326.237 630.706 319.627 628.874 311.247C628.319 308.733 627.284 306.717 626.422 305.331C627.958 305.331 634.777 305.212 640.432 301.2C645.364 297.704 646.351 293.438 646.583 292.144C638.515 288.827 633.742 285.126 630.874 282.373C626.6 278.261 624.951 274.701 620.92 274.396C617.338 274.13 614.326 276.612 612.35 278.231C607.063 282.583 606.059 287.942 605.866 290.721C580.217 299.198 570.998 308.775 567.57 316.338C565.586 320.697 563.235 329.444 554.332 332.254C550.745 333.384 547.171 333.214 544.665 332.882C540.42 340.969 535.358 349.639 529.264 358.697C523.83 366.775 518.26 374.156 512.784 380.863L512.818 380.881C522.126 379.939 535.994 379.083 552.607 380.195C587.655 382.542 601.698 391.433 627.911 397.267C685.353 410.051 737.736 394.038 746.838 391.129C761.492 386.452 786.732 376.497 810.808 355.379C810.646 354.117 810.194 351.961 808.603 349.661C801.877 339.936 782.724 339.125 782.381 333.303C782.275 331.461 784.152 330.985 783.707 328.63C783.145 325.664 779.706 324.014 776.763 322.048C773.753 320.037 769.897 316.813 766.623 311.568C754.313 293.799 741.991 276.022 729.68 258.254C722.099 257.12 715.403 254.822 711.588 250.498C708.559 247.072 708.675 243.9 705.821 243.316C701.637 242.452 696.376 248.314 693.49 251.113C686.954 257.442 684.523 263.914 683.518 267.738C681.061 267.642 678.839 267.787 676.842 268.069C657.222 270.862 648.144 288.926 646.594 292.144C646.363 293.43 645.375 297.705 640.444 301.2C634.788 305.212 627.97 305.331 626.434 305.331C627.205 306.993 631.993 317.903 623.782 328.34ZM623.782 328.34C618.305 335.064 610.434 338.086 607.114 339.18C610.281 338.168 618.393 335.188 623.782 328.34Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M619.352 296.185C618.174 300.299 616.445 304.96 613.884 309.945C610.117 317.29 605.591 323.286 601.484 327.923\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M594.767 313.824C593.934 314.512 592.474 315.902 591.682 317.979C590.967 319.858 591.117 321.467 591.291 322.383\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M587.296 314.124C586.396 315.052 585.259 316.443 584.43 318.285C583.513 320.323 583.331 322.131 583.345 323.346\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M585.481 308.131C583.626 309.622 581.365 311.753 579.368 314.576C577.091 317.808 576.001 320.787 575.449 322.949\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M569.267 349.931C565.916 354.72 562.361 357.838 559.643 359.843C557.662 361.296 555.95 362.297 555.185 364.297C554.062 367.214 556.254 368.873 555.593 371.777C555.236 373.337 554.004 375.471 549.949 377.724\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M574.256 355.681C572.64 356.92 570.634 358.719 568.86 361.133C566.965 363.699 565.989 366.066 565.451 367.829\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M598.116 345.83C597.545 345.961 596.076 346.353 594.893 347.439C593.794 348.44 593.525 349.491 593.451 349.94\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M638.523 353.25C636.197 355.283 633.776 357.696 631.479 360.519C626.013 367.244 623.364 373.709 622.008 378.581\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M659.798 314.812C658.469 317.056 656.283 320.004 652.723 322.931C650.724 324.566 648.725 325.845 646.933 326.844\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M652.807 308.345C653.07 307.797 653.86 306.379 655.849 305.377C657.096 304.753 658.305 304.536 659.047 304.453C659.103 302.269 659.661 297.427 663.99 292.709C666.312 290.181 668.971 288.512 670.96 287.476\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M696.889 264.612C693.473 265.825 692.022 267.302 691.325 268.358C689.296 271.432 691.897 273.588 689.66 276.968C688.609 278.552 687.854 278.357 685.214 281.084C683.342 283.018 682.135 284.753 681.423 285.896\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M691.431 284.143C691.492 284.682 691.55 285.959 690.633 287.347C689.68 288.786 688.221 289.534 687.61 289.803\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M723.637 280.812C724.099 287.15 726.835 290.038 729.346 291.497C732.015 293.047 733.571 292.484 736.256 294.234C739.786 296.555 739.88 299.368 741.989 304.243C743.012 306.605 744.737 309.977 747.734 313.913\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M723.466 299.476C723.816 300.344 724.322 301.651 724.853 303.254C725.727 305.898 725.614 306.129 726.073 306.854C727.613 309.283 730.512 309.27 732.472 310.939C733.973 312.213 735.131 314.657 733.281 319.784\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M737.287 327.703C737.367 328.356 737.753 330.449 740.057 332.197C741.54 333.323 743.174 333.803 744.055 334.01\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M618.577 140.22C619.126 139.338 619.672 138.257 620.223 137.039C620.037 137.141 619.832 137.211 619.637 137.282C619.307 138.269 618.967 139.249 618.577 140.22Z\",\n    fill: \"white\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M651.349 147.608C651.171 147.215 651.012 146.822 650.865 146.422C650.878 146.613 650.891 146.811 650.904 147.002C651.024 147.614 651.165 148.197 651.307 148.764C651.311 148.376 651.335 147.996 651.349 147.608Z\",\n    fill: \"white\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M833.611 166.643C833.665 166.812 834.437 167.603 835.432 168.651C835.088 167.819 834.764 166.972 834.482 166.104C834.245 165.359 834.019 164.607 833.814 163.855C833.756 165.437 833.492 166.297 833.61 166.65L833.611 166.643Z\",\n    fill: \"white\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M859.971 152.173L842.208 137.403C818.882 134.565 820.527 119.958 818.775 119.43C805.47 127.259 810.185 133.197 809.563 134.441C789.564 146.966 794.449 121.934 793.05 115.42C791.873 109.953 773.604 115.566 773.649 128.76C761.909 131.316 754.341 149.666 739.093 141.589C718.437 140.502 720.105 144.104 708.4 155.364C714.149 160.393 719.887 165.421 725.635 170.45C731.728 162.987 743.441 160.907 751.064 154.566C751.545 154.717 752.027 154.86 752.508 155.01C748.346 158.956 743.21 163.323 735.824 163.808C732.566 166.389 729.318 168.978 726.06 171.559C732.643 179.867 724.679 191.993 741.936 193.073C743.548 193.816 741.334 196.305 735.95 194.897C723.938 191.755 728.771 179.08 725.041 172.223C722.38 167.336 705.832 159.047 701.354 150.26C696.957 153.549 696.734 147.862 696.132 147.43C689.186 142.44 676.024 146.677 673.761 136.384C674.252 141.834 674.754 147.284 675.246 152.733C651.574 161.418 659.335 174.015 648.416 159.14C647.712 157.293 646.998 155.445 646.294 153.597C635.895 156.006 629.629 162.403 621.481 167.348L619.443 168.677C615.251 174.312 607.803 176.507 600.211 178.325C600.018 178.444 599.825 178.563 599.612 178.674C597.022 180.065 594.068 180.654 590.95 180.872C587.917 182.454 584.829 183.982 581.891 185.627C580.716 186.289 579.55 186.96 578.392 187.645C577.086 189.355 576.171 191.42 575.823 194.002C575.5 194.164 575.187 194.327 574.884 194.483C573.489 197.034 569.65 199.169 565.15 200.884C561.147 203.971 557.937 206.244 547.602 207.557C546.186 219.12 529.889 223.676 523.574 232.919C525.4 253.964 508.415 259.051 505.064 264.38C503.511 268.628 497.619 260.51 497.619 260.51L491.111 270.546C616.247 227.512 737.546 198.4 862.683 155.365C861.666 154.338 860.768 153.275 859.98 152.181L859.971 152.173ZM601.506 198.726C601.984 205.078 593.736 210.046 586.945 213.067C592.155 207.953 598.154 205.074 601.506 198.726ZM566.993 227.459L583.931 214.339C584.076 214.709 584.211 215.078 584.356 215.448C575.554 223.492 566.752 231.544 557.95 239.588C560.961 235.547 563.982 231.5 566.993 227.459ZM525.517 257.96C525.633 258.813 525.74 259.657 525.856 260.51C524.168 264.222 509.646 268.591 525.517 257.96ZM530.611 254.639C533.105 248.401 535.589 242.154 538.083 235.915C548.359 229.444 550.731 218.796 561.517 212.326C556.734 218.679 551.951 225.025 547.168 231.378C532.6 238.686 541.702 245.484 530.611 254.639ZM585.629 227.086C578.462 232.333 571.294 237.587 564.127 242.835L560.624 252.391C552.138 265.723 554.783 253.595 564.127 242.835C564.527 241.535 564.937 240.229 565.337 238.929C577.281 231.911 592.209 217.663 585.629 227.086ZM613.075 193.609C606.751 203.653 601.789 214.21 589.407 221.159C586.586 220.484 594.596 215.907 595.138 215.345C601.12 208.1 607.093 200.854 613.075 193.609L616.45 186.213C625.583 171.545 631.147 170.564 613.075 193.609ZM685.136 176.071C684.67 168.866 681.701 162.226 678.515 155.451C684.611 161.216 687.343 169.049 685.136 176.071ZM669.811 186.754C672.49 190.833 671.833 195.168 671.509 199.501C673.314 205.611 678.077 207.411 678.81 208.595C683.346 215.918 665.819 207.934 669.811 186.754ZM685.052 177.512C687.596 176.726 686.284 186.184 689.508 193.309C693.304 198.225 697.09 203.141 700.885 208.058C688.711 199.529 683.611 189.818 685.052 177.512ZM698.72 194.923C701.069 196.626 703.418 198.323 705.767 200.027C713.027 209.161 704.198 205.039 698.72 194.923ZM764.012 142.662C754.923 155.749 748.19 150.801 764.649 140.169C764.433 141.002 764.228 141.829 764.012 142.662ZM822.086 146.365C824.629 150.248 827.183 154.125 829.727 158.008C835.004 171.857 818.373 147.517 822.086 146.365ZM843.014 156.966C837.818 150.884 832.631 144.803 827.435 138.722C832.339 141.115 846.46 156.181 843.014 156.966Z\",\n    fill: \"#A68FC8\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M490.403 269.875C489.841 271.405 489.562 272.942 489.708 274.484C489.825 275.728 489.923 276.934 489.901 278.105C490.272 275.71 490.462 272.991 490.403 269.875Z\",\n    fill: \"white\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M764.647 140.166C764.431 140.999 764.226 141.826 764.01 142.659C754.921 155.747 748.189 150.799 764.647 140.166Z\",\n    fill: \"black\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M822.085 146.358C824.628 150.241 827.181 154.117 829.725 158.001C835.001 171.85 818.373 147.51 822.085 146.358Z\",\n    fill: \"black\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M827.434 138.717C832.338 141.11 846.458 156.176 843.012 156.96C837.816 150.879 832.63 144.798 827.434 138.717Z\",\n    fill: \"black\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M678.512 155.448C684.609 161.213 687.34 169.046 685.134 176.068C684.667 168.863 681.698 162.223 678.512 155.448Z\",\n    fill: \"black\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M685.049 177.51C687.594 176.724 686.282 186.182 689.506 193.306C693.301 198.223 697.087 203.139 700.882 208.055C688.708 199.527 683.609 189.815 685.049 177.51Z\",\n    fill: \"black\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M613.072 193.604L616.447 186.209C625.58 171.541 631.144 170.56 613.072 193.604Z\",\n    fill: \"black\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M669.809 186.754C672.487 190.833 671.84 195.169 671.506 199.501C673.311 205.611 678.074 207.41 678.807 208.595C683.342 215.917 665.817 207.934 669.809 186.754Z\",\n    fill: \"black\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M698.718 194.918C701.067 196.622 703.416 198.319 705.764 200.022C713.024 209.157 704.195 205.035 698.718 194.918Z\",\n    fill: \"black\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M613.072 193.606C606.749 203.65 601.787 214.207 589.406 221.156C586.585 220.481 594.594 215.904 595.137 215.342C601.118 208.097 607.09 200.851 613.072 193.606Z\",\n    fill: \"black\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M601.503 198.722C601.981 205.074 593.733 210.042 586.942 213.063C592.152 207.949 598.151 205.07 601.503 198.722Z\",\n    fill: \"black\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M561.514 212.326C556.731 218.679 551.948 225.025 547.165 231.378C532.598 238.686 541.7 245.483 530.609 254.639C533.103 248.4 535.587 242.154 538.081 235.915C548.357 229.444 550.729 218.796 561.514 212.326Z\",\n    fill: \"black\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M583.927 214.337C584.072 214.706 584.207 215.076 584.352 215.445C575.55 223.49 566.748 231.541 557.947 239.585C560.958 235.545 563.979 231.497 566.989 227.457L583.927 214.337Z\",\n    fill: \"black\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M564.123 242.834C564.523 241.534 564.933 240.228 565.333 238.928C577.277 231.911 592.205 217.663 585.624 227.086C578.457 232.333 571.29 237.587 564.123 242.834Z\",\n    fill: \"black\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M564.123 242.831L560.62 252.387C552.135 265.719 554.78 253.591 564.123 242.831Z\",\n    fill: \"black\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M525.513 257.958C525.63 258.81 525.737 259.655 525.853 260.507C524.165 264.219 509.645 268.587 525.513 257.958Z\",\n    fill: \"black\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M621.48 167.347C631.37 154.811 639.614 154.722 649.562 148.001C650.043 148.152 650.525 148.295 651.006 148.446C651.742 149.579 646.022 154.382 654.614 162.025C666.211 151.431 678.865 156.482 669.175 139.372C673.05 123.006 678.252 139.287 680.382 140.378C686.025 141.548 691.678 142.712 697.32 143.882C698.996 141.225 691.157 139.408 690.274 138.779C672.516 126.243 677.627 107.013 675.374 100.697C673.535 98.6608 671.695 96.6323 669.856 94.5965C669.232 93.7077 666.086 79.28 655.974 97.4118C651.154 106.054 656.667 112.407 634.832 123.662C632.359 141.85 630.45 142.333 613.478 153.514C617.928 162.798 593.94 183.146 619.442 168.675C609.025 182.691 578.358 175.426 575.823 193.994C562.33 200.691 564.521 205.4 547.592 207.548C546.176 219.111 529.879 223.667 523.564 232.91C525.39 253.954 508.406 259.042 505.054 264.371C503.501 268.619 502.723 259.345 501.17 263.592C498.373 266.662 478.686 268.128 499.493 275.616C502.849 253.915 522.007 259.81 521.696 231.356C529.293 221.812 543.401 217.983 545.724 205.995C563.009 203.115 559.714 199.861 572.936 193.105C576.886 175.804 604.436 177.779 606.346 174.788C605.551 166.004 614.546 162.156 611.568 152.682C627.54 141.508 630.403 140.466 632.922 122.829C637.666 119.973 642.4 117.108 647.144 114.251C651.54 109.632 655.534 90.7439 662.894 88.052C670.453 85.2922 669.066 92.2019 678.303 100.865C678.575 107.386 678.837 113.906 679.109 120.427C682.263 138.058 698.399 136.059 701.396 141.226C703.717 152.866 704.931 156.868 714.853 145.614C716.307 143.045 717.771 140.484 719.225 137.915C720.062 137.016 724.622 135.948 731.155 126.675C736.038 127.259 744.556 128.848 747.541 131.232C755.229 132.607 759.167 129.111 757.305 123.481C762.197 118.103 767.08 112.717 771.972 107.339C767.734 112.755 763.496 118.178 759.258 123.594C759.148 147.05 727.638 116.527 729.159 135.595C726.828 136.422 724.486 137.256 722.155 138.083C718.332 142.106 724.804 139.335 725.508 139.361C733.959 140.085 742.4 140.817 750.852 141.542C756.69 137.403 763.846 134.331 767.281 128.754C777.121 129.674 770.989 122.021 777.3 116.681C779.434 114.874 792.528 108.638 795.087 114.09C795.722 115.45 795.205 135.348 801.114 136.483C803.283 135.762 805.441 135.048 807.61 134.327C808.167 133.513 808.218 122.349 815.464 117.431C824.873 111.041 817.943 131.878 846.24 135.466C857.277 147.846 849.6 133.158 848.193 127.266C826.021 118.66 837.05 101.254 820.729 77.9796C809.64 62.1769 809.879 73.0618 800.649 86.2207C790.642 89.7794 789.666 93.865 784.326 97.2079C787.483 94.1802 789.32 88.2721 798.823 83.9472C809.731 62.4568 816.064 62.2213 827.224 84.1358C837.689 104.695 830.296 118.104 851.208 125.993C857.311 138.958 854.719 143.362 855.028 144.283C855.211 144.836 863.351 152.663 860.886 152.933C854.657 147.753 848.437 142.581 842.208 137.402C818.882 134.563 820.527 119.956 818.775 119.429C805.469 127.257 810.184 133.196 809.562 134.439C789.563 146.964 794.448 121.932 793.049 115.419C791.873 109.952 773.603 115.565 773.648 128.759C761.908 131.314 754.341 149.664 739.093 141.588C718.436 140.5 720.105 144.102 708.4 155.362C714.148 160.391 719.886 165.42 725.635 170.449C731.728 162.986 743.44 160.906 751.064 154.564C751.545 154.715 752.026 154.858 752.507 155.009C748.346 158.955 743.209 163.321 735.823 163.807C732.565 166.388 729.317 168.977 726.059 171.557C732.643 179.866 724.678 191.991 741.935 193.071C743.547 193.814 741.343 196.304 735.95 194.895C723.938 191.754 728.77 179.079 725.04 172.222C722.38 167.334 705.831 159.045 701.353 150.258C696.956 153.547 696.733 147.86 696.132 147.428C689.186 142.439 676.024 146.676 673.76 136.383C674.252 141.832 674.753 147.282 675.245 152.732C651.573 161.417 659.334 174.014 648.416 159.139C647.712 157.291 646.998 155.443 646.293 153.596C635.894 156.004 629.629 162.402 621.48 167.347Z\",\n    fill: \"black\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M771.972 107.338L784.325 97.2062C789.666 93.8633 790.641 89.7777 800.648 86.2191C809.879 73.0601 809.639 62.1752 820.728 77.9779C837.049 101.252 826.02 118.659 848.193 127.264C849.599 133.156 857.276 147.845 846.24 135.464C817.942 131.877 824.872 111.039 815.463 117.43C808.217 122.347 808.166 133.512 807.609 134.325C805.44 135.046 803.282 135.76 801.114 136.481C795.204 135.346 795.721 115.448 795.086 114.089C792.527 108.636 779.433 114.872 777.299 116.679C770.988 122.019 777.121 129.672 767.28 128.752C763.846 134.33 756.689 137.402 750.851 141.54C742.4 140.815 733.959 140.084 725.507 139.359C724.804 139.333 718.331 142.105 722.154 138.082C724.485 137.255 726.827 136.421 729.158 135.594C727.637 116.525 759.148 147.048 759.257 123.592C763.495 118.176 767.733 112.753 771.972 107.338Z\",\n    fill: \"white\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M621.479 167.348C620.797 167.793 620.124 168.232 619.442 168.677C593.939 183.147 617.927 162.8 613.478 153.516C630.449 142.335 632.358 141.852 634.832 123.664C656.666 112.408 651.153 106.055 655.973 97.4133C666.085 79.2815 669.231 93.7092 669.855 94.598C671.694 96.6338 673.534 98.6623 675.373 100.698C677.627 107.015 672.515 126.244 690.273 138.78C691.157 139.409 698.995 141.226 697.32 143.884C691.677 142.714 686.024 141.55 680.382 140.38C678.251 139.288 673.049 123.008 669.174 139.373C678.864 156.483 666.21 151.433 654.613 162.027C646.021 154.384 651.741 149.581 651.005 148.447C650.524 148.297 650.043 148.153 649.562 148.003C639.613 154.723 631.369 154.813 621.479 167.348Z\",\n    fill: \"white\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1081.74 101.732L1086.25 103.002C1084.66 137.463 1083.06 171.932 1081.47 206.394C1067.34 199.5 1072.1 198.272 1071.65 197.742C1066.55 191.637 1061.76 195.505 1060.9 186.78C1046.48 181.888 1063.39 171.694 1057.19 163.458C1055.51 167.848 1053.83 172.246 1052.15 176.636C1050.27 179.925 1043.61 183.276 1044.65 187.842C1035.82 192.098 1038.39 198.992 1037.06 201.329L1024.66 207.829C1021.64 210.27 1022.91 219.898 1007.73 199.737C1009.95 190.064 1003.16 189.156 998.245 181.96C1001.1 174.033 991.007 169.484 996.913 162.891C997.832 161.867 1007.72 158.029 1006.88 153.658C1001.87 156.691 996.856 159.715 991.851 162.748C988.248 177.612 960.556 190.537 947.396 200.692C941.686 191.349 950.017 186.059 941.771 174.27C943.341 172.921 945.217 170.934 946.489 168.283C949.823 161.352 946.587 155.033 945.53 153.168C990.929 136.026 1036.33 118.875 1081.74 101.732ZM1018.54 139.525C1015.69 143.502 1012.85 147.486 1010 151.463C1013.54 152.644 1026.48 138.098 1018.54 139.525Z\",\n    fill: \"white\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1018.54 139.527C1026.47 138.1 1013.54 152.646 1010 151.465C1012.85 147.488 1015.69 143.504 1018.54 139.527Z\",\n    fill: \"black\"\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M441.438 367.961C450.814 365.417 456.956 362.082 460.777 359.572C470.921 352.909 471.343 347.714 481.175 344.065C488.212 341.455 490.757 343.088 498.739 340.985C505.513 339.198 513.72 335.373 521.463 326.731\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M499.925 351.745C503.504 348.094 508.789 343.493 516.246 339.099C525.287 333.776 534.081 330.775 540.407 329.058\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M853.98 234.288C842.772 236.787 838.116 240.499 836.178 243.908C833.914 247.909 836.369 249.775 834.176 255.171C831.96 260.634 828.834 260.203 821.792 268.522C821.792 268.522 820.531 270.016 811.743 283.134C809.328 285.449 806.787 288.155 804.312 291.267C801.487 294.818 799.296 298.189 797.605 301.201\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M810.632 248.551C812.9 246.096 816.329 242.943 821.253 239.916C826.954 236.408 832.541 234.382 836.567 233.202\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M847.882 227.562C850.618 225.059 853.354 222.556 856.09 220.053\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M869.003 213.865C874.383 209.755 878.571 206.334 881.258 204.088C891.574 195.474 894.81 191.767 902.467 188.011C907.327 185.629 911.764 184.3 914.526 183.587\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M964.536 204.055C948.391 210.738 944.936 216.281 944.915 220.177C944.896 223.481 947.347 224.935 946.969 229.172C946.489 234.548 942.099 237.4 937.775 242.02C933.863 246.195 934.523 246.998 926.741 261.964C923.951 267.335 919.712 275.208 914.01 284.836\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M990.858 200.036C991.348 211.08 995.56 217.571 999.541 221.513C1001.61 223.574 1005.19 226.484 1005.61 230.835C1005.95 234.475 1003.93 237.577 1002.11 239.672\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1001.67 251.58C1001.01 255.139 1000.36 258.691 999.689 262.25\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M997.037 269.917L996.842 275.27\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M986.484 254.722C985.899 256.297 985.315 257.863 984.721 259.437\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M987.887 245.427C991.854 241.68 992.17 238.85 992.033 237.331C991.959 236.56 991.721 235.579 991.226 233.601C990.705 231.493 990.19 229.766 989.817 228.598\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1047.35 209.782C1047.06 211.935 1047.12 215.043 1049.26 218.08C1050.29 219.517 1051.09 219.981 1051.95 221.231C1053.23 223.087 1054.2 226.091 1052.38 230.972\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1051.32 195.196C1051.16 195.763 1050.9 197.164 1051.71 198.785C1052.51 200.368 1053.9 201.283 1054.52 201.643\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1057.7 208.486C1057.66 210.137 1057.87 212.609 1059.31 215.284C1061.28 218.963 1063.52 219.171 1065.65 222.612C1068.49 227.191 1067.82 232.089 1067.64 233.394C1067.14 237.018 1065.63 238.985 1067.06 241.918C1067.8 243.431 1068.99 244.515 1069.85 245.172\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.802 256.195C17.7907 276.015 17.4687 292.054 17.7433 303.09C18.2438 323.078 17.9319 321.374 16.3297 333.867C14.6605 346.92 14.6149 357.663 16.6258 371.665C17.5868 378.375 19.3424 383.81 20.7138 387.421L212.772 388.384C212.57 384.185 207.13 303.462 128.672 269.268C93.064 253.75 37.9784 254.634 20.7955 256.2L20.802 256.195Z\",\n    fill: \"#7E7B74\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M177.733 366.051C165.178 363.732 160.143 363.76 151.608 361.814C146.278 360.6 147.308 360.375 142.811 359.46C134.258 357.717 129.032 358.22 121.814 357.922C116.654 357.709 111.261 356.8 100.482 354.976C81.4706 351.763 81.5949 350.235 71.9803 349.62C63.6121 349.086 54.1671 348.595 45.9445 353.392C44.2134 354.405 38.7619 357.586 36.878 363.11C35.7235 366.488 36.6102 368.685 37.2769 375.11C37.7893 380.042 37.8422 384.309 37.7452 387.66L191.787 388.433C191.036 386.959 189.87 384.723 188.35 381.999C186.507 378.697 186.193 378.348 185.944 377.245C185.057 373.327 187.659 371.613 186.558 369.437C185.675 367.684 183.1 367.035 177.726 366.045L177.733 366.051Z\",\n    fill: \"black\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.492 254.507C151.767 252.554 149.459 251.207 146.918 250.673L138.563 248.914C139.682 247.529 126.313 248.852 126.313 248.852C126.313 248.852 121.62 249.438 119.778 248.82C118.587 248.42 114.379 245.851 112.74 244.837C112.299 244.565 111.826 244.36 111.324 244.239C109.648 243.834 105.518 242.9 102.38 242.722C97.0113 242.417 93.517 241.993 90.9589 241.793C87.6475 241.531 87.9546 241.805 80.8035 241.743C70.0769 241.646 71.0521 241.047 67.5963 241.398C65.2104 241.643 57.7218 242.402 52.4038 246.899C50.1928 248.764 48.3567 251.284 47.7083 252.174C47.2846 252.749 45.8469 254.763 44.8251 256.864C43.2351 260.144 43.0961 263.106 42.8883 268.884C42.6642 275.069 42.5276 279.164 42.4755 280.805C47.4905 279.039 52.5119 277.273 57.5269 275.513C68.0617 283.43 76.2419 284.802 81.7171 284.632C92.6414 284.286 100.719 277.542 111.108 278.422C112.212 278.519 115.498 278.877 117.717 277.279C119.563 275.947 119.929 273.799 119.962 272.27C119.635 275.279 119.77 279.252 121.827 283.368C125.532 290.781 133.546 295.799 133.855 295.565C134.152 295.342 129.647 288.503 123.134 287.839C119.725 287.491 118.66 289.132 113.662 288.909C109.703 288.729 108.812 287.628 105.187 287.193C100.615 286.646 97.5814 287.866 93.0163 289.084C85.7318 291.031 85.3093 290.114 74.7609 292.061C59.1132 294.95 51.2861 296.397 47.3168 299.943C43.5859 303.277 42.7393 310.33 41.0458 324.431C39.7971 334.835 40.5987 337.758 42.9729 339.321C46.508 341.653 49.9817 338.629 57.8847 341.069C60.493 341.873 63.4775 343.487 69.4399 346.703C75.1612 349.79 74.9689 350.094 76.5802 350.364C80.5696 351.042 82.8797 349.396 89.6789 350.093C89.7958 350.104 90.6077 350.215 92.2187 350.442C100.696 351.624 104.976 352.217 106.724 352.467C111.979 353.209 114.603 353.581 114.857 353.625C119.028 354.314 119.38 354.524 120.957 354.495C124.252 354.426 125.121 353.446 128.74 353.309C130.635 353.239 131.7 353.453 133.818 353.72C133.818 353.72 138.182 354.266 145.25 354.403C151.091 354.518 162.853 352.684 165.925 346.347C168.358 341.323 164.347 335.502 162.772 333.222C161.177 330.91 160.325 330.638 155.952 326.494C153.37 324.048 148.022 318.947 143.661 313.044C140.972 309.4 135.64 301.359 137.215 300.389C138.384 299.673 143.521 302.719 146.325 306.92C148.36 309.967 148.419 312.501 148.75 314.187C151.068 325.967 173.83 333.304 186.231 345.059C188.12 346.849 189.417 348.406 190.335 350.378C191.919 353.787 191.149 355.798 192.105 360.15C192.509 362.125 193.282 364.668 194.867 367.419C202.564 380.765 222.276 386.553 224.452 384.302C226.293 382.397 215.817 374.501 218.596 371.441L234.265 371.52L242.921 374.811L262.385 371.661L258.881 350.722L248.79 342.026L230.122 340.259L233.219 329.338C233.656 327.798 233.323 326.131 232.324 324.86L224.049 314.329C221.883 311.572 218.834 309.644 215.426 308.874L211.658 308.023C209.35 307.501 207.191 306.445 205.355 304.938L196.373 297.564C195.037 296.468 193.368 295.864 191.651 295.855V295.855C186.918 295.831 183.361 291.442 184.331 286.822L186.17 278.067C187.193 273.195 185.657 268.105 182.095 264.562L181.813 264.282C178.979 261.464 175.158 259.87 171.187 259.85L165.298 259.821C162.491 259.806 159.733 259.005 157.34 257.507L156.15 256.762C155.16 256.142 154.265 255.383 153.492 254.507V254.507Z\",\n    fill: \"#7E7B74\"\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M94.7311 242.894C68.1326 245.236 50.6307 236.722 45.8418 255.748C45.2362 261.268 44.6306 266.793 44.0249 272.313C44.5714 280.785 47.5893 271.748 52.783 272.09C56.6977 272.345 65.2453 280.878 74.272 281.821C88.1564 283.276 96.1127 274.307 110.556 275.053C114.543 272.897 112.119 267.549 116.656 266.796C113.938 251.197 118.443 248.937 94.7311 242.894Z\",\n    fill: \"black\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M93.8174 244.038C68.5932 246.235 51.9964 238.242 47.4535 256.102C46.8788 261.283 46.304 266.47 45.7293 271.652C46.2469 279.604 49.1095 271.121 54.0348 271.442C57.7472 271.682 65.8524 279.692 74.4126 280.578C87.5793 281.944 95.1252 273.525 108.822 274.226C112.603 272.203 110.305 267.182 114.607 266.476C112.031 251.833 116.303 249.711 93.8174 244.038Z\",\n    fill: \"#939393\"\n  })), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.729 251.109C128.528 250.751 123.831 251.631 119.147 253.442C121.816 263.608 115.521 277.552 122.002 286.605C123.216 288.306 137.741 295.292 141.273 303.008C142.447 301.319 143.628 299.636 144.802 297.947C150.45 293.372 169.841 305.301 175.886 290.083L179.654 274.062C179.682 268.555 175.359 261.684 168.196 260.905C158.565 259.863 157.99 266.917 147.376 253.85C142.827 252.935 138.278 252.024 133.729 251.109ZM126.607 253.212C127.177 257.224 127.754 261.237 128.324 265.25C126.247 261.893 122.433 271.134 123.145 266.828C124.219 265.588 125.287 264.342 126.36 263.102C127.922 257.838 122.717 266.804 122.475 264.151C122.425 263.579 127.064 260.143 125.636 253.474C125.96 253.385 126.284 253.301 126.607 253.212ZM128.68 269.262C129.357 269.548 130.025 273.695 137.195 279.463C131.95 277.587 125.151 267.774 128.68 269.262ZM121.554 270.83C123.647 275.385 125.733 279.94 127.826 284.495C128.216 290.389 120.526 279.583 121.554 270.83ZM133.685 286.931C133.366 287.64 133.047 288.355 132.728 289.064C129.381 283.439 128.177 274.675 132.362 283.716C128.528 270.63 138.715 290.436 138.916 292.036C139.601 297.552 136.837 295.036 133.685 286.931ZM141.754 281.624C152.463 291.061 160.83 285.623 168.388 285.501C174.247 285.407 168.7 287.165 158.998 287.859C166.397 293.837 163.902 295.118 158.027 288.122C151.94 288.851 144.121 286.427 141.754 281.624ZM139.163 282.146C140.158 284.915 141.153 287.679 142.148 290.448C141.597 282.276 145.088 289.736 145.409 292.603C146.42 301.623 136.482 286.977 139.163 282.146Z\",\n    fill: \"black\"\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M126.608 253.211C126.284 253.3 125.96 253.384 125.636 253.474C127.064 260.143 122.426 263.579 122.476 264.151C122.717 266.804 127.922 257.837 126.361 263.101C125.287 264.341 124.219 265.587 123.146 266.828C122.433 271.133 126.247 261.892 128.324 265.25C127.754 261.237 127.178 257.224 126.608 253.211Z\",\n    fill: \"black\"\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M128.68 269.262C125.151 267.774 131.95 277.587 137.195 279.464C130.025 273.696 129.357 269.549 128.68 269.262Z\",\n    fill: \"black\"\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.554 270.83C120.526 279.583 128.215 290.389 127.825 284.496C125.733 279.941 123.647 275.385 121.554 270.83Z\",\n    fill: \"black\"\n  })), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M132.362 283.716C132.806 284.787 133.242 285.859 133.685 286.93C136.837 295.036 139.602 297.552 138.916 292.036C138.715 290.436 128.529 270.63 132.362 283.716Z\",\n    fill: \"black\"\n  })), _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.685 286.931C133.242 285.859 132.805 284.787 132.362 283.716C128.177 274.675 129.381 283.439 132.728 289.064C133.047 288.355 133.366 287.64 133.685 286.931Z\",\n    fill: \"black\"\n  })), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M141.754 281.624C144.121 286.426 151.939 288.85 158.026 288.121C163.902 295.117 166.396 293.836 158.998 287.859C168.699 287.164 174.246 285.406 168.388 285.5C160.829 285.622 152.463 291.061 141.754 281.624Z\",\n    fill: \"black\"\n  })), _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M139.163 282.146C136.482 286.976 146.42 301.622 145.409 292.603C145.088 289.735 141.597 282.275 142.148 290.448C141.153 287.679 140.158 284.915 139.163 282.146Z\",\n    fill: \"black\"\n  })), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.395 252.362C129.475 252.024 125.032 252.857 120.601 254.569C123.125 264.187 117.17 277.379 123.302 285.942C124.45 287.551 138.191 294.16 141.532 301.46C142.643 299.863 143.76 298.27 144.871 296.672C150.214 292.344 168.558 303.629 174.277 289.233L177.841 274.077C177.868 268.867 173.778 262.367 167.001 261.63C157.89 260.644 157.347 267.318 147.306 254.956C143.002 254.09 138.699 253.229 134.395 252.362ZM127.658 254.352C128.198 258.148 128.743 261.944 129.282 265.74C127.318 262.564 123.709 271.307 124.383 267.233C125.399 266.06 126.409 264.881 127.425 263.708C128.902 258.728 123.978 267.211 123.749 264.701C123.702 264.16 128.09 260.909 126.74 254.6C127.046 254.516 127.352 254.436 127.658 254.352ZM129.619 269.536C130.259 269.807 130.892 273.73 137.674 279.186C132.713 277.411 126.281 268.128 129.619 269.536ZM122.878 271.019C124.858 275.328 126.831 279.637 128.811 283.947C129.18 289.522 121.906 279.299 122.878 271.019ZM134.354 286.251C134.052 286.922 133.75 287.598 133.449 288.269C130.282 282.948 129.143 274.657 133.102 283.209C129.475 270.83 139.112 289.567 139.302 291.08C139.951 296.298 137.336 293.918 134.354 286.251ZM141.987 281.231C152.118 290.158 160.033 285.014 167.184 284.898C172.726 284.809 167.478 286.472 158.3 287.129C165.3 292.784 162.94 293.996 157.382 287.378C151.623 288.067 144.227 285.774 141.987 281.231ZM139.536 281.724C140.477 284.344 141.418 286.959 142.36 289.578C141.839 281.847 145.141 288.904 145.445 291.617C146.402 300.149 137 286.294 139.536 281.724Z\",\n    fill: \"#939393\"\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M127.658 254.352C127.352 254.436 127.046 254.516 126.739 254.6C128.09 260.909 123.702 264.159 123.749 264.701C123.978 267.211 128.902 258.728 127.424 263.708C126.409 264.881 125.399 266.06 124.383 267.233C123.709 271.306 127.317 262.564 129.282 265.74C128.743 261.944 128.197 258.148 127.658 254.352Z\",\n    fill: \"black\"\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M129.619 269.535C126.281 268.127 132.713 277.411 137.674 279.186C130.892 273.73 130.259 269.806 129.619 269.535Z\",\n    fill: \"black\"\n  })), _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M122.878 271.018C121.906 279.298 129.18 289.521 128.811 283.946C126.831 279.636 124.858 275.327 122.878 271.018Z\",\n    fill: \"black\"\n  })), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.102 283.209C133.522 284.222 133.935 285.236 134.354 286.25C137.336 293.917 139.951 296.298 139.302 291.08C139.112 289.566 129.476 270.829 133.102 283.209Z\",\n    fill: \"black\"\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.354 286.25C133.934 285.236 133.521 284.223 133.102 283.209C129.143 274.656 130.283 282.947 133.449 288.269C133.75 287.598 134.052 286.921 134.354 286.25Z\",\n    fill: \"black\"\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M141.987 281.231C144.226 285.774 151.623 288.067 157.381 287.378C162.939 293.996 165.299 292.784 158.3 287.13C167.478 286.472 172.726 284.809 167.184 284.898C160.033 285.014 152.118 290.159 141.987 281.231Z\",\n    fill: \"black\"\n  })), _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M139.536 281.725C137 286.295 146.402 300.15 145.445 291.617C145.141 288.905 141.839 281.848 142.36 289.579C141.419 286.959 140.477 284.345 139.536 281.725Z\",\n    fill: \"black\"\n  })), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M101.328 285.053C88.7426 286.072 52.1711 292.044 43.6266 297.659C33.7628 304.135 37.172 326.136 34.747 336.019C40.0768 336.702 45.4133 337.379 50.7431 338.062C57.3439 341.274 63.9379 344.48 70.5387 347.692L82.7661 346.072C93.2433 350.195 104.308 347.705 115.452 351.842C132.886 345.583 145.926 356.632 156.227 348.683C162.506 343.836 157.713 333.446 153.011 328.763C144.929 324.882 144.511 317.468 137.923 312.428C134.246 305.682 130.562 298.936 126.884 292.189C117.615 282.544 111.894 290.017 101.328 285.053Z\",\n    fill: \"black\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.311 298.964C174.15 301.303 161.389 304.025 148.381 299.303C135.457 318.55 170.811 333.051 185.72 344.402C191.301 336.265 201.752 340.098 202.529 336.466C205.785 338.776 212.933 335.187 222.012 338.702C223.17 334.875 224.334 331.052 225.491 327.224C226.372 319.605 220.207 321.146 215.318 312.47C203.817 312.054 195.558 304.838 187.311 298.964ZM164.708 312.751C172.478 313.918 185.957 327.507 201.783 324.165C201.896 324.433 202.002 324.701 202.114 324.969C187.128 327.882 181.974 320.986 170.573 315.989C166.771 314.323 155.678 311.396 164.708 312.751ZM165.403 318.636C166.946 322.563 168.495 326.495 170.037 330.422C166.959 331.77 163.959 320.618 165.403 318.636ZM170.632 323.474C175.841 332.376 178.099 339.07 172.972 332.308C172.041 331.079 169.425 325.093 170.632 323.474ZM179.072 324.051C191.008 346.855 177.461 331.309 178.105 324.848L179.072 324.051ZM175.827 324.035C181.383 332.452 180.649 338.211 178.176 333.938C177.391 330.635 176.612 327.338 175.827 324.035ZM182.978 325.675C192.447 338.329 186.751 336.873 183.991 330.759C183.653 329.062 183.316 327.371 182.978 325.675Z\",\n    fill: \"black\"\n  })), _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M164.707 312.752C155.678 311.397 166.77 314.324 170.573 315.989C181.974 320.987 187.128 327.883 202.113 324.969C202.001 324.701 201.895 324.434 201.783 324.166C185.957 327.508 172.477 313.919 164.707 312.752Z\",\n    fill: \"black\"\n  })), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.403 318.636C163.958 320.618 166.959 331.771 170.037 330.423C168.495 326.496 166.945 322.563 165.403 318.636Z\",\n    fill: \"black\"\n  })), _path92 || (_path92 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.631 323.474C169.424 325.093 172.04 331.079 172.971 332.308C178.098 339.07 175.84 332.376 170.631 323.474Z\",\n    fill: \"black\"\n  })), _path93 || (_path93 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M179.071 324.053L178.104 324.85C177.461 331.311 191.007 346.858 179.071 324.053Z\",\n    fill: \"black\"\n  })), _path94 || (_path94 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M175.827 324.036C176.612 327.339 177.39 330.636 178.176 333.939C180.649 338.213 181.382 332.453 175.827 324.036Z\",\n    fill: \"black\"\n  })), _path95 || (_path95 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M182.978 325.676C183.315 327.372 183.653 329.064 183.991 330.76C186.751 336.875 192.446 338.331 182.978 325.676Z\",\n    fill: \"black\"\n  })), _path96 || (_path96 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M186.825 300.074C174.413 302.281 162.378 304.848 150.11 300.394C137.921 318.546 171.264 332.222 185.325 342.927C190.588 335.253 200.445 338.868 201.177 335.443C204.248 337.621 210.989 334.236 219.552 337.552C220.644 333.942 221.741 330.337 222.833 326.727C223.664 319.541 217.85 320.994 213.239 312.812C202.392 312.42 194.603 305.614 186.825 300.074ZM165.508 313.077C172.836 314.178 185.549 326.994 200.474 323.842C200.58 324.094 200.68 324.347 200.786 324.6C186.653 327.347 181.792 320.844 171.04 316.131C167.453 314.559 156.992 311.799 165.508 313.077ZM166.163 318.627C167.618 322.331 169.079 326.039 170.534 329.742C167.631 331.014 164.801 320.496 166.163 318.627ZM171.095 323.19C176.007 331.585 178.137 337.899 173.302 331.521C172.424 330.362 169.956 324.717 171.095 323.19ZM179.055 323.734C190.312 345.241 177.535 330.579 178.143 324.486L179.055 323.734ZM175.995 323.719C181.234 331.657 180.542 337.089 178.21 333.058C177.469 329.944 176.735 326.834 175.995 323.719ZM182.738 325.265C191.668 337.2 186.297 335.827 183.694 330.061C183.375 328.461 183.057 326.866 182.738 325.265Z\",\n    fill: \"#939393\"\n  })), _path97 || (_path97 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.508 313.079C156.992 311.801 167.453 314.561 171.04 316.132C181.792 320.845 186.653 327.349 200.786 324.601C200.68 324.349 200.58 324.096 200.474 323.843C185.549 326.996 172.836 314.18 165.508 313.079Z\",\n    fill: \"black\"\n  })), _path98 || (_path98 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.163 318.627C164.801 320.496 167.631 331.014 170.534 329.743C169.079 326.039 167.618 322.33 166.163 318.627Z\",\n    fill: \"black\"\n  })), _path99 || (_path99 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M171.095 323.189C169.956 324.716 172.424 330.361 173.302 331.52C178.137 337.898 176.007 331.584 171.095 323.189Z\",\n    fill: \"black\"\n  })), _path100 || (_path100 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M179.055 323.734L178.143 324.486C177.536 330.579 190.312 345.242 179.055 323.734Z\",\n    fill: \"black\"\n  })), _path101 || (_path101 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M175.995 323.718C176.735 326.833 177.469 329.943 178.21 333.058C180.542 337.089 181.234 331.656 175.995 323.718Z\",\n    fill: \"black\"\n  })), _path102 || (_path102 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M182.738 325.266C183.057 326.866 183.375 328.461 183.694 330.061C186.297 335.828 191.668 337.201 182.738 325.266Z\",\n    fill: \"black\"\n  })), _path103 || (_path103 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M211.638 339.718C208.361 339.632 190.677 341.907 189.287 344.15C188.403 345.574 191.164 361.777 192.033 363.412C195.076 369.132 208.206 366.247 214.46 368.604C224.999 367.09 230.154 364.934 237.85 372.464C243.361 371.866 248.871 371.273 254.382 370.675C254.587 356.251 255.541 351.337 238.926 344.132C229.565 346.17 220.179 339.937 211.638 339.718ZM203.931 349.838C205.232 350.203 206.532 350.562 207.833 350.927C208.904 350.996 225.359 350.908 224.39 352.346C211.561 352.993 197.81 349.54 203.931 349.838ZM249.396 355.412L249.404 356.482C228.857 360.153 230.375 358.445 249.396 355.412ZM202.026 355.175C210.115 363.091 213.459 370.069 206.962 364.021L202.026 355.175ZM207.875 356.273C208.961 357.487 214.611 364.68 213.137 365.389C211.193 364.936 206.756 356.738 207.875 356.273ZM198.141 356.225C207.766 365.576 206.502 369.008 201.109 362.388C200.12 360.335 199.131 358.277 198.141 356.225ZM194.897 356.208C197.438 360.846 201.359 364.394 199.506 364.786C198.273 364.78 193.475 357.72 194.897 356.208ZM213.087 358.973C214.282 359.957 215.484 360.947 216.679 361.932C222.193 368.429 214.183 363.833 213.087 358.973ZM223.49 361.698C226.317 362.231 223.216 363.953 223.185 364.103C223.404 364.815 223.631 365.533 223.85 366.245C221.988 368.716 220.943 361.22 223.49 361.698Z\",\n    fill: \"black\"\n  })), _path104 || (_path104 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.931 349.838C197.81 349.54 211.56 352.993 224.39 352.347C225.359 350.908 208.904 350.997 207.833 350.927C206.532 350.562 205.231 350.203 203.931 349.838Z\",\n    fill: \"black\"\n  })), _path105 || (_path105 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M249.395 355.413C230.375 358.445 228.857 360.154 249.404 356.482L249.395 355.413Z\",\n    fill: \"black\"\n  })), _path106 || (_path106 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M202.026 355.174L206.962 364.021C213.459 370.069 210.114 363.09 202.026 355.174Z\",\n    fill: \"black\"\n  })), _path107 || (_path107 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M207.875 356.273C206.756 356.737 211.194 364.935 213.137 365.389C214.611 364.679 208.962 357.486 207.875 356.273Z\",\n    fill: \"black\"\n  })), _path108 || (_path108 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M198.141 356.225C199.131 358.278 200.12 360.336 201.109 362.389C206.501 369.008 207.766 365.577 198.141 356.225Z\",\n    fill: \"black\"\n  })), _path109 || (_path109 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.896 356.208C193.474 357.72 198.272 364.78 199.505 364.786C201.358 364.394 197.437 360.846 194.896 356.208Z\",\n    fill: \"black\"\n  })), _path110 || (_path110 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M213.086 358.972C214.182 363.833 222.192 368.428 216.678 361.931C215.483 360.946 214.281 359.957 213.086 358.972Z\",\n    fill: \"black\"\n  })), _path111 || (_path111 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.489 361.697C220.942 361.219 221.987 368.715 223.85 366.244C223.63 365.531 223.404 364.814 223.184 364.102C223.215 363.952 226.316 362.23 223.489 361.697Z\",\n    fill: \"black\"\n  })), _path112 || (_path112 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M212.348 340.749C209.174 340.665 192.046 342.868 190.699 345.042C189.843 346.42 192.518 362.114 193.36 363.698C196.306 369.238 209.024 366.443 215.081 368.726C225.289 367.26 230.281 365.172 237.736 372.465C243.073 371.886 248.411 371.312 253.748 370.732C253.947 356.762 254.871 352.002 238.778 345.024C229.712 346.998 220.621 340.961 212.348 340.749ZM204.883 350.55C206.143 350.904 207.403 351.252 208.662 351.605C209.7 351.672 225.637 351.586 224.699 352.98C212.273 353.606 198.955 350.262 204.883 350.55ZM248.919 355.95L248.927 356.985C229.026 360.542 230.496 358.887 248.919 355.95ZM203.038 355.72C210.873 363.387 214.112 370.145 207.819 364.288L203.038 355.72ZM208.703 356.784C209.755 357.959 215.227 364.926 213.8 365.613C211.917 365.173 207.619 357.234 208.703 356.784ZM199.275 356.736C208.598 365.794 207.373 369.117 202.15 362.706C201.192 360.718 200.234 358.725 199.275 356.736ZM196.133 356.721C198.594 361.212 202.392 364.649 200.597 365.029C199.403 365.023 194.756 358.184 196.133 356.721ZM213.751 359.398C214.909 360.352 216.073 361.31 217.23 362.264C222.571 368.557 214.813 364.106 213.751 359.398ZM223.828 362.038C226.565 362.554 223.562 364.222 223.532 364.367C223.744 365.057 223.963 365.752 224.176 366.441C222.372 368.835 221.36 361.575 223.828 362.038Z\",\n    fill: \"#939393\"\n  })), _path113 || (_path113 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.883 350.55C198.954 350.262 212.273 353.607 224.699 352.98C225.637 351.587 209.7 351.672 208.662 351.605C207.402 351.252 206.143 350.904 204.883 350.55Z\",\n    fill: \"#939393\"\n  })), _path114 || (_path114 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.918 355.951C230.496 358.888 229.025 360.543 248.927 356.986L248.918 355.951Z\",\n    fill: \"#939393\"\n  })), _path115 || (_path115 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.038 355.721L207.819 364.289C214.112 370.147 210.873 363.388 203.038 355.721Z\",\n    fill: \"#939393\"\n  })), _path116 || (_path116 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M208.703 356.785C207.619 357.235 211.917 365.175 213.8 365.614C215.227 364.927 209.755 357.96 208.703 356.785Z\",\n    fill: \"#939393\"\n  })), _path117 || (_path117 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199.275 356.737C200.233 358.725 201.192 360.719 202.15 362.707C207.373 369.119 208.597 365.795 199.275 356.737Z\",\n    fill: \"#939393\"\n  })), _path118 || (_path118 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.133 356.721C194.756 358.185 199.403 365.023 200.597 365.029C202.392 364.65 198.594 361.213 196.133 356.721Z\",\n    fill: \"#939393\"\n  })), _path119 || (_path119 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M213.751 359.399C214.812 364.106 222.571 368.558 217.23 362.265C216.072 361.311 214.908 360.352 213.751 359.399Z\",\n    fill: \"#939393\"\n  })), _path120 || (_path120 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.827 362.038C221.36 361.575 222.372 368.836 224.176 366.442C223.963 365.752 223.744 365.057 223.531 364.367C223.561 364.222 226.565 362.554 223.827 362.038Z\",\n    fill: \"#939393\"\n  })), _path121 || (_path121 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.855 388.343L229.215 388.46C226.127 383.531 221.218 383.902 216.164 379.038C207.404 364.959 206.321 372.466 191.769 371.163C184.66 382.233 192.434 380.555 197.702 382.956C200.422 384.75 203.135 386.549 205.855 388.343Z\",\n    fill: \"#939393\"\n  })), _path122 || (_path122 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.0339 387.517L80.6168 387.716C85.548 384.367 91.8925 384.174 96.8393 387.797L181.196 388.22C179.795 382.471 186.197 384.588 187.036 388.249C188.239 388.587 188.744 388.45 188.983 388.259C190.402 387.127 184.661 382.33 184.009 375.365C183.832 373.487 184.066 371.922 184.305 370.859C172.022 362.682 154.653 366.92 141.075 360.751L100.17 357.338C91.7199 355.516 83.2702 353.688 74.8206 351.865C63.7809 350.745 45.2811 351.519 40.1777 361.048C35.1702 370.39 42.1468 378.001 41.0339 387.517Z\",\n    fill: \"#939393\"\n  })), _path123 || (_path123 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.196 388.221L187.036 388.25C186.196 384.589 179.795 382.471 181.196 388.221Z\",\n    fill: \"black\"\n  })), _path124 || (_path124 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80.6173 387.715L96.8398 387.796C91.893 384.173 85.5485 384.366 80.6173 387.715Z\",\n    fill: \"black\"\n  })), _path125 || (_path125 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M100.943 286.261C88.9336 287.233 54.0364 292.929 45.883 298.282C36.4708 304.459 39.7238 325.439 37.4098 334.864C42.4955 335.515 47.5878 336.161 52.6736 336.812C58.9722 339.875 65.2642 342.933 71.5628 345.996L83.2305 344.45C93.228 348.382 103.786 346.008 114.42 349.953C131.055 343.984 143.499 354.521 153.328 346.94C159.32 342.319 154.746 332.41 150.26 327.945C142.548 324.243 142.149 317.173 135.862 312.367C132.354 305.934 128.838 299.5 125.329 293.067C116.484 283.869 111.025 290.995 100.943 286.261Z\",\n    fill: \"#939393\"\n  })), _path126 || (_path126 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.7751 370.274L1318.93 376.792L1320.81 616.711L20.6544 610.193L18.7751 370.274Z\",\n    fill: \"#718B34\"\n  })), _path127 || (_path127 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M437.78 339.415C440.872 339.944 462.489 343.548 486.053 341.841C516.994 339.604 517.208 330.689 550.128 325.318C559.66 323.762 588.75 319.76 622.286 325.871C639.29 328.971 643.744 332.173 663.977 335.395C684.048 338.59 701.035 338.836 712.244 338.552C713.332 333.437 715.974 326.303 723.52 323.083C733.835 318.687 743.546 328.355 761.821 327.747C770.973 327.435 780.249 322.925 798.81 313.897C822.085 302.583 819.349 298.965 832.753 292.144C834.529 291.235 839.244 288.925 839.499 285.56C839.64 283.623 838.179 283.11 838.094 280.458C838.002 277.677 839.581 277.181 840.327 273.67C841.148 269.789 839.455 269.246 840.555 267.42C841.828 265.301 844.76 264.935 854.205 262.744C865.969 260.01 865.813 259.564 868.6 259.574C871.244 259.588 877.248 260.032 884.281 264.487C892.708 260.722 899.689 259.953 905.43 260.648C956.233 266.8 966.421 393.803 967.472 408.334C840.249 404.295 713.016 400.507 585.784 396.986C473.738 393.887 361.685 390.986 249.614 388.291C247.356 384.626 244.396 380.477 240.541 376.12C236.044 371.037 231.392 366.894 227.224 363.616C244.871 356.885 262.507 350.153 280.153 343.421C286.1 344.579 294.401 345.682 304.321 345.461C312.678 345.271 319.72 344.2 325.031 343.071C334.087 341.242 343.143 339.413 352.199 337.584C355.046 335.678 357.892 333.772 360.738 331.865C362.486 327.302 365.729 325.909 366.92 325.486C367.556 325.261 368.621 324.956 373.069 324.732C376.389 324.567 379.293 324.413 383.216 324.646C387.019 324.868 392.469 325.479 399.376 327.297C410.909 330.333 412.182 332.965 423.633 336.327C428.947 337.886 432.956 338.578 437.8 339.408L437.78 339.415Z\",\n    fill: \"black\"\n  })), _path128 || (_path128 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M942.894 408.921L1032.77 408.921L1122.65 408.921C1134.66 396.899 1161.38 363.748 1154.19 354.014C1143.02 338.876 1006.11 362.884 983.985 370.677C954.069 381.202 944.654 404.282 942.894 408.921Z\",\n    fill: \"#409519\"\n  })), _path129 || (_path129 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1317.75 230.902C1321.66 259.255 1321.53 282.088 1320.66 297.775C1319.09 326.185 1315.36 327.176 1317.36 345.03C1319.45 363.686 1323.38 375.574 1319.69 395.391C1317.93 404.886 1314.97 412.529 1312.69 417.595L1111.66 441.554L1083.67 381.304C1084.15 375.342 1056.9 289.48 1180.65 244.861C1236.81 224.613 1291.02 227.8 1317.76 230.91L1317.75 230.902Z\",\n    fill: \"#7E7B74\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path130 || (_path130 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1100.28 380.033C1119.96 377.378 1127.81 377.677 1141.2 375.346C1149.57 373.893 1147.97 373.521 1155.02 372.449C1168.43 370.409 1176.56 371.393 1187.84 371.339C1195.89 371.301 1204.34 370.284 1221.23 368.243C1251.01 364.649 1250.88 362.468 1265.9 362.087C1278.98 361.757 1293.73 361.543 1306.37 368.791C1309.03 370.32 1317.41 375.125 1320.13 383.08C1321.8 387.946 1320.33 391.026 1319.03 400.131C1318.04 407.122 1319.73 415.592 1319.75 420.366L1088.16 417.828C1086.99 417.815 1085.86 417.489 1084.86 416.884V416.884C1081.84 415.038 1080.21 410.826 1081.04 407.366C1081.47 405.585 1082.07 403.736 1083.09 402.177C1086.09 397.573 1086.6 397.093 1087.03 395.537C1088.57 390.008 1084.58 387.436 1086.38 384.397C1087.83 381.949 1091.87 381.157 1100.29 380.026L1100.28 380.033Z\",\n    fill: \"black\"\n  })), _path131 || (_path131 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1190.04 209.345C1190.1 209.377 1190.36 209.522 1190.69 209.508C1193.72 209.351 1197.98 195.906 1193.74 191.181C1183 179.214 1105.99 212.049 1099.04 203.722C1097.35 201.695 1102.83 195.89 1113.8 184.272C1127.46 169.815 1133.2 167.839 1136.1 167.053C1138.44 166.419 1142.35 165.654 1159.28 167.831C1192.05 172.033 1206.61 178.642 1213.22 182.072C1221.62 186.421 1223.76 189.047 1224.51 191.527C1226.55 198.23 1218.54 204.223 1221.83 206.942C1222.59 207.573 1223.6 207.731 1229.89 207.612C1238.28 207.454 1243.75 207.03 1247.75 206.877C1252.92 206.674 1252.43 207.048 1263.59 207.326C1280.33 207.74 1278.83 206.837 1284.21 207.515C1287.92 207.985 1299.57 209.449 1307.69 216.119C1311.07 218.887 1313.83 222.566 1314.81 223.865C1315.44 224.705 1317.61 227.644 1319.12 230.686C1321.47 235.434 1321.57 239.654 1321.66 247.886C1321.77 256.696 1321.82 262.529 1321.83 264.866C1314.08 262.096 1306.32 259.326 1298.56 256.564C1281.82 267.287 1269 268.819 1260.47 268.296C1243.44 267.242 1231.1 257.233 1214.86 257.953C1213.14 258.033 1208 258.375 1204.6 255.987C1201.77 253.996 1201.29 250.922 1201.29 248.746C1201.69 253.042 1201.32 258.688 1197.95 264.439C1191.87 274.794 1179.17 281.521 1178.7 281.173C1178.24 280.841 1185.54 271.342 1195.73 270.732C1201.06 270.411 1202.66 272.801 1210.46 272.74C1216.65 272.687 1218.08 271.167 1223.75 270.734C1230.91 270.191 1235.59 272.082 1242.66 274.049C1253.95 277.193 1254.65 275.911 1271.02 279.222C1295.32 284.135 1307.47 286.596 1313.52 291.844C1319.21 296.779 1320.25 306.856 1322.34 327.004C1323.87 341.869 1322.51 345.986 1318.74 348.087C1313.13 351.224 1307.83 346.743 1295.41 349.809C1291.31 350.819 1286.59 352.962 1277.16 357.231C1268.11 361.329 1268.4 361.771 1265.88 362.073C1259.63 362.832 1256.09 360.372 1245.45 361.014C1245.27 361.025 1244 361.141 1241.48 361.381C1228.21 362.627 1221.5 363.251 1218.77 363.516C1210.54 364.303 1206.43 364.697 1206.04 364.747C1199.5 365.513 1198.94 365.794 1196.49 365.671C1191.35 365.404 1190.03 363.966 1184.39 363.585C1181.44 363.387 1179.77 363.637 1176.45 363.908C1176.45 363.908 1169.62 364.461 1158.59 364.293C1149.48 364.157 1131.2 360.944 1126.66 351.772C1123.06 344.499 1129.55 336.424 1132.1 333.261C1134.68 330.053 1136.02 329.71 1143 324.039C1147.13 320.692 1155.67 313.71 1162.71 305.536C1167.05 300.49 1175.69 289.324 1173.27 287.863C1171.47 286.784 1163.34 290.855 1158.8 296.686C1155.5 300.917 1155.31 304.52 1154.72 306.901C1150.64 323.54 1114.84 332.81 1095.03 348.897C1092.01 351.346 1089.93 353.494 1088.42 356.253C1085.81 361.02 1086.93 363.922 1085.27 370.064V370.064C1083.54 376.862 1078.69 381.273 1071.78 382.47L1067.25 383.254C1065.2 383.608 1063.13 383.786 1061.06 383.786L1051.71 383.786C1047.5 383.786 1043.3 383.505 1039.12 383.095C1036.52 382.84 1033.41 382.573 1030.37 382.408C1026.78 382.215 1023.6 382.041 1020.1 382.521C1009.58 383.95 1007.63 389.612 996.131 393.351C990.89 395.06 990.672 394.087 982.828 395.753C961.011 400.395 955.757 409.411 948.184 407.248C939.98 404.907 942.472 393.254 931.511 390.066C929.305 389.425 929.599 390.263 921.758 389.341C890.092 385.597 893.904 383.063 856.191 377.846C792.23 369 766.833 374.279 763.673 367.003C755.95 349.2 901.433 302.731 905.379 260.64C905.658 257.702 905.884 247.873 914.755 242.804C924.991 236.958 941.64 240.353 954.119 244.132C954.348 238.422 955.949 230.627 963.377 225.935C977.184 217.214 997.563 227.809 1026.75 224.746C1050.69 222.243 1045.07 214.266 1076.07 206.611C1130.01 193.288 1186.81 207.609 1190 209.321L1190.04 209.345Z\",\n    fill: \"black\"\n  })), _path132 || (_path132 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M631.515 83.7454C632.064 82.8626 632.61 81.7819 633.161 80.5643C632.975 80.6656 632.77 80.7359 632.575 80.8065C632.245 81.7944 631.905 82.7744 631.515 83.7454Z\",\n    fill: \"white\"\n  })), _path133 || (_path133 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M664.287 91.1333C664.108 90.74 663.95 90.3473 663.802 89.9473C663.816 90.138 663.829 90.3363 663.842 90.527C663.962 91.1394 664.103 91.7219 664.244 92.2893C664.248 91.9011 664.272 91.5212 664.287 91.1333Z\",\n    fill: \"white\"\n  })), _path134 || (_path134 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M484.168 250.083C482.114 253.351 481.737 257.01 480.044 260.357C480.458 260.14 480.892 259.909 481.336 259.678C481.844 255.749 482.858 252.657 484.179 250.076L484.168 250.083Z\",\n    fill: \"white\"\n  })), _path135 || (_path135 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M494.564 237.872C497.375 234.99 499.977 231.73 501.605 226.82C501.398 227.218 501.15 227.614 500.872 228.01C500.359 228.741 499.757 229.409 499.095 230.053C498.06 232.871 496.457 235.421 494.564 237.872Z\",\n    fill: \"white\"\n  })), _path136 || (_path136 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M846.548 110.168C846.603 110.337 847.375 111.128 848.37 112.176C848.026 111.344 847.702 110.498 847.419 109.63C847.183 108.885 846.957 108.132 846.751 107.38C846.694 108.962 846.429 109.822 846.548 110.176L846.548 110.168Z\",\n    fill: \"white\"\n  })), _path137 || (_path137 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M503.341 213.401C502.778 214.93 502.499 216.468 502.645 218.009C502.762 219.254 502.86 220.459 502.838 221.631C503.209 219.236 503.4 216.516 503.341 213.401Z\",\n    fill: \"white\"\n  })), _path138 || (_path138 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M373.048 324.739C384.334 328.469 388.48 326.478 390.203 326.747C405.741 329.212 428.149 340.611 426.616 342.623C424.062 343.182 421.508 343.749 418.954 344.309C418.455 344.082 417.458 336.411 415.153 337.35C421.704 356.704 395.537 341.423 403.851 341.597C405.126 348.591 406.294 341.004 408.885 342.501C409.599 342.917 409.841 349.905 411.95 341.827C415.522 349.495 414.775 338.824 413.101 338.053C412.303 337.688 411.511 341.624 407.928 340.952C404.955 339.094 401.983 337.228 399.01 335.37C388.626 333.044 378.232 330.724 367.847 328.397C376.293 333.874 373.787 333.095 377.528 340.851C375.276 328.41 379.431 330.614 381.058 341.332C375.226 342.842 370.644 337.307 361.988 336.224C364.231 330.297 364.861 327.201 373.048 324.739Z\",\n    fill: \"#939393\"\n  })), _path139 || (_path139 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M381.855 333.357C386.546 331.99 386.106 348.519 386.889 334.261C391.236 335.396 395.592 336.54 399.939 337.675C400.569 350.702 404.346 342.154 383.575 341.779C382.998 338.969 382.431 336.167 381.855 333.357Z\",\n    fill: \"#939393\"\n  })), _path140 || (_path140 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M905.419 260.654C911.321 260.821 908.044 264.276 914.364 265.475C918.33 266.227 929.225 263.719 944.46 273.94C963.29 275.311 968.127 273.583 955.319 281.86C950.59 271.19 917.456 267.976 909.379 277.133C899.22 288.644 914.81 288.568 915.01 289.472C915.637 292.291 871.704 314.819 868.78 320.514C858.675 319.718 848.569 318.929 838.463 318.133C825.514 319.182 806.573 331.396 795.714 337.094C787.543 345.495 773.513 360.9 763.713 367.017C756.497 370.368 749.281 373.71 742.064 377.061C715.888 383.14 730.75 362.452 695.75 354.815L714.222 348.487C714.541 346.433 695.309 335.475 731.135 343.257C740.384 344.745 743.121 339.174 752.506 340.818C769.966 333.091 759.466 333.943 761.951 331.951C771.898 327.916 781.835 323.889 791.782 319.855C805.922 312.278 838.128 286.449 844.717 285.577C866.612 282.681 896.934 310.221 896.051 281.322C890.738 275.836 894.479 272.737 894.359 272.14C891.396 270.023 888.433 267.914 885.469 265.798L905.419 260.654Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path141 || (_path141 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M862.815 261.735C897.259 265.451 889.416 274.866 890.116 277.352C890.762 279.647 897.171 283.726 890.054 292.956C874.638 292.169 867.062 285.354 851.86 284.261C842.358 283.581 837.574 289.155 840.481 276.707C841.512 276.226 842.542 275.753 843.573 275.272C837.776 263.035 855.887 267.484 862.815 261.735ZM881.917 267.902L872.556 274.487C838.459 269.616 861.914 277.01 871.488 275.98C873.808 275.726 885.04 268.158 881.917 267.902Z\",\n    fill: \"#939393\"\n  })), _path142 || (_path142 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M883.798 269.941C886.92 270.197 875.689 277.765 873.37 278.018C863.796 279.049 840.341 271.655 874.437 276.526L883.798 269.941Z\",\n    fill: \"#939393\"\n  })), _path143 || (_path143 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M728.789 324.162C737.655 323.088 755.771 327.941 757.982 329.556C768.307 337.111 743.385 338.833 739.316 341.207C731.578 340.227 723.851 339.246 716.114 338.266C716.932 332.222 719.546 325.278 728.789 324.162Z\",\n    fill: \"#939393\"\n  })), _path144 || (_path144 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M573.725 324.334C605.986 323.429 630.859 328.077 660.432 336.687C652.111 337.532 631.177 336.048 637.251 347.068C638.829 349.922 671.082 349.229 672.824 344.27C674.532 339.385 661.085 338.525 686.644 340.475C671.824 343.046 677.134 343.638 671.014 352.211C651.82 349.681 632.294 350.993 613.224 352.858C591.828 352.899 568.279 345.296 536.392 347.636C523.785 351.8 512.465 357.897 498.461 359.502C492.32 372.284 480.202 351.639 471.459 349.602C464.354 347.947 432.621 354.942 435.443 364.567C417.944 362.8 400.435 361.041 382.936 359.273C364.702 354.319 346.479 349.357 328.245 344.402C336.929 342.494 345.613 340.578 354.297 338.67C361.584 328.364 359.783 337.752 360.399 338.082C361.125 338.468 366.377 337.284 376.431 343.103C393.318 341.641 414.96 353.741 418.925 345.069C435.404 346.175 426.629 340.56 428.23 340.004C431.217 338.977 463.524 345.693 494.009 342.629C524.626 339.553 537.518 325.356 573.725 324.334Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path145 || (_path145 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M645.162 338.537C648.648 337.996 667.873 339.363 669.896 341.141C675.866 346.402 661.375 344.165 660.043 347.332C655.57 344.937 642.322 348.063 639.796 346.758C637.548 345.598 639.965 339.349 645.162 338.537ZM660.265 341.248C655.008 341.731 649.761 342.222 644.504 342.705C641.955 345.906 671.53 341.636 660.265 341.248Z\",\n    fill: \"#939393\"\n  })), _path146 || (_path146 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M698.791 340.82C707.163 339.421 711.817 347.972 710.663 348.769C703.502 350.598 696.342 352.42 689.181 354.25C674.827 354.924 665.581 347.514 681.741 349.852C666.297 340.379 688.499 344.342 693.619 343.718C695.346 342.755 697.064 341.784 698.791 340.82ZM706.724 345.612C700.084 347.076 693.443 348.532 686.803 349.996C687.619 351.526 715.299 346.403 706.724 345.612Z\",\n    fill: \"#939393\"\n  })), _path147 || (_path147 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M660.267 341.249C671.532 341.637 641.957 345.906 644.506 342.705C649.763 342.223 655.01 341.732 660.267 341.249Z\",\n    fill: \"black\"\n  })), _path148 || (_path148 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M706.726 345.609C715.301 346.4 687.62 351.523 686.804 349.993C693.445 348.529 700.085 347.073 706.726 345.609Z\",\n    fill: \"black\"\n  })), _path149 || (_path149 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.143 343.42C294.331 347.597 309.847 347.322 324.661 345.442C342.481 349.791 360.345 353.792 376.808 360.622C396.331 362.446 415.865 364.264 435.389 366.088C435.547 366.473 435.695 366.858 435.853 367.243C398.423 370.118 360.983 372.985 323.553 375.86C296.524 376.404 162.412 386.868 136.341 394.244C131.882 385.889 120.815 382.835 121.078 382.012C138.724 375.281 262.497 350.151 280.143 343.42Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path150 || (_path150 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M462.293 350.864C473.286 349.82 482.655 358.596 488.637 364.932C473.459 372.045 455.237 365.652 439.327 369.244C429.687 359.288 458.418 351.233 462.293 350.864ZM473.152 358.784C470.175 359.263 469.99 365.469 471.918 364.838C472.28 364.087 472.652 363.337 473.014 362.586C473.655 363.616 474.286 364.654 474.927 365.685C477.745 366.511 477.913 358.02 473.152 358.784Z\",\n    fill: \"#939393\"\n  })), _path151 || (_path151 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M717.384 400.719L661.468 402.306C631.7 403.151 601.944 401.113 572.615 396.222V396.222C593.634 394.75 626.842 385.663 647.687 380.474C657.449 381.512 667.202 382.55 676.964 383.587C686.446 382.844 695.939 382.093 705.422 381.349C722.998 380.439 739.215 383.996 762.588 370.028C787.828 375.166 813.348 368.733 838.629 369.137C845.001 370.33 851.383 371.531 857.754 372.724C878.908 375.714 891.206 373.337 868.669 379.123C842.45 384.721 816.24 390.328 790.021 395.926C776.079 395.553 777.542 376.831 747.583 392.44C736.212 393.815 724.649 392.977 717.384 400.719Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path152 || (_path152 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M566.538 396.448L550.339 395.989C510.124 383.789 473.961 387.959 432.506 393.095L371.758 398.53L272.001 398.992L127.457 405.404L124.622 395.989C122.034 392.741 243.926 377.791 243.926 377.791C266.609 371.362 297.848 377.918 326.535 377.468L411.909 370.752C444.466 370.061 476.191 374.697 505.467 361.984C541.369 373.788 579.479 381.438 618.08 386.49C601.987 392.314 584.184 394.733 566.538 396.448Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path153 || (_path153 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M677.044 380.038C674.817 378.833 674.426 375.397 676.888 371.797C676.386 371.654 675.885 371.518 675.383 371.374C671.09 387.398 669.619 382.423 673.608 364.473C669.255 366.572 670.755 379.616 667.964 380.298C662.079 379.652 656.194 379.006 650.309 378.359C650.927 376.969 651.546 375.578 652.153 374.195C655.703 368.829 656.216 367.558 655.967 367.451C655.657 367.313 654.028 368.919 652.979 370.176C651.718 371.685 650.957 373.087 650.563 373.906C649.215 376.684 649.529 377.789 647.997 378.675C647.19 379.139 645.691 379.652 645.047 379.261C642.876 377.936 652.001 367.255 651.224 366.891C650.965 366.769 649.761 367.809 648.832 368.825C646.774 371.081 646.826 372.437 644.516 376.041C643.484 377.656 642.517 378.869 641.157 378.922C640.741 378.941 640.38 378.839 640.14 378.756C645.583 369.837 648.109 365.303 647.74 365.163C647.18 364.949 643.102 370.063 637.089 379.051C638.954 379.035 640.81 379.011 642.675 378.996C643.155 378.88 643.686 378.781 644.277 378.706C646.058 378.483 647.625 378.595 648.764 378.765C640.06 380.665 631.366 382.565 622.663 384.465C605.843 382.702 587.03 380.015 566.768 375.909C543.7 371.236 523.381 365.666 506.03 360.105C535.247 350.968 531.822 347.606 566.698 350.025C603.563 357.654 642.271 352.258 679.457 356.645C656.285 361.211 633.241 355.884 653.46 360.857C672.386 361.012 692.622 353.311 709.635 362.829C701.492 372.7 699.065 374.793 698.525 374.572C697.966 374.343 698.843 371.407 700.31 368.974C701.605 366.834 703.372 365.049 702.557 364.349C702.39 364.199 702.119 364.108 701.876 364.109C698.98 364.057 697.241 376.157 694.6 376.044C694.367 376.038 694.209 375.934 694.011 375.807C691.883 374.422 695.876 369.953 693.685 368.353C693.458 368.186 693.142 367.957 692.706 367.952C690.132 367.94 690.962 376.033 684.663 379.264C682.483 380.382 679.041 381.138 677.033 380.045L677.044 380.038ZM550.344 354.121C549.077 354.397 550.655 358.104 543.666 356.596C549.916 359.742 535.304 364.961 538.764 365.973C544.451 362.313 548.271 357.602 549.547 362.092C538.869 373.101 553.705 359.492 554.553 363.756C554.674 364.338 547.522 370.644 557.07 364.208C553.659 372.447 559.601 364.85 560.08 365.054L559.969 368.096C561.274 368.43 564.155 365.292 565.579 367.113C565.908 367.526 562.003 372.066 568.096 367.565C584.211 370.313 589.127 367.788 570.176 366.102C569.429 365.761 574.952 360.474 568.838 361.116C571.636 365.816 562.828 368.055 567.333 360.692C565.749 360.229 559.166 369.284 564.324 359.846C551.804 368.839 563.497 357.501 559.317 358.182C556.153 363.52 553.354 363.288 554.283 357.278C545.667 363.976 553.45 353.433 550.344 354.121ZM636.066 365.685C615.777 392.636 637.698 369.568 637.543 366.869L636.066 365.685ZM640.06 367.32C629.025 382.864 632.667 384.429 641.565 367.744C641.063 367.6 640.562 367.464 640.06 367.32Z\",\n    fill: \"#939393\"\n  })), _path154 || (_path154 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M711.123 364.006C712.009 363.894 721.926 370.417 710.735 374.652C708.32 373.35 716.75 367.012 712.025 367.076C697.497 385.269 708.965 364.272 711.123 364.006Z\",\n    fill: \"#939393\"\n  })), _path155 || (_path155 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M948.215 407.263L793.316 402.874C793.748 400.77 788.449 399.326 790.979 397.479C808.32 394.416 825.66 391.36 843 388.296C858.009 384.405 873.008 380.522 888.017 376.631C909.594 389.688 939.352 384.868 964.794 383.374C1024.04 394.507 992.771 381.274 948.215 407.263Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path156 || (_path156 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M505.175 389.064C521.775 389.528 546.374 395.436 562.985 395.359V395.359L588.211 397.87L613.478 402.219L640.957 403.123L679.372 401.914L794.597 397.257L858.838 384.245L887.027 375.869L907.344 384.021L938.056 386.284L966.374 383.747L996.24 389.107L971.223 396.095L949.471 405.816L943.148 409.625L833.407 413.913L777.648 417.264L736.066 420.206L703.683 425.166L646.192 432.992L603.268 437.314L552.108 441.674L485.298 441.984L372.959 432.197L264.601 416.205L151.912 405.403L267.433 399.356L304.956 399.182L372.223 398.871L439.987 392.859C457.289 390.312 484.593 388.49 505.175 389.064Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path157 || (_path157 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1142.86 169.187C1167.87 166.996 1217.13 179.863 1219.46 194.576C1218.62 199.119 1217.78 203.663 1216.94 208.206L1199.86 217.999C1181.3 214.771 1160.17 213.867 1143.96 222.505C1133.66 217.897 1123.34 213.296 1113.04 208.688C1108.16 206.905 1096.92 205.346 1099.04 203.724C1115.9 195.455 1118.62 171.31 1142.86 169.187ZM1199.03 185.242C1194.38 185.324 1162.54 206.299 1200.53 185.666C1200.03 185.522 1199.53 185.386 1199.03 185.242ZM1210.11 187.079C1198.96 206.349 1206.13 216.076 1206.11 199.526C1208.85 195.934 1212.79 190.717 1210.11 187.079ZM1201.9 189.891C1196.56 190.684 1196.06 218.081 1199.87 203.916L1200.14 196.312C1200.24 195.949 1206.56 189.201 1201.9 189.891ZM1138.06 189.605C1141.4 190.712 1144.74 191.826 1148.07 192.933C1146.64 189.368 1156.75 196.384 1157.24 191.671C1163.14 191.967 1169.05 192.256 1174.94 192.553C1162.65 191.573 1150.36 190.585 1138.06 189.605ZM1193.74 191.182L1190.04 209.347C1194.12 211.495 1195.05 191.783 1193.74 191.182ZM1187.59 193.292C1184.18 194.071 1178 216.451 1184.54 207.288C1183.77 199.928 1190.98 192.52 1187.59 193.292ZM1169.28 195.057L1161.65 195.982C1165.35 196.338 1169.05 196.702 1172.75 197.058C1168.05 201.576 1163.28 213.56 1166.62 212.489C1168.53 207.459 1171.9 197.894 1176.83 196.412L1169.28 195.057ZM1180.42 195.372C1177.71 199.992 1175.01 204.605 1172.31 209.225C1169.79 218.129 1179.59 204.118 1180.42 195.372Z\",\n    fill: \"#939393\"\n  })), _path158 || (_path158 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1199.03 185.243C1199.53 185.386 1200.03 185.522 1200.53 185.666C1162.54 206.299 1194.38 185.324 1199.03 185.243Z\",\n    fill: \"#939393\"\n  })), _path159 || (_path159 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1210.11 187.078C1212.79 190.717 1208.85 195.933 1206.11 199.525C1206.13 216.074 1198.96 206.348 1210.11 187.078Z\",\n    fill: \"#939393\"\n  })), _path160 || (_path160 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1201.9 189.889C1206.55 189.199 1200.24 195.947 1200.14 196.309L1199.87 203.914C1196.06 218.079 1196.56 190.681 1201.9 189.889Z\",\n    fill: \"#939393\"\n  })), _path161 || (_path161 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1138.06 189.603C1150.36 190.583 1162.65 191.57 1174.94 192.551C1169.05 192.254 1163.14 191.965 1157.24 191.668C1156.74 196.381 1146.64 189.366 1148.07 192.931C1144.74 191.824 1141.39 190.709 1138.06 189.603Z\",\n    fill: \"#939393\"\n  })), _path162 || (_path162 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1193.74 191.182C1195.05 191.783 1194.12 211.494 1190.04 209.346L1193.74 191.182Z\",\n    fill: \"#939393\"\n  })), _path163 || (_path163 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1187.59 193.292C1190.98 192.52 1183.77 199.928 1184.54 207.288C1178 216.45 1184.18 194.071 1187.59 193.292Z\",\n    fill: \"#939393\"\n  })), _path164 || (_path164 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1169.28 195.057L1176.83 196.413C1171.9 197.895 1168.53 207.459 1166.62 212.49C1163.28 213.56 1168.05 201.577 1172.75 197.059C1169.05 196.703 1165.35 196.339 1161.64 195.983L1169.28 195.057Z\",\n    fill: \"#939393\"\n  })), _path165 || (_path165 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1180.41 195.373C1179.59 204.118 1169.79 218.129 1172.31 209.225C1175.01 204.605 1177.71 199.993 1180.41 195.373Z\",\n    fill: \"#939393\"\n  })), _path166 || (_path166 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1234.64 209.084C1276.04 213.782 1303.68 202.568 1310.4 229.881C1311.13 237.765 1311.85 245.656 1312.58 253.541C1311.39 265.565 1307.04 252.554 1298.93 252.773C1292.81 252.935 1279.14 264.636 1265.02 265.514C1243.3 266.871 1231.24 253.702 1208.68 254.022C1202.55 250.75 1206.54 243.266 1199.49 241.963C1204.35 219.911 1197.41 216.464 1234.64 209.084Z\",\n    fill: \"#939393\"\n  })), _path167 || (_path167 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1091.78 208.084C1099.46 205.897 1134.44 218.23 1134.32 222.611C1132.73 224.72 1131.13 226.837 1129.53 228.946C1107.82 226.976 1098.06 236.573 1096.28 251.602C1082.11 244.372 1067.32 237.574 1050.81 233.947C1056.71 209.42 1066.36 214.527 1091.78 208.084ZM1093 230.195C1091.41 232.22 1081.42 242.572 1083.39 243.625C1086.66 241.258 1094.6 244.414 1095.19 239.772C1095.54 236.973 1091.11 242.877 1092.75 237.039C1086.53 239.314 1095.68 231.298 1093 230.195Z\",\n    fill: \"#939393\"\n  })), _path168 || (_path168 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1051.91 217.61C1052.41 217.754 1052.91 217.89 1053.42 218.034C1051.59 221.788 1049.77 225.542 1047.94 229.297C1046.96 229.977 1029.07 227.011 1051.91 217.61Z\",\n    fill: \"#939393\"\n  })), _path169 || (_path169 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M968.56 224.384C975.002 223.653 1001.33 228.494 1002.84 229.162C1008.48 231.643 1000.21 233.426 1001.85 242.455C990.441 245.511 965.147 261.024 957.112 246.516C953.185 239.424 956.663 225.744 968.56 224.384ZM999.723 231.357C995.219 234.525 990.705 237.701 986.202 240.87C956.733 234.691 955.976 236.824 986.146 242.391C992.284 238.606 1003.89 230.912 999.723 231.357Z\",\n    fill: \"#939393\"\n  })), _path170 || (_path170 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1035.32 227.794C1044.58 234.778 1032.98 230.605 1020.93 233.476C1010.27 236.013 1002.53 246.87 1005.11 236.453C1007.43 227.057 1026.04 228.452 1035.32 227.794Z\",\n    fill: \"#939393\"\n  })), _path171 || (_path171 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1039.35 228.672C1041.69 229.248 1044.04 229.817 1046.38 230.393C1051.41 235.286 1034.81 230.317 1039.35 228.672Z\",\n    fill: \"#939393\"\n  })), _path172 || (_path172 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1093 230.191C1095.68 231.294 1086.53 239.309 1092.75 237.035C1091.11 242.872 1095.54 236.969 1095.19 239.768C1094.6 244.41 1086.66 241.254 1083.39 243.62C1081.43 242.567 1091.41 232.216 1093 230.191Z\",\n    fill: \"#939393\"\n  })), _path173 || (_path173 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M999.723 231.354C1003.89 230.908 992.284 238.603 986.147 242.387C955.978 236.82 956.734 234.688 986.202 240.866C990.706 237.698 995.22 234.522 999.723 231.354Z\",\n    fill: \"#939393\"\n  })), _path174 || (_path174 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1026.98 234.409L1039.13 234.754C1051.42 235.985 1087.02 250.544 1097.59 257.344C1099.73 266.6 1099.85 278.19 1110.79 284.361C1102.56 282.986 1094.34 281.611 1086.11 280.236C1078.17 284.83 1070.24 289.431 1062.3 294.025C1054.46 295.835 1046.63 297.638 1038.79 299.449C1032.31 277.829 989.327 293.64 962.406 282.06C960.269 279.518 976.973 270.285 982.771 265.509C993.105 256.994 1011.46 235.949 1026.98 234.409ZM1001.9 255.013C1008.23 257.476 1014.56 259.94 1020.89 262.402C1027.55 265.164 1025.38 269.685 1035.5 264.719C1025.24 267.283 1019.47 257.133 1001.9 255.013ZM1087.71 264.296C1082.87 272.951 1081.31 283.046 1085.7 277.56C1086.18 276.965 1090.06 263.274 1087.71 264.296ZM1059.31 265.013C1049.21 280.675 1050.45 290.439 1056.23 279.77C1057.25 274.851 1058.28 269.932 1059.31 265.013ZM1095.75 266.046C1088.14 274.135 1088.5 282.831 1094 272.467C1094.58 270.329 1095.17 268.184 1095.75 266.046ZM1061.27 266.592C1058.67 274.427 1055.64 282.418 1060.31 279.125C1060.99 278.649 1063.87 265.592 1061.27 266.592ZM1032.79 269.591C1024.6 279.772 1027.16 290.883 1030.87 280.574C1031.51 276.915 1032.15 273.249 1032.79 269.591ZM1042.89 284.34C1043.71 284.874 1044.55 285.4 1045.37 285.933C1054.21 270.35 1053.05 265.377 1042.89 284.34C1045.6 264.016 1042.65 268.431 1035.79 284.52C1036.62 284.924 1037.45 285.328 1038.28 285.732C1041.01 279.917 1040.59 284.77 1041.35 285.058C1041.86 284.821 1042.38 284.577 1042.89 284.34ZM1037.77 272.015C1028.49 287.502 1030.59 291.619 1035.85 282.999C1036.49 279.34 1037.13 275.674 1037.77 272.015Z\",\n    fill: \"#939393\"\n  })), _path175 || (_path175 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M926.387 241.459C935.648 242.353 944.898 243.255 954.159 244.149C954.456 245.17 954.763 246.198 955.061 247.219C966.858 258.31 953.944 255.333 960.685 273.641C943.277 275.218 938.712 267.012 930.59 265.176C908.858 260.259 905.699 269.647 915.604 245.34C919.199 244.049 922.793 242.75 926.387 241.459ZM930.132 249.938C917.216 257.284 919.307 259.695 930.077 251.459C957.884 254.295 960.21 251.636 930.132 249.938Z\",\n    fill: \"#939393\"\n  })), _path176 || (_path176 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M998.211 245.014L999.688 246.198C988.223 255.739 979.103 267.119 964.707 274.514C951.974 249.063 970.302 256.129 984.801 251.485C989.268 249.328 993.745 247.171 998.211 245.014Z\",\n    fill: \"#939393\"\n  })), _path177 || (_path177 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M930.132 249.936C960.209 251.634 957.883 254.293 930.077 251.457C919.308 259.693 917.217 257.281 930.132 249.936Z\",\n    fill: \"#939393\"\n  })), _path178 || (_path178 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1001.9 255.013C1019.47 257.132 1025.24 267.283 1035.5 264.719C1025.38 269.685 1027.55 265.164 1020.89 262.402C1014.56 259.939 1008.23 257.476 1001.9 255.013Z\",\n    fill: \"#939393\"\n  })), _path179 || (_path179 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1173.48 218.766C1181.61 218.525 1188.9 220.018 1196.14 222.834C1191.57 237.16 1200.84 257.321 1190.37 269.867C1188.41 272.224 1165.47 281.417 1159.66 292.214C1157.89 289.751 1156.12 287.295 1154.35 284.832C1145.72 278.033 1115 294.009 1106.17 272.048L1100.93 249.063C1101.11 241.227 1108.12 231.675 1119.33 230.934C1134.39 229.945 1135.01 240.011 1152.08 221.966C1159.22 220.897 1166.35 219.835 1173.48 218.766ZM1184.51 222.124C1183.46 227.803 1182.4 233.482 1181.35 239.162C1184.73 234.492 1190.31 247.835 1189.37 241.673C1187.74 239.853 1186.13 238.026 1184.5 236.206C1182.28 228.637 1190.04 241.661 1190.52 237.899C1190.62 237.088 1183.52 231.961 1186.01 222.547C1185.51 222.403 1185.01 222.267 1184.51 222.124ZM1180.64 244.851C1179.57 245.224 1178.37 251.089 1166.95 258.926C1175.21 256.527 1186.2 242.915 1180.64 244.851ZM1191.69 247.448C1188.25 253.821 1184.81 260.194 1181.37 266.567C1180.53 274.932 1192.95 259.952 1191.69 247.448ZM1172.13 269.73C1172.6 270.756 1173.07 271.79 1173.54 272.815C1178.98 264.984 1181.21 252.578 1174.32 265.225C1180.82 246.805 1164.15 274.46 1163.77 276.725C1162.48 284.537 1166.89 281.099 1172.13 269.73ZM1159.76 261.767C1142.68 274.643 1129.84 266.477 1118.05 265.914C1108.92 265.48 1117.5 268.266 1132.61 269.752C1120.83 277.876 1124.67 279.827 1134.11 270.176C1143.58 271.525 1155.87 268.478 1159.76 261.767ZM1163.78 262.643C1162.12 266.531 1160.45 270.412 1158.79 274.3C1159.97 262.702 1154.23 273.136 1153.62 277.199C1151.68 289.978 1167.77 269.652 1163.78 262.643Z\",\n    fill: \"#939393\"\n  })), _path180 || (_path180 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1184.51 222.123C1185.01 222.267 1185.51 222.403 1186.01 222.546C1183.52 231.96 1190.62 237.087 1190.52 237.898C1190.04 241.66 1182.28 228.637 1184.5 236.205C1186.13 238.025 1187.74 239.852 1189.37 241.672C1190.31 247.834 1184.73 234.491 1181.35 239.161C1182.4 233.481 1183.46 227.802 1184.51 222.123Z\",\n    fill: \"#939393\"\n  })), _path181 || (_path181 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1180.64 244.854C1186.2 242.918 1175.21 256.529 1166.95 258.929C1178.37 251.092 1179.57 245.227 1180.64 244.854Z\",\n    fill: \"#939393\"\n  })), _path182 || (_path182 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1191.69 247.448C1192.95 259.952 1180.53 274.931 1181.37 266.566C1184.81 260.194 1188.25 253.821 1191.69 247.448Z\",\n    fill: \"#939393\"\n  })), _path183 || (_path183 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1174.32 265.227C1173.59 266.728 1172.87 268.23 1172.13 269.732C1166.9 281.101 1162.48 284.538 1163.77 276.726C1164.15 274.461 1180.82 246.807 1174.32 265.227Z\",\n    fill: \"#939393\"\n  })), _path184 || (_path184 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1172.13 269.729C1172.87 268.227 1173.59 266.725 1174.32 265.224C1181.21 252.577 1178.98 264.983 1173.54 272.814C1173.07 271.788 1172.6 270.755 1172.13 269.729Z\",\n    fill: \"#939393\"\n  })), _path185 || (_path185 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1159.75 261.767C1155.87 268.478 1143.58 271.525 1134.11 270.176C1124.67 279.827 1120.83 277.876 1132.61 269.752C1117.5 268.266 1108.92 265.48 1118.05 265.914C1129.84 266.477 1142.67 274.643 1159.75 261.767Z\",\n    fill: \"#939393\"\n  })), _path186 || (_path186 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1163.78 262.643C1167.77 269.652 1151.68 289.978 1153.62 277.198C1154.23 273.136 1159.97 262.702 1158.79 274.3C1160.45 270.412 1162.11 266.531 1163.78 262.643Z\",\n    fill: \"#939393\"\n  })), _path187 || (_path187 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1087.71 264.296C1090.06 263.274 1086.18 276.965 1085.7 277.561C1081.31 283.047 1082.87 272.951 1087.71 264.296Z\",\n    fill: \"#939393\"\n  })), _path188 || (_path188 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1059.3 265.014C1058.28 269.933 1057.25 274.852 1056.23 279.771C1050.45 290.439 1049.21 280.676 1059.3 265.014Z\",\n    fill: \"#939393\"\n  })), _path189 || (_path189 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1095.75 266.047C1095.17 268.185 1094.58 270.33 1094 272.468C1088.5 282.833 1088.14 274.137 1095.75 266.047Z\",\n    fill: \"#939393\"\n  })), _path190 || (_path190 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1061.27 266.594C1063.87 265.595 1060.99 278.651 1060.31 279.127C1055.64 282.42 1058.67 274.43 1061.27 266.594Z\",\n    fill: \"#939393\"\n  })), _path191 || (_path191 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1220.17 272.618C1238.86 274.617 1293.08 284.511 1305.58 292.547C1320.02 301.816 1314.12 331.497 1317.35 345.024C1309.39 345.689 1301.42 346.347 1293.46 347.012C1283.52 351.046 1273.58 355.073 1263.63 359.107L1245.49 356.31C1229.74 361.39 1213.36 357.47 1196.62 362.537C1170.9 353.191 1151.07 367.542 1136.04 356.253C1126.88 349.371 1134.41 335.509 1141.58 329.387C1153.76 324.517 1154.66 314.479 1164.66 307.965C1170.39 298.992 1176.13 290.02 1181.85 281.048C1196.02 268.417 1204.25 278.836 1220.17 272.618Z\",\n    fill: \"#939393\"\n  })), _path192 || (_path192 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1032.79 269.593C1032.15 273.252 1031.51 276.918 1030.87 280.577C1027.16 290.885 1024.6 279.775 1032.79 269.593Z\",\n    fill: \"#939393\"\n  })), _path193 || (_path193 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1042.89 284.341C1042.38 284.578 1041.86 284.822 1041.34 285.059C1040.58 284.771 1041 279.918 1038.28 285.733C1037.45 285.329 1036.62 284.925 1035.79 284.521C1042.65 268.433 1045.6 264.017 1042.89 284.341Z\",\n    fill: \"#939393\"\n  })), _path194 || (_path194 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1042.89 284.341C1053.05 265.378 1054.2 270.351 1045.37 285.934C1044.55 285.401 1043.71 284.875 1042.89 284.341Z\",\n    fill: \"#939393\"\n  })), _path195 || (_path195 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1037.76 272.019C1037.12 275.678 1036.48 279.344 1035.84 283.002C1030.59 291.622 1028.49 287.506 1037.76 272.019Z\",\n    fill: \"#939393\"\n  })), _path196 || (_path196 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M927.365 284.112C928.438 283.587 937.09 275.055 932.226 275.876C930.808 276.118 931.43 284.905 915.23 283.388C917.161 285.482 921.618 284.421 925.313 284.815C920.545 285.776 918.13 288.905 910.55 286.68C904.604 284.936 912.06 274.993 920.16 273.251C931.56 270.795 958.123 279.107 951.267 281.744C943.057 280.941 935.249 282.729 927.365 284.112Z\",\n    fill: \"#939393\"\n  })), _path197 || (_path197 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M927.366 284.113L925.313 284.816C921.619 284.422 917.161 285.483 915.231 283.388C931.431 284.905 930.809 276.118 932.226 275.877C937.09 275.056 928.439 283.587 927.366 284.113Z\",\n    fill: \"#939393\"\n  })), _path198 || (_path198 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M956.275 283.411C963.984 285.152 971.684 286.893 979.394 288.634C993.615 290.521 1028.96 287.351 1034.2 300.463C1037.66 309.14 1021.9 308.199 1021.82 320.285C1006.92 308.193 972.432 318.361 951.033 315.996C937.538 314.502 932.068 305.798 918.747 312.036C906.643 317.699 910.406 336.524 872.253 322.518C889.044 311.446 905.825 300.381 922.616 289.309C929.752 286.222 948.16 283.044 956.275 283.411ZM1026.67 298.347C1023.29 307.226 1024.7 297.758 1021.96 302.4C1021 305.799 1020.02 309.196 1019.06 312.595C1022.49 308.208 1028.08 303.868 1026.67 298.347ZM973.888 300.658C964.748 301.449 954.844 309.595 960.367 310.17C961.962 310.337 969.908 298.626 988.443 304.496C977.958 319.141 992.577 307.033 989.539 302.243C984.319 301.714 979.109 301.186 973.888 300.658ZM1018.43 301.92C1017.15 304.548 1015.88 307.176 1014.6 309.804C1013.57 317.326 1019.43 311.486 1018.43 301.92Z\",\n    fill: \"#939393\"\n  })), _path199 || (_path199 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1026.67 298.348C1028.08 303.868 1022.49 308.209 1019.06 312.595C1020.02 309.197 1021 305.799 1021.96 302.401C1024.7 297.759 1023.29 307.227 1026.67 298.348Z\",\n    fill: \"#939393\"\n  })), _path200 || (_path200 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M973.887 300.659C979.108 301.187 984.317 301.716 989.538 302.244C992.575 307.035 977.957 319.142 988.442 304.497C969.908 298.628 961.961 310.339 960.366 310.172C954.844 309.596 964.748 301.45 973.887 300.659Z\",\n    fill: \"#939393\"\n  })), _path201 || (_path201 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1018.43 301.923C1019.43 311.49 1013.57 317.33 1014.6 309.808C1015.88 307.18 1017.15 304.551 1018.43 301.923Z\",\n    fill: \"#939393\"\n  })), _path202 || (_path202 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1088 284.096C1108.43 288.101 1128.24 292.628 1148.71 286.578C1168.11 314.623 1112.39 333.437 1088.68 348.82C1080.29 336.958 1063.84 341.874 1062.77 336.667C1057.6 339.786 1046.59 334.313 1032.29 338.848C1030.64 333.344 1028.97 327.846 1027.32 322.341C1026.24 311.456 1035.8 313.964 1043.77 301.874C1061.73 301.872 1074.9 292.03 1088 284.096ZM1122.71 304.872C1110.54 306.133 1088.98 324.773 1064.42 319.206C1064.24 319.581 1064.06 319.957 1063.87 320.332C1087.14 325.246 1095.45 315.7 1113.43 309.176C1119.43 307.001 1136.85 303.407 1122.71 304.872ZM1121.39 313.208C1118.83 318.715 1116.26 324.229 1113.7 329.737C1118.45 331.812 1123.57 316.101 1121.39 313.208ZM1113.05 319.822C1104.57 332.218 1100.78 341.626 1109.04 332.269C1110.55 330.568 1114.86 322.188 1113.05 319.822ZM1099.86 320.21C1080.33 352.039 1102.08 330.618 1101.33 321.393L1099.86 320.21ZM1104.92 320.353C1095.92 332.042 1096.83 340.274 1100.86 334.321C1102.22 329.663 1103.56 325.012 1104.92 320.353ZM1093.7 322.319C1078.43 339.836 1087.37 338.057 1091.92 329.5C1092.51 327.104 1093.1 324.715 1093.7 322.319Z\",\n    fill: \"#939393\"\n  })), _path203 || (_path203 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1122.71 304.868C1136.85 303.404 1119.43 306.998 1113.43 309.173C1095.45 315.697 1087.13 325.243 1063.87 320.329C1064.06 319.953 1064.23 319.578 1064.42 319.202C1088.98 324.77 1110.54 306.13 1122.71 304.868Z\",\n    fill: \"#939393\"\n  })), _path204 || (_path204 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1121.39 313.208C1123.57 316.101 1118.45 331.812 1113.7 329.737C1116.26 324.23 1118.83 318.715 1121.39 313.208Z\",\n    fill: \"#939393\"\n  })), _path205 || (_path205 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1113.04 319.821C1114.86 322.187 1110.54 330.567 1109.04 332.268C1100.78 341.625 1104.57 332.217 1113.04 319.821Z\",\n    fill: \"#939393\"\n  })), _path206 || (_path206 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1099.86 320.215L1101.33 321.398C1102.08 330.623 1080.33 352.044 1099.86 320.215Z\",\n    fill: \"#939393\"\n  })), _path207 || (_path207 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1104.92 320.352C1103.56 325.011 1102.22 329.662 1100.86 334.32C1096.83 340.273 1095.92 332.041 1104.92 320.352Z\",\n    fill: \"#939393\"\n  })), _path208 || (_path208 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1093.7 322.318C1093.1 324.714 1092.51 327.103 1091.92 329.499C1087.37 338.056 1078.43 339.835 1093.7 322.318Z\",\n    fill: \"#939393\"\n  })), _path209 || (_path209 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M927.857 312.29C931.632 312.154 946.86 322.283 961.974 321.63C970.767 317.579 1008.72 316.157 1015.77 319.349C1022.57 322.434 1028.48 338.496 1027.69 339.859C1026.86 341.312 1013.37 342.079 1011.93 341.315C1011.1 340.873 1007.54 325.51 1009.41 340.863C1003.99 342.651 1008.32 337.483 1005.18 331.989L1003.28 342.212L1001.26 342.155C997.571 325.113 1000.53 346.397 997.263 340.519L997.097 345.082C978.504 353.606 980.833 357.273 985.385 346.653C981.503 351.11 977.632 355.568 973.75 360.025C967.519 361.638 944.025 351.122 936.651 349.078C928.364 346.781 910.333 346.27 909.045 341.826C907.533 336.599 915.273 312.756 927.857 312.29ZM1006.41 325.934C999.722 328.66 993.035 331.394 986.349 334.12C987.194 339.298 1019.46 325.063 1006.41 325.934ZM961.475 335.318C964.582 339.624 983.336 340.871 978.575 338.848C972.872 337.674 967.179 336.492 961.475 335.318ZM966.378 353.727C964.522 360.16 969.479 354.028 975.656 349.422C965.493 364.671 985.868 344.238 983.471 343.554C981.563 345.022 979.645 346.49 977.737 347.959C984.613 339.194 975.107 346.133 970.594 349.279C972.363 347.175 974.123 345.063 975.892 342.959C975.39 342.815 974.889 342.679 974.387 342.535C961.444 352.3 958.045 359.634 966.378 353.727Z\",\n    fill: \"#939393\"\n  })), _path210 || (_path210 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1006.41 325.93C1019.46 325.059 987.193 339.293 986.348 334.115C993.034 331.389 999.721 328.656 1006.41 325.93Z\",\n    fill: \"#939393\"\n  })), _path211 || (_path211 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M961.475 335.32C967.178 336.494 972.871 337.676 978.574 338.85C983.334 340.872 964.581 339.625 961.475 335.32Z\",\n    fill: \"#939393\"\n  })), _path212 || (_path212 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M970.593 349.281C969.192 350.764 967.78 352.246 966.378 353.729C958.045 359.636 961.444 352.303 974.386 342.538C974.888 342.681 975.389 342.817 975.891 342.961C974.122 345.065 972.363 347.177 970.593 349.281Z\",\n    fill: \"#939393\"\n  })), _path213 || (_path213 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M977.735 347.959C977.038 348.449 976.352 348.932 975.655 349.423C969.478 354.028 964.522 360.16 966.377 353.727C967.779 352.244 969.191 350.762 970.593 349.279C975.106 346.134 984.611 339.195 977.735 347.959Z\",\n    fill: \"#939393\"\n  })), _path214 || (_path214 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M975.657 349.426C976.353 348.936 977.04 348.453 977.737 347.963C979.645 346.494 981.563 345.026 983.471 343.558C985.868 344.242 965.494 364.675 975.657 349.426Z\",\n    fill: \"#939393\"\n  })), _path215 || (_path215 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M838.294 322.688C856.921 321.023 877.994 329.842 895.669 333.448C887.719 338.301 879.779 343.145 871.829 347.998C871.575 348.036 870.745 344.374 868.792 347.911C864.767 341.563 864.146 351.091 862.468 354.583C861.839 352.929 860.99 342.309 858.834 343.062C862.092 367.118 853.01 361.608 840.875 363.106C816.941 366.067 792.687 370.838 768.225 368.279C789.574 353.926 792.887 338.392 819.849 328.255C825.998 326.397 832.146 324.546 838.294 322.688ZM852.108 332.975C849.34 334.671 846.582 336.374 843.814 338.069C841.319 338.957 818.493 343.213 819.732 345.38C831.82 342.388 845.876 340.746 854.625 333.427C853.789 333.274 852.943 333.128 852.108 332.975ZM847.726 341.986L848.704 356.858L850.728 356.915C850.97 355.019 851.201 353.122 851.443 351.226C852.06 351.244 851.213 358.908 854.258 357.396C855.951 356.553 851.831 340.565 849.092 346.211C848.636 344.805 848.181 343.392 847.726 341.986ZM854.785 342.947C854.023 359.125 859.316 362.099 858.065 350.272C856.968 347.828 855.881 345.391 854.785 342.947ZM844.522 346.463C842.426 357.532 849.061 363.742 846.873 351.477C846.093 349.803 845.302 348.137 844.522 346.463Z\",\n    fill: \"#939393\"\n  })), _path216 || (_path216 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M852.107 332.976C852.943 333.13 853.789 333.275 854.624 333.428C845.875 340.747 831.82 342.389 819.733 345.38C818.494 343.214 841.319 338.958 843.814 338.07C846.582 336.375 849.339 334.672 852.107 332.976Z\",\n    fill: \"#939393\"\n  })), _path217 || (_path217 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M847.726 341.984C848.181 343.39 848.636 344.803 849.092 346.209C851.831 340.563 855.95 356.551 854.257 357.393C851.213 358.906 852.06 351.241 851.442 351.224C851.201 353.12 850.97 355.016 850.728 356.913L848.704 356.855L847.726 341.984Z\",\n    fill: \"#939393\"\n  })), _path218 || (_path218 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M854.784 342.948C855.881 345.392 856.968 347.828 858.064 350.272C859.315 362.099 854.022 359.125 854.784 342.948Z\",\n    fill: \"#939393\"\n  })), _path219 || (_path219 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M844.522 346.464C845.302 348.138 846.093 349.804 846.873 351.478C849.061 363.743 842.426 357.534 844.522 346.464Z\",\n    fill: \"#939393\"\n  })), _path220 || (_path220 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M893.312 342.523C897.993 343.927 902.665 345.323 907.347 346.727C917.081 348.525 926.806 350.323 936.54 352.121C948.633 355.402 959.454 362.141 972.627 363.04C979.247 392.169 978.726 375.057 931.438 380.904C898.758 380.8 894.329 371.334 864.951 369.885C868.839 361.089 878.787 342.85 893.312 342.523ZM892.841 355.451C901.526 358.232 910.201 361.02 918.886 363.801C908.534 373.373 920.268 362.599 930.487 365.271C917.938 362 905.39 358.722 892.841 355.451Z\",\n    fill: \"#939393\"\n  })), _path221 || (_path221 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M892.84 355.451C905.389 358.722 917.937 362 930.485 365.271C920.266 362.599 908.533 373.373 918.885 363.801C910.2 361.02 901.525 358.232 892.84 355.451Z\",\n    fill: \"#939393\"\n  })), _path222 || (_path222 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1048.43 340.826C1053.55 340.872 1081.05 345.016 1083.13 348.279C1084.45 350.349 1079.5 373.259 1078.08 375.541C1073.11 383.522 1052.74 378.743 1042.89 381.775C1026.51 379.081 1018.55 375.749 1006.25 386.065C997.674 384.932 989.101 383.806 980.528 382.672C980.779 362.142 979.485 355.102 1005.69 345.705C1020.21 349.085 1035.1 340.699 1048.43 340.826ZM1060.06 355.619C1058.01 356.071 1055.97 356.515 1053.93 356.967C1052.25 357.011 1026.59 356.04 1028.04 358.137C1048.03 359.716 1069.62 355.509 1060.06 355.619ZM988.91 361.215L988.855 362.736C1020.76 369.014 1018.46 366.505 988.91 361.215ZM1062.82 363.309C1049.88 374.156 1044.39 383.911 1054.77 375.641L1062.82 363.309ZM1053.65 364.572C1051.91 366.243 1042.81 376.185 1045.08 377.27C1048.13 376.724 1055.38 365.291 1053.65 364.572ZM1068.84 365.002C1053.45 377.811 1055.29 382.758 1063.96 373.618C1065.59 370.749 1067.21 367.871 1068.84 365.002ZM1073.9 365.145C1069.75 371.613 1063.49 376.459 1066.37 377.112C1068.29 377.166 1076.06 367.369 1073.9 365.145ZM1045.41 368.144C1043.51 369.484 1041.59 370.83 1039.69 372.169C1030.83 381.129 1043.51 375.003 1045.41 368.144ZM1029.07 371.488C1024.64 372.101 1029.41 374.71 1029.46 374.924C1029.08 375.926 1028.7 376.935 1028.33 377.937C1031.14 381.549 1033.07 370.939 1029.07 371.488Z\",\n    fill: \"#939393\"\n  })), _path223 || (_path223 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1060.05 355.62C1069.61 355.51 1048.03 359.717 1028.04 358.138C1026.59 356.042 1052.25 357.012 1053.92 356.969C1055.97 356.516 1058.01 356.072 1060.05 355.62Z\",\n    fill: \"#939393\"\n  })), _path224 || (_path224 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M988.911 361.214C1018.46 366.504 1020.76 369.013 988.855 362.735L988.911 361.214Z\",\n    fill: \"#939393\"\n  })), _path225 || (_path225 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1062.82 363.311L1054.77 375.643C1044.39 383.913 1049.88 374.158 1062.82 363.311Z\",\n    fill: \"#939393\"\n  })), _path226 || (_path226 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1053.65 364.574C1055.38 365.293 1048.13 376.727 1045.08 377.272C1042.81 376.188 1051.91 366.245 1053.65 364.574Z\",\n    fill: \"#939393\"\n  })), _path227 || (_path227 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1068.83 365.003C1067.21 367.872 1065.58 370.75 1063.96 373.619C1055.29 382.759 1053.45 377.812 1068.83 365.003Z\",\n    fill: \"#939393\"\n  })), _path228 || (_path228 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1073.9 365.144C1076.06 367.367 1068.29 377.165 1066.37 377.11C1063.49 376.458 1069.75 371.611 1073.9 365.144Z\",\n    fill: \"#939393\"\n  })), _path229 || (_path229 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1045.41 368.146C1043.51 375.004 1030.83 381.131 1039.69 372.171C1041.59 370.832 1043.51 369.485 1045.41 368.146Z\",\n    fill: \"#939393\"\n  })), _path230 || (_path230 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1029.07 371.487C1033.07 370.938 1031.14 381.548 1028.33 377.936C1028.7 376.934 1029.08 375.925 1029.46 374.923C1029.41 374.709 1024.64 372.1 1029.07 371.487Z\",\n    fill: \"#939393\"\n  })), _path231 || (_path231 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1312.68 417.589L1250.93 415.839C1243.37 410.822 1233.48 410.222 1225.62 415.122L1094 411.393C1096.42 403.286 1086.89 409.453 1085.44 414.619C1084.76 414.768 1084.16 413.815 1083.67 412.527C1082.36 409.095 1083.95 405.341 1086.09 402.323C1087.85 399.83 1089.65 396.52 1090.12 392.96C1090.15 392.755 1090.15 392.548 1090.12 392.34C1089.47 387.673 1088.51 384.431 1093.06 383.164C1113.18 377.57 1138.74 381.515 1157.68 374.375L1221.63 371.619C1234.88 369.46 1248.13 367.293 1261.39 365.133C1278.65 364.108 1307.48 366.158 1315.07 379.976C1322.51 393.523 1311.32 403.993 1312.68 417.589Z\",\n    fill: \"#939393\"\n  })), _path232 || (_path232 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1094 411.392L1084.89 411.134C1086.35 405.968 1096.41 403.285 1094 411.392Z\",\n    fill: \"#939393\"\n  })), _path233 || (_path233 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1250.93 415.839L1225.62 415.122C1233.48 410.222 1243.37 410.822 1250.93 415.839Z\",\n    fill: \"#939393\"\n  })), _path234 || (_path234 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1199.03 185.24C1199.53 185.384 1200.03 185.52 1200.53 185.664C1162.54 206.297 1194.38 185.322 1199.03 185.24Z\",\n    fill: \"black\"\n  })), _path235 || (_path235 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1210.11 187.074C1212.79 190.713 1208.85 195.93 1206.11 199.521C1206.13 216.07 1198.96 206.344 1210.11 187.074Z\",\n    fill: \"black\"\n  })), _path236 || (_path236 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1201.9 189.888C1206.55 189.198 1200.24 195.946 1200.14 196.308L1199.86 203.913C1196.06 218.078 1196.56 190.68 1201.9 189.888Z\",\n    fill: \"black\"\n  })), _path237 || (_path237 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1138.06 189.601C1150.36 190.581 1162.64 191.568 1174.94 192.549C1169.04 192.252 1163.14 191.963 1157.24 191.666C1156.74 196.38 1146.64 189.364 1148.07 192.929C1144.74 191.822 1141.39 190.707 1138.06 189.601Z\",\n    fill: \"black\"\n  })), _path238 || (_path238 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1187.58 193.285C1190.98 192.513 1183.77 199.921 1184.54 207.281C1178 216.443 1184.18 194.064 1187.58 193.285Z\",\n    fill: \"black\"\n  })), _path239 || (_path239 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1169.28 195.05L1176.83 196.405C1171.9 197.887 1168.53 207.451 1166.61 212.482C1163.28 213.552 1168.05 201.569 1172.75 197.051C1169.04 196.695 1165.35 196.331 1161.64 195.975L1169.28 195.05Z\",\n    fill: \"black\"\n  })), _path240 || (_path240 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1180.41 195.369C1179.59 204.115 1169.79 218.125 1172.31 209.222C1175.01 204.602 1177.71 199.989 1180.41 195.369Z\",\n    fill: \"black\"\n  })), _path241 || (_path241 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1093 230.189C1095.68 231.293 1086.53 239.308 1092.75 237.033C1091.11 242.871 1095.54 236.968 1095.19 239.766C1094.6 244.408 1086.66 241.253 1083.39 243.619C1081.42 242.566 1091.41 232.215 1093 230.189Z\",\n    fill: \"black\"\n  })), _path242 || (_path242 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M999.721 231.354C1003.89 230.909 992.282 238.603 986.145 242.388C955.976 236.821 956.733 234.688 986.2 240.867C990.704 237.698 995.218 234.523 999.721 231.354Z\",\n    fill: \"black\"\n  })), _path243 || (_path243 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M930.129 249.934C960.206 251.631 957.88 254.29 930.074 251.455C919.305 259.69 917.214 257.279 930.129 249.934Z\",\n    fill: \"black\"\n  })), _path244 || (_path244 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1001.9 255.013C1019.47 257.132 1025.24 267.283 1035.5 264.719C1025.37 269.685 1027.54 265.164 1020.89 262.402C1014.56 259.939 1008.23 257.476 1001.9 255.013Z\",\n    fill: \"black\"\n  })), _path245 || (_path245 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1184.51 222.127C1185.01 222.27 1185.51 222.407 1186.01 222.55C1183.52 231.964 1190.62 237.09 1190.52 237.902C1190.04 241.664 1182.27 228.64 1184.5 236.209C1186.13 238.029 1187.74 239.856 1189.37 241.676C1190.31 247.838 1184.72 234.495 1181.35 239.165C1182.4 233.485 1183.46 227.806 1184.51 222.127Z\",\n    fill: \"black\"\n  })), _path246 || (_path246 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1180.64 244.856C1186.2 242.921 1175.21 256.532 1166.95 258.931C1178.36 251.095 1179.57 245.229 1180.64 244.856Z\",\n    fill: \"black\"\n  })), _path247 || (_path247 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1191.69 247.449C1192.95 259.953 1180.53 274.932 1181.37 266.567C1184.81 260.194 1188.25 253.821 1191.69 247.449Z\",\n    fill: \"black\"\n  })), _path248 || (_path248 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1174.32 265.231C1173.59 266.732 1172.87 268.234 1172.13 269.736C1166.89 281.104 1162.48 284.542 1163.77 276.73C1164.15 274.465 1180.82 246.811 1174.32 265.231Z\",\n    fill: \"black\"\n  })), _path249 || (_path249 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1172.13 269.731C1172.86 268.23 1173.59 266.728 1174.32 265.226C1181.21 252.58 1178.98 264.985 1173.54 272.816C1173.07 271.79 1172.6 270.757 1172.13 269.731Z\",\n    fill: \"black\"\n  })), _path250 || (_path250 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1159.75 261.771C1155.87 268.481 1143.58 271.528 1134.11 270.179C1124.67 279.83 1120.83 277.879 1132.61 269.756C1117.5 268.27 1108.92 265.484 1118.05 265.918C1129.84 266.48 1142.67 274.646 1159.75 261.771Z\",\n    fill: \"black\"\n  })), _path251 || (_path251 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1163.77 262.649C1167.76 269.659 1151.68 289.984 1153.62 277.205C1154.23 273.142 1159.97 262.709 1158.79 274.306C1160.45 270.418 1162.11 266.537 1163.77 262.649Z\",\n    fill: \"black\"\n  })), _path252 || (_path252 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1087.7 264.292C1090.05 263.27 1086.18 276.961 1085.7 277.557C1081.31 283.042 1082.87 272.947 1087.7 264.292Z\",\n    fill: \"black\"\n  })), _path253 || (_path253 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1059.3 265.015C1058.28 269.934 1057.25 274.852 1056.23 279.771C1050.45 290.44 1049.21 280.676 1059.3 265.015Z\",\n    fill: \"black\"\n  })), _path254 || (_path254 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1095.75 266.05C1095.16 268.188 1094.58 270.333 1093.99 272.471C1088.5 282.836 1088.14 274.14 1095.75 266.05Z\",\n    fill: \"black\"\n  })), _path255 || (_path255 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1061.27 266.595C1063.87 265.595 1060.98 278.652 1060.31 279.128C1055.64 282.421 1058.67 274.43 1061.27 266.595Z\",\n    fill: \"black\"\n  })), _path256 || (_path256 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1032.79 269.591C1032.15 273.249 1031.51 276.915 1030.87 280.574C1027.16 290.882 1024.6 279.772 1032.79 269.591Z\",\n    fill: \"black\"\n  })), _path257 || (_path257 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1042.89 284.342C1042.37 284.578 1041.86 284.822 1041.34 285.059C1040.58 284.771 1041 279.919 1038.28 285.733C1037.45 285.329 1036.62 284.925 1035.79 284.521C1042.65 268.433 1045.6 264.018 1042.89 284.342Z\",\n    fill: \"black\"\n  })), _path258 || (_path258 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1042.89 284.339C1053.04 265.376 1054.2 270.349 1045.36 285.932C1044.54 285.398 1043.71 284.872 1042.89 284.339Z\",\n    fill: \"black\"\n  })), _path259 || (_path259 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1037.76 272.014C1037.12 275.672 1036.48 279.338 1035.84 282.997C1030.58 291.617 1028.48 287.5 1037.76 272.014Z\",\n    fill: \"black\"\n  })), _path260 || (_path260 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M927.364 284.111L925.312 284.814C921.617 284.42 917.16 285.481 915.23 283.387C931.43 284.904 930.807 276.117 932.225 275.876C937.089 275.054 928.437 283.586 927.364 284.111Z\",\n    fill: \"black\"\n  })), _path261 || (_path261 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1026.67 298.348C1028.08 303.868 1022.49 308.209 1019.06 312.595C1020.02 309.197 1021 305.799 1021.96 302.401C1024.69 297.759 1023.28 307.227 1026.67 298.348Z\",\n    fill: \"black\"\n  })), _path262 || (_path262 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M973.886 300.658C979.106 301.187 984.316 301.715 989.536 302.244C992.574 307.034 977.955 319.142 988.44 304.496C969.906 298.627 961.96 310.338 960.365 310.171C954.842 309.596 964.746 301.45 973.886 300.658Z\",\n    fill: \"black\"\n  })), _path263 || (_path263 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1018.43 301.922C1019.43 311.488 1013.56 317.328 1014.6 309.806C1015.88 307.178 1017.15 304.55 1018.43 301.922Z\",\n    fill: \"black\"\n  })), _path264 || (_path264 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1122.71 304.873C1136.85 303.409 1119.43 307.003 1113.43 309.178C1095.45 315.702 1087.14 325.248 1063.87 320.334C1064.06 319.959 1064.24 319.583 1064.42 319.208C1088.98 324.775 1110.54 306.135 1122.71 304.873Z\",\n    fill: \"black\"\n  })), _path265 || (_path265 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1121.39 313.213C1123.57 316.106 1118.45 331.817 1113.7 329.741C1116.26 324.234 1118.83 318.72 1121.39 313.213Z\",\n    fill: \"black\"\n  })), _path266 || (_path266 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1113.04 319.823C1114.86 322.189 1110.54 330.569 1109.04 332.27C1100.78 341.627 1104.57 332.219 1113.04 319.823Z\",\n    fill: \"black\"\n  })), _path267 || (_path267 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1099.85 320.214L1101.33 321.397C1102.08 330.622 1080.33 352.043 1099.85 320.214Z\",\n    fill: \"black\"\n  })), _path268 || (_path268 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1104.92 320.353C1103.56 325.011 1102.22 329.662 1100.86 334.32C1096.84 340.273 1095.92 332.041 1104.92 320.353Z\",\n    fill: \"black\"\n  })), _path269 || (_path269 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1093.7 322.322C1093.1 324.718 1092.51 327.106 1091.92 329.503C1087.37 338.059 1078.43 339.838 1093.7 322.322Z\",\n    fill: \"black\"\n  })), _path270 || (_path270 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1006.41 325.933C1019.46 325.062 987.195 339.296 986.35 334.118C993.036 331.392 999.723 328.659 1006.41 325.933Z\",\n    fill: \"black\"\n  })), _path271 || (_path271 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M961.476 335.316C967.179 336.49 972.872 337.672 978.575 338.846C983.336 340.868 964.582 339.622 961.476 335.316Z\",\n    fill: \"black\"\n  })), _path272 || (_path272 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M970.594 349.276C969.192 350.759 967.78 352.241 966.378 353.724C958.045 359.631 961.444 352.298 974.387 342.533C974.888 342.677 975.39 342.813 975.891 342.956C974.122 345.06 972.363 347.172 970.594 349.276Z\",\n    fill: \"black\"\n  })), _path273 || (_path273 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M977.738 347.963C977.041 348.453 976.355 348.936 975.658 349.426C969.48 354.032 964.524 360.163 966.38 353.731C967.782 352.248 969.194 350.765 970.596 349.283C975.109 346.137 984.614 339.198 977.738 347.963Z\",\n    fill: \"black\"\n  })), _path274 || (_path274 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M975.657 349.419C976.354 348.929 977.041 348.446 977.737 347.955C979.646 346.487 981.564 345.019 983.472 343.55C985.869 344.235 965.494 364.668 975.657 349.419Z\",\n    fill: \"black\"\n  })), _path275 || (_path275 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M852.107 332.985C849.339 334.68 846.582 336.383 843.814 338.078C841.319 338.967 818.494 343.222 819.733 345.389C831.82 342.397 845.875 340.755 854.624 333.437C853.789 333.284 852.943 333.138 852.107 332.985ZM847.725 341.995L848.703 356.867L850.728 356.924C850.969 355.028 851.2 353.131 851.442 351.235C852.059 351.253 851.213 358.917 854.257 357.404C855.95 356.562 851.83 340.574 849.091 346.221C848.636 344.815 848.18 343.401 847.725 341.995ZM854.784 342.956C854.022 359.133 859.315 362.107 858.064 350.281C856.967 347.837 855.88 345.4 854.784 342.956ZM844.522 346.472C842.426 357.541 849.06 363.75 846.872 351.486C846.092 349.812 845.302 348.146 844.522 346.472Z\",\n    fill: \"black\"\n  })), _path276 || (_path276 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M852.107 332.985C852.943 333.138 853.789 333.284 854.624 333.437C845.875 340.755 831.82 342.397 819.733 345.389C818.494 343.222 841.319 338.967 843.814 338.078C846.582 336.383 849.339 334.68 852.107 332.985Z\",\n    fill: \"black\"\n  })), _path277 || (_path277 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M847.727 341.995C848.182 343.401 848.637 344.815 849.093 346.22C851.832 340.574 855.951 356.562 854.259 357.404C851.214 358.917 852.061 351.252 851.443 351.235C851.202 353.131 850.971 355.028 850.729 356.924L848.705 356.866L847.727 341.995Z\",\n    fill: \"black\"\n  })), _path278 || (_path278 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M854.786 342.955C855.883 345.399 856.97 347.835 858.066 350.279C859.317 362.106 854.024 359.132 854.786 342.955Z\",\n    fill: \"black\"\n  })), _path279 || (_path279 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M844.524 346.472C845.304 348.146 846.095 349.813 846.875 351.487C849.063 363.752 842.428 357.542 844.524 346.472Z\",\n    fill: \"black\"\n  })), _path280 || (_path280 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M892.841 355.45C905.389 358.721 917.937 362 930.486 365.271C920.266 362.599 908.534 373.372 918.885 363.8C910.2 361.019 901.525 358.231 892.841 355.45Z\",\n    fill: \"black\"\n  })), _path281 || (_path281 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1060.05 355.625C1069.61 355.515 1048.03 359.722 1028.04 358.143C1026.58 356.047 1052.25 357.018 1053.92 356.974C1055.97 356.522 1058.01 356.077 1060.05 355.625Z\",\n    fill: \"black\"\n  })), _path282 || (_path282 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M988.908 361.221C1018.46 366.512 1020.76 369.02 988.853 362.742L988.908 361.221Z\",\n    fill: \"black\"\n  })), _path283 || (_path283 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1062.81 363.314L1054.76 375.646C1044.39 383.916 1049.88 374.161 1062.81 363.314Z\",\n    fill: \"black\"\n  })), _path284 || (_path284 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1053.65 364.577C1055.37 365.296 1048.13 376.73 1045.08 377.275C1042.81 376.191 1051.9 366.248 1053.65 364.577Z\",\n    fill: \"black\"\n  })), _path285 || (_path285 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1068.83 365.006C1067.21 367.876 1065.58 370.753 1063.96 373.622C1055.29 382.762 1053.45 377.816 1068.83 365.006Z\",\n    fill: \"black\"\n  })), _path286 || (_path286 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1073.89 365.15C1076.05 367.373 1068.29 377.171 1066.36 377.117C1063.49 376.464 1069.75 371.617 1073.89 365.15Z\",\n    fill: \"black\"\n  })), _path287 || (_path287 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1045.41 368.148C1043.51 375.006 1030.83 381.133 1039.69 372.173C1041.59 370.833 1043.51 369.487 1045.41 368.148Z\",\n    fill: \"black\"\n  })), _path288 || (_path288 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1029.07 371.495C1033.06 370.945 1031.14 381.555 1028.33 377.944C1028.7 376.942 1029.08 375.933 1029.45 374.931C1029.41 374.716 1024.64 372.107 1029.07 371.495Z\",\n    fill: \"black\"\n  })), _path289 || (_path289 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M791.965 402.421L760.467 406.003L751.395 408.328C745.626 409.807 739.726 410.698 733.786 410.988L727.967 411.272C727.44 411.298 726.916 411.363 726.398 411.468L722.415 412.27C719.2 412.917 716.056 410.959 715.233 407.798V407.798C714.605 405.384 715.492 402.817 717.482 401.287L718.696 400.355C723.165 394.529 735.307 394.75 742.34 393.373C751.544 391.099 756.787 389.01 765.991 386.736C770.987 384.994 786.818 397.29 791.965 402.421Z\",\n    fill: \"#939393\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path290 || (_path290 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M725.412 435.425C725.282 436.084 724.58 436.391 723.909 436.367L708.494 435.795L700.867 437.008C697.827 437.492 694.874 438.434 692.11 439.802V439.802C687.939 441.867 683.357 442.951 678.717 442.973L662.989 443.046L651.779 441.808C650.347 441.65 648.996 441.08 647.888 440.166V440.166C643.579 436.613 644.634 429.724 649.82 427.548L657.443 424.349C661.912 418.523 670.034 423.229 677.066 421.853C686.27 419.579 692.601 420.744 701.805 418.47C706.526 416.824 726.599 429.384 725.412 435.425Z\",\n    fill: \"#939393\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path291 || (_path291 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M681.494 430.386C682.406 431.278 683.32 432.176 684.231 433.068C684.839 428.295 694.214 438.718 692.923 439.764C690.601 441.644 688.744 435.913 688.161 436.062C688.59 437.488 689.03 438.912 689.46 440.338L687.548 440.824L681.494 430.386Z\",\n    fill: \"black\"\n  })), _path292 || (_path292 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M688.423 429.237C690.292 430.709 692.15 432.178 694.019 433.65C699.276 441.828 693.303 441.068 688.423 429.237Z\",\n    fill: \"black\"\n  })), _path293 || (_path293 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M680.048 434.436C681.356 435.436 682.67 436.429 683.978 437.429C690.261 445.678 681.916 442.941 680.048 434.436Z\",\n    fill: \"black\"\n  })), _path294 || (_path294 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M699.281 428.899C699.844 429.563 700.407 430.23 700.97 430.893C703.229 427.759 708.58 435.412 706.973 436.012C704.082 437.089 704.308 433.13 703.696 433.185C703.608 434.168 703.531 435.149 703.444 436.132L701.437 436.311L699.281 428.899Z\",\n    fill: \"black\"\n  })), _path295 || (_path295 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M706.341 428.658C707.621 429.78 708.891 430.899 710.17 432.021C712.352 437.866 706.879 436.908 706.341 428.658Z\",\n    fill: \"black\"\n  })), _path296 || (_path296 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M696.471 431.489C697.376 432.254 698.291 433.015 699.197 433.78C702.34 439.75 695.282 437.296 696.471 431.489Z\",\n    fill: \"black\"\n  })), _path297 || (_path297 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M742.115 398.493C743.026 399.385 743.94 400.283 744.851 401.175C745.459 396.402 754.834 406.825 753.543 407.871C751.222 409.751 749.364 404.02 748.781 404.168C749.211 405.595 749.65 407.018 750.08 408.445L748.168 408.931L742.115 398.493Z\",\n    fill: \"black\"\n  })), _path298 || (_path298 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M749.044 397.344C750.913 398.816 752.77 400.285 754.64 401.757C759.897 409.935 753.923 409.174 749.044 397.344Z\",\n    fill: \"black\"\n  })), _path299 || (_path299 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M740.669 402.544C741.976 403.544 743.291 404.537 744.599 405.537C750.882 413.786 742.537 411.049 740.669 402.544Z\",\n    fill: \"black\"\n  })), _path300 || (_path300 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M759.902 397.006C760.465 397.67 761.028 398.337 761.591 399C763.849 395.866 769.201 403.519 767.594 404.119C764.703 405.196 764.929 401.237 764.316 401.292C764.229 402.275 764.152 403.256 764.064 404.239L762.057 404.418L759.902 397.006Z\",\n    fill: \"black\"\n  })), _path301 || (_path301 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M766.962 396.765C768.242 397.887 769.511 399.006 770.791 400.128C772.973 405.973 767.5 405.015 766.962 396.765Z\",\n    fill: \"black\"\n  })), _path302 || (_path302 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M757.091 399.597C757.996 400.362 758.911 401.123 759.816 401.888C762.96 407.858 755.902 405.404 757.091 399.597Z\",\n    fill: \"black\"\n  })), _path303 || (_path303 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.707 373.135C205.557 373.313 203.732 375.976 205.776 378.032C207.732 379.998 210.585 379.53 212.765 382.041C212.942 382.243 214.511 384.099 213.618 384.999C212.96 385.661 211.623 385.156 209.79 385.718C207.107 386.535 206.157 388.739 206.111 388.858C204.981 391.651 207.907 394.011 208.053 394.13C206.819 394.801 204.907 395.692 202.334 396.257C199.829 396.808 197.936 396.838 195.014 396.795C192.466 396.758 188.767 396.775 184.093 397.042C185.321 396.532 187.127 395.648 188.835 394.219C190.336 392.958 190.608 392.243 191.656 391.404C192.893 390.418 195.185 389.294 199.802 389.083C197.662 387.027 197.326 385.278 197.267 384.375C197.221 383.612 197.332 382.526 200.956 377.354C203.686 373.476 204.34 373.067 204.707 373.135Z\",\n    fill: \"#E8AE86\"\n  })), _path304 || (_path304 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.734 373.065C205.209 373.231 205.016 373.652 205.022 373.939C204.906 374.766 204.782 375.691 205.06 376.495C205.551 378.314 207.855 379.073 209.983 379.701C211.522 380.198 212.926 381.102 213.748 382.184C214.792 383.334 215.497 385.663 212.851 385.97C210.439 385.995 208.759 386.479 207.447 387.991C205.595 389.89 206.518 392.512 208.573 394.169L208.269 394.325C205.703 395.653 202.745 396.578 199.619 396.914C196.522 397.216 193.386 397.069 190.296 397.259C187.195 397.406 183.654 397.647 180.546 397.899L183.658 396.505C185.675 395.606 187.495 394.449 188.857 393.049C190.148 391.425 191.936 389.722 194.527 389.101C196.207 388.603 197.971 388.42 199.709 388.342L198.985 389.501C196.008 386.552 195.552 383.732 198.163 380.568C200.012 378.108 201.763 375.621 203.981 373.342C204.161 373.222 204.339 373.011 204.715 373.051L204.734 373.065ZM204.689 373.205C204.286 373.221 203.979 373.671 203.734 373.903C201.88 376.104 200.53 378.54 199.238 380.927C198.75 381.917 198.206 382.942 198.104 383.972C198.141 385.66 199.176 387.287 200.609 388.653L201.709 389.698L199.895 389.812C196.881 389.994 193.675 390.576 191.86 392.398C190.1 394.486 187.567 396.431 184.527 397.572L184.041 396.447C188.179 396.267 192.38 396.353 196.506 396.508C198.555 396.583 200.589 396.455 202.53 395.997C204.471 395.561 206.281 394.845 207.856 393.928L207.817 394.32C205.822 392.754 204.607 390.399 205.676 388.314C206.722 386.082 209.344 384.69 212.593 384.745C212.9 384.702 212.881 384.702 212.975 384.61C213.28 384.056 212.812 383.323 212.443 382.715C211.465 381.088 209.595 380.403 207.451 379.496C205.219 378.511 204.36 376.575 204.715 374.795L204.84 373.933C204.844 373.709 204.98 373.33 204.709 373.212L204.689 373.205Z\",\n    fill: \"#3C3636\"\n  })), _path305 || (_path305 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M222.359 389.159C223.881 389.719 225.52 390.405 227.211 391.237C230.495 392.854 233.06 394.579 235.006 396.104C232.627 395.87 229.513 395.856 226.373 396.844C223.281 397.818 221.956 399.183 219.999 398.905C218.746 398.729 217.16 397.867 215.756 394.792C218.214 393.779 219.67 391.861 219.492 389.872C219.278 387.562 216.888 385.542 213.618 384.997C214.205 384.161 215.981 381.89 219.767 380.57C225.49 378.583 231.028 380.441 231.784 380.711C230.998 381.261 229.836 382.183 228.962 383.525C227.93 385.099 228.123 385.966 227.118 387.036C226.451 387.739 225.154 388.642 222.359 389.159Z\",\n    fill: \"#E8AE86\"\n  })), _path306 || (_path306 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M222.456 389.173C228.168 390.645 233.106 393.655 237.195 396.907L234.903 396.707C231.177 396.381 227.487 396.804 224.241 398.206C219.29 400.75 217.061 398.183 215.479 394.864L215.399 394.696L215.618 394.604C219.41 393.123 220.166 389.044 216.9 386.944C215.679 386.046 213.998 385.655 212.341 385.452C214.652 381.309 220.498 378.404 226.748 378.991C229.067 379.142 231.281 379.755 233.336 380.558L232.399 381.178C230.513 382.406 229.259 383.931 228.54 385.734C227.824 387.692 225.153 389.028 222.455 389.166L222.456 389.173ZM222.263 389.153C222.501 389.047 222.959 388.919 223.246 388.84C225.261 388.257 227.042 387.114 227.42 385.501C227.877 383.573 229.218 381.634 231.177 380.252L231.411 381.302C228.402 380.37 224.86 380.114 221.753 380.828C218.606 381.522 215.942 383.173 214.413 385.302L213.826 384.388C218.706 385.164 221.694 389.485 219.121 392.648C218.374 393.632 217.258 394.45 215.924 394.988L216.063 394.728C216.356 395.392 216.707 396.049 217.162 396.656C218.994 399.085 220.801 399.098 223.589 397.432C226.789 395.652 231.156 394.995 235.127 395.501L234.419 396.513C232.667 395.107 230.784 393.785 228.758 392.576C226.712 391.303 224.479 390.277 222.282 389.146L222.263 389.153Z\",\n    fill: \"#3C3636\"\n  })), _path307 || (_path307 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M217.756 398.286C217.471 398.869 216.941 399.705 215.88 400.396C214.128 401.546 211.996 401.619 210.146 401.823C208.075 402.05 205.107 402.582 201.543 403.964C201.009 402.384 201.25 401.143 201.466 400.463C202.382 397.552 205.856 394.7 209.03 394.825C210.569 394.888 210.989 395.6 212.889 395.507C214.953 395.407 215.798 394.499 216.718 394.789C217.347 394.99 217.969 395.736 217.756 398.286Z\",\n    fill: \"#E8AE86\"\n  })), _path308 || (_path308 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M217.852 398.306C217.373 400.984 213.825 402.233 210.533 402.423C207.408 402.802 204.158 403.167 201.339 404.294C200.286 401.462 201.004 398.265 203.742 396.06C205.092 394.968 207.097 393.922 209.331 394.094C210.148 394.139 210.905 394.444 211.36 394.603C212.28 394.921 213.298 394.874 214.254 394.639C218.497 393.113 218.516 396.153 217.852 398.299L217.852 398.306ZM217.669 398.272C217.464 397.257 217.476 396.074 216.633 395.314C216.496 395.238 216.42 395.245 216.343 395.266C215.551 395.529 213.99 396.209 212.856 396.2C211.659 396.381 210.155 395.722 209.142 395.587C207.593 395.51 206.214 396.161 205.06 396.965C202.648 398.748 200.822 401.355 201.849 403.92L201.414 403.775C202.805 403.236 204.176 402.642 205.645 402.166C208.341 401.061 211.893 401.338 214.585 400.506C215.853 400.066 216.902 399.249 217.678 398.279L217.669 398.272Z\",\n    fill: \"#3C3636\"\n  })), _path309 || (_path309 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M212.896 395.861C216.877 395.842 220.052 393.476 219.988 390.575C219.924 387.674 216.645 385.338 212.665 385.356C208.684 385.375 205.509 387.741 205.573 390.642C205.637 393.543 208.916 395.879 212.896 395.861Z\",\n    fill: \"url(#paint0_radial_1_863)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path310 || (_path310 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.712 392.124C275.493 392.288 273.815 394.735 275.694 396.626C277.492 398.433 280.115 398.002 282.118 400.311C282.282 400.497 283.724 402.202 282.903 403.03C282.298 403.638 281.069 403.174 279.384 403.69C276.918 404.442 276.044 406.468 276.002 406.577C274.963 409.144 277.653 411.314 277.788 411.423C276.653 412.04 274.895 412.859 272.53 413.379C270.227 413.885 268.487 413.913 265.801 413.874C263.459 413.839 260.058 413.855 255.762 414.1C256.891 413.632 258.551 412.819 260.121 411.505C261.5 410.346 261.751 409.688 262.714 408.918C263.852 408.011 265.958 406.978 270.203 406.784C268.235 404.894 267.926 403.286 267.872 402.456C267.83 401.755 267.932 400.756 271.264 396.002C273.773 392.437 274.375 392.061 274.712 392.124Z\",\n    fill: \"#E8AE86\"\n  })), _path311 || (_path311 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.737 392.06C275.173 392.212 274.996 392.6 275.002 392.864C274.895 393.624 274.781 394.474 275.036 395.213C275.488 396.885 277.606 397.583 279.562 398.16C280.977 398.617 282.267 399.448 283.023 400.442C283.982 401.5 284.63 403.641 282.198 403.923C279.982 403.946 278.437 404.391 277.23 405.78C275.529 407.527 276.377 409.937 278.266 411.46L277.986 411.603C275.628 412.825 272.908 413.674 270.035 413.983C267.188 414.261 264.305 414.126 261.464 414.3C258.614 414.436 255.359 414.657 252.502 414.889L255.362 413.607C257.217 412.781 258.889 411.717 260.142 410.431C261.328 408.938 262.972 407.372 265.354 406.801C266.898 406.343 268.52 406.175 270.117 406.103L269.452 407.168C266.715 404.458 266.296 401.865 268.696 398.957C270.396 396.696 272.006 394.41 274.045 392.314C274.21 392.204 274.374 392.01 274.719 392.047L274.737 392.06ZM274.696 392.189C274.325 392.204 274.042 392.617 273.817 392.83C272.113 394.853 270.873 397.093 269.684 399.287C269.236 400.197 268.736 401.139 268.642 402.086C268.676 403.638 269.628 405.133 270.945 406.389L271.956 407.35L270.288 407.454C267.518 407.622 264.571 408.157 262.903 409.832C261.284 411.751 258.956 413.539 256.161 414.589L255.714 413.554C259.518 413.388 263.38 413.467 267.173 413.61C269.057 413.679 270.927 413.561 272.711 413.141C274.495 412.74 276.159 412.082 277.607 411.238L277.571 411.599C275.737 410.159 274.62 407.994 275.603 406.078C276.565 404.026 278.974 402.747 281.961 402.797C282.243 402.757 282.226 402.757 282.312 402.673C282.592 402.163 282.162 401.489 281.823 400.931C280.924 399.435 279.206 398.806 277.235 397.971C275.183 397.067 274.393 395.287 274.719 393.65L274.834 392.858C274.838 392.652 274.963 392.304 274.713 392.195L274.696 392.189Z\",\n    fill: \"#3C3636\"\n  })), _path312 || (_path312 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M290.938 406.858C292.337 407.373 293.843 408.003 295.398 408.769C298.416 410.255 300.775 411.84 302.564 413.242C300.377 413.027 297.514 413.014 294.628 413.923C291.785 414.818 290.567 416.073 288.768 415.817C287.616 415.655 286.159 414.863 284.868 412.036C287.127 411.105 288.466 409.342 288.302 407.514C288.105 405.39 285.909 403.533 282.903 403.032C283.442 402.264 285.075 400.176 288.555 398.963C293.816 397.136 298.907 398.844 299.601 399.092C298.879 399.597 297.811 400.446 297.008 401.679C296.059 403.126 296.236 403.923 295.312 404.906C294.699 405.553 293.507 406.382 290.938 406.858Z\",\n    fill: \"#E8AE86\"\n  })), _path313 || (_path313 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M291.026 406.87C296.277 408.224 300.817 410.99 304.575 413.979L302.469 413.796C299.044 413.496 295.651 413.885 292.667 415.174C288.116 417.513 286.068 415.153 284.613 412.102L284.539 411.948L284.741 411.863C288.226 410.501 288.921 406.751 285.919 404.821C284.797 403.996 283.252 403.636 281.728 403.45C283.853 399.641 289.227 396.971 294.972 397.511C297.104 397.649 299.139 398.212 301.028 398.95L300.166 399.521C298.433 400.649 297.28 402.051 296.619 403.709C295.961 405.508 293.506 406.736 291.026 406.864L291.026 406.87ZM290.849 406.852C291.068 406.754 291.489 406.636 291.753 406.564C293.605 406.028 295.242 404.977 295.59 403.495C296.01 401.723 297.243 399.94 299.043 398.67L299.259 399.634C296.493 398.778 293.237 398.542 290.38 399.199C287.488 399.837 285.039 401.355 283.633 403.312L283.093 402.471C287.579 403.184 290.326 407.157 287.961 410.065C287.274 410.969 286.248 411.721 285.022 412.216L285.149 411.977C285.419 412.587 285.742 413.191 286.16 413.749C287.844 415.982 289.505 415.993 292.068 414.462C295.009 412.826 299.024 412.222 302.674 412.688L302.023 413.618C300.413 412.325 298.682 411.109 296.82 409.998C294.939 408.828 292.886 407.885 290.867 406.845L290.849 406.852Z\",\n    fill: \"#3C3636\"\n  })), _path314 || (_path314 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M286.706 415.244C286.444 415.78 285.957 416.548 284.982 417.184C283.371 418.241 281.411 418.308 279.71 418.496C277.807 418.704 275.079 419.193 271.803 420.464C271.311 419.011 271.533 417.871 271.732 417.245C272.574 414.569 275.767 411.947 278.685 412.062C280.1 412.12 280.485 412.775 282.232 412.69C284.13 412.597 284.906 411.763 285.752 412.03C286.33 412.214 286.902 412.9 286.706 415.244Z\",\n    fill: \"#E8AE86\"\n  })), _path315 || (_path315 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M286.795 415.263C286.355 417.725 283.093 418.873 280.067 419.048C277.195 419.396 274.207 419.732 271.615 420.768C270.648 418.165 271.307 415.226 273.825 413.199C275.066 412.195 276.909 411.234 278.962 411.392C279.714 411.433 280.409 411.713 280.827 411.859C281.673 412.152 282.608 412.109 283.487 411.892C287.388 410.49 287.405 413.284 286.795 415.257L286.795 415.263ZM286.626 415.232C286.438 414.299 286.449 413.211 285.674 412.513C285.549 412.443 285.478 412.45 285.408 412.469C284.68 412.711 283.245 413.335 282.202 413.327C281.102 413.493 279.719 412.888 278.789 412.764C277.365 412.693 276.097 413.291 275.036 414.03C272.819 415.669 271.14 418.066 272.085 420.424L271.684 420.291C272.963 419.796 274.223 419.249 275.574 418.811C278.052 417.795 281.317 418.051 283.792 417.286C284.958 416.881 285.922 416.13 286.635 415.238L286.626 415.232Z\",\n    fill: \"#3C3636\"\n  })), _path316 || (_path316 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.239 413.013C285.898 412.996 288.817 410.821 288.758 408.154C288.699 405.488 285.685 403.34 282.026 403.357C278.367 403.374 275.449 405.549 275.508 408.216C275.566 410.882 278.58 413.03 282.239 413.013Z\",\n    fill: \"url(#paint1_radial_1_863)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path317 || (_path317 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M867.188 413.176C868.246 413.398 865.973 416.715 868.52 419.277C870.956 421.725 874.51 421.142 877.225 424.27C877.446 424.522 879.4 426.833 878.288 427.955C877.468 428.779 875.802 428.15 873.519 428.85C870.178 429.868 868.994 432.613 868.937 432.762C867.529 436.24 871.173 439.181 871.356 439.328C869.819 440.164 867.437 441.274 864.232 441.978C861.111 442.665 858.754 442.702 855.113 442.649C851.94 442.602 847.332 442.624 841.509 442.956C843.04 442.321 845.29 441.22 847.417 439.439C849.286 437.869 849.625 436.978 850.931 435.933C852.472 434.705 855.326 433.305 861.078 433.042C858.412 430.481 857.993 428.302 857.92 427.177C857.863 426.226 858.001 424.874 862.516 418.432C865.917 413.601 866.731 413.091 867.188 413.176Z\",\n    fill: \"#E8AE86\"\n  })), _path318 || (_path318 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M867.222 413.09C867.813 413.296 867.573 413.821 867.581 414.178C867.436 415.208 867.282 416.361 867.627 417.362C868.24 419.628 871.11 420.574 873.761 421.356C875.678 421.975 877.426 423.101 878.45 424.448C879.75 425.882 880.628 428.783 877.333 429.164C874.329 429.196 872.235 429.799 870.601 431.682C868.295 434.048 869.444 437.314 872.004 439.378L871.625 439.572C868.429 441.227 864.744 442.378 860.851 442.798C856.992 443.173 853.086 442.991 849.236 443.226C845.374 443.41 840.963 443.71 837.092 444.024L840.968 442.288C843.481 441.168 845.747 439.727 847.445 437.983C849.052 435.96 851.28 433.839 854.507 433.065C856.6 432.445 858.797 432.216 860.962 432.119L860.06 433.563C856.352 429.89 855.784 426.377 859.037 422.436C861.339 419.372 863.521 416.273 866.284 413.434C866.508 413.285 866.73 413.022 867.198 413.072L867.222 413.09ZM867.166 413.264C866.664 413.284 866.281 413.844 865.976 414.133C863.666 416.875 861.985 419.91 860.375 422.883C859.768 424.116 859.09 425.393 858.963 426.676C859.009 428.778 860.299 430.805 862.084 432.506L863.453 433.809L861.194 433.95C857.44 434.177 853.446 434.902 851.186 437.172C848.993 439.773 845.838 442.195 842.05 443.617L841.445 442.216C846.599 441.991 851.833 442.098 856.973 442.292C859.525 442.385 862.059 442.225 864.476 441.655C866.894 441.112 869.149 440.22 871.111 439.077L871.062 439.566C868.577 437.615 867.064 434.682 868.395 432.085C869.698 429.304 872.964 427.571 877.012 427.639C877.394 427.585 877.37 427.585 877.487 427.471C877.867 426.78 877.284 425.867 876.824 425.11C875.606 423.083 873.277 422.23 870.607 421.1C867.826 419.874 866.756 417.462 867.198 415.244L867.353 414.171C867.359 413.891 867.528 413.42 867.19 413.273L867.166 413.264Z\",\n    fill: \"#3C3636\"\n  })), _path319 || (_path319 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M889.177 433.136C891.071 433.834 893.113 434.688 895.219 435.725C899.31 437.739 902.505 439.888 904.929 441.787C901.966 441.495 898.087 441.478 894.176 442.709C890.324 443.922 888.674 445.622 886.236 445.276C884.675 445.056 882.7 443.984 880.952 440.153C884.012 438.892 885.827 436.502 885.605 434.025C885.338 431.147 882.361 428.631 878.288 427.952C879.02 426.911 881.232 424.083 885.948 422.438C893.076 419.963 899.974 422.277 900.915 422.613C899.937 423.298 898.49 424.448 897.401 426.119C896.116 428.079 896.355 429.16 895.104 430.492C894.273 431.368 892.658 432.492 889.177 433.136Z\",\n    fill: \"#E8AE86\"\n  })), _path320 || (_path320 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M889.297 433.153C896.412 434.987 902.564 438.736 907.657 442.787L904.803 442.538C900.161 442.132 895.564 442.659 891.52 444.405C885.353 447.575 882.577 444.377 880.607 440.242L880.506 440.034L880.779 439.919C885.503 438.074 886.444 432.992 882.376 430.376C880.855 429.258 878.762 428.77 876.697 428.518C879.576 423.358 886.858 419.739 894.643 420.47C897.532 420.658 900.291 421.421 902.85 422.421L901.682 423.194C899.334 424.723 897.772 426.624 896.876 428.87C895.984 431.308 892.657 432.972 889.297 433.145L889.297 433.153ZM889.057 433.128C889.353 432.996 889.924 432.836 890.281 432.739C892.791 432.012 895.01 430.588 895.481 428.58C896.05 426.178 897.721 423.762 900.161 422.041L900.453 423.348C896.704 422.188 892.292 421.868 888.421 422.759C884.502 423.623 881.183 425.68 879.279 428.332L878.547 427.192C884.626 428.159 888.348 433.542 885.143 437.482C884.212 438.708 882.822 439.726 881.161 440.397L881.333 440.073C881.699 440.9 882.136 441.718 882.703 442.475C884.984 445.5 887.235 445.516 890.709 443.441C894.694 441.224 900.135 440.405 905.081 441.036L904.199 442.297C902.017 440.545 899.671 438.898 897.147 437.392C894.599 435.807 891.817 434.529 889.081 433.119L889.057 433.128Z\",\n    fill: \"#3C3636\"\n  })), _path321 || (_path321 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M883.444 444.508C883.089 445.234 882.429 446.275 881.107 447.136C878.924 448.568 876.269 448.659 873.964 448.914C871.384 449.196 867.688 449.859 863.248 451.581C862.582 449.612 862.884 448.067 863.152 447.219C864.293 443.593 868.62 440.04 872.574 440.196C874.491 440.274 875.014 441.162 877.382 441.046C879.953 440.921 881.005 439.791 882.15 440.152C882.934 440.401 883.709 441.331 883.444 444.508Z\",\n    fill: \"#E8AE86\"\n  })), _path322 || (_path322 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M883.563 444.532C882.966 447.867 878.547 449.423 874.446 449.66C870.554 450.131 866.506 450.586 862.994 451.99C861.683 448.463 862.577 444.48 865.988 441.734C867.67 440.374 870.167 439.071 872.949 439.285C873.967 439.342 874.91 439.721 875.477 439.919C876.622 440.315 877.89 440.257 879.081 439.964C884.366 438.063 884.389 441.85 883.563 444.523L883.563 444.532ZM883.334 444.489C883.079 443.225 883.094 441.751 882.044 440.805C881.874 440.71 881.779 440.719 881.684 440.745C880.697 441.073 878.753 441.919 877.34 441.908C875.849 442.133 873.975 441.313 872.714 441.145C870.785 441.049 869.067 441.859 867.629 442.861C864.625 445.082 862.351 448.329 863.63 451.524L863.087 451.344C864.82 450.673 866.528 449.932 868.358 449.339C871.716 447.963 876.14 448.308 879.493 447.272C881.073 446.724 882.38 445.706 883.347 444.498L883.334 444.489Z\",\n    fill: \"#3C3636\"\n  })), _path323 || (_path323 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M877.39 441.484C882.348 441.461 886.303 438.513 886.223 434.9C886.143 431.286 882.059 428.376 877.101 428.399C872.143 428.422 868.188 431.37 868.268 434.983C868.348 438.596 872.432 441.507 877.39 441.484Z\",\n    fill: \"url(#paint2_radial_1_863)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path324 || (_path324 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M595.248 414.457C596.151 414.647 594.212 417.476 596.384 419.662C598.462 421.751 601.495 421.253 603.81 423.921C603.999 424.136 605.666 426.108 604.717 427.065C604.018 427.768 602.597 427.231 600.649 427.828C597.799 428.697 596.788 431.039 596.74 431.165C595.539 434.133 598.648 436.641 598.804 436.767C597.492 437.48 595.46 438.427 592.727 439.028C590.064 439.613 588.053 439.645 584.948 439.6C582.241 439.56 578.309 439.578 573.342 439.862C574.648 439.32 576.567 438.381 578.382 436.862C579.976 435.522 580.266 434.762 581.38 433.871C582.694 432.823 585.129 431.628 590.036 431.405C587.762 429.22 587.404 427.361 587.342 426.401C587.294 425.59 587.411 424.436 591.262 418.941C594.163 414.82 594.858 414.385 595.248 414.457Z\",\n    fill: \"#E8AE86\"\n  })), _path325 || (_path325 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M595.278 414.384C595.782 414.56 595.577 415.008 595.584 415.313C595.46 416.191 595.329 417.174 595.623 418.029C596.146 419.961 598.594 420.769 600.856 421.435C602.491 421.964 603.983 422.924 604.856 424.074C605.965 425.296 606.714 427.771 603.903 428.097C601.34 428.124 599.554 428.638 598.16 430.244C596.193 432.263 597.173 435.049 599.357 436.81L599.034 436.975C596.308 438.387 593.164 439.369 589.842 439.727C586.551 440.047 583.218 439.892 579.935 440.093C576.64 440.249 572.877 440.505 569.574 440.773L572.881 439.292C575.025 438.337 576.958 437.107 578.406 435.62C579.777 433.894 581.678 432.085 584.431 431.424C586.216 430.895 588.091 430.7 589.937 430.617L589.168 431.849C586.005 428.716 585.52 425.719 588.295 422.357C590.259 419.743 592.121 417.1 594.477 414.678C594.668 414.55 594.858 414.326 595.257 414.369L595.278 414.384ZM595.23 414.533C594.801 414.55 594.475 415.028 594.215 415.274C592.244 417.613 590.811 420.202 589.437 422.739C588.919 423.79 588.34 424.879 588.232 425.974C588.271 427.767 589.371 429.496 590.894 430.948L592.063 432.059L590.135 432.179C586.933 432.373 583.526 432.991 581.597 434.928C579.727 437.147 577.035 439.213 573.805 440.426L573.288 439.231C577.685 439.039 582.15 439.13 586.534 439.296C588.711 439.375 590.873 439.238 592.935 438.753C594.998 438.289 596.922 437.528 598.595 436.553L598.554 436.97C596.434 435.306 595.143 432.804 596.278 430.588C597.39 428.216 600.176 426.737 603.629 426.796C603.955 426.75 603.934 426.75 604.034 426.652C604.358 426.063 603.861 425.284 603.469 424.638C602.43 422.909 600.443 422.181 598.165 421.217C595.793 420.171 594.88 418.114 595.257 416.222L595.39 415.306C595.395 415.068 595.539 414.665 595.25 414.54L595.23 414.533Z\",\n    fill: \"#3C3636\"\n  })), _path326 || (_path326 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M614.007 431.488C615.623 432.084 617.365 432.812 619.162 433.697C622.651 435.415 625.377 437.248 627.445 438.868C624.917 438.619 621.608 438.605 618.272 439.655C614.986 440.69 613.578 442.14 611.499 441.845C610.167 441.657 608.482 440.742 606.991 437.475C609.601 436.398 611.15 434.359 610.96 432.247C610.732 429.792 608.193 427.645 604.719 427.066C605.342 426.178 607.229 423.765 611.252 422.362C617.333 420.25 623.218 422.225 624.021 422.512C623.186 423.096 621.952 424.076 621.023 425.502C619.927 427.174 620.131 428.096 619.063 429.232C618.355 429.98 616.977 430.939 614.007 431.488Z\",\n    fill: \"#E8AE86\"\n  })), _path327 || (_path327 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M614.109 431.504C620.179 433.069 625.427 436.267 629.772 439.722L627.336 439.51C623.377 439.164 619.455 439.614 616.006 441.103C610.745 443.807 608.377 441.079 606.696 437.552L606.61 437.374L606.843 437.276C610.872 435.702 611.675 431.367 608.205 429.135C606.908 428.181 605.122 427.765 603.36 427.55C605.816 423.148 612.028 420.061 618.67 420.685C621.134 420.844 623.487 421.496 625.671 422.349L624.675 423.009C622.671 424.313 621.339 425.934 620.574 427.85C619.813 429.93 616.975 431.35 614.109 431.497L614.109 431.504ZM613.904 431.483C614.157 431.37 614.644 431.234 614.949 431.151C617.09 430.53 618.983 429.316 619.384 427.602C619.87 425.554 621.295 423.493 623.376 422.025L623.626 423.14C620.428 422.15 616.664 421.877 613.362 422.637C610.018 423.374 607.187 425.129 605.563 427.391L604.939 426.419C610.124 427.244 613.299 431.835 610.565 435.197C609.771 436.243 608.585 437.111 607.168 437.684L607.315 437.408C607.627 438.113 608 438.811 608.484 439.456C610.43 442.037 612.35 442.05 615.314 440.28C618.713 438.389 623.354 437.69 627.574 438.229L626.821 439.304C624.96 437.809 622.958 436.405 620.806 435.12C618.632 433.768 616.259 432.678 613.924 431.475L613.904 431.483Z\",\n    fill: \"#3C3636\"\n  })), _path328 || (_path328 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M609.115 441.185C608.812 441.804 608.25 442.693 607.122 443.427C605.26 444.649 602.994 444.726 601.028 444.944C598.827 445.185 595.674 445.75 591.887 447.219C591.319 445.54 591.576 444.221 591.805 443.498C592.778 440.405 596.47 437.374 599.843 437.507C601.478 437.574 601.924 438.331 603.944 438.232C606.137 438.125 607.035 437.161 608.012 437.469C608.68 437.682 609.341 438.475 609.115 441.185Z\",\n    fill: \"#E8AE86\"\n  })), _path329 || (_path329 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M609.218 441.206C608.709 444.052 604.939 445.379 601.441 445.581C598.12 445.984 594.667 446.372 591.67 447.569C590.552 444.56 591.314 441.163 594.224 438.82C595.659 437.66 597.789 436.548 600.163 436.731C601.032 436.779 601.836 437.103 602.319 437.271C603.297 437.609 604.378 437.56 605.394 437.309C609.903 435.688 609.923 438.918 609.218 441.199L609.218 441.206ZM609.023 441.17C608.805 440.092 608.818 438.834 607.922 438.027C607.777 437.946 607.696 437.954 607.615 437.976C606.773 438.256 605.114 438.978 603.909 438.968C602.637 439.16 601.038 438.461 599.963 438.317C598.317 438.235 596.851 438.927 595.624 439.781C593.062 441.676 591.121 444.446 592.213 447.172L591.75 447.018C593.228 446.445 594.685 445.814 596.247 445.308C599.111 444.133 602.886 444.428 605.746 443.544C607.094 443.077 608.209 442.208 609.033 441.177L609.023 441.17Z\",\n    fill: \"#3C3636\"\n  })), _path330 || (_path330 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M603.951 438.606C608.181 438.586 611.555 436.071 611.487 432.989C611.419 429.906 607.935 427.423 603.705 427.443C599.475 427.463 596.102 429.977 596.17 433.06C596.238 436.142 599.722 438.625 603.951 438.606Z\",\n    fill: \"url(#paint3_radial_1_863)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path331 || (_path331 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M522.267 424.507C523.141 424.691 521.263 427.43 523.366 429.545C525.378 431.568 528.314 431.086 530.555 433.669C530.738 433.877 532.352 435.786 531.433 436.713C530.756 437.393 529.381 436.873 527.495 437.451C524.736 438.293 523.758 440.559 523.711 440.682C522.548 443.555 525.558 445.983 525.709 446.105C524.439 446.795 522.472 447.712 519.826 448.294C517.248 448.86 515.301 448.891 512.295 448.847C509.674 448.809 505.868 448.827 501.06 449.101C502.324 448.576 504.182 447.667 505.939 446.197C507.482 444.9 507.762 444.164 508.841 443.301C510.113 442.287 512.47 441.13 517.221 440.914C515.019 438.799 514.673 436.999 514.613 436.07C514.566 435.285 514.68 434.168 518.408 428.848C521.216 424.858 521.889 424.437 522.267 424.507Z\",\n    fill: \"#E8AE86\"\n  })), _path332 || (_path332 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M522.295 424.436C522.783 424.606 522.585 425.04 522.592 425.335C522.472 426.186 522.345 427.137 522.63 427.965C523.136 429.835 525.506 430.617 527.695 431.262C529.278 431.774 530.722 432.704 531.567 433.816C532.641 435 533.367 437.396 530.645 437.711C528.164 437.737 526.435 438.235 525.085 439.79C523.181 441.744 524.13 444.442 526.244 446.146L525.931 446.306C523.292 447.673 520.248 448.624 517.033 448.97C513.847 449.28 510.621 449.13 507.442 449.324C504.252 449.476 500.609 449.723 497.412 449.983L500.613 448.549C502.688 447.624 504.56 446.434 505.962 444.994C507.289 443.324 509.129 441.572 511.794 440.932C513.523 440.42 515.338 440.232 517.125 440.151L516.38 441.344C513.318 438.31 512.849 435.409 515.535 432.154C517.437 429.624 519.239 427.065 521.52 424.72C521.705 424.597 521.888 424.38 522.275 424.422L522.295 424.436ZM522.249 424.58C521.834 424.596 521.518 425.059 521.266 425.298C519.358 427.562 517.97 430.068 516.641 432.524C516.139 433.542 515.579 434.597 515.474 435.656C515.512 437.392 516.577 439.066 518.052 440.471L519.183 441.547L517.317 441.663C514.217 441.851 510.918 442.45 509.051 444.324C507.24 446.472 504.635 448.473 501.507 449.647L501.007 448.49C505.264 448.304 509.586 448.392 513.831 448.553C515.938 448.629 518.031 448.497 520.028 448.027C522.025 447.578 523.887 446.842 525.507 445.898L525.466 446.301C523.414 444.69 522.164 442.268 523.264 440.123C524.34 437.827 527.037 436.395 530.38 436.452C530.695 436.407 530.675 436.407 530.772 436.313C531.086 435.742 530.605 434.988 530.225 434.363C529.219 432.689 527.296 431.985 525.09 431.051C522.794 430.039 521.91 428.047 522.275 426.215L522.404 425.329C522.408 425.098 522.548 424.708 522.269 424.587L522.249 424.58Z\",\n    fill: \"#3C3636\"\n  })), _path333 || (_path333 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M540.425 440.993C541.99 441.57 543.677 442.275 545.416 443.132C548.794 444.795 551.433 446.569 553.435 448.138C550.988 447.897 547.784 447.883 544.554 448.899C541.373 449.901 540.01 451.305 537.997 451.019C536.708 450.838 535.077 449.952 533.633 446.789C536.161 445.747 537.659 443.773 537.476 441.728C537.255 439.351 534.797 437.273 531.434 436.712C532.037 435.852 533.864 433.517 537.759 432.159C543.646 430.114 549.343 432.026 550.12 432.303C549.312 432.869 548.117 433.818 547.218 435.198C546.156 436.817 546.354 437.709 545.32 438.809C544.634 439.533 543.3 440.461 540.425 440.993Z\",\n    fill: \"#E8AE86\"\n  })), _path334 || (_path334 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M540.524 441.007C546.401 442.522 551.481 445.618 555.687 448.963L553.33 448.757C549.497 448.422 545.7 448.858 542.361 450.3C537.268 452.917 534.975 450.276 533.348 446.862L533.265 446.689L533.49 446.594C537.391 445.071 538.169 440.874 534.809 438.714C533.553 437.79 531.824 437.387 530.119 437.179C532.496 432.917 538.51 429.929 544.94 430.533C547.326 430.687 549.604 431.318 551.718 432.144L550.753 432.782C548.814 434.045 547.523 435.614 546.783 437.469C546.047 439.483 543.299 440.857 540.524 441L540.524 441.007ZM540.326 440.986C540.571 440.877 541.043 440.745 541.337 440.665C543.41 440.064 545.243 438.889 545.631 437.23C546.102 435.246 547.481 433.252 549.496 431.83L549.738 432.91C546.642 431.951 542.998 431.687 539.801 432.423C536.564 433.136 533.824 434.835 532.251 437.025L531.647 436.084C536.667 436.882 539.741 441.328 537.094 444.582C536.325 445.594 535.177 446.435 533.805 446.989L533.948 446.722C534.25 447.405 534.61 448.08 535.079 448.705C536.963 451.204 538.822 451.217 541.691 449.503C544.982 447.672 549.475 446.996 553.559 447.517L552.831 448.558C551.03 447.111 549.092 445.751 547.008 444.507C544.903 443.199 542.606 442.143 540.346 440.979L540.326 440.986Z\",\n    fill: \"#3C3636\"\n  })), _path335 || (_path335 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M535.69 450.382C535.396 450.982 534.852 451.842 533.76 452.553C531.957 453.736 529.764 453.811 527.861 454.021C525.73 454.254 522.678 454.802 519.011 456.224C518.461 454.598 518.71 453.322 518.932 452.622C519.874 449.627 523.448 446.693 526.713 446.822C528.296 446.886 528.728 447.619 530.683 447.524C532.807 447.42 533.676 446.487 534.622 446.785C535.269 446.991 535.909 447.759 535.69 450.382Z\",\n    fill: \"#E8AE86\"\n  })), _path336 || (_path336 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M535.789 450.402C535.296 453.157 531.647 454.442 528.26 454.637C525.045 455.027 521.702 455.403 518.801 456.562C517.719 453.649 518.457 450.36 521.274 448.092C522.663 446.968 524.725 445.893 527.023 446.069C527.864 446.116 528.642 446.429 529.111 446.593C530.057 446.92 531.104 446.872 532.087 446.629C536.452 445.06 536.472 448.187 535.789 450.395L535.789 450.402ZM535.6 450.367C535.389 449.323 535.402 448.105 534.535 447.324C534.395 447.246 534.316 447.253 534.237 447.275C533.422 447.545 531.816 448.245 530.65 448.236C529.418 448.421 527.871 447.744 526.829 447.605C525.236 447.526 523.817 448.195 522.629 449.022C520.149 450.856 518.27 453.538 519.327 456.177L518.879 456.028C520.31 455.474 521.72 454.862 523.232 454.372C526.005 453.236 529.659 453.521 532.428 452.666C533.733 452.213 534.812 451.372 535.61 450.374L535.6 450.367Z\",\n    fill: \"#3C3636\"\n  })), _path337 || (_path337 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M530.691 447.885C534.786 447.866 538.052 445.432 537.986 442.448C537.92 439.464 534.547 437.06 530.453 437.079C526.358 437.098 523.092 439.532 523.158 442.516C523.224 445.5 526.596 447.904 530.691 447.885Z\",\n    fill: \"url(#paint4_radial_1_863)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path338 || (_path338 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M447.312 412.087C448.171 412.267 446.327 414.958 448.393 417.037C450.37 419.024 453.254 418.55 455.456 421.088C455.636 421.293 457.221 423.168 456.319 424.078C455.654 424.747 454.302 424.236 452.45 424.804C449.738 425.631 448.777 427.858 448.731 427.978C447.589 430.801 450.546 433.187 450.695 433.307C449.447 433.985 447.514 434.886 444.914 435.457C442.382 436.014 440.469 436.044 437.515 436.001C434.94 435.963 431.201 435.981 426.477 436.25C427.718 435.735 429.544 434.841 431.27 433.397C432.787 432.122 433.062 431.399 434.121 430.552C435.372 429.555 437.688 428.419 442.355 428.206C440.192 426.128 439.852 424.36 439.793 423.447C439.746 422.676 439.858 421.578 443.521 416.351C446.281 412.431 446.942 412.018 447.312 412.087Z\",\n    fill: \"#E8AE86\"\n  })), _path339 || (_path339 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M447.34 412.016C447.82 412.183 447.625 412.609 447.631 412.899C447.514 413.735 447.389 414.67 447.669 415.483C448.166 417.321 450.495 418.089 452.646 418.723C454.201 419.225 455.62 420.139 456.45 421.232C457.506 422.395 458.218 424.749 455.544 425.059C453.107 425.084 451.408 425.573 450.082 427.101C448.211 429.021 449.143 431.671 451.22 433.347L450.913 433.504C448.32 434.846 445.329 435.781 442.17 436.121C439.04 436.426 435.87 436.277 432.747 436.469C429.612 436.618 426.034 436.861 422.892 437.116L426.037 435.707C428.077 434.799 429.916 433.629 431.293 432.214C432.597 430.573 434.405 428.852 437.023 428.224C438.721 427.72 440.504 427.535 442.261 427.456L441.529 428.628C438.52 425.647 438.059 422.797 440.698 419.599C442.567 417.113 444.337 414.599 446.579 412.295C446.761 412.174 446.941 411.961 447.32 412.002L447.34 412.016ZM447.295 412.157C446.887 412.173 446.576 412.628 446.329 412.863C444.455 415.087 443.091 417.55 441.785 419.962C441.292 420.963 440.742 421.999 440.638 423.04C440.676 424.745 441.722 426.39 443.171 427.771L444.282 428.827L442.449 428.942C439.403 429.126 436.162 429.714 434.328 431.556C432.549 433.667 429.989 435.632 426.916 436.786L426.425 435.649C430.607 435.467 434.854 435.553 439.024 435.711C441.094 435.786 443.151 435.656 445.112 435.194C447.074 434.753 448.904 434.03 450.496 433.102L450.456 433.499C448.44 431.915 447.212 429.536 448.292 427.428C449.35 425.172 451.999 423.766 455.284 423.821C455.593 423.777 455.574 423.777 455.669 423.685C455.977 423.124 455.504 422.383 455.131 421.769C454.143 420.124 452.253 419.432 450.087 418.515C447.831 417.52 446.962 415.564 447.32 413.764L447.447 412.893C447.452 412.666 447.589 412.283 447.314 412.164L447.295 412.157Z\",\n    fill: \"#3C3636\"\n  })), _path340 || (_path340 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M465.153 428.28C466.69 428.846 468.347 429.539 470.056 430.381C473.375 432.015 475.968 433.759 477.935 435.3C475.531 435.063 472.384 435.049 469.21 436.048C466.084 437.032 464.745 438.412 462.767 438.131C461.5 437.953 459.898 437.082 458.479 433.974C460.963 432.95 462.435 431.011 462.255 429.001C462.038 426.666 459.623 424.625 456.318 424.074C456.911 423.229 458.706 420.934 462.533 419.599C468.317 417.59 473.914 419.469 474.678 419.741C473.884 420.297 472.71 421.23 471.827 422.586C470.784 424.177 470.978 425.053 469.962 426.134C469.288 426.845 467.978 427.757 465.153 428.28Z\",\n    fill: \"#E8AE86\"\n  })), _path341 || (_path341 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M465.25 428.293C471.023 429.781 476.014 432.823 480.147 436.109L477.831 435.908C474.065 435.578 470.335 436.006 467.054 437.423C462.05 439.994 459.797 437.4 458.198 434.045L458.117 433.875L458.338 433.782C462.171 432.285 462.935 428.162 459.634 426.039C458.4 425.132 456.701 424.736 455.026 424.532C457.362 420.345 463.271 417.408 469.588 418.002C471.932 418.154 474.17 418.773 476.247 419.585L475.299 420.212C473.394 421.453 472.126 422.994 471.399 424.817C470.675 426.795 467.976 428.146 465.249 428.286L465.25 428.293ZM465.055 428.272C465.295 428.165 465.759 428.036 466.048 427.956C468.085 427.366 469.885 426.211 470.267 424.582C470.729 422.633 472.085 420.673 474.064 419.276L474.301 420.337C471.26 419.396 467.68 419.136 464.539 419.858C461.359 420.56 458.666 422.229 457.121 424.381L456.527 423.456C461.459 424.24 464.479 428.608 461.879 431.805C461.124 432.8 459.996 433.626 458.648 434.17L458.788 433.908C459.084 434.579 459.439 435.242 459.899 435.856C461.75 438.311 463.577 438.324 466.395 436.64C469.629 434.841 474.043 434.177 478.057 434.689L477.341 435.712C475.571 434.29 473.667 432.954 471.619 431.732C469.551 430.446 467.294 429.409 465.074 428.265L465.055 428.272Z\",\n    fill: \"#3C3636\"\n  })), _path342 || (_path342 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M460.5 437.509C460.212 438.098 459.677 438.943 458.604 439.641C456.833 440.803 454.678 440.877 452.808 441.084C450.715 441.313 447.715 441.851 444.113 443.248C443.573 441.65 443.817 440.396 444.035 439.709C444.961 436.767 448.472 433.884 451.68 434.01C453.236 434.074 453.66 434.794 455.581 434.7C457.667 434.598 458.521 433.681 459.45 433.974C460.086 434.177 460.715 434.931 460.5 437.509Z\",\n    fill: \"#E8AE86\"\n  })), _path343 || (_path343 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M460.598 437.528C460.113 440.234 456.528 441.497 453.2 441.689C450.042 442.072 446.757 442.441 443.907 443.58C442.844 440.718 443.569 437.486 446.337 435.258C447.701 434.154 449.727 433.097 451.985 433.271C452.812 433.317 453.576 433.624 454.036 433.785C454.966 434.106 455.995 434.059 456.961 433.821C461.249 432.279 461.268 435.351 460.597 437.521L460.598 437.528ZM460.412 437.493C460.205 436.468 460.218 435.271 459.365 434.504C459.228 434.426 459.15 434.434 459.073 434.456C458.272 434.721 456.695 435.408 455.548 435.399C454.338 435.582 452.818 434.916 451.795 434.779C450.229 434.702 448.835 435.359 447.668 436.172C445.231 437.974 443.385 440.609 444.423 443.202L443.983 443.055C445.389 442.511 446.775 441.91 448.26 441.429C450.984 440.312 454.575 440.592 457.295 439.752C458.578 439.307 459.638 438.481 460.422 437.5L460.412 437.493Z\",\n    fill: \"#3C3636\"\n  })), _path344 || (_path344 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M455.589 435.051C459.612 435.033 462.821 432.641 462.757 429.709C462.692 426.777 459.378 424.415 455.355 424.434C451.332 424.453 448.123 426.845 448.188 429.776C448.252 432.708 451.566 435.07 455.589 435.051Z\",\n    fill: \"url(#paint5_radial_1_863)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path345 || (_path345 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M917.272 385.74C918.097 385.913 916.326 388.497 918.31 390.493C920.208 392.401 922.977 391.947 925.092 394.384C925.265 394.58 926.787 396.381 925.921 397.255C925.282 397.897 923.984 397.407 922.205 397.952C919.602 398.745 918.679 400.884 918.635 401C917.538 403.71 920.378 406.001 920.52 406.116C919.322 406.767 917.466 407.632 914.97 408.181C912.538 408.715 910.701 408.744 907.865 408.703C905.392 408.667 901.802 408.684 897.266 408.942C898.458 408.448 900.211 407.59 901.869 406.202C903.324 404.979 903.589 404.284 904.606 403.471C905.807 402.514 908.031 401.423 912.512 401.218C910.435 399.223 910.108 397.525 910.052 396.649C910.007 395.908 910.115 394.854 913.632 389.835C916.282 386.071 916.917 385.674 917.272 385.74Z\",\n    fill: \"#E8AE86\"\n  })), _path346 || (_path346 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M917.299 385.672C917.759 385.833 917.573 386.242 917.579 386.521C917.466 387.323 917.346 388.221 917.615 389.001C918.092 390.766 920.328 391.504 922.393 392.113C923.887 392.595 925.249 393.472 926.047 394.522C927.06 395.639 927.744 397.899 925.176 398.197C922.836 398.221 921.205 398.691 919.931 400.158C918.135 402.001 919.03 404.546 921.024 406.155L920.729 406.305C918.24 407.595 915.368 408.492 912.335 408.818C909.329 409.111 906.285 408.969 903.286 409.153C900.277 409.296 896.84 409.529 893.824 409.774L896.844 408.421C898.802 407.549 900.568 406.426 901.89 405.067C903.142 403.491 904.878 401.839 907.392 401.236C909.023 400.752 910.735 400.574 912.422 400.499L911.719 401.623C908.83 398.762 908.387 396.025 910.922 392.954C912.716 390.567 914.416 388.153 916.568 385.941C916.743 385.824 916.915 385.62 917.28 385.659L917.299 385.672ZM917.255 385.808C916.864 385.824 916.566 386.26 916.328 386.486C914.529 388.621 913.219 390.986 911.964 393.303C911.491 394.263 910.963 395.258 910.864 396.258C910.9 397.896 911.905 399.475 913.296 400.8L914.363 401.815L912.602 401.925C909.678 402.102 906.566 402.667 904.805 404.435C903.096 406.462 900.638 408.349 897.687 409.457L897.216 408.365C901.231 408.19 905.309 408.273 909.314 408.425C911.302 408.497 913.276 408.372 915.16 407.929C917.044 407.505 918.801 406.811 920.329 405.92L920.291 406.301C918.355 404.78 917.176 402.495 918.213 400.472C919.228 398.306 921.773 396.955 924.926 397.008C925.224 396.966 925.205 396.966 925.297 396.877C925.592 396.339 925.138 395.627 924.78 395.038C923.831 393.459 922.017 392.794 919.936 391.913C917.77 390.958 916.936 389.079 917.28 387.351L917.401 386.515C917.406 386.297 917.538 385.929 917.274 385.815L917.255 385.808Z\",\n    fill: \"#3C3636\"\n  })), _path347 || (_path347 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M934.403 401.295C935.88 401.839 937.471 402.504 939.112 403.312C942.299 404.881 944.789 406.555 946.677 408.035C944.369 407.808 941.346 407.795 938.299 408.754C935.298 409.699 934.012 411.024 932.113 410.754C930.896 410.583 929.357 409.747 927.995 406.762C930.38 405.779 931.794 403.917 931.621 401.988C931.413 399.745 929.094 397.785 925.92 397.256C926.49 396.444 928.213 394.241 931.888 392.96C937.442 391.031 942.816 392.834 943.55 393.096C942.787 393.63 941.66 394.525 940.812 395.827C939.81 397.355 939.997 398.197 939.022 399.234C938.374 399.917 937.116 400.793 934.403 401.295Z\",\n    fill: \"#E8AE86\"\n  })), _path348 || (_path348 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M934.497 401.308C940.04 402.736 944.833 405.657 948.802 408.813L946.578 408.619C942.961 408.303 939.379 408.714 936.229 410.074C931.424 412.543 929.262 410.052 927.726 406.831L927.648 406.668L927.86 406.579C931.541 405.141 932.274 401.182 929.105 399.144C927.92 398.273 926.288 397.893 924.68 397.696C926.923 393.676 932.597 390.856 938.662 391.426C940.913 391.572 943.062 392.167 945.057 392.946L944.147 393.548C942.317 394.739 941.1 396.22 940.401 397.97C939.707 399.87 937.114 401.166 934.497 401.301L934.497 401.308ZM934.31 401.288C934.541 401.185 934.986 401.061 935.264 400.985C937.219 400.418 938.948 399.309 939.315 397.744C939.758 395.873 941.06 393.991 942.961 392.65L943.189 393.668C940.268 392.764 936.83 392.515 933.814 393.209C930.761 393.882 928.175 395.485 926.691 397.551L926.121 396.663C930.857 397.416 933.757 401.61 931.26 404.68C930.535 405.635 929.452 406.429 928.158 406.951L928.292 406.699C928.577 407.343 928.917 407.981 929.359 408.57C931.137 410.927 932.891 410.939 935.597 409.323C938.702 407.596 942.941 406.957 946.794 407.449L946.107 408.431C944.407 407.066 942.579 405.783 940.613 404.61C938.627 403.375 936.46 402.379 934.328 401.281L934.31 401.288Z\",\n    fill: \"#3C3636\"\n  })), _path349 || (_path349 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M929.937 410.153C929.66 410.718 929.146 411.53 928.116 412.201C926.416 413.316 924.347 413.387 922.551 413.586C920.541 413.806 917.661 414.322 914.202 415.664C913.683 414.13 913.918 412.926 914.127 412.265C915.016 409.44 918.388 406.672 921.468 406.794C922.962 406.855 923.369 407.546 925.214 407.456C927.217 407.358 928.037 406.478 928.929 406.759C929.54 406.953 930.143 407.678 929.937 410.153Z\",\n    fill: \"#E8AE86\"\n  })), _path350 || (_path350 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M930.03 410.172C929.565 412.77 926.123 413.983 922.927 414.167C919.895 414.535 916.741 414.889 914.004 415.983C912.983 413.235 913.679 410.132 916.337 407.992C917.647 406.932 919.593 405.917 921.76 406.084C922.554 406.128 923.288 406.424 923.73 406.578C924.623 406.886 925.611 406.841 926.538 406.612C930.656 405.132 930.675 408.082 930.03 410.165L930.03 410.172ZM929.852 410.139C929.654 409.154 929.666 408.005 928.847 407.268C928.715 407.194 928.64 407.201 928.566 407.222C927.798 407.477 926.283 408.136 925.182 408.128C924.02 408.303 922.56 407.664 921.578 407.533C920.074 407.458 918.736 408.09 917.615 408.87C915.275 410.6 913.503 413.13 914.5 415.62L914.077 415.479C915.427 414.957 916.757 414.379 918.184 413.917C920.8 412.845 924.247 413.114 926.86 412.307C928.091 411.88 929.109 411.087 929.862 410.145L929.852 410.139Z\",\n    fill: \"#3C3636\"\n  })), _path351 || (_path351 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M925.221 407.795C929.084 407.777 932.165 405.481 932.103 402.665C932.041 399.85 928.859 397.583 924.996 397.6C921.133 397.618 918.052 399.915 918.114 402.73C918.176 405.545 921.358 407.813 925.221 407.795Z\",\n    fill: \"url(#paint6_radial_1_863)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint0_radial_1_863\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(212.781 390.609) rotate(-0.265483) scale(7.20719 5.25273)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint1_radial_1_863\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(282.133 408.185) rotate(-0.265483) scale(6.62522 4.82859)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint2_radial_1_863\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(877.246 434.941) rotate(-0.265483) scale(8.9777 6.54312)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint3_radial_1_863\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(603.828 433.024) rotate(-0.265483) scale(7.65863 5.58175)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint4_radial_1_863\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(530.572 442.482) rotate(-0.265483) scale(7.41421 5.40361)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint5_radial_1_863\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(455.472 429.743) rotate(-0.265483) scale(7.28451 5.30909)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint6_radial_1_863\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(925.108 402.698) rotate(-0.265483) scale(6.99471 5.09788)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGameBackground1366);\nexport default __webpack_public_path__ + \"static/media/GameBackground1366.cfe7fc45d544e9283bf8600cf5efcb95.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103, _path104, _path105, _path106, _path107, _path108, _path109, _path110, _path111, _path112, _path113, _path114, _path115, _path116, _path117, _path118, _path119, _path120, _path121, _path122, _path123, _path124, _path125, _path126, _path127, _path128, _path129, _path130, _path131, _path132, _path133, _path134, _path135, _path136, _path137, _path138, _path139, _path140, _path141, _path142, _path143, _path144, _path145, _path146, _path147, _path148, _path149, _path150, _path151, _path152, _path153, _path154, _path155, _path156, _path157, _path158, _path159, _path160, _path161, _path162, _path163, _path164, _path165, _path166, _path167, _path168, _path169, _path170, _path171, _path172, _path173, _path174, _path175, _path176, _path177, _path178, _path179, _path180, _path181, _path182, _path183, _path184, _path185, _path186, _path187, _path188, _path189, _path190, _path191, _path192, _path193, _path194, _path195, _path196, _path197, _path198, _path199, _path200, _path201, _path202, _path203, _path204, _path205, _path206, _path207, _path208, _path209, _path210, _path211, _path212, _path213, _path214, _path215, _path216, _path217, _path218, _path219, _path220, _path221, _path222, _path223, _path224, _path225, _path226, _path227, _path228, _path229, _path230, _path231, _path232, _path233, _path234, _path235, _path236, _path237, _path238, _path239, _path240, _path241, _path242, _path243, _path244, _path245, _path246, _path247, _path248, _path249, _path250, _path251, _path252, _path253, _path254, _path255, _path256, _path257, _path258, _path259, _path260, _path261, _path262, _path263, _path264, _path265, _path266, _path267, _path268, _path269, _path270, _path271, _path272, _path273, _path274, _path275, _path276, _path277, _path278, _path279, _path280, _path281, _path282, _path283, _path284, _path285, _path286, _path287, _path288, _path289, _path290, _path291, _path292, _path293, _path294, _path295, _path296, _path297, _path298, _path299, _path300, _path301, _path302, _path303, _path304, _path305, _path306, _path307, _path308, _path309, _path310, _path311, _path312, _path313, _path314, _path315, _path316, _path317, _path318, _path319, _path320, _path321, _path322, _path323, _path324, _path325, _path326, _path327, _path328, _path329, _path330, _path331, _path332, _path333, _path334, _path335, _path336, _path337, _path338, _path339, _path340, _path341, _path342, _path343, _path344, _path345, _path346, _path347, _path348, _path349, _path350, _path351, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgGameBackground1920(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1873,\n    height: 838,\n    viewBox: \"0 0 1873 838\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M574.696 58.7371C608.649 55.0102 614.705 78.3923 617.836 79.0977C624.65 80.1201 626.384 74.0875 633.623 73.1656C650.603 70.9992 664.093 79.9405 663.348 92.6145C664.601 94.7233 679.256 95.7871 676.792 112.134C677.551 113.048 687.322 112.156 688.56 119.378C696.472 119.783 703.274 127.344 700.095 132.996C700.893 135.187 718.841 134.824 711.786 142.364L479.879 135.793C487.123 129.279 498.892 126.391 509.961 126.013C512.073 118.567 522.631 118.993 524.412 117.917C527.697 115.926 528.052 110.482 538.213 108.207C523.133 96.6796 529.541 84.3682 549.157 79.8098C547.481 71.0331 564.549 59.853 574.696 58.7371ZM577.447 60.9415C567.409 61.7628 548.545 72.1159 554.774 81.0322C518.254 88.0036 537.562 107.806 544.634 106.794C547.608 106.368 561.523 72.9621 588.054 100.05C566.635 83.3884 540.716 102.441 552.654 119.78C543.07 106.994 536.353 106.421 528.576 120.161C510.454 121.041 513.95 127.636 512.712 128.218C511.747 128.679 494.937 128.49 491.307 132.927C564.125 135.171 636.944 137.405 709.761 139.649C706.927 134.306 697.915 138.431 697.112 137.164C693.325 131.156 703.568 113.828 674.836 126.964C697.857 113.23 670.8 115.345 669.644 114.058C678.24 106.561 672.523 97.5846 660.403 95.7208C664.13 76.9645 633.03 66.5142 623.298 84.5687C605.367 77.107 607.162 58.5299 577.447 60.9415Z\",\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M577.447 60.9432C607.162 58.5316 605.367 77.1087 623.298 84.5703C633.03 66.5159 664.13 76.9662 660.403 95.7225C672.523 97.5863 678.24 106.563 669.644 114.059C670.8 115.347 697.857 113.232 674.835 126.965C703.568 113.83 693.325 131.157 697.112 137.166C697.915 138.432 706.927 134.307 709.761 139.651C636.943 137.407 564.125 135.173 491.307 132.929C494.937 128.492 511.747 128.681 512.712 128.219C513.95 127.638 510.454 121.042 528.576 120.163C536.353 106.423 543.07 106.996 552.654 119.782C540.716 102.443 566.635 83.3901 588.054 100.052C561.523 72.9637 547.608 106.37 544.634 106.796C537.562 107.808 518.254 88.0053 554.774 81.0339C548.545 72.1176 567.409 61.7645 577.447 60.9432Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M429.803 147.592C473.875 143.897 477.203 175.314 486.85 174.727C488.794 174.612 495.931 163.66 516.894 166.009C540.339 168.629 541.125 190.161 542.145 191.71C543.271 193.422 564.71 199.048 556.848 215.518C573.996 218.45 571.937 224.473 572.781 225.007C583.65 226.612 593.521 235.409 588.365 244.055C589.173 245.184 606.48 242.984 604.985 254.095C505.287 251.451 405.589 248.797 305.891 246.152C322.982 231.624 340.917 239.373 351.915 226.192C368.68 224.498 366.193 215.06 381.503 210.55C360.81 197.3 370.51 178.564 395.546 174.798C393.061 162.202 414.454 148.88 429.803 147.592ZM429.687 150.779C414.718 152.109 395.61 165.273 400.399 177.593C370.941 179.555 365.335 202.096 389.339 209.177C398.301 185.04 431.515 182.175 442.889 196.341C455.022 211.442 438.805 196.14 437.959 195.669C427.459 189.747 411.959 191.318 403.179 198.405C397.579 202.925 396.23 210.031 394.075 215.159C407.393 233.877 394.168 225.433 389.91 212.915C388.743 212.701 387.562 212.497 386.395 212.283C377.558 215.499 368.851 218.633 367.47 226.632C345.767 227.485 349.98 236.163 348.7 236.733C347.304 237.353 323.493 237.412 318.733 243.327C412.775 245.81 506.817 248.305 600.859 250.789C596.225 245.107 584.8 249.419 583.968 248.184C587.795 241.041 583.43 228.764 574.078 228.234C568.579 230.385 563.065 232.525 557.565 234.677C589.657 211.716 533.48 225.159 554.058 214.376C556.87 195.891 538.522 195.956 537.786 194.777C541.462 171.617 503.566 157.678 489.485 180.117C485.073 178.047 480.676 175.966 476.264 173.895C474.363 172.076 468.087 147.369 429.687 150.779Z\",\n    fill: \"black\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M429.687 150.776C468.087 147.367 474.363 172.074 476.264 173.892C480.676 175.963 485.073 178.044 489.485 180.115C503.566 157.675 541.462 171.614 537.786 194.774C538.522 195.954 556.87 195.889 554.058 214.373C533.48 225.156 589.657 211.714 557.565 234.674C563.065 232.523 568.579 230.382 574.078 228.231C583.43 228.762 587.795 241.038 583.968 248.181C584.8 249.417 596.225 245.105 600.859 250.786C506.817 248.302 412.775 245.808 318.733 243.324C323.493 237.409 347.304 237.35 348.7 236.73C349.98 236.161 345.767 227.482 367.47 226.63C368.851 218.631 377.558 215.496 386.395 212.281C387.562 212.494 388.743 212.698 389.91 212.912C394.168 225.43 407.393 233.875 394.075 215.156C396.23 210.029 397.579 202.922 403.179 198.403C411.959 191.315 427.459 189.745 437.959 195.667C438.805 196.137 455.022 211.44 442.889 196.338C431.515 182.172 398.301 185.038 389.339 209.174C365.335 202.094 370.941 179.552 400.399 177.591C395.61 165.27 414.718 152.107 429.687 150.776Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1295.36 41.969C1329.31 38.2421 1335.37 61.6242 1338.5 62.3296C1345.31 63.352 1347.05 57.3194 1354.28 56.3975C1371.27 54.2312 1384.75 63.1725 1384.01 75.8464C1385.26 77.9553 1399.92 79.0191 1397.45 95.3656C1398.21 96.2803 1407.98 95.3876 1409.22 102.61C1417.13 103.015 1423.94 110.576 1420.76 116.227C1421.55 118.419 1439.5 118.056 1432.45 125.596L1200.54 119.025C1207.78 112.511 1219.55 109.623 1230.62 109.245C1232.73 101.799 1243.29 102.225 1245.07 101.149C1248.36 99.1579 1248.71 93.7136 1258.87 91.4391C1243.8 79.9116 1250.2 67.6001 1269.82 63.0417C1268.14 54.265 1285.21 43.0849 1295.36 41.969ZM1298.11 44.1734C1288.07 44.9948 1269.21 55.3478 1275.44 64.2641C1238.92 71.2355 1258.22 91.0379 1265.3 90.0262C1268.27 89.6001 1282.19 56.194 1308.72 83.2821C1287.3 66.6204 1261.38 85.6728 1273.32 103.012C1263.73 90.2264 1257.01 89.6533 1249.24 103.393C1231.12 104.273 1234.61 110.868 1233.37 111.45C1232.41 111.911 1215.6 111.722 1211.97 116.159C1284.79 118.403 1357.61 120.637 1430.42 122.881C1427.59 117.537 1418.58 121.663 1417.77 120.396C1413.99 114.388 1424.23 97.06 1395.5 110.196C1418.52 96.4623 1391.46 98.577 1390.31 97.2896C1398.9 89.7928 1393.19 80.8166 1381.07 78.9527C1384.79 60.1965 1353.69 49.7461 1343.96 67.8006C1326.03 60.3389 1327.82 41.7619 1298.11 44.1734Z\",\n    fill: \"black\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1298.11 44.1751C1327.82 41.7636 1326.03 60.3406 1343.96 67.8023C1353.69 49.7478 1384.79 60.1982 1381.06 78.9544C1393.18 80.8182 1398.9 89.7945 1390.31 97.2913C1391.46 98.5787 1418.52 96.4639 1395.5 110.197C1424.23 97.0617 1413.99 114.389 1417.77 120.398C1418.58 121.664 1427.59 117.539 1430.42 122.882C1357.6 120.638 1284.79 118.405 1211.97 116.161C1215.6 111.724 1232.41 111.913 1233.37 111.451C1234.61 110.87 1231.12 104.274 1249.24 103.395C1257.01 89.655 1263.73 90.2281 1273.32 103.014C1261.38 85.6745 1287.3 66.622 1308.71 83.2838C1282.18 56.1957 1268.27 89.6017 1265.3 90.0278C1258.22 91.0395 1238.92 71.2372 1275.44 64.2658C1269.21 55.3495 1288.07 44.9965 1298.11 44.1751Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M920.394 26.0316C942.947 24.1406 944.651 40.2179 949.587 39.9171C950.582 39.8582 954.234 34.2541 964.962 35.4559C976.959 36.797 977.362 47.8154 977.883 48.6083C978.46 49.4843 989.431 52.3633 985.407 60.7916C994.183 62.2917 993.129 65.374 993.561 65.6474C999.123 66.4688 1004.17 70.9702 1001.54 75.3951C1001.95 75.9727 1010.81 74.847 1010.04 80.5329C959.022 79.1798 908.003 77.8213 856.984 76.4682C865.73 69.0333 874.908 72.9987 880.536 66.2536C889.115 65.3867 887.843 60.5572 895.677 58.2491C885.088 51.4689 890.052 41.8811 902.864 39.9535C901.592 33.508 912.539 26.6905 920.394 26.0316ZM920.334 27.6622C912.675 28.3429 902.896 35.0793 905.347 41.3841C890.272 42.3879 887.403 53.9231 899.687 57.5466C904.274 45.195 921.27 43.7287 927.091 50.9777C933.299 58.7057 925.001 50.875 924.568 50.6342C919.195 47.6037 911.263 48.4073 906.77 52.0342C903.904 54.3471 903.213 57.9838 902.111 60.6078C908.926 70.1866 902.158 65.8651 899.98 59.4592C899.382 59.3498 898.778 59.2456 898.18 59.1362C893.658 60.7818 889.203 62.3858 888.496 66.4791C877.39 66.9153 879.546 71.3564 878.891 71.6479C878.176 71.965 865.991 71.9952 863.556 75.0221C911.68 76.2932 959.805 77.5697 1007.93 78.8408C1005.56 75.9334 999.712 78.1401 999.286 77.5077C1001.24 73.8525 999.01 67.5702 994.225 67.2985C991.41 68.3995 988.589 69.4948 985.774 70.5957C1002.2 58.8461 973.449 65.725 983.98 60.207C985.418 50.7479 976.029 50.7811 975.653 50.1774C977.534 38.3258 958.141 31.1928 950.935 42.6758C948.678 41.6161 946.428 40.5512 944.17 39.4916C943.197 38.5608 939.985 25.9175 920.334 27.6622Z\",\n    fill: \"black\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M920.334 27.6596C939.984 25.9148 943.196 38.5582 944.169 39.4889C946.427 40.5486 948.677 41.6135 950.935 42.6732C958.141 31.1901 977.533 38.3232 975.652 50.1747C976.029 50.7785 985.418 50.7452 983.979 60.2044C973.448 65.7224 1002.2 58.8434 985.774 70.5931C988.588 69.4921 991.41 68.3968 994.224 67.2959C999.01 67.5675 1001.24 73.8498 999.285 77.5051C999.711 78.1374 1005.56 75.9308 1007.93 78.8382C959.804 77.5671 911.68 76.2906 863.555 75.0195C865.991 71.9926 878.176 71.9624 878.89 71.6453C879.545 71.3537 877.389 66.9126 888.495 66.4765C889.202 62.3831 893.658 60.7792 898.18 59.1335C898.777 59.243 899.382 59.3471 899.979 59.4566C902.157 65.8625 908.925 70.1839 902.11 60.6051C903.213 57.9812 903.903 54.3444 906.769 52.0316C911.262 48.4046 919.194 47.6011 924.567 50.6316C925 50.8724 933.299 58.7031 927.09 50.9751C921.269 43.7261 904.273 45.1923 899.686 57.5439C887.403 53.9204 890.271 42.3853 905.346 41.3814C902.896 35.0766 912.674 28.3403 920.334 27.6596Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1518.76 147.772L1497.54 583.211C1109.23 581.363 720.915 579.526 332.604 577.678L317.52 462.514L1518.76 147.772Z\",\n    fill: \"#7B52AC\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M715.649 531.603C723.298 522.235 731.078 511.926 738.668 500.642C747.178 487.991 754.25 475.881 760.178 464.587C763.678 465.049 768.67 465.288 773.68 463.709C786.115 459.784 789.4 447.567 792.17 441.478C796.959 430.914 809.836 417.539 845.659 405.698C845.93 401.816 847.332 394.332 854.716 388.252C857.476 385.992 861.684 382.525 866.687 382.897C872.317 383.323 874.62 388.295 880.589 394.038C884.595 397.883 891.263 403.052 902.531 407.685C902.207 409.494 900.828 415.452 893.94 420.334C886.041 425.938 876.517 426.105 874.372 426.104C875.575 428.041 877.021 430.857 877.797 434.368C880.355 446.073 873.065 455.305 870.684 458.242C863.034 467.634 852.04 471.854 847.403 473.383C851.826 471.97 863.157 467.807 870.684 458.242C882.152 443.664 875.465 428.425 874.388 426.105C876.533 426.105 886.057 425.939 893.956 420.334C900.844 415.453 902.223 409.482 902.547 407.686C904.711 403.191 917.391 377.96 944.795 374.059C947.584 373.666 950.688 373.463 954.119 373.597C955.524 368.256 958.918 359.217 968.048 350.376C972.079 346.467 979.426 338.278 985.27 339.486C989.257 340.302 989.096 344.732 993.325 349.517C998.654 355.556 1008.01 358.766 1018.6 360.35C1035.79 385.168 1053 409.998 1070.2 434.815C1074.77 442.142 1080.15 446.645 1084.36 449.454C1088.47 452.2 1093.27 454.505 1094.06 458.647C1094.68 461.936 1092.06 462.601 1092.21 465.174C1092.68 473.305 1119.44 474.439 1128.83 488.021C1131.05 491.235 1131.68 494.245 1131.91 496.009C1098.28 525.505 1063.03 539.41 1042.56 545.942C1029.85 550.005 956.683 572.371 876.451 554.516C839.839 546.366 820.224 533.948 771.272 530.67C748.067 529.116 728.698 530.312 715.696 531.628L715.649 531.603Z\",\n    fill: \"#7B52AC\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M870.684 458.242C873.065 455.305 880.355 446.073 877.797 434.368C877.021 430.857 875.575 428.041 874.372 426.104C876.517 426.105 886.041 425.938 893.94 420.334C900.828 415.452 902.207 409.494 902.531 407.685C891.263 403.052 884.595 397.883 880.589 394.038C874.62 388.295 872.317 383.323 866.687 382.897C861.684 382.525 857.476 385.992 854.716 388.252C847.332 394.332 845.93 401.816 845.659 405.698C809.836 417.539 796.959 430.914 792.17 441.478C789.4 447.567 786.115 459.784 773.68 463.709C768.67 465.288 763.678 465.049 760.178 464.587C754.25 475.881 747.178 487.991 738.668 500.642C731.078 511.926 723.298 522.235 715.649 531.603L715.696 531.628C728.698 530.312 748.067 529.116 771.272 530.67C820.224 533.948 839.839 546.366 876.451 554.516C956.683 572.371 1029.85 550.005 1042.56 545.942C1063.03 539.41 1098.28 525.505 1131.91 496.009C1131.68 494.245 1131.05 491.235 1128.83 488.021C1119.44 474.439 1092.68 473.305 1092.21 465.174C1092.06 462.601 1094.68 461.936 1094.06 458.647C1093.27 454.505 1088.47 452.2 1084.36 449.454C1080.15 446.645 1074.77 442.142 1070.2 434.815C1053 409.998 1035.79 385.168 1018.6 360.35C1008.01 358.766 998.654 355.556 993.325 349.517C989.096 344.732 989.257 340.302 985.27 339.486C979.426 338.278 972.079 346.467 968.048 350.376C958.918 359.217 955.524 368.256 954.119 373.597C950.688 373.463 947.584 373.666 944.795 374.059C917.391 377.96 904.711 403.191 902.547 407.686C902.223 409.482 900.844 415.453 893.956 420.334C886.057 425.939 876.533 426.105 874.388 426.105C875.465 428.425 882.152 443.664 870.684 458.242ZM870.684 458.242C863.034 467.634 852.04 471.854 847.403 473.383C851.826 471.97 863.157 467.807 870.684 458.242Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M864.496 413.331C862.851 419.076 860.436 425.586 856.86 432.549C851.598 442.808 845.276 451.183 839.54 457.66\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M830.158 437.968C828.994 438.928 826.955 440.87 825.85 443.77C824.851 446.395 825.059 448.643 825.303 449.922\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M819.722 438.386C818.465 439.683 816.878 441.626 815.72 444.198C814.438 447.045 814.185 449.571 814.204 451.268\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M817.188 430.014C814.596 432.098 811.439 435.074 808.65 439.017C805.469 443.532 803.946 447.693 803.175 450.712\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M794.54 488.399C789.861 495.088 784.895 499.443 781.099 502.243C778.331 504.273 775.941 505.672 774.871 508.464C773.303 512.54 776.365 514.856 775.442 518.913C774.944 521.092 773.222 524.072 767.558 527.219\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M801.509 496.432C799.252 498.161 796.45 500.675 793.972 504.046C791.325 507.63 789.963 510.936 789.212 513.398\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M834.835 482.67C834.038 482.854 831.986 483.401 830.334 484.918C828.799 486.316 828.423 487.784 828.319 488.411\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M891.273 493.034C888.024 495.874 884.643 499.244 881.434 503.188C873.801 512.58 870.1 521.611 868.207 528.415\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M920.99 439.347C919.133 442.481 916.08 446.599 911.108 450.687C908.314 452.971 905.523 454.758 903.02 456.153\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M911.225 430.313C911.591 429.548 912.696 427.568 915.473 426.169C917.214 425.297 918.903 424.994 919.94 424.878C920.019 421.826 920.797 415.063 926.845 408.474C930.087 404.943 933.801 402.613 936.58 401.165\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M972.796 369.231C968.024 370.925 965.997 372.988 965.024 374.463C962.189 378.757 965.822 381.767 962.698 386.489C961.23 388.701 960.175 388.429 956.488 392.238C953.873 394.939 952.188 397.363 951.194 398.958\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M965.172 396.51C965.258 397.264 965.338 399.047 964.057 400.986C962.726 402.996 960.688 404.04 959.836 404.416\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1010.16 391.858C1010.8 400.71 1014.62 404.744 1018.13 406.782C1021.86 408.947 1024.03 408.16 1027.78 410.605C1032.71 413.847 1032.84 417.776 1035.79 424.584C1037.22 427.884 1039.63 432.593 1043.81 438.091\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1009.92 417.925C1010.41 419.139 1011.11 420.964 1011.85 423.202C1013.07 426.896 1012.92 427.219 1013.56 428.231C1015.71 431.623 1019.76 431.605 1022.5 433.936C1024.59 435.716 1026.21 439.13 1023.63 446.291\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1029.22 457.353C1029.33 458.264 1029.87 461.187 1033.09 463.629C1035.16 465.202 1037.44 465.873 1038.67 466.162\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M863.414 195.489C864.181 194.256 864.944 192.747 865.714 191.046C865.454 191.188 865.167 191.286 864.895 191.385C864.434 192.764 863.959 194.133 863.414 195.489Z\",\n    fill: \"white\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M909.188 205.808C908.938 205.258 908.718 204.71 908.511 204.151C908.53 204.417 908.548 204.694 908.567 204.961C908.734 205.816 908.931 206.63 909.129 207.422C909.134 206.88 909.168 206.349 909.188 205.808Z\",\n    fill: \"white\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1163.76 232.395C1163.84 232.631 1164.91 233.735 1166.3 235.199C1165.82 234.037 1165.37 232.855 1164.98 231.642C1164.65 230.602 1164.33 229.551 1164.04 228.501C1163.96 230.71 1163.59 231.911 1163.76 232.405L1163.76 232.395Z\",\n    fill: \"white\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1200.58 212.184L1175.77 191.554C1143.19 187.59 1145.49 167.187 1143.04 166.451C1124.45 177.385 1131.04 185.679 1130.17 187.416C1102.24 204.91 1109.06 169.947 1107.11 160.849C1105.46 153.213 1079.95 161.053 1080.01 179.482C1063.61 183.051 1053.04 208.682 1031.74 197.401C1002.89 195.882 1005.22 200.913 988.874 216.64C996.903 223.664 1004.92 230.688 1012.95 237.712C1021.46 227.288 1037.82 224.383 1048.46 215.526C1049.14 215.736 1049.81 215.936 1050.48 216.147C1044.67 221.658 1037.49 227.757 1027.18 228.435C1022.63 232.04 1018.09 235.656 1013.54 239.261C1022.73 250.865 1011.61 267.801 1035.71 269.31C1037.97 270.348 1034.87 273.824 1027.35 271.857C1010.58 267.469 1017.33 249.766 1012.12 240.188C1008.4 233.362 985.287 221.784 979.031 209.511C972.89 214.105 972.579 206.162 971.738 205.558C962.037 198.589 943.653 204.508 940.491 190.131C941.178 197.742 941.879 205.354 942.566 212.966C909.502 225.097 920.342 242.691 905.092 221.915C904.108 219.334 903.111 216.753 902.127 214.173C887.602 217.537 878.851 226.473 867.47 233.379L864.624 235.235C858.768 243.106 848.366 246.172 837.762 248.712C837.492 248.878 837.222 249.044 836.925 249.199C833.308 251.141 829.182 251.964 824.826 252.268C820.591 254.478 816.277 256.612 812.174 258.91C810.532 259.835 808.903 260.771 807.287 261.728C805.463 264.117 804.184 267.001 803.698 270.608C803.247 270.834 802.809 271.062 802.386 271.28C800.438 274.842 795.076 277.825 788.791 280.22C783.2 284.532 778.716 287.706 764.281 289.541C762.302 305.692 739.541 312.055 730.72 324.964C733.27 354.359 709.547 361.464 704.866 368.908C702.697 374.84 694.467 363.502 694.467 363.502L685.377 377.52C860.159 317.412 1029.58 276.751 1204.37 216.642C1202.95 215.208 1201.69 213.722 1200.59 212.195L1200.58 212.184ZM839.571 277.205C840.238 286.077 828.718 293.017 819.233 297.236C826.509 290.093 834.888 286.072 839.571 277.205ZM791.364 317.338L815.023 299.013C815.225 299.529 815.414 300.045 815.616 300.561C803.322 311.797 791.028 323.043 778.734 334.279C782.939 328.635 787.159 322.982 791.364 317.338ZM733.433 359.941C733.596 361.131 733.745 362.311 733.907 363.502C731.549 368.686 711.266 374.788 733.433 359.941ZM740.548 355.302C744.032 346.588 747.502 337.863 750.985 329.149C765.338 320.111 768.651 305.239 783.716 296.202C777.035 305.075 770.355 313.939 763.674 322.812C743.326 333.019 756.04 342.514 740.548 355.302ZM817.394 316.817C807.383 324.146 797.372 331.485 787.361 338.814L782.469 352.162C770.616 370.783 774.31 353.843 787.361 338.814C787.92 336.999 788.493 335.174 789.051 333.359C805.735 323.557 826.586 303.656 817.394 316.817ZM855.729 270.058C846.896 284.088 839.965 298.833 822.671 308.539C818.731 307.596 829.918 301.203 830.676 300.419C839.032 290.299 847.373 280.178 855.729 270.058L860.443 259.729C873.2 239.242 880.971 237.872 855.729 270.058ZM956.38 245.563C955.728 235.5 951.582 226.226 947.131 216.762C955.647 224.814 959.463 235.755 956.38 245.563ZM934.975 260.484C938.717 266.181 937.799 272.237 937.346 278.288C939.867 286.823 946.52 289.336 947.544 290.99C953.879 301.218 929.399 290.067 934.975 260.484ZM956.262 247.575C959.816 246.477 957.983 259.688 962.487 269.639C967.788 276.506 973.076 283.373 978.377 290.24C961.372 278.328 954.249 264.763 956.262 247.575ZM975.353 271.894C978.634 274.273 981.915 276.643 985.196 279.022C995.336 291.781 983.004 286.024 975.353 271.894ZM1066.55 198.899C1053.85 217.179 1044.45 210.267 1067.44 195.417C1067.14 196.58 1066.85 197.735 1066.55 198.899ZM1147.66 204.071C1151.22 209.495 1154.78 214.91 1158.34 220.334C1165.71 239.677 1142.48 205.681 1147.66 204.071ZM1176.89 218.878C1169.64 210.383 1162.39 201.89 1155.13 193.396C1161.98 196.738 1181.71 217.782 1176.89 218.878Z\",\n    fill: \"#A68FC8\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M684.389 376.583C683.603 378.719 683.213 380.866 683.418 383.02C683.581 384.758 683.718 386.442 683.687 388.078C684.205 384.733 684.471 380.934 684.389 376.583Z\",\n    fill: \"white\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1067.43 195.412C1067.13 196.575 1066.85 197.73 1066.55 198.894C1053.85 217.174 1044.45 210.263 1067.43 195.412Z\",\n    fill: \"black\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1147.66 204.06C1151.21 209.484 1154.78 214.899 1158.33 220.322C1165.7 239.666 1142.48 205.67 1147.66 204.06Z\",\n    fill: \"black\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1155.13 193.388C1161.98 196.73 1181.7 217.773 1176.89 218.869C1169.63 210.375 1162.39 201.882 1155.13 193.388Z\",\n    fill: \"black\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M947.128 216.756C955.643 224.807 959.458 235.748 956.376 245.556C955.724 235.493 951.578 226.219 947.128 216.756Z\",\n    fill: \"black\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M956.258 247.57C959.812 246.472 957.98 259.683 962.483 269.633C967.784 276.501 973.072 283.367 978.373 290.234C961.369 278.322 954.246 264.758 956.258 247.57Z\",\n    fill: \"black\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M855.725 270.05L860.439 259.721C873.196 239.234 880.966 237.864 855.725 270.05Z\",\n    fill: \"black\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M934.971 260.482C938.713 266.18 937.809 272.235 937.342 278.286C939.863 286.821 946.516 289.334 947.54 290.988C953.874 301.215 929.396 290.065 934.971 260.482Z\",\n    fill: \"black\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M975.35 271.886C978.631 274.266 981.912 276.635 985.192 279.015C995.332 291.774 983.001 286.017 975.35 271.886Z\",\n    fill: \"black\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M855.725 270.053C846.893 284.082 839.963 298.827 822.669 308.533C818.729 307.59 829.916 301.197 830.674 300.413C839.029 290.293 847.37 280.173 855.725 270.053Z\",\n    fill: \"black\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M839.566 277.199C840.234 286.071 828.714 293.01 819.229 297.229C826.505 290.086 834.884 286.066 839.566 277.199Z\",\n    fill: \"black\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M783.712 296.2C777.032 305.073 770.352 313.937 763.671 322.81C743.324 333.017 756.037 342.512 740.546 355.3C744.029 346.586 747.499 337.861 750.982 329.147C765.335 320.109 768.648 305.237 783.712 296.2Z\",\n    fill: \"black\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M815.017 299.008C815.219 299.525 815.408 300.04 815.61 300.557C803.317 311.792 791.023 323.038 778.73 334.274C782.935 328.63 787.154 322.977 791.359 317.333L815.017 299.008Z\",\n    fill: \"black\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M787.356 338.812C787.915 336.996 788.488 335.172 789.046 333.356C805.729 323.555 826.579 303.654 817.388 316.815C807.377 324.144 797.366 331.483 787.356 338.812Z\",\n    fill: \"black\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M787.356 338.807L782.464 352.155C770.612 370.776 774.306 353.836 787.356 338.807Z\",\n    fill: \"black\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M733.429 359.935C733.591 361.125 733.741 362.305 733.903 363.495C731.545 368.68 711.264 374.781 733.429 359.935Z\",\n    fill: \"black\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M867.469 233.377C881.282 215.868 892.797 215.743 906.692 206.356C907.364 206.566 908.037 206.766 908.708 206.977C909.737 208.56 901.747 215.269 913.748 225.944C929.946 211.147 947.62 218.201 934.086 194.303C939.498 171.444 946.765 194.184 949.74 195.708C957.621 197.343 965.517 198.969 973.398 200.603C975.738 196.891 964.79 194.353 963.555 193.475C938.753 175.965 945.892 149.107 942.745 140.284C940.176 137.44 937.606 134.607 935.037 131.764C934.166 130.522 929.771 110.37 915.648 135.696C908.915 147.767 916.616 156.64 886.119 172.361C882.664 197.765 879.997 198.439 856.293 214.056C862.507 227.024 829.003 255.444 864.623 235.232C850.072 254.809 807.238 244.661 803.698 270.595C784.851 279.95 787.912 286.527 764.267 289.527C762.288 305.678 739.527 312.041 730.706 324.951C733.256 354.345 709.533 361.45 704.853 368.894C702.683 374.827 701.596 361.873 699.426 367.806C695.52 372.094 668.023 374.141 697.085 384.6C701.773 354.29 728.532 362.523 728.097 322.781C738.708 309.45 758.413 304.102 761.658 287.358C785.801 283.336 781.197 278.791 799.666 269.354C805.182 245.189 843.662 247.948 846.331 243.771C845.22 231.501 857.784 226.126 853.625 212.893C875.932 197.287 879.932 195.831 883.45 171.198C890.076 167.207 896.689 163.206 903.314 159.216C909.455 152.765 915.034 126.382 925.313 122.623C935.871 118.768 933.934 128.419 946.836 140.519C947.216 149.627 947.582 158.735 947.962 167.843C952.367 192.467 974.904 189.675 979.09 196.892C982.332 213.152 984.028 218.741 997.886 203.022C999.918 199.434 1001.96 195.856 1003.99 192.268C1005.16 191.013 1011.53 189.522 1020.66 176.569C1027.48 177.385 1039.37 179.604 1043.54 182.934C1054.28 184.854 1059.78 179.971 1057.18 172.108C1064.01 164.596 1070.83 157.074 1077.67 149.562C1071.75 157.126 1065.83 164.701 1059.91 172.265C1059.76 205.027 1015.74 162.394 1017.87 189.028C1014.61 190.183 1011.34 191.348 1008.08 192.503C1002.75 198.122 1011.79 194.251 1012.77 194.287C1024.57 195.3 1036.36 196.321 1048.17 197.334C1056.32 191.554 1066.32 187.263 1071.11 179.472C1084.86 180.758 1076.29 170.068 1085.11 162.61C1088.09 160.086 1106.38 151.375 1109.95 158.991C1110.84 160.89 1110.12 188.683 1118.37 190.268C1121.4 189.261 1124.41 188.263 1127.44 187.256C1128.22 186.12 1128.29 170.526 1138.41 163.658C1151.56 154.732 1141.88 183.837 1181.4 188.847C1196.81 206.14 1186.09 185.624 1184.13 177.394C1153.16 165.375 1168.56 141.062 1145.77 108.554C1130.28 86.4819 1130.61 101.685 1117.72 120.065C1103.74 125.035 1102.38 130.742 1094.92 135.411C1099.33 131.182 1101.9 122.93 1115.17 116.889C1130.41 86.8728 1139.25 86.5439 1154.84 117.153C1169.46 145.868 1159.13 164.597 1188.34 175.617C1196.86 193.724 1193.24 199.877 1193.67 201.163C1193.93 201.935 1205.3 212.867 1201.86 213.244C1193.16 206.01 1184.47 198.786 1175.77 191.552C1143.19 187.587 1145.48 167.184 1143.04 166.448C1124.45 177.382 1131.04 185.676 1130.17 187.413C1102.24 204.907 1109.06 169.944 1107.11 160.847C1105.46 153.211 1079.95 161.051 1080.01 179.479C1063.61 183.048 1053.04 208.679 1031.74 197.398C1002.89 195.879 1005.22 200.91 988.873 216.637C996.902 223.662 1004.92 230.685 1012.95 237.709C1021.46 227.285 1037.81 224.38 1048.46 215.523C1049.13 215.733 1049.81 215.934 1050.48 216.144C1044.67 221.655 1037.49 227.754 1027.18 228.432C1022.63 232.037 1018.09 235.653 1013.54 239.258C1022.73 250.862 1011.61 267.799 1035.71 269.307C1037.96 270.345 1034.89 273.823 1027.35 271.855C1010.58 267.467 1017.33 249.763 1012.12 240.186C1008.4 233.359 985.286 221.782 979.03 209.509C972.889 214.102 972.578 206.159 971.737 205.556C962.036 198.587 943.652 204.505 940.49 190.128C941.177 197.74 941.878 205.352 942.565 212.963C909.501 225.094 920.341 242.689 905.091 221.912C904.107 219.332 903.11 216.75 902.127 214.17C887.601 217.534 878.851 226.47 867.469 233.377Z\",\n    fill: \"black\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1077.67 149.56L1094.92 135.409C1102.38 130.74 1103.74 125.034 1117.72 120.063C1130.61 101.684 1130.28 86.4802 1145.77 108.552C1168.56 141.06 1153.16 165.373 1184.13 177.392C1186.09 185.622 1196.81 206.138 1181.4 188.845C1141.87 183.835 1151.55 154.73 1138.41 163.656C1128.29 170.524 1128.22 186.118 1127.44 187.255C1124.41 188.262 1121.4 189.259 1118.37 190.266C1110.12 188.681 1110.84 160.888 1109.95 158.99C1106.38 151.374 1088.09 160.084 1085.11 162.608C1076.29 170.066 1084.86 180.756 1071.11 179.47C1066.32 187.261 1056.32 191.552 1048.17 197.332C1036.36 196.32 1024.57 195.298 1012.77 194.286C1011.78 194.249 1002.74 198.121 1008.08 192.502C1011.34 191.346 1014.61 190.182 1017.87 189.026C1015.74 162.393 1059.75 205.026 1059.91 172.263C1065.83 164.699 1071.75 157.125 1077.67 149.56Z\",\n    fill: \"white\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M867.468 233.378C866.515 234 865.575 234.612 864.622 235.234C829.002 255.445 862.506 227.025 856.292 214.058C879.996 198.441 882.663 197.766 886.118 172.362C916.615 156.641 908.914 147.768 915.647 135.697C929.77 110.372 934.165 130.524 935.036 131.765C937.605 134.609 940.175 137.442 942.744 140.285C945.891 149.108 938.752 175.966 963.554 193.476C964.789 194.355 975.737 196.893 973.397 200.605C965.516 198.97 957.62 197.345 949.739 195.71C946.764 194.186 939.497 171.446 934.085 194.304C947.619 218.203 929.945 211.148 913.747 225.946C901.746 215.27 909.736 208.562 908.707 206.978C908.036 206.768 907.363 206.568 906.692 206.358C892.796 215.745 881.281 215.869 867.468 233.378Z\",\n    fill: \"white\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1510.33 141.731L1516.63 143.504C1514.41 191.638 1512.18 239.782 1509.96 287.916C1490.22 278.287 1496.86 276.572 1496.24 275.831C1489.12 267.304 1482.43 272.707 1481.23 260.521C1461.08 253.687 1484.7 239.45 1476.04 227.945C1473.7 234.077 1471.35 240.22 1469 246.352C1466.37 250.945 1457.07 255.626 1458.52 262.004C1446.19 267.949 1449.79 277.577 1447.93 280.842L1430.61 289.92C1426.38 293.33 1428.16 306.778 1406.96 278.618C1410.06 265.107 1400.58 263.839 1393.71 253.788C1397.69 242.715 1383.6 236.362 1391.85 227.154C1393.13 225.723 1406.95 220.363 1405.77 214.258C1398.78 218.494 1391.77 222.718 1384.78 226.954C1379.75 247.715 1341.07 265.768 1322.69 279.951C1314.71 266.903 1326.35 259.513 1314.83 243.047C1317.02 241.163 1319.64 238.388 1321.42 234.685C1326.08 225.003 1321.56 216.178 1320.08 213.574C1383.49 189.63 1446.9 165.675 1510.33 141.731ZM1422.06 194.518C1418.08 200.072 1414.11 205.638 1410.13 211.192C1415.08 212.842 1433.14 192.525 1422.06 194.518Z\",\n    fill: \"white\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1422.06 194.52C1433.14 192.527 1415.08 212.843 1410.13 211.193C1414.11 205.639 1418.07 200.074 1422.06 194.52Z\",\n    fill: \"black\"\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M615.998 513.583C629.093 510.031 637.671 505.372 643.008 501.866C657.177 492.56 657.767 485.304 671.499 480.207C681.329 476.562 684.883 478.842 696.032 475.905C705.493 473.408 716.956 468.066 727.771 455.996\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M697.689 490.934C702.687 485.834 710.069 479.409 720.484 473.271C733.113 465.836 745.396 461.644 754.231 459.247\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1192.21 326.877C1176.56 330.367 1170.05 335.553 1167.35 340.314C1164.18 345.902 1167.61 348.508 1164.55 356.045C1161.45 363.676 1157.09 363.074 1147.25 374.693C1147.25 374.693 1145.49 376.78 1133.22 395.103C1129.84 398.335 1126.29 402.115 1122.84 406.462C1118.89 411.422 1115.83 416.13 1113.47 420.337\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1131.66 346.8C1134.83 343.37 1139.62 338.966 1146.5 334.738C1154.46 329.839 1162.27 327.008 1167.89 325.36\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1183.69 317.482C1187.51 313.986 1191.34 310.49 1195.16 306.994\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1213.19 298.353C1220.71 292.611 1226.56 287.833 1230.31 284.697C1244.72 272.665 1249.24 267.487 1259.93 262.24C1266.72 258.913 1272.92 257.058 1276.78 256.062\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1346.63 284.649C1324.08 293.983 1319.25 301.725 1319.22 307.168C1319.2 311.782 1322.62 313.814 1322.09 319.732C1321.42 327.241 1315.29 331.224 1309.25 337.677C1303.79 343.508 1304.71 344.63 1293.84 365.533C1289.94 373.036 1284.02 384.032 1276.06 397.479\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1383.39 279.037C1384.08 294.462 1389.96 303.528 1395.52 309.034C1398.42 311.912 1403.41 315.977 1403.99 322.054C1404.47 327.139 1401.65 331.472 1399.11 334.398\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1398.49 351.029C1397.58 356 1396.66 360.961 1395.73 365.932\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1392.02 376.641L1391.75 384.118\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1377.28 355.419C1376.47 357.618 1375.65 359.807 1374.82 362.005\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1379.24 342.436C1384.78 337.203 1385.23 333.249 1385.03 331.128C1384.93 330.051 1384.6 328.681 1383.91 325.918C1383.18 322.974 1382.46 320.561 1381.94 318.931\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1462.3 292.648C1461.89 295.656 1461.97 299.996 1464.97 304.239C1466.4 306.246 1467.52 306.895 1468.72 308.64C1470.51 311.232 1471.87 315.428 1469.33 322.245\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1467.84 272.277C1467.62 273.068 1467.26 275.025 1468.39 277.289C1469.5 279.5 1471.45 280.778 1472.31 281.281\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1476.76 290.84C1476.7 293.145 1476.99 296.598 1479 300.334C1481.76 305.473 1484.88 305.764 1487.86 310.569C1491.83 316.965 1490.89 323.807 1490.64 325.629C1489.94 330.691 1487.83 333.439 1489.83 337.536C1490.86 339.649 1492.52 341.163 1493.73 342.08\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.4786 357.472C24.2727 385.156 23.8229 407.557 24.2065 422.973C24.9055 450.891 24.4699 448.511 22.2321 465.959C19.9007 484.191 19.837 499.197 22.6456 518.754C23.9879 528.126 26.44 535.718 28.3555 540.761L296.61 542.105C296.329 536.241 288.73 423.492 179.146 375.731C129.41 354.057 52.4696 355.292 28.4696 357.479L28.4786 357.472Z\",\n    fill: \"#7E7B74\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.67 510.912C230.134 507.673 223.102 507.712 211.181 504.994C203.736 503.299 205.174 502.985 198.893 501.706C186.947 499.272 179.647 499.974 169.566 499.558C162.358 499.26 154.826 497.99 139.77 495.443C113.217 490.956 113.39 488.821 99.9612 487.963C88.2731 487.217 75.0809 486.531 63.5961 493.232C61.1783 494.646 53.5639 499.088 50.9326 506.804C49.3201 511.523 50.5585 514.591 51.4898 523.565C52.2054 530.454 52.2793 536.413 52.1438 541.095L267.301 542.174C266.251 540.115 264.623 536.993 262.499 533.188C259.925 528.575 259.487 528.088 259.139 526.547C257.9 521.075 261.534 518.681 259.996 515.641C258.763 513.193 255.167 512.286 247.661 510.905L247.67 510.912Z\",\n    fill: \"black\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M213.447 354.702C211.275 352.241 208.368 350.545 205.168 349.872L192.961 347.302C194.522 345.369 175.85 347.217 175.85 347.217C175.85 347.217 169.295 348.035 166.723 347.171C164.991 346.59 158.691 342.724 156.628 341.445C156.188 341.172 155.715 340.968 155.214 340.845C153.105 340.329 147.006 338.914 142.422 338.654C134.923 338.228 130.043 337.636 126.47 337.357C121.844 336.99 122.273 337.373 112.285 337.286C97.3029 337.151 98.6649 336.314 93.8382 336.805C90.5056 337.147 80.0461 338.207 72.6182 344.488C69.53 347.093 66.9655 350.613 66.0598 351.855C65.468 352.659 63.4599 355.472 62.0328 358.407C59.812 362.988 59.6178 367.125 59.3275 375.196C59.0146 383.834 58.8237 389.554 58.751 391.846C65.7556 389.379 72.7692 386.913 79.7738 384.454C94.4883 395.513 105.914 397.429 113.561 397.191C128.82 396.708 140.102 387.288 154.612 388.518C156.154 388.653 160.744 389.154 163.844 386.921C166.422 385.06 166.933 382.06 166.98 379.925C166.523 384.127 166.712 389.676 169.584 395.426C174.759 405.78 185.952 412.789 186.385 412.462C186.799 412.151 180.507 402.598 171.41 401.671C166.648 401.184 165.161 403.477 158.18 403.165C152.65 402.914 151.405 401.376 146.343 400.769C139.957 400.005 135.719 401.709 129.343 403.409C119.169 406.129 118.579 404.849 103.845 407.568C81.9895 411.603 71.057 413.624 65.513 418.577C60.3019 423.233 59.1194 433.085 56.7541 452.781C55.01 467.312 56.1296 471.395 59.4457 473.577C64.3834 476.835 69.2352 472.61 80.2736 476.019C83.9167 477.142 88.0852 479.396 96.4131 483.888C104.404 488.2 104.136 488.624 106.386 489.002C111.958 489.948 115.185 487.649 124.682 488.623C124.845 488.639 125.979 488.794 128.229 489.111C140.069 490.761 146.048 491.59 148.489 491.938C155.829 492.976 159.495 493.495 159.849 493.556C165.675 494.519 166.167 494.813 168.369 494.771C172.972 494.675 174.185 493.307 179.24 493.116C181.886 493.017 183.375 493.316 186.332 493.689C186.332 493.689 192.429 494.451 202.3 494.643C210.458 494.803 226.887 492.242 231.177 483.392C234.575 476.374 228.974 468.243 226.774 465.059C224.546 461.829 223.356 461.45 217.248 455.661C213.641 452.245 206.171 445.121 200.08 436.876C196.324 431.786 188.877 420.555 191.078 419.199C192.71 418.199 199.885 422.455 203.801 428.321C206.644 432.577 206.726 436.118 207.189 438.472C210.426 454.925 242.218 465.173 259.54 481.592C262.178 484.092 263.99 486.267 265.271 489.022C267.484 493.782 266.409 496.592 267.744 502.67C268.309 505.429 269.388 508.981 271.603 512.823C282.352 531.464 309.886 539.548 312.924 536.404C315.496 533.744 300.863 522.715 304.745 518.441L326.63 518.551L338.721 523.148L365.908 518.747L361.012 489.501L346.918 477.355L320.844 474.887L325.446 458.661C325.883 457.12 325.55 455.454 324.551 454.182L311.032 436.979C308.866 434.222 305.817 432.293 302.409 431.523L293.662 429.547C291.354 429.026 289.194 427.969 287.359 426.463L273.705 415.254C271.839 413.723 269.509 412.879 267.11 412.867V412.867C260.499 412.834 255.531 406.703 256.886 400.251L260.066 385.107C261.114 380.118 259.541 374.906 255.893 371.278L251.613 367.021C248.78 364.203 244.958 362.61 240.987 362.59L228.598 362.528C225.79 362.514 223.033 361.712 220.639 360.214L217.319 358.135C216.073 357.355 214.945 356.399 213.972 355.296L213.447 354.702Z\",\n    fill: \"#7E7B74\"\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M131.738 338.895C94.5872 342.166 70.1416 330.275 63.4528 356.849C62.6069 364.559 61.761 372.276 60.9151 379.986C61.6784 391.819 65.8936 379.197 73.1478 379.674C78.6156 380.03 90.5544 391.949 103.162 393.267C122.555 395.298 133.668 382.771 153.842 383.813C159.41 380.801 156.025 373.331 162.361 372.28C158.565 350.493 164.857 347.335 131.738 338.895Z\",\n    fill: \"black\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M130.462 340.492C95.2304 343.561 72.049 332.397 65.7038 357.342C64.901 364.58 64.0983 371.824 63.2955 379.062C64.0185 390.169 68.0168 378.321 74.8961 378.769C80.0813 379.104 91.4022 390.292 103.359 391.53C121.749 393.438 132.289 381.679 151.42 382.658C156.7 379.831 153.491 372.819 159.5 371.833C155.902 351.38 161.869 348.417 130.462 340.492Z\",\n    fill: \"#939393\"\n  })), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M186.208 350.369C178.944 349.869 172.383 351.098 165.841 353.627C169.569 367.827 160.776 387.304 169.829 399.947C171.524 402.323 191.812 412.081 196.745 422.859C198.385 420.5 200.034 418.148 201.674 415.789C209.563 409.399 236.647 426.061 245.091 404.805L250.353 382.428C250.393 374.737 244.354 365.14 234.349 364.052C220.897 362.596 220.095 372.449 205.27 354.198C198.916 352.919 192.562 351.648 186.208 350.369ZM176.261 353.306C177.057 358.911 177.863 364.516 178.659 370.12C175.758 365.431 170.43 378.339 171.425 372.324C172.925 370.592 174.416 368.852 175.916 367.12C178.097 359.767 170.827 372.292 170.49 368.586C170.42 367.787 176.899 362.987 174.905 353.672C175.357 353.548 175.809 353.431 176.261 353.306ZM179.156 375.724C180.101 376.124 181.035 381.916 191.049 389.972C183.724 387.352 174.227 373.645 179.156 375.724ZM169.203 377.914C172.126 384.276 175.04 390.639 177.963 397.001C178.508 405.233 167.768 390.139 169.203 377.914ZM186.146 400.402C185.701 401.393 185.256 402.392 184.81 403.383C180.136 395.526 178.454 383.285 184.299 395.913C178.944 377.634 193.172 405.299 193.453 407.533C194.41 415.238 190.549 411.723 186.146 400.402ZM197.417 392.991C212.375 406.172 224.061 398.576 234.618 398.405C242.801 398.274 235.053 400.73 221.502 401.7C231.836 410.048 228.352 411.838 220.146 402.066C211.644 403.084 200.723 399.699 197.417 392.991ZM193.798 393.72C195.187 397.588 196.577 401.448 197.967 405.316C197.198 393.901 202.074 404.321 202.522 408.326C203.935 420.923 190.053 400.467 193.798 393.72Z\",\n    fill: \"black\"\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M176.262 353.305C175.809 353.43 175.357 353.547 174.905 353.672C176.899 362.986 170.421 367.786 170.491 368.585C170.828 372.291 178.098 359.766 175.917 367.119C174.417 368.851 172.926 370.591 171.426 372.324C170.431 378.338 175.758 365.43 178.659 370.12C177.863 364.515 177.058 358.91 176.262 353.305Z\",\n    fill: \"black\"\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M179.156 375.723C174.227 373.645 183.724 387.352 191.049 389.972C181.035 381.916 180.101 376.124 179.156 375.723Z\",\n    fill: \"black\"\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M169.203 377.914C167.768 390.139 178.507 405.233 177.962 397.001C175.04 390.639 172.126 384.277 169.203 377.914Z\",\n    fill: \"black\"\n  })), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M184.3 395.913C184.918 397.409 185.528 398.906 186.147 400.402C190.55 411.723 194.411 415.238 193.453 407.533C193.173 405.299 178.945 377.634 184.3 395.913Z\",\n    fill: \"black\"\n  })), _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M186.146 400.403C185.527 398.906 184.918 397.409 184.299 395.912C178.454 383.284 180.136 395.526 184.81 403.383C185.256 402.392 185.701 401.394 186.146 400.403Z\",\n    fill: \"black\"\n  })), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.417 392.991C200.723 399.698 211.643 403.084 220.145 402.066C228.351 411.838 231.836 410.048 221.502 401.699C235.053 400.729 242.8 398.274 234.618 398.405C224.06 398.576 212.374 406.172 197.417 392.991Z\",\n    fill: \"black\"\n  })), _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M193.798 393.719C190.054 400.466 203.935 420.923 202.522 408.325C202.074 404.32 197.198 393.9 197.967 405.315C196.577 401.447 195.188 397.587 193.798 393.719Z\",\n    fill: \"black\"\n  })), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.138 352.12C180.267 351.648 174.06 352.81 167.872 355.203C171.398 368.636 163.08 387.061 171.644 399.022C173.248 401.27 192.44 410.501 197.107 420.697C198.658 418.465 200.218 416.241 201.77 414.009C209.233 407.964 234.855 423.726 242.843 403.618L247.821 382.449C247.859 375.173 242.146 366.094 232.681 365.065C219.955 363.687 219.197 373.008 205.172 355.743C199.161 354.533 193.15 353.33 187.138 352.12ZM177.729 354.899C178.482 360.201 179.244 365.503 179.997 370.806C177.253 366.369 172.213 378.58 173.154 372.891C174.573 371.252 175.984 369.606 177.403 367.967C179.466 361.011 172.588 372.86 172.269 369.354C172.203 368.598 178.332 364.058 176.446 355.246C176.873 355.128 177.301 355.017 177.729 354.899ZM180.467 376.106C181.362 376.485 182.245 381.965 191.719 389.586C184.789 387.106 175.805 374.14 180.467 376.106ZM171.052 378.179C173.817 384.197 176.574 390.216 179.339 396.235C179.854 404.023 169.694 389.744 171.052 378.179ZM187.08 399.453C186.659 400.39 186.238 401.335 185.817 402.272C181.394 394.839 179.803 383.26 185.332 395.205C180.267 377.914 193.727 404.085 193.992 406.199C194.898 413.487 191.246 410.162 187.08 399.453ZM197.743 392.442C211.893 404.911 222.948 397.725 232.936 397.563C240.677 397.44 233.347 399.762 220.528 400.68C230.304 408.578 227.008 410.271 219.245 401.027C211.201 401.99 200.871 398.787 197.743 392.442ZM194.319 393.131C195.633 396.79 196.948 400.442 198.263 404.101C197.535 393.302 202.148 403.16 202.572 406.948C203.909 418.866 190.776 399.514 194.319 393.131Z\",\n    fill: \"#939393\"\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M177.729 354.899C177.301 355.017 176.873 355.128 176.445 355.246C178.332 364.058 172.203 368.598 172.269 369.354C172.588 372.86 179.465 361.011 177.402 367.967C175.983 369.606 174.573 371.252 173.154 372.891C172.213 378.58 177.253 366.369 179.997 370.806C179.243 365.503 178.482 360.201 177.729 354.899Z\",\n    fill: \"black\"\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M180.467 376.106C175.805 374.139 184.789 387.106 191.719 389.585C182.245 381.964 181.362 376.485 180.467 376.106Z\",\n    fill: \"black\"\n  })), _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M171.053 378.177C169.694 389.742 179.854 404.021 179.339 396.234C176.574 390.215 173.817 384.196 171.053 378.177Z\",\n    fill: \"black\"\n  })), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M185.333 395.203C185.918 396.619 186.495 398.035 187.081 399.451C191.246 410.161 194.898 413.485 193.992 406.197C193.727 404.083 180.268 377.912 185.333 395.203Z\",\n    fill: \"black\"\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.081 399.452C186.495 398.036 185.918 396.62 185.333 395.204C179.803 383.258 181.394 394.838 185.817 402.272C186.238 401.334 186.659 400.39 187.081 399.452Z\",\n    fill: \"black\"\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.743 392.442C200.87 398.788 211.201 401.99 219.244 401.028C227.008 410.272 230.304 408.579 220.528 400.681C233.347 399.763 240.677 397.44 232.935 397.564C222.948 397.726 211.893 404.912 197.743 392.442Z\",\n    fill: \"black\"\n  })), _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M194.319 393.132C190.777 399.514 203.909 418.867 202.572 406.949C202.148 403.16 197.536 393.303 198.263 404.102C196.948 400.443 195.634 396.791 194.319 393.132Z\",\n    fill: \"black\"\n  })), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.953 397.779C123.374 399.203 72.2929 407.545 60.3585 415.386C46.5814 424.433 51.3431 455.162 47.956 468.966C55.4004 469.92 62.8541 470.866 70.2984 471.819C79.5181 476.306 88.7281 480.784 97.9477 485.27L115.026 483.007C129.66 488.765 145.114 485.288 160.679 491.067C185.03 482.324 203.244 497.756 217.632 486.654C226.403 479.885 219.707 465.372 213.14 458.831C201.852 453.41 201.268 443.055 192.066 436.016C186.93 426.593 181.784 417.17 176.648 407.747C163.701 394.275 155.71 404.713 140.953 397.779Z\",\n    fill: \"black\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.048 417.209C242.666 420.477 224.842 424.279 206.673 417.683C188.621 444.566 238.002 464.82 258.826 480.674C266.622 469.31 281.219 474.663 282.303 469.59C286.851 472.817 296.835 467.803 309.517 472.714C311.133 467.367 312.759 462.029 314.376 456.682C315.607 446.039 306.995 448.192 300.167 436.075C284.102 435.494 272.568 425.414 261.048 417.209ZM229.478 436.467C240.33 438.097 259.158 457.078 281.262 452.409C281.419 452.783 281.567 453.157 281.724 453.531C260.793 457.601 253.594 447.969 237.67 440.989C232.359 438.662 216.865 434.574 229.478 436.467ZM230.448 444.686C232.603 450.171 234.767 455.663 236.922 461.148C232.622 463.031 228.431 447.454 230.448 444.686ZM237.752 451.444C245.027 463.877 248.182 473.228 241.021 463.782C239.72 462.066 236.066 453.706 237.752 451.444ZM249.54 452.25C266.212 484.101 247.29 462.387 248.189 453.363L249.54 452.25ZM245.008 452.227C252.768 463.983 251.743 472.028 248.289 466.059C247.192 461.446 246.105 456.84 245.008 452.227ZM254.996 454.518C268.221 472.193 260.266 470.159 256.411 461.619C255.939 459.249 255.467 456.887 254.996 454.518Z\",\n    fill: \"black\"\n  })), _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.477 436.467C216.865 434.575 232.358 438.662 237.669 440.989C253.593 447.969 260.792 457.601 281.723 453.532C281.566 453.158 281.418 452.784 281.261 452.409C259.157 457.078 240.329 438.098 229.477 436.467Z\",\n    fill: \"black\"\n  })), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M230.448 444.687C228.431 447.455 232.622 463.032 236.921 461.149C234.767 455.664 232.603 450.172 230.448 444.687Z\",\n    fill: \"black\"\n  })), _path92 || (_path92 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.751 451.444C236.065 453.706 239.719 462.066 241.019 463.783C248.181 473.228 245.026 463.877 237.751 451.444Z\",\n    fill: \"black\"\n  })), _path93 || (_path93 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M249.539 452.253L248.189 453.366C247.29 462.391 266.211 484.106 249.539 452.253Z\",\n    fill: \"black\"\n  })), _path94 || (_path94 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.008 452.229C246.104 456.843 247.192 461.448 248.288 466.062C251.743 472.031 252.767 463.986 245.008 452.229Z\",\n    fill: \"black\"\n  })), _path95 || (_path95 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.995 454.519C255.467 456.889 255.939 459.251 256.41 461.621C260.266 470.161 268.221 472.195 254.995 454.519Z\",\n    fill: \"black\"\n  })), _path96 || (_path96 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.369 418.759C243.033 421.842 226.223 425.427 209.088 419.207C192.063 444.56 238.634 463.662 258.274 478.614C265.626 467.896 279.393 472.944 280.415 468.16C284.704 471.203 294.12 466.475 306.08 471.106C307.605 466.064 309.138 461.029 310.663 455.987C311.824 445.949 303.703 447.979 297.262 436.552C282.112 436.004 271.234 426.498 260.369 418.759ZM230.595 436.922C240.83 438.459 258.586 456.36 279.433 451.957C279.581 452.31 279.721 452.662 279.869 453.015C260.129 456.853 253.339 447.769 238.321 441.186C233.312 438.992 218.7 435.137 230.595 436.922ZM231.511 444.674C233.543 449.846 235.583 455.026 237.615 460.199C233.561 461.974 229.608 447.284 231.511 444.674ZM238.398 451.047C245.26 462.772 248.235 471.591 241.481 462.683C240.255 461.064 236.808 453.18 238.398 451.047ZM249.516 451.807C265.239 481.846 247.394 461.367 248.242 452.857L249.516 451.807ZM245.242 451.785C252.56 462.872 251.594 470.46 248.336 464.83C247.302 460.48 246.276 456.136 245.242 451.785ZM254.661 453.945C267.134 470.615 259.632 468.697 255.996 460.643C255.551 458.408 255.106 456.18 254.661 453.945Z\",\n    fill: \"#939393\"\n  })), _path97 || (_path97 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M230.595 436.925C218.7 435.139 233.312 438.995 238.321 441.189C253.34 447.772 260.129 456.856 279.869 453.018C279.721 452.665 279.582 452.312 279.433 451.96C258.587 456.363 240.83 438.462 230.595 436.925Z\",\n    fill: \"black\"\n  })), _path98 || (_path98 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.51 444.673C229.608 447.284 233.56 461.975 237.615 460.199C235.583 455.026 233.542 449.846 231.51 444.673Z\",\n    fill: \"black\"\n  })), _path99 || (_path99 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.398 451.046C236.808 453.179 240.255 461.063 241.481 462.682C248.235 471.591 245.26 462.772 238.398 451.046Z\",\n    fill: \"black\"\n  })), _path100 || (_path100 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M249.517 451.806L248.243 452.856C247.395 461.367 265.24 481.847 249.517 451.806Z\",\n    fill: \"black\"\n  })), _path101 || (_path101 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.242 451.784C246.276 456.135 247.302 460.478 248.336 464.829C251.594 470.459 252.56 462.871 245.242 451.784Z\",\n    fill: \"black\"\n  })), _path102 || (_path102 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.661 453.945C255.106 456.18 255.551 458.408 255.996 460.643C259.632 468.698 267.134 470.616 254.661 453.945Z\",\n    fill: \"black\"\n  })), _path103 || (_path103 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M295.027 474.132C290.449 474.012 265.75 477.189 263.808 480.323C262.573 482.311 266.43 504.943 267.644 507.227C271.894 515.216 290.233 511.186 298.968 514.478C313.688 512.364 320.888 509.353 331.637 519.869C339.335 519.034 347.032 518.206 354.729 517.371C355.015 497.225 356.348 490.361 333.14 480.298C320.066 483.144 306.956 474.439 295.027 474.132ZM284.262 488.267C286.079 488.777 287.895 489.279 289.712 489.788C291.208 489.885 314.191 489.761 312.838 491.771C294.918 492.674 275.712 487.851 284.262 488.267ZM347.764 496.053L347.776 497.547C319.077 502.675 321.198 500.289 347.764 496.053ZM281.601 495.722C292.899 506.778 297.57 516.525 288.496 508.078L281.601 495.722ZM289.77 497.256C291.288 498.951 299.179 508.998 297.12 509.988C294.406 509.355 288.207 497.905 289.77 497.256ZM276.175 497.188C289.618 510.249 287.852 515.042 280.321 505.797C278.939 502.93 277.557 500.055 276.175 497.188ZM271.643 497.165C275.192 503.643 280.669 508.599 278.081 509.146C276.359 509.137 269.657 499.276 271.643 497.165ZM297.05 501.026C298.72 502.401 300.398 503.784 302.067 505.159C309.769 514.233 298.581 507.815 297.05 501.026ZM311.581 504.833C315.529 505.577 311.198 507.983 311.154 508.192C311.461 509.186 311.777 510.189 312.084 511.183C309.483 514.635 308.023 504.166 311.581 504.833Z\",\n    fill: \"black\"\n  })), _path104 || (_path104 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.261 488.267C275.712 487.851 294.918 492.674 312.838 491.771C314.19 489.762 291.207 489.885 289.711 489.788C287.895 489.279 286.078 488.777 284.261 488.267Z\",\n    fill: \"black\"\n  })), _path105 || (_path105 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M347.764 496.054C321.197 500.289 319.076 502.676 347.775 497.547L347.764 496.054Z\",\n    fill: \"black\"\n  })), _path106 || (_path106 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.601 495.72L288.495 508.077C297.569 516.524 292.898 506.778 281.601 495.72Z\",\n    fill: \"black\"\n  })), _path107 || (_path107 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M289.77 497.255C288.207 497.904 294.406 509.354 297.12 509.988C299.179 508.997 291.288 498.95 289.77 497.255Z\",\n    fill: \"black\"\n  })), _path108 || (_path108 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M276.175 497.188C277.557 500.055 278.939 502.93 280.321 505.797C287.852 515.043 289.618 510.25 276.175 497.188Z\",\n    fill: \"black\"\n  })), _path109 || (_path109 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.643 497.165C269.656 499.276 276.358 509.138 278.08 509.146C280.668 508.599 275.192 503.643 271.643 497.165Z\",\n    fill: \"black\"\n  })), _path110 || (_path110 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M297.049 501.025C298.579 507.814 309.768 514.233 302.066 505.158C300.397 503.783 298.718 502.4 297.049 501.025Z\",\n    fill: \"black\"\n  })), _path111 || (_path111 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M311.58 504.831C308.022 504.163 309.482 514.634 312.083 511.181C311.776 510.187 311.46 509.184 311.153 508.189C311.197 507.981 315.528 505.575 311.58 504.831Z\",\n    fill: \"black\"\n  })), _path112 || (_path112 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M296.018 475.572C291.584 475.456 267.662 478.533 265.781 481.569C264.584 483.494 268.32 505.414 269.496 507.626C273.612 515.364 291.375 511.461 299.836 514.65C314.093 512.602 321.066 509.686 331.478 519.871C338.933 519.062 346.388 518.261 353.843 517.452C354.121 497.939 355.412 491.291 332.933 481.544C320.271 484.301 307.573 475.869 296.018 475.572ZM285.592 489.263C287.351 489.756 289.111 490.242 290.87 490.736C292.319 490.83 314.58 490.71 313.27 492.656C295.913 493.531 277.311 488.86 285.592 489.263ZM347.098 496.804L347.109 498.251C319.313 503.218 321.366 500.906 347.098 496.804ZM283.015 496.483C293.957 507.192 298.482 516.632 289.692 508.451L283.015 496.483ZM290.927 497.969C292.397 499.611 300.04 509.342 298.046 510.301C295.417 509.687 289.413 498.598 290.927 497.969ZM277.759 497.903C290.78 510.554 289.069 515.196 281.775 506.241C280.436 503.464 279.098 500.68 277.759 497.903ZM273.37 497.881C276.807 504.155 282.112 508.955 279.606 509.485C277.938 509.477 271.446 499.926 273.37 497.881ZM297.978 501.621C299.595 502.953 301.221 504.292 302.837 505.623C310.297 514.413 299.46 508.196 297.978 501.621ZM312.052 505.308C315.876 506.029 311.681 508.358 311.639 508.561C311.936 509.524 312.242 510.495 312.539 511.458C310.02 514.802 308.606 504.661 312.052 505.308Z\",\n    fill: \"#939393\"\n  })), _path113 || (_path113 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M285.591 489.263C277.31 488.86 295.913 493.531 313.269 492.656C314.579 490.71 292.319 490.83 290.87 490.736C289.11 490.242 287.351 489.756 285.591 489.263Z\",\n    fill: \"#939393\"\n  })), _path114 || (_path114 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M347.098 496.806C321.366 500.908 319.312 503.219 347.109 498.252L347.098 496.806Z\",\n    fill: \"#939393\"\n  })), _path115 || (_path115 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M283.015 496.484L289.692 508.452C298.482 516.634 293.957 507.193 283.015 496.484Z\",\n    fill: \"#939393\"\n  })), _path116 || (_path116 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M290.927 497.97C289.413 498.599 295.416 509.689 298.046 510.302C300.04 509.343 292.397 499.612 290.927 497.97Z\",\n    fill: \"#939393\"\n  })), _path117 || (_path117 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M277.759 497.904C279.097 500.681 280.436 503.466 281.774 506.243C289.069 515.198 290.779 510.556 277.759 497.904Z\",\n    fill: \"#939393\"\n  })), _path118 || (_path118 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.37 497.881C271.446 499.926 277.938 509.478 279.606 509.486C282.112 508.956 276.807 504.155 273.37 497.881Z\",\n    fill: \"#939393\"\n  })), _path119 || (_path119 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M297.977 501.621C299.46 508.196 310.297 514.413 302.837 505.623C301.22 504.292 299.594 502.952 297.977 501.621Z\",\n    fill: \"#939393\"\n  })), _path120 || (_path120 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M312.051 505.309C308.605 504.662 310.019 514.803 312.539 511.46C312.241 510.496 311.935 509.525 311.638 508.562C311.68 508.359 315.876 506.03 312.051 505.309Z\",\n    fill: \"#939393\"\n  })), _path121 || (_path121 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M286.949 542.049L319.577 542.213C315.264 535.328 308.407 535.847 301.348 529.053C289.113 509.389 287.6 519.873 267.275 518.054C257.346 533.515 268.203 531.172 275.561 534.524C279.36 537.03 283.15 539.543 286.949 542.049Z\",\n    fill: \"#939393\"\n  })), _path122 || (_path122 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.7373 540.896L112.024 541.173C118.912 536.495 127.773 536.226 134.683 541.286L252.507 541.877C250.55 533.847 259.492 536.804 260.664 541.918C262.345 542.389 263.05 542.199 263.383 541.932C265.365 540.351 257.346 533.649 256.436 523.922C256.189 521.299 256.516 519.113 256.849 517.629C239.694 506.206 215.433 512.126 196.469 503.51L139.334 498.743C127.532 496.197 115.73 493.644 103.928 491.098C88.5089 489.535 62.6695 490.615 55.5414 503.924C48.5472 516.973 58.2917 527.603 56.7373 540.896Z\",\n    fill: \"#939393\"\n  })), _path123 || (_path123 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M252.507 541.878L260.664 541.919C259.491 536.805 250.55 533.848 252.507 541.878Z\",\n    fill: \"black\"\n  })), _path124 || (_path124 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M112.025 541.171L134.684 541.285C127.774 536.224 118.913 536.493 112.025 541.171Z\",\n    fill: \"black\"\n  })), _path125 || (_path125 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.415 399.467C123.641 400.824 74.8985 408.779 63.5104 416.257C50.364 424.884 54.9076 454.188 51.6755 467.352C58.779 468.261 65.8915 469.163 72.995 470.073C81.7925 474.351 90.5809 478.622 99.3784 482.9L115.675 480.741C129.639 486.233 144.386 482.917 159.238 488.428C182.474 480.091 199.854 494.807 213.583 484.219C221.953 477.764 215.563 463.924 209.297 457.687C198.526 452.518 197.968 442.643 189.188 435.93C184.287 426.944 179.377 417.958 174.476 408.972C162.122 396.125 154.496 406.079 140.415 399.467Z\",\n    fill: \"#939393\"\n  })), _path126 || (_path126 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.6476 516.811L1841.62 525.915L1844.24 861.019L28.2725 851.915L25.6476 516.811Z\",\n    fill: \"#718B34\"\n  })), _path127 || (_path127 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M610.887 473.709C615.206 474.448 645.4 479.482 678.313 477.097C721.53 473.973 721.828 461.52 767.808 454.019C781.123 451.845 821.754 446.255 868.594 454.791C892.345 459.122 898.566 463.593 926.826 468.094C954.86 472.557 978.586 472.899 994.242 472.503C995.762 465.359 999.452 455.394 1009.99 450.898C1024.4 444.756 1037.96 458.261 1063.49 457.411C1076.27 456.976 1089.23 450.676 1115.15 438.067C1147.66 422.263 1143.84 417.211 1162.56 407.683C1165.04 406.414 1171.63 403.188 1171.98 398.487C1172.18 395.782 1170.14 395.065 1170.02 391.361C1169.89 387.477 1172.1 386.784 1173.14 381.881C1174.29 376.459 1171.92 375.701 1173.46 373.15C1175.24 370.191 1179.33 369.68 1192.52 366.619C1208.96 362.8 1208.74 362.177 1212.63 362.192C1216.32 362.212 1224.71 362.832 1234.53 369.054C1246.3 363.795 1256.05 362.721 1264.07 363.692C1335.03 372.284 1349.26 549.674 1350.73 569.97C1173.03 564.329 995.321 559.039 817.611 554.12C661.112 549.792 504.603 545.74 348.069 541.975C344.915 536.856 340.781 531.062 335.397 524.976C329.116 517.876 322.618 512.089 316.797 507.512C341.444 498.109 366.077 488.706 390.724 479.304C399.031 480.922 410.625 482.462 424.48 482.153C436.154 481.888 445.99 480.392 453.408 478.816C466.057 476.261 478.705 473.706 491.354 471.151C495.33 468.488 499.305 465.826 503.281 463.164C505.722 456.79 510.251 454.845 511.915 454.254C512.804 453.939 514.292 453.513 520.503 453.2C525.14 452.97 529.197 452.755 534.677 453.081C539.988 453.391 547.601 454.244 557.247 456.782C573.357 461.024 575.134 464.7 591.128 469.395C598.551 471.573 604.15 472.539 610.916 473.699L610.887 473.709Z\",\n    fill: \"black\"\n  })), _path128 || (_path128 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1316.4 570.79L1441.94 570.79L1567.47 570.79C1584.25 553.999 1621.57 507.695 1611.53 494.099C1595.92 472.956 1404.69 506.489 1373.79 517.373C1332.01 532.074 1318.86 564.31 1316.4 570.79Z\",\n    fill: \"#409519\"\n  })), _path129 || (_path129 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1839.98 322.145C1845.44 361.746 1845.26 393.638 1844.05 415.549C1841.85 455.23 1836.63 456.614 1839.43 481.552C1842.35 507.609 1847.84 524.213 1842.69 551.892C1840.22 565.155 1836.1 575.83 1832.91 582.906L1552.13 616.37L1513.02 532.217C1513.69 523.889 1475.64 403.962 1648.48 341.641C1726.93 313.36 1802.64 317.812 1839.99 322.156L1839.98 322.145Z\",\n    fill: \"#7E7B74\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path130 || (_path130 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1536.23 530.442C1563.71 526.734 1574.68 527.151 1593.38 523.896C1605.07 521.867 1602.83 521.346 1612.68 519.85C1631.42 516.999 1642.78 518.374 1658.52 518.299C1669.77 518.246 1681.57 516.826 1705.16 513.975C1746.76 508.955 1746.58 505.909 1767.56 505.376C1785.82 504.915 1806.43 504.617 1824.08 514.739C1827.8 516.875 1839.5 523.586 1843.3 534.699C1845.63 541.495 1843.57 545.796 1841.77 558.514C1840.38 568.278 1842.74 580.109 1842.77 586.776L1519.3 583.232C1517.67 583.214 1516.08 582.758 1514.69 581.913V581.913C1510.47 579.335 1508.19 573.451 1509.36 568.62C1509.96 566.132 1510.79 563.549 1512.21 561.372C1516.41 554.941 1517.11 554.27 1517.72 552.097C1519.87 544.375 1514.29 540.783 1516.81 536.537C1518.83 533.118 1524.48 532.012 1536.24 530.432L1536.23 530.442Z\",\n    fill: \"black\"\n  })), _path131 || (_path131 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1661.6 292.035C1661.68 292.08 1662.04 292.281 1662.51 292.263C1666.74 292.042 1672.69 273.264 1666.77 266.664C1651.77 249.95 1544.2 295.811 1534.49 284.18C1532.13 281.349 1539.79 273.241 1555.11 257.014C1574.19 236.822 1582.21 234.061 1586.25 232.964C1589.53 232.078 1594.99 231.01 1618.63 234.051C1664.41 239.92 1684.74 249.151 1693.98 253.942C1705.7 260.016 1708.7 263.684 1709.74 267.148C1712.59 276.51 1701.41 284.88 1706 288.679C1707.06 289.559 1708.47 289.78 1717.26 289.614C1728.98 289.393 1736.61 288.802 1742.2 288.588C1749.43 288.304 1748.74 288.826 1764.33 289.215C1787.71 289.792 1785.62 288.532 1793.13 289.478C1798.31 290.135 1814.59 292.181 1825.92 301.497C1830.64 305.362 1834.5 310.501 1835.86 312.315C1836.76 313.489 1839.78 317.593 1841.89 321.842C1845.17 328.474 1845.31 334.369 1845.44 345.866C1845.59 358.172 1845.66 366.318 1845.68 369.583C1834.85 365.714 1824.01 361.845 1813.18 357.987C1789.79 372.964 1771.89 375.105 1759.97 374.374C1736.18 372.902 1718.96 358.922 1696.27 359.927C1693.86 360.039 1686.68 360.516 1681.93 357.182C1677.98 354.401 1677.31 350.107 1677.32 347.067C1677.86 353.068 1677.35 360.954 1672.64 368.986C1664.16 383.45 1646.42 392.846 1645.76 392.36C1645.12 391.895 1655.32 378.628 1669.55 377.776C1676.99 377.328 1679.22 380.666 1690.12 380.582C1698.76 380.507 1700.76 378.384 1708.68 377.78C1718.68 377.021 1725.22 379.662 1735.1 382.409C1750.86 386.8 1751.84 385.01 1774.71 389.634C1808.65 396.497 1825.62 399.933 1834.07 407.265C1842.02 414.156 1843.47 428.232 1846.38 456.374C1848.53 477.136 1846.62 482.887 1841.36 485.821C1833.53 490.203 1826.13 483.944 1808.77 488.226C1803.04 489.637 1796.45 492.629 1783.28 498.593C1770.65 504.317 1771.05 504.934 1767.52 505.355C1758.79 506.416 1753.85 502.98 1739 503.877C1738.74 503.891 1736.97 504.054 1733.44 504.39C1714.91 506.129 1705.55 507.002 1701.72 507.372C1690.23 508.471 1684.49 509.021 1683.94 509.09C1674.81 510.161 1674.03 510.553 1670.6 510.381C1663.42 510.008 1661.59 508 1653.71 507.468C1649.58 507.192 1647.25 507.54 1642.62 507.919C1642.62 507.919 1633.08 508.691 1617.67 508.456C1604.94 508.266 1579.41 503.779 1573.07 490.968C1568.05 480.81 1577.11 469.53 1580.67 465.112C1584.27 460.632 1586.14 460.153 1595.9 452.232C1601.66 447.558 1613.6 437.806 1623.43 426.389C1629.49 419.341 1641.55 403.745 1638.17 401.703C1635.66 400.197 1624.3 405.882 1617.96 414.028C1613.36 419.936 1613.09 424.969 1612.27 428.295C1606.57 451.535 1556.57 464.483 1528.9 486.952C1524.68 490.373 1521.77 493.374 1519.66 497.227C1516.02 503.886 1517.59 507.938 1515.26 516.517V516.517C1512.85 526.012 1506.07 532.174 1496.42 533.844L1490.09 534.939C1487.23 535.434 1484.34 535.683 1481.44 535.683L1465.88 535.683C1461.67 535.683 1457.47 535.408 1453.29 534.971C1449.28 534.55 1443.85 534.045 1438.58 533.759C1433.56 533.489 1429.13 533.246 1424.23 533.916C1409.54 535.913 1406.82 543.821 1390.76 549.043C1383.44 551.43 1383.13 550.071 1372.18 552.398C1341.7 558.881 1334.37 571.475 1323.79 568.453C1312.33 565.183 1315.81 548.908 1300.5 544.455C1297.42 543.56 1297.83 544.73 1286.88 543.442C1242.65 538.212 1247.97 534.673 1195.3 527.386C1105.96 515.031 1070.49 522.404 1066.07 512.242C1055.29 487.375 1258.49 422.47 1264 363.68C1264.39 359.577 1264.71 345.849 1277.1 338.768C1291.39 330.603 1314.65 335.345 1332.08 340.623C1332.4 332.647 1334.63 321.759 1345.01 315.206C1364.29 303.026 1392.76 317.824 1433.53 313.546C1466.96 310.049 1459.11 298.908 1502.41 288.215C1577.76 269.607 1657.09 289.611 1661.55 292.002L1661.6 292.035Z\",\n    fill: \"black\"\n  })), _path132 || (_path132 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M881.485 116.606C882.252 115.373 883.015 113.863 883.785 112.163C883.525 112.304 883.238 112.402 882.966 112.501C882.505 113.881 882.03 115.249 881.485 116.606Z\",\n    fill: \"white\"\n  })), _path133 || (_path133 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M927.258 126.924C927.009 126.374 926.788 125.826 926.582 125.267C926.601 125.533 926.619 125.81 926.638 126.077C926.805 126.932 927.002 127.746 927.199 128.538C927.205 127.996 927.238 127.465 927.258 126.924Z\",\n    fill: \"white\"\n  })), _path134 || (_path134 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M675.68 348.935C672.81 353.5 672.284 358.61 669.92 363.286C670.497 362.983 671.104 362.66 671.724 362.337C672.434 356.85 673.851 352.53 675.695 348.925L675.68 348.935Z\",\n    fill: \"white\"\n  })), _path135 || (_path135 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M690.201 331.879C694.127 327.855 697.76 323.3 700.034 316.443C699.745 316.998 699.399 317.552 699.011 318.105C698.295 319.126 697.454 320.059 696.529 320.958C695.084 324.894 692.845 328.456 690.201 331.879Z\",\n    fill: \"white\"\n  })), _path136 || (_path136 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1181.83 153.511C1181.91 153.747 1182.98 154.851 1184.37 156.315C1183.89 155.153 1183.44 153.971 1183.05 152.758C1182.72 151.718 1182.4 150.667 1182.11 149.617C1182.03 151.826 1181.66 153.028 1181.83 153.521L1181.83 153.511Z\",\n    fill: \"white\"\n  })), _path137 || (_path137 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M702.459 297.699C701.673 299.835 701.283 301.983 701.488 304.136C701.651 305.874 701.788 307.558 701.757 309.194C702.275 305.849 702.541 302.05 702.459 297.699Z\",\n    fill: \"white\"\n  })), _path138 || (_path138 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.474 453.21C536.237 458.42 542.029 455.639 544.436 456.016C566.138 459.459 597.435 475.38 595.295 478.19C591.727 478.971 588.16 479.763 584.592 480.545C583.896 480.227 582.503 469.513 579.284 470.825C588.434 497.857 551.885 476.513 563.497 476.757C565.279 486.526 566.911 475.929 570.529 478.02C571.527 478.601 571.865 488.36 574.81 477.078C579.799 487.788 578.756 472.884 576.418 471.807C575.304 471.297 574.197 476.795 569.192 475.855C565.04 473.26 560.889 470.655 556.737 468.06C542.233 464.81 527.714 461.57 513.21 458.321C525.006 465.97 521.507 464.882 526.732 475.716C523.586 458.338 529.39 461.416 531.662 476.387C523.516 478.495 517.117 470.765 505.027 469.253C508.159 460.974 509.039 456.65 520.474 453.21Z\",\n    fill: \"#939393\"\n  })), _path139 || (_path139 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M532.775 465.247C539.328 463.338 538.713 486.424 539.806 466.509C545.878 468.095 551.963 469.692 558.034 471.278C558.913 489.474 564.189 477.534 535.177 477.01C534.372 473.085 533.58 469.171 532.775 465.247Z\",\n    fill: \"#939393\"\n  })), _path140 || (_path140 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1264.06 363.7C1272.3 363.934 1267.72 368.759 1276.55 370.433C1282.09 371.484 1297.31 367.981 1318.59 382.257C1344.89 384.172 1351.64 381.758 1333.75 393.319C1327.15 378.417 1280.87 373.926 1269.59 386.716C1255.4 402.795 1277.17 402.689 1277.45 403.951C1278.33 407.889 1216.97 439.355 1212.88 447.309C1198.77 446.197 1184.65 445.095 1170.54 443.983C1152.45 445.448 1125.99 462.508 1110.83 470.467C1099.42 482.2 1079.82 503.718 1066.13 512.261C1056.05 516.941 1045.97 521.61 1035.89 526.29C999.332 534.781 1020.09 505.885 971.204 495.218L997.005 486.38C997.45 483.511 970.589 468.205 1020.63 479.075C1033.55 481.153 1037.37 473.372 1050.48 475.668C1074.86 464.876 1060.2 466.066 1063.67 463.283C1077.56 457.648 1091.44 452.023 1105.34 446.388C1125.09 435.805 1170.07 399.728 1179.27 398.511C1209.85 394.465 1252.21 432.932 1250.97 392.568C1243.55 384.905 1248.78 380.577 1248.61 379.743C1244.47 376.786 1240.33 373.841 1236.19 370.885L1264.06 363.7Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path141 || (_path141 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1204.55 365.21C1252.66 370.4 1241.71 383.551 1242.68 387.023C1243.59 390.228 1252.54 395.925 1242.6 408.817C1221.06 407.718 1210.48 398.2 1189.25 396.673C1175.98 395.723 1169.3 403.508 1173.36 386.122C1174.8 385.45 1176.23 384.789 1177.67 384.118C1169.58 367.026 1194.87 373.239 1204.55 365.21ZM1231.23 373.823L1218.16 383.022C1170.53 376.218 1203.29 386.545 1216.66 385.106C1219.91 384.751 1235.59 374.18 1231.23 373.823Z\",\n    fill: \"#939393\"\n  })), _path142 || (_path142 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1233.86 376.671C1238.22 377.028 1222.53 387.598 1219.29 387.953C1205.92 389.392 1173.16 379.065 1220.78 385.869L1233.86 376.671Z\",\n    fill: \"#939393\"\n  })), _path143 || (_path143 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1017.35 452.403C1029.74 450.904 1055.04 457.682 1058.13 459.938C1072.55 470.49 1037.74 472.896 1032.05 476.211C1021.25 474.842 1010.45 473.473 999.647 472.103C1000.79 463.662 1004.44 453.962 1017.35 452.403Z\",\n    fill: \"#939393\"\n  })), _path144 || (_path144 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M800.768 452.645C845.828 451.381 880.569 457.873 921.874 469.899C910.252 471.079 881.012 469.007 889.496 484.398C891.701 488.384 936.75 487.417 939.182 480.49C941.568 473.668 922.786 472.466 958.485 475.189C937.787 478.781 945.202 479.608 936.655 491.582C909.846 488.048 882.573 489.88 855.937 492.485C826.053 492.542 793.161 481.924 748.622 485.191C731.014 491.008 715.203 499.523 695.644 501.765C687.066 519.619 670.14 490.782 657.929 487.938C648.005 485.626 603.683 495.396 607.623 508.84C583.182 506.372 558.726 503.914 534.285 501.446C508.817 494.526 483.364 487.595 457.896 480.675C470.025 478.01 482.155 475.334 494.284 472.669C504.462 458.274 501.946 471.387 502.807 471.847C503.821 472.386 511.157 470.733 525.2 478.861C548.786 476.818 579.015 493.719 584.552 481.606C607.569 483.151 595.313 475.308 597.549 474.531C601.721 473.097 646.846 482.478 689.425 478.198C732.189 473.902 750.195 454.072 800.768 452.645Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path145 || (_path145 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M900.547 472.482C905.416 471.727 932.268 473.636 935.094 476.119C943.432 483.468 923.191 480.343 921.331 484.766C915.084 481.421 896.58 485.787 893.051 483.965C889.911 482.345 893.287 473.616 900.547 472.482ZM921.641 476.269C914.299 476.944 906.97 477.629 899.627 478.304C896.067 482.775 937.376 476.811 921.641 476.269Z\",\n    fill: \"#939393\"\n  })), _path146 || (_path146 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M975.453 475.671C987.145 473.717 993.645 485.66 992.034 486.773C982.032 489.329 972.031 491.873 962.03 494.429C941.981 495.37 929.067 485.021 951.638 488.287C930.067 475.055 961.076 480.591 968.228 479.719C970.641 478.374 973.04 477.017 975.453 475.671ZM986.532 482.364C977.257 484.409 967.983 486.443 958.708 488.487C959.847 490.624 998.51 483.469 986.532 482.364Z\",\n    fill: \"#939393\"\n  })), _path147 || (_path147 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M921.644 476.27C937.378 476.811 896.07 482.775 899.63 478.304C906.972 477.63 914.301 476.944 921.644 476.27Z\",\n    fill: \"black\"\n  })), _path148 || (_path148 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M986.535 482.361C998.512 483.466 959.849 490.621 958.71 488.483C967.985 486.439 977.26 484.405 986.535 482.361Z\",\n    fill: \"black\"\n  })), _path149 || (_path149 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M390.71 479.303C410.527 485.138 432.199 484.752 452.89 482.128C477.781 488.202 502.731 493.789 525.725 503.33C552.995 505.878 580.278 508.416 607.548 510.964C607.769 511.502 607.976 512.04 608.197 512.578C555.916 516.593 503.622 520.598 451.342 524.613C413.591 525.372 226.271 539.988 189.856 550.291C183.629 538.621 168.171 534.355 168.538 533.206C193.186 523.804 366.063 488.705 390.71 479.303Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path150 || (_path150 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M645.126 489.7C660.481 488.242 673.567 500.5 681.921 509.349C660.723 519.285 635.271 510.356 613.049 515.372C599.584 501.466 639.714 490.216 645.126 489.7ZM660.294 500.762C656.136 501.431 655.877 510.099 658.57 509.219C659.075 508.17 659.595 507.121 660.1 506.072C660.996 507.512 661.877 508.962 662.773 510.401C666.709 511.555 666.943 499.696 660.294 500.762Z\",\n    fill: \"#939393\"\n  })), _path151 || (_path151 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1001.42 559.333L909.342 561.947C877.062 562.863 844.794 560.654 812.991 555.35L799.217 553.053C828.575 550.997 874.958 538.304 904.073 531.057C917.709 532.507 931.33 533.956 944.965 535.405C958.21 534.367 971.469 533.318 984.714 532.279C1009.26 531.007 1031.91 535.977 1064.56 516.466C1099.81 523.642 1135.46 514.658 1170.77 515.223C1179.67 516.889 1188.58 518.566 1197.48 520.232C1227.03 524.408 1244.21 521.088 1212.73 529.17C1176.11 536.989 1139.5 544.82 1102.88 552.639C1083.4 552.119 1085.45 525.968 1043.6 547.769C1027.72 549.69 1011.57 548.52 1001.42 559.333Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path152 || (_path152 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M790.729 553.368L768.104 552.727C711.934 535.687 661.423 541.511 603.521 548.685L518.673 556.277L379.339 556.923L177.448 565.878L173.488 552.728C169.874 548.192 340.125 527.31 340.125 527.31C371.807 518.33 415.439 527.488 455.507 526.858L574.754 517.478C620.227 516.513 664.538 522.989 705.428 505.232C755.574 521.719 808.805 532.403 862.72 539.46C840.242 547.595 815.376 550.973 790.729 553.368Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path153 || (_path153 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M945.077 530.448C941.967 528.765 941.42 523.965 944.859 518.938C944.159 518.737 943.458 518.547 942.757 518.347C936.761 540.728 934.707 533.78 940.278 508.707C934.197 511.64 936.293 529.859 932.394 530.812C924.175 529.909 915.955 529.006 907.735 528.104C908.599 526.161 909.462 524.219 910.311 522.286C915.27 514.793 915.986 513.016 915.637 512.868C915.206 512.675 912.93 514.918 911.464 516.673C909.703 518.782 908.641 520.74 908.09 521.883C906.207 525.764 906.646 527.307 904.506 528.544C903.378 529.192 901.286 529.909 900.385 529.363C897.353 527.512 910.098 512.594 909.013 512.085C908.651 511.915 906.97 513.367 905.673 514.787C902.798 517.937 902.87 519.832 899.643 524.865C898.202 527.121 896.852 528.816 894.953 528.89C894.372 528.916 893.867 528.774 893.532 528.658C901.134 516.2 904.663 509.867 904.146 509.672C903.365 509.373 897.669 516.516 889.27 529.069C891.875 529.047 894.467 529.014 897.072 528.992C897.744 528.831 898.485 528.692 899.31 528.588C901.798 528.276 903.986 528.433 905.577 528.67C893.42 531.324 881.277 533.978 869.12 536.632C845.627 534.169 819.35 530.416 791.051 524.681C758.831 518.154 730.45 510.375 706.216 502.607C747.024 489.845 742.24 485.149 790.953 488.528C842.444 499.184 896.508 491.646 948.447 497.775C916.082 504.152 883.895 496.711 912.137 503.657C938.571 503.874 966.835 493.118 990.598 506.412C979.225 520.199 975.834 523.122 975.081 522.814C974.3 522.494 975.525 518.393 977.574 514.995C979.382 512.006 981.851 509.513 980.711 508.535C980.478 508.326 980.101 508.198 979.761 508.199C975.715 508.127 973.287 525.028 969.599 524.87C969.273 524.861 969.052 524.716 968.776 524.538C965.803 522.604 971.381 516.361 968.32 514.127C968.003 513.895 967.561 513.574 966.953 513.567C963.358 513.55 964.517 524.854 955.718 529.368C952.675 530.929 947.866 531.984 945.062 530.458L945.077 530.448ZM768.11 494.249C766.341 494.635 768.544 499.812 758.783 497.706C767.513 502.1 747.104 509.39 751.936 510.803C759.879 505.69 765.215 499.111 766.997 505.382C752.083 520.759 772.805 501.75 773.989 507.706C774.158 508.519 764.169 517.327 777.505 508.338C772.74 519.845 781.04 509.235 781.709 509.52L781.554 513.768C783.377 514.235 787.401 509.851 789.389 512.396C789.85 512.972 784.395 519.314 792.905 513.027C815.414 516.865 822.28 513.338 795.811 510.983C794.766 510.507 802.481 503.123 793.941 504.019C797.85 510.583 785.548 513.711 791.84 503.427C789.627 502.78 780.432 515.427 787.636 502.245C770.149 514.806 786.481 498.97 780.643 499.921C776.224 507.376 772.315 507.053 773.612 498.658C761.578 508.014 772.448 493.288 768.11 494.249ZM887.841 510.401C859.504 548.044 890.121 515.824 889.904 512.054L887.841 510.401ZM893.42 512.685C878.006 534.396 883.093 536.581 895.522 513.276C894.821 513.076 894.121 512.886 893.42 512.685Z\",\n    fill: \"#939393\"\n  })), _path154 || (_path154 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M992.676 508.055C993.914 507.899 1007.77 517.01 992.134 522.925C988.761 521.107 1000.54 512.254 993.936 512.344C973.645 537.755 989.662 508.427 992.676 508.055Z\",\n    fill: \"#939393\"\n  })), _path155 || (_path155 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1323.83 568.474L1107.48 562.344C1108.08 559.406 1100.68 557.388 1104.21 554.809C1128.43 550.53 1152.65 546.262 1176.87 541.982C1197.84 536.548 1218.79 531.124 1239.75 525.689C1269.89 543.927 1311.45 537.194 1346.99 535.107C1429.74 550.657 1386.06 532.174 1323.83 568.474Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path156 || (_path156 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M705.021 543.056C728.208 543.703 762.565 551.956 785.767 551.848V551.848L821.001 555.355L856.292 561.43L894.673 562.692L948.329 561.003L1109.27 554.498L1199 536.325L1238.37 524.625L1266.75 536.011L1309.64 539.172L1349.2 535.629L1390.91 543.115L1355.97 552.876L1325.59 566.454L1316.75 571.774L1163.47 577.764L1085.59 582.444L1027.52 586.552L982.285 593.481L901.985 604.411L842.032 610.448L770.575 616.538L677.259 616.971L520.35 603.301L369.002 580.964L211.605 565.877L372.958 557.431L425.368 557.188L519.323 556.753L613.97 548.355C638.137 544.799 676.274 542.253 705.021 543.056Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path157 || (_path157 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1595.7 235.945C1630.63 232.884 1699.44 250.857 1702.69 271.406C1701.51 277.752 1700.35 284.098 1699.17 290.444L1675.31 304.122C1649.39 299.613 1619.88 298.351 1597.23 310.415C1582.84 303.979 1568.44 297.553 1554.05 291.117C1547.24 288.627 1531.53 286.449 1534.49 284.183C1558.04 272.634 1561.84 238.909 1595.7 235.945ZM1674.15 258.37C1667.66 258.484 1623.18 287.781 1676.25 258.961C1675.55 258.76 1674.85 258.57 1674.15 258.37ZM1689.63 260.935C1674.05 287.85 1684.08 301.436 1684.04 278.32C1687.88 273.304 1693.38 266.017 1689.63 260.935ZM1678.16 264.863C1670.7 265.97 1670 304.237 1675.32 284.452L1675.71 273.831C1675.84 273.324 1684.67 263.899 1678.16 264.863ZM1589 264.463C1593.65 266.009 1598.33 267.566 1602.98 269.112C1600.98 264.133 1615.09 273.931 1615.79 267.348C1624.02 267.762 1632.28 268.166 1640.51 268.581C1623.34 267.211 1606.17 265.832 1589 264.463ZM1666.77 266.666L1661.6 292.038C1667.29 295.038 1668.59 267.505 1666.77 266.666ZM1658.17 269.612C1653.42 270.701 1644.78 301.959 1653.92 289.162C1652.84 278.882 1662.91 268.535 1658.17 269.612ZM1632.6 272.078L1621.94 273.37C1627.11 273.868 1632.28 274.376 1637.45 274.873C1630.88 281.183 1624.23 297.922 1628.88 296.427C1631.56 289.4 1636.26 276.041 1643.15 273.971L1632.6 272.078ZM1648.16 272.518C1644.38 278.972 1640.61 285.414 1636.83 291.868C1633.31 304.303 1647 284.734 1648.16 272.518Z\",\n    fill: \"#939393\"\n  })), _path158 || (_path158 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1674.15 258.371C1674.85 258.571 1675.55 258.761 1676.25 258.962C1623.18 287.781 1667.66 258.484 1674.15 258.371Z\",\n    fill: \"#939393\"\n  })), _path159 || (_path159 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1689.63 260.934C1693.38 266.016 1687.87 273.303 1684.04 278.319C1684.07 301.434 1674.05 287.85 1689.63 260.934Z\",\n    fill: \"#939393\"\n  })), _path160 || (_path160 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1678.16 264.86C1684.66 263.896 1675.84 273.321 1675.71 273.828L1675.32 284.449C1670 304.234 1670.7 265.967 1678.16 264.86Z\",\n    fill: \"#939393\"\n  })), _path161 || (_path161 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1589 264.459C1606.17 265.829 1623.33 267.208 1640.51 268.577C1632.27 268.163 1624.02 267.759 1615.78 267.345C1615.09 273.928 1600.98 264.129 1602.98 269.109C1598.32 267.563 1593.65 266.006 1589 264.459Z\",\n    fill: \"#939393\"\n  })), _path162 || (_path162 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1666.77 266.667C1668.59 267.505 1667.29 295.037 1661.6 292.037L1666.77 266.667Z\",\n    fill: \"#939393\"\n  })), _path163 || (_path163 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1658.17 269.612C1662.91 268.535 1652.84 278.881 1653.92 289.161C1644.78 301.959 1653.42 270.7 1658.17 269.612Z\",\n    fill: \"#939393\"\n  })), _path164 || (_path164 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1632.6 272.079L1643.15 273.972C1636.26 276.042 1631.56 289.401 1628.88 296.427C1624.23 297.922 1630.88 281.184 1637.45 274.874C1632.27 274.377 1627.11 273.869 1621.94 273.371L1632.6 272.079Z\",\n    fill: \"#939393\"\n  })), _path165 || (_path165 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1648.15 272.518C1647 284.734 1633.31 304.303 1636.83 291.867C1640.61 285.414 1644.38 278.971 1648.15 272.518Z\",\n    fill: \"#939393\"\n  })), _path166 || (_path166 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1723.9 291.67C1781.72 298.232 1820.33 282.569 1829.71 320.718C1830.73 331.73 1831.74 342.752 1832.75 353.764C1831.09 370.559 1825.02 352.386 1813.68 352.692C1805.14 352.918 1786.04 369.261 1766.32 370.489C1735.99 372.383 1719.15 353.99 1687.64 354.437C1679.07 349.867 1684.65 339.414 1674.8 337.593C1681.59 306.792 1671.9 301.978 1723.9 291.67Z\",\n    fill: \"#939393\"\n  })), _path167 || (_path167 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1524.36 290.274C1535.08 287.218 1583.94 304.444 1583.78 310.564C1581.55 313.51 1579.32 316.466 1577.09 319.412C1546.75 316.66 1533.13 330.064 1530.63 351.056C1510.85 340.958 1490.19 331.463 1467.13 326.397C1475.37 292.139 1488.85 299.273 1524.36 290.274ZM1526.06 321.156C1523.84 323.985 1509.89 338.443 1512.64 339.914C1517.2 336.609 1528.3 341.017 1529.11 334.533C1529.61 330.624 1523.42 338.869 1525.71 330.715C1517.02 333.892 1529.8 322.697 1526.06 321.156Z\",\n    fill: \"#939393\"\n  })), _path168 || (_path168 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1468.67 303.579C1469.37 303.78 1470.07 303.97 1470.77 304.17C1468.21 309.414 1465.67 314.658 1463.12 319.902C1461.75 320.852 1436.77 316.71 1468.67 303.579Z\",\n    fill: \"#939393\"\n  })), _path169 || (_path169 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1352.25 313.041C1361.25 312.02 1398.02 318.782 1400.13 319.714C1408.01 323.18 1396.45 325.67 1398.75 338.281C1382.81 342.55 1347.48 364.218 1336.26 343.953C1330.77 334.048 1335.63 314.941 1352.25 313.041ZM1395.78 322.78C1389.48 327.206 1383.18 331.641 1376.89 336.067C1335.73 327.437 1334.67 330.416 1376.81 338.191C1385.38 332.905 1401.6 322.158 1395.78 322.78Z\",\n    fill: \"#939393\"\n  })), _path170 || (_path170 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1445.5 317.804C1458.43 327.559 1442.23 321.731 1425.39 325.74C1410.5 329.284 1399.7 344.448 1403.3 329.899C1406.54 316.775 1432.53 318.723 1445.5 317.804Z\",\n    fill: \"#939393\"\n  })), _path171 || (_path171 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1451.12 319.03C1454.39 319.835 1457.67 320.63 1460.94 321.434C1467.96 328.268 1444.78 321.327 1451.12 319.03Z\",\n    fill: \"#939393\"\n  })), _path172 || (_path172 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1526.06 321.151C1529.8 322.692 1517.02 333.887 1525.72 330.71C1523.42 338.863 1529.61 330.618 1529.11 334.527C1528.3 341.011 1517.21 336.603 1512.64 339.908C1509.89 338.438 1523.84 323.98 1526.06 321.151Z\",\n    fill: \"#939393\"\n  })), _path173 || (_path173 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1395.78 322.775C1401.6 322.154 1385.38 332.901 1376.81 338.186C1334.67 330.411 1335.73 327.432 1376.89 336.062C1383.18 331.637 1389.48 327.201 1395.78 322.775Z\",\n    fill: \"#939393\"\n  })), _path174 || (_path174 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1433.84 327.043L1450.81 327.524C1467.99 329.244 1517.71 349.579 1532.47 359.077C1535.47 372.006 1535.63 388.193 1550.91 396.813C1539.42 394.892 1527.93 392.972 1516.44 391.051C1505.35 397.467 1494.27 403.894 1483.18 410.311C1472.23 412.839 1461.3 415.358 1450.35 417.886C1441.28 387.689 1381.25 409.772 1343.65 393.598C1340.67 390.047 1364 377.152 1372.1 370.481C1386.53 358.589 1412.16 329.193 1433.84 327.043ZM1398.82 355.821C1407.65 359.262 1416.5 362.702 1425.34 366.142C1434.64 369.999 1431.61 376.314 1445.75 369.378C1431.42 372.96 1423.36 358.781 1398.82 355.821ZM1518.67 368.786C1511.91 380.876 1509.73 394.976 1515.87 387.314C1516.54 386.482 1521.95 367.359 1518.67 368.786ZM1479 369.789C1464.89 391.664 1466.63 405.302 1474.71 390.4C1476.13 383.53 1477.57 376.66 1479 369.789ZM1529.9 371.231C1519.27 382.53 1519.78 394.676 1527.45 380.199C1528.27 377.214 1529.09 374.217 1529.9 371.231ZM1481.75 371.993C1478.11 382.937 1473.88 394.098 1480.4 389.499C1481.34 388.834 1485.38 370.597 1481.75 371.993ZM1441.96 376.182C1430.53 390.403 1434.09 405.921 1439.28 391.523C1440.17 386.413 1441.06 381.292 1441.96 376.182ZM1456.07 396.784C1457.22 397.528 1458.38 398.263 1459.53 399.008C1471.87 377.242 1470.26 370.296 1456.07 396.784C1459.85 368.396 1455.73 374.563 1446.15 397.034C1447.31 397.598 1448.48 398.163 1449.63 398.727C1453.44 390.606 1452.85 397.383 1453.91 397.786C1454.63 397.455 1455.35 397.114 1456.07 396.784ZM1448.91 379.569C1435.95 401.2 1438.88 406.95 1446.23 394.91C1447.12 389.8 1448.02 384.679 1448.91 379.569Z\",\n    fill: \"#939393\"\n  })), _path175 || (_path175 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1293.34 336.889C1306.28 338.138 1319.2 339.397 1332.13 340.646C1332.55 342.072 1332.98 343.509 1333.39 344.935C1349.87 360.426 1331.83 356.268 1341.25 381.839C1316.94 384.042 1310.56 372.581 1299.21 370.016C1268.86 363.149 1264.45 376.261 1278.28 342.31C1283.3 340.507 1288.32 338.693 1293.34 336.889ZM1298.57 348.733C1280.54 358.992 1283.46 362.361 1298.5 350.857C1337.34 354.818 1340.59 351.104 1298.57 348.733Z\",\n    fill: \"#939393\"\n  })), _path176 || (_path176 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1393.66 341.856L1395.73 343.509C1379.71 356.835 1366.98 372.73 1346.87 383.059C1329.08 347.511 1354.68 357.38 1374.93 350.894C1381.17 347.881 1387.42 344.869 1393.66 341.856Z\",\n    fill: \"#939393\"\n  })), _path177 || (_path177 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1298.57 348.73C1340.58 351.1 1337.34 354.814 1298.5 350.854C1283.46 362.357 1280.54 358.989 1298.57 348.73Z\",\n    fill: \"#939393\"\n  })), _path178 || (_path178 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1398.82 355.821C1423.35 358.781 1431.42 372.958 1445.74 369.377C1431.6 376.313 1434.64 369.998 1425.34 366.141C1416.5 362.701 1407.65 359.261 1398.82 355.821Z\",\n    fill: \"#939393\"\n  })), _path179 || (_path179 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1638.47 305.195C1649.82 304.857 1660.01 306.943 1670.12 310.876C1663.74 330.886 1676.68 359.046 1662.06 376.568C1659.32 379.861 1627.29 392.701 1619.16 407.782C1616.7 404.341 1614.22 400.911 1611.75 397.471C1599.7 387.975 1556.79 410.289 1544.46 379.616L1537.14 347.511C1537.38 336.567 1547.18 323.224 1562.83 322.19C1583.87 320.808 1584.73 334.867 1608.58 309.664C1618.55 308.171 1628.51 306.688 1638.47 305.195ZM1653.87 309.884C1652.41 317.817 1650.93 325.749 1649.47 333.682C1654.18 327.16 1661.98 345.796 1660.66 337.189C1658.39 334.647 1656.14 332.095 1653.86 329.554C1650.75 318.982 1661.6 337.173 1662.27 331.918C1662.41 330.785 1652.49 323.625 1655.97 310.475C1655.27 310.275 1654.57 310.085 1653.87 309.884ZM1648.47 341.628C1646.98 342.149 1645.29 350.342 1629.35 361.288C1640.88 357.936 1656.24 338.924 1648.47 341.628ZM1663.91 345.255C1659.1 354.156 1654.3 363.058 1649.49 371.959C1648.31 383.643 1665.66 362.721 1663.91 345.255ZM1636.59 376.378C1637.24 377.811 1637.9 379.254 1638.55 380.687C1646.16 369.749 1649.27 352.421 1639.65 370.085C1648.72 344.357 1625.43 382.984 1624.91 386.148C1623.11 397.059 1629.27 392.258 1636.59 376.378ZM1619.3 365.256C1595.44 383.24 1577.51 371.834 1561.05 371.048C1548.29 370.442 1560.28 374.333 1581.38 376.409C1564.93 387.755 1570.29 390.48 1583.48 377C1596.7 378.884 1613.87 374.629 1619.3 365.256ZM1624.92 366.478C1622.59 371.91 1620.27 377.33 1617.95 382.761C1619.6 366.562 1611.58 381.135 1610.73 386.809C1608.02 404.659 1630.49 376.269 1624.92 366.478Z\",\n    fill: \"#939393\"\n  })), _path180 || (_path180 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1653.87 309.882C1654.57 310.083 1655.27 310.273 1655.97 310.474C1652.49 323.623 1662.41 330.783 1662.27 331.916C1661.6 337.171 1650.75 318.98 1653.86 329.552C1656.13 332.093 1658.39 334.645 1660.66 337.187C1661.98 345.794 1654.18 327.158 1649.47 333.68C1650.93 325.747 1652.41 317.815 1653.87 309.882Z\",\n    fill: \"#939393\"\n  })), _path181 || (_path181 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1648.47 341.631C1656.24 338.928 1640.88 357.939 1629.35 361.291C1645.29 350.345 1646.98 342.153 1648.47 341.631Z\",\n    fill: \"#939393\"\n  })), _path182 || (_path182 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1663.91 345.255C1665.66 362.721 1648.31 383.642 1649.49 371.959C1654.3 363.058 1659.1 354.156 1663.91 345.255Z\",\n    fill: \"#939393\"\n  })), _path183 || (_path183 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1639.65 370.088C1638.62 372.185 1637.61 374.283 1636.59 376.38C1629.27 392.259 1623.11 397.061 1624.91 386.15C1625.43 382.986 1648.72 344.36 1639.65 370.088Z\",\n    fill: \"#939393\"\n  })), _path184 || (_path184 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1636.59 376.377C1637.61 374.279 1638.62 372.181 1639.65 370.084C1649.27 352.42 1646.16 369.747 1638.55 380.685C1637.9 379.253 1637.24 377.809 1636.59 376.377Z\",\n    fill: \"#939393\"\n  })), _path185 || (_path185 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1619.3 365.256C1613.87 374.629 1596.7 378.885 1583.48 377C1570.29 390.481 1564.93 387.756 1581.38 376.409C1560.28 374.334 1548.29 370.443 1561.05 371.049C1577.51 371.834 1595.44 383.24 1619.3 365.256Z\",\n    fill: \"#939393\"\n  })), _path186 || (_path186 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1624.91 366.477C1630.49 376.268 1608.02 404.657 1610.73 386.808C1611.58 381.133 1619.6 366.561 1617.95 382.76C1620.27 377.329 1622.59 371.908 1624.91 366.477Z\",\n    fill: \"#939393\"\n  })), _path187 || (_path187 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1518.67 368.788C1521.95 367.36 1516.54 386.483 1515.87 387.315C1509.73 394.977 1511.91 380.876 1518.67 368.788Z\",\n    fill: \"#939393\"\n  })), _path188 || (_path188 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1478.99 369.79C1477.57 376.661 1476.13 383.531 1474.7 390.402C1466.63 405.302 1464.89 391.665 1478.99 369.79Z\",\n    fill: \"#939393\"\n  })), _path189 || (_path189 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1529.9 371.234C1529.09 374.22 1528.27 377.216 1527.45 380.202C1519.78 394.679 1519.27 382.533 1529.9 371.234Z\",\n    fill: \"#939393\"\n  })), _path190 || (_path190 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1481.74 371.998C1485.38 370.601 1481.34 388.838 1480.4 389.502C1473.88 394.102 1478.1 382.941 1481.74 371.998Z\",\n    fill: \"#939393\"\n  })), _path191 || (_path191 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1703.68 380.411C1729.79 383.203 1805.51 397.023 1822.98 408.246C1843.15 421.193 1834.9 462.649 1839.42 481.543C1828.3 482.472 1817.17 483.39 1806.05 484.319C1792.16 489.954 1778.28 495.579 1764.39 501.214L1739.05 497.306C1717.05 504.402 1694.18 498.927 1670.79 506.004C1634.87 492.951 1607.17 512.995 1586.18 497.227C1573.38 487.615 1583.89 468.253 1593.91 459.702C1610.92 452.9 1612.18 438.88 1626.15 429.781C1634.15 417.249 1642.16 404.717 1650.16 392.185C1669.95 374.543 1681.45 389.095 1703.68 380.411Z\",\n    fill: \"#939393\"\n  })), _path192 || (_path192 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1441.96 376.186C1441.06 381.296 1440.17 386.416 1439.27 391.526C1434.09 405.924 1430.53 390.407 1441.96 376.186Z\",\n    fill: \"#939393\"\n  })), _path193 || (_path193 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1456.07 396.785C1455.35 397.116 1454.63 397.457 1453.91 397.787C1452.85 397.385 1453.43 390.608 1449.63 398.729C1448.47 398.165 1447.31 397.6 1446.15 397.036C1455.73 374.565 1459.85 368.398 1456.07 396.785Z\",\n    fill: \"#939393\"\n  })), _path194 || (_path194 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1456.07 396.785C1470.26 370.298 1471.87 377.244 1459.53 399.01C1458.38 398.265 1457.22 397.53 1456.07 396.785Z\",\n    fill: \"#939393\"\n  })), _path195 || (_path195 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1448.91 379.575C1448.02 384.685 1447.12 389.805 1446.23 394.915C1438.88 406.955 1435.95 401.205 1448.91 379.575Z\",\n    fill: \"#939393\"\n  })), _path196 || (_path196 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1294.71 396.465C1296.21 395.731 1308.29 383.815 1301.5 384.962C1299.52 385.299 1300.39 397.572 1277.76 395.453C1280.46 398.379 1286.68 396.897 1291.84 397.447C1285.18 398.79 1281.81 403.16 1271.22 400.053C1262.92 397.616 1273.33 383.728 1284.65 381.295C1300.57 377.865 1337.67 389.474 1328.09 393.158C1316.63 392.036 1305.72 394.534 1294.71 396.465Z\",\n    fill: \"#939393\"\n  })), _path197 || (_path197 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1294.71 396.466L1291.84 397.448C1286.68 396.898 1280.46 398.38 1277.76 395.454C1300.39 397.573 1299.52 385.3 1301.5 384.963C1308.29 383.816 1296.21 395.732 1294.71 396.466Z\",\n    fill: \"#939393\"\n  })), _path198 || (_path198 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1335.09 395.487C1345.86 397.919 1356.61 400.35 1367.38 402.781C1387.24 405.417 1436.61 400.99 1443.92 419.304C1448.76 431.424 1426.76 430.109 1426.64 446.99C1405.82 430.101 1357.66 444.302 1327.77 440.999C1308.92 438.912 1301.28 426.756 1282.67 435.468C1265.77 443.378 1271.02 469.672 1217.73 450.108C1241.19 434.643 1264.62 419.189 1288.08 403.724C1298.04 399.413 1323.76 394.974 1335.09 395.487ZM1433.42 416.348C1428.69 428.75 1430.66 415.526 1426.84 422.01C1425.49 426.756 1424.13 431.502 1422.78 436.248C1427.58 430.122 1435.39 424.059 1433.42 416.348ZM1359.69 419.575C1346.92 420.681 1333.09 432.059 1340.8 432.862C1343.03 433.095 1354.13 416.738 1380.02 424.936C1365.37 445.392 1385.79 428.481 1381.55 421.79C1374.26 421.051 1366.98 420.313 1359.69 419.575ZM1421.91 421.338C1420.12 425.009 1418.34 428.68 1416.55 432.35C1415.11 442.857 1423.31 434.7 1421.91 421.338Z\",\n    fill: \"#939393\"\n  })), _path199 || (_path199 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1433.41 416.349C1435.38 424.06 1427.58 430.122 1422.78 436.249C1424.13 431.502 1425.49 426.756 1426.84 422.01C1430.66 415.526 1428.69 428.75 1433.41 416.349Z\",\n    fill: \"#939393\"\n  })), _path200 || (_path200 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1359.69 419.577C1366.98 420.315 1374.26 421.053 1381.55 421.791C1385.79 428.482 1365.37 445.394 1380.02 424.938C1354.13 416.74 1343.03 433.097 1340.8 432.864C1333.09 432.061 1346.92 420.683 1359.69 419.577Z\",\n    fill: \"#939393\"\n  })), _path201 || (_path201 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1421.91 421.343C1423.3 434.705 1415.11 442.862 1416.55 432.356C1418.34 428.685 1420.12 425.014 1421.91 421.343Z\",\n    fill: \"#939393\"\n  })), _path202 || (_path202 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1519.07 396.441C1547.62 402.035 1575.27 408.358 1603.88 399.907C1630.97 439.079 1553.14 465.358 1520.02 486.843C1508.31 470.276 1485.33 477.142 1483.84 469.87C1476.62 474.226 1461.24 466.582 1441.26 472.916C1438.95 465.227 1436.63 457.549 1434.32 449.86C1432.82 434.655 1446.17 438.16 1457.3 421.272C1482.38 421.27 1500.78 407.523 1519.07 396.441ZM1567.56 425.459C1550.56 427.221 1520.44 453.257 1486.14 445.48C1485.88 446.005 1485.64 446.529 1485.38 447.054C1517.87 453.918 1529.48 440.584 1554.6 431.471C1562.98 428.434 1587.31 423.414 1567.56 425.459ZM1565.72 437.103C1562.14 444.795 1558.55 452.497 1554.97 460.189C1561.6 463.088 1568.76 441.144 1565.72 437.103ZM1554.06 446.341C1542.21 463.656 1536.92 476.796 1548.47 463.727C1550.57 461.351 1556.6 449.646 1554.06 446.341ZM1535.64 446.883C1508.37 491.34 1538.74 461.42 1537.7 448.536L1535.64 446.883ZM1542.71 447.083C1530.14 463.409 1531.41 474.907 1537.04 466.592C1538.93 460.086 1540.81 453.59 1542.71 447.083ZM1527.03 449.829C1505.7 474.295 1518.19 471.811 1524.55 459.859C1525.38 456.512 1526.2 453.176 1527.03 449.829Z\",\n    fill: \"#939393\"\n  })), _path203 || (_path203 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1567.56 425.454C1587.31 423.409 1562.97 428.429 1554.6 431.467C1529.48 440.579 1517.87 453.913 1485.38 447.049C1485.64 446.524 1485.88 446 1486.14 445.475C1520.44 453.252 1550.56 427.216 1567.56 425.454Z\",\n    fill: \"#939393\"\n  })), _path204 || (_path204 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1565.72 437.103C1568.75 441.144 1561.6 463.088 1554.97 460.189C1558.55 452.497 1562.14 444.795 1565.72 437.103Z\",\n    fill: \"#939393\"\n  })), _path205 || (_path205 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1554.05 446.34C1556.59 449.644 1550.56 461.349 1548.47 463.725C1536.92 476.794 1542.21 463.654 1554.05 446.34Z\",\n    fill: \"#939393\"\n  })), _path206 || (_path206 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1535.63 446.89L1537.7 448.543C1538.74 461.427 1508.37 491.346 1535.63 446.89Z\",\n    fill: \"#939393\"\n  })), _path207 || (_path207 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1542.7 447.083C1540.81 453.589 1538.93 460.085 1537.04 466.591C1531.41 474.906 1530.14 463.408 1542.7 447.083Z\",\n    fill: \"#939393\"\n  })), _path208 || (_path208 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1527.03 449.828C1526.2 453.175 1525.37 456.512 1524.54 459.858C1518.19 471.81 1505.7 474.295 1527.03 449.828Z\",\n    fill: \"#939393\"\n  })), _path209 || (_path209 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1295.4 435.823C1300.67 435.632 1321.94 449.78 1343.05 448.868C1355.33 443.209 1408.34 441.224 1418.19 445.681C1427.69 449.991 1435.94 472.425 1434.84 474.329C1433.67 476.359 1414.84 477.43 1412.82 476.363C1411.67 475.746 1406.69 454.287 1409.31 475.732C1401.73 478.228 1407.78 471.01 1403.39 463.337L1400.75 477.616L1397.92 477.536C1392.77 453.733 1396.9 483.461 1392.34 475.251L1392.11 481.624C1366.14 493.53 1369.39 498.651 1375.75 483.819C1370.33 490.044 1364.92 496.271 1359.5 502.496C1350.79 504.748 1317.98 490.06 1307.68 487.206C1296.1 483.997 1270.92 483.283 1269.12 477.076C1267.01 469.775 1277.82 436.473 1295.4 435.823ZM1405.11 454.88C1395.77 458.688 1386.43 462.506 1377.09 466.313C1378.27 473.545 1423.35 453.664 1405.11 454.88ZM1342.35 467.987C1346.69 474 1372.89 475.742 1366.24 472.917C1358.27 471.277 1350.32 469.627 1342.35 467.987ZM1349.2 493.699C1346.61 502.684 1353.53 494.119 1362.16 487.686C1347.96 508.985 1376.42 480.446 1373.08 479.49C1370.41 481.541 1367.73 483.591 1365.07 485.642C1374.67 473.4 1361.39 483.093 1355.09 487.486C1357.56 484.547 1360.02 481.597 1362.49 478.658C1361.79 478.458 1361.09 478.268 1360.39 478.067C1342.31 491.707 1337.56 501.949 1349.2 493.699Z\",\n    fill: \"#939393\"\n  })), _path210 || (_path210 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1405.11 454.874C1423.34 453.657 1378.27 473.538 1377.09 466.307C1386.43 462.499 1395.77 458.681 1405.11 454.874Z\",\n    fill: \"#939393\"\n  })), _path211 || (_path211 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1342.35 467.99C1350.32 469.63 1358.27 471.28 1366.24 472.92C1372.88 475.745 1346.69 474.003 1342.35 467.99Z\",\n    fill: \"#939393\"\n  })), _path212 || (_path212 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1355.09 487.489C1353.13 489.56 1351.16 491.631 1349.2 493.702C1337.56 501.952 1342.31 491.71 1360.39 478.07C1361.09 478.271 1361.79 478.461 1362.49 478.662C1360.02 481.6 1357.56 484.55 1355.09 487.489Z\",\n    fill: \"#939393\"\n  })), _path213 || (_path213 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1365.06 485.642C1364.09 486.327 1363.13 487.002 1362.16 487.687C1353.53 494.119 1346.61 502.684 1349.2 493.699C1351.16 491.628 1353.13 489.557 1355.09 487.486C1361.39 483.093 1374.67 473.4 1365.06 485.642Z\",\n    fill: \"#939393\"\n  })), _path214 || (_path214 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1362.16 487.692C1363.13 487.007 1364.09 486.333 1365.07 485.648C1367.73 483.597 1370.41 481.546 1373.08 479.495C1376.42 480.451 1347.97 508.991 1362.16 487.692Z\",\n    fill: \"#939393\"\n  })), _path215 || (_path215 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1170.3 450.346C1196.32 448.021 1225.75 460.338 1250.44 465.375C1239.33 472.152 1228.24 478.919 1217.14 485.697C1216.78 485.75 1215.63 480.635 1212.9 485.576C1207.28 476.709 1206.41 490.018 1204.07 494.895C1203.19 492.584 1202 477.75 1198.99 478.803C1203.54 512.403 1190.86 504.707 1173.91 506.8C1140.48 510.935 1106.6 517.598 1072.43 514.025C1102.25 493.977 1106.88 472.28 1144.54 458.122C1153.13 455.526 1161.71 452.941 1170.3 450.346ZM1189.59 464.715C1185.73 467.082 1181.88 469.461 1178.01 471.829C1174.53 473.07 1142.64 479.014 1144.37 482.04C1161.26 477.861 1180.89 475.568 1193.11 465.346C1191.94 465.132 1190.76 464.928 1189.59 464.715ZM1183.47 477.3L1184.84 498.072L1187.67 498.152C1188.01 495.503 1188.33 492.854 1188.67 490.206C1189.53 490.23 1188.35 500.936 1192.6 498.823C1194.96 497.646 1189.21 475.315 1185.38 483.202C1184.75 481.238 1184.11 479.264 1183.47 477.3ZM1193.33 478.643C1192.27 501.238 1199.66 505.392 1197.92 488.873C1196.38 485.459 1194.87 482.056 1193.33 478.643ZM1179 483.553C1176.07 499.014 1185.34 507.687 1182.28 490.557C1181.19 488.219 1180.09 485.891 1179 483.553Z\",\n    fill: \"#939393\"\n  })), _path216 || (_path216 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1189.59 464.716C1190.76 464.93 1191.94 465.133 1193.11 465.347C1180.89 475.569 1161.26 477.862 1144.38 482.041C1142.65 479.015 1174.53 473.071 1178.01 471.83C1181.88 469.462 1185.73 467.084 1189.59 464.716Z\",\n    fill: \"#939393\"\n  })), _path217 || (_path217 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1183.47 477.298C1184.11 479.262 1184.75 481.236 1185.38 483.2C1189.21 475.313 1194.96 497.644 1192.6 498.821C1188.35 500.933 1189.53 490.228 1188.67 490.204C1188.33 492.852 1188.01 495.501 1187.67 498.149L1184.84 498.069L1183.47 477.298Z\",\n    fill: \"#939393\"\n  })), _path218 || (_path218 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1193.33 478.643C1194.87 482.057 1196.38 485.46 1197.91 488.874C1199.66 505.392 1192.27 501.238 1193.33 478.643Z\",\n    fill: \"#939393\"\n  })), _path219 || (_path219 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1179 483.555C1180.09 485.893 1181.19 488.221 1182.28 490.559C1185.34 507.69 1176.07 499.017 1179 483.555Z\",\n    fill: \"#939393\"\n  })), _path220 || (_path220 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1247.15 478.05C1253.69 480.01 1260.21 481.96 1266.75 483.921C1280.35 486.433 1293.93 488.944 1307.53 491.456C1324.42 496.039 1339.53 505.451 1357.93 506.706C1367.18 547.393 1366.45 523.492 1300.4 531.657C1254.75 531.512 1248.57 518.291 1207.53 516.267C1212.96 503.981 1226.86 478.506 1247.15 478.05ZM1246.49 496.106C1258.62 499.99 1270.74 503.885 1282.87 507.769C1268.41 521.139 1284.8 506.091 1299.07 509.823C1281.54 505.254 1264.02 500.675 1246.49 496.106Z\",\n    fill: \"#939393\"\n  })), _path221 || (_path221 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1246.49 496.106C1264.01 500.675 1281.54 505.254 1299.07 509.823C1284.79 506.09 1268.41 521.138 1282.86 507.769C1270.73 503.885 1258.62 499.99 1246.49 496.106Z\",\n    fill: \"#939393\"\n  })), _path222 || (_path222 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1463.81 475.679C1470.96 475.744 1509.36 481.531 1512.27 486.09C1514.12 488.981 1507.2 520.98 1505.22 524.167C1498.27 535.315 1469.82 528.64 1456.06 532.875C1433.19 529.111 1422.07 524.458 1404.89 538.867C1392.91 537.284 1380.94 535.711 1368.96 534.128C1369.32 505.452 1367.51 495.619 1404.11 482.494C1424.39 487.215 1445.19 475.503 1463.81 475.679ZM1480.04 496.341C1477.19 496.972 1474.34 497.593 1471.48 498.225C1469.14 498.286 1433.3 496.93 1435.33 499.858C1463.25 502.064 1493.4 496.188 1480.04 496.341ZM1380.67 504.158L1380.6 506.282C1425.16 515.051 1421.95 511.547 1380.67 504.158ZM1483.9 507.083C1465.84 522.232 1458.16 535.858 1472.66 524.307L1483.9 507.083ZM1471.1 508.846C1468.66 511.18 1455.95 525.067 1459.12 526.582C1463.39 525.82 1473.51 509.85 1471.1 508.846ZM1492.31 509.447C1470.82 527.339 1473.38 534.248 1485.5 521.482C1487.77 517.474 1490.04 513.455 1492.31 509.447ZM1499.38 509.648C1493.58 518.68 1484.84 525.45 1488.86 526.361C1491.55 526.437 1502.39 512.753 1499.38 509.648ZM1459.59 513.836C1456.93 515.707 1454.26 517.587 1451.6 519.458C1439.22 531.972 1456.93 523.415 1459.59 513.836ZM1436.77 518.506C1430.58 519.362 1437.24 523.006 1437.3 523.306C1436.79 524.705 1436.25 526.115 1435.73 527.514C1439.66 532.559 1442.35 517.739 1436.77 518.506Z\",\n    fill: \"#939393\"\n  })), _path223 || (_path223 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1480.04 496.343C1493.4 496.19 1463.24 502.066 1435.33 499.86C1433.3 496.932 1469.14 498.288 1471.48 498.227C1474.33 497.595 1477.19 496.974 1480.04 496.343Z\",\n    fill: \"#939393\"\n  })), _path224 || (_path224 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1380.67 504.156C1421.95 511.546 1425.16 515.05 1380.6 506.28L1380.67 504.156Z\",\n    fill: \"#939393\"\n  })), _path225 || (_path225 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1483.9 507.085L1472.65 524.309C1458.16 535.86 1465.84 522.234 1483.9 507.085Z\",\n    fill: \"#939393\"\n  })), _path226 || (_path226 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1471.1 508.849C1473.51 509.853 1463.39 525.823 1459.13 526.584C1455.95 525.07 1468.66 511.183 1471.1 508.849Z\",\n    fill: \"#939393\"\n  })), _path227 || (_path227 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1492.31 509.449C1490.04 513.457 1487.77 517.475 1485.5 521.483C1473.38 534.249 1470.82 527.34 1492.31 509.449Z\",\n    fill: \"#939393\"\n  })), _path228 || (_path228 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1499.38 509.645C1502.39 512.75 1491.55 526.434 1488.86 526.358C1484.84 525.447 1493.58 518.678 1499.38 509.645Z\",\n    fill: \"#939393\"\n  })), _path229 || (_path229 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1459.59 513.838C1456.93 523.418 1439.23 531.975 1451.6 519.46C1454.26 517.59 1456.93 515.709 1459.59 513.838Z\",\n    fill: \"#939393\"\n  })), _path230 || (_path230 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1436.77 518.506C1442.35 517.739 1439.66 532.557 1435.73 527.513C1436.25 526.114 1436.79 524.704 1437.3 523.305C1437.24 523.006 1430.58 519.361 1436.77 518.506Z\",\n    fill: \"#939393\"\n  })), _path231 || (_path231 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1832.9 582.898L1746.64 580.454C1736.08 573.446 1722.27 572.608 1711.29 579.452L1527.46 574.243C1530.83 562.92 1517.53 571.534 1515.5 578.749C1514.19 579.038 1513.08 576.373 1512.3 573.607C1511.3 570.069 1512.71 566.363 1514.99 563.456C1517.82 559.865 1521.26 554.429 1522.04 548.498C1522.2 547.261 1521.58 545.993 1520.67 544.773C1517.85 541.014 1518.56 537.183 1523.06 535.737C1551.6 526.573 1588.97 532.88 1616.4 522.538L1705.72 518.69C1724.23 515.674 1742.74 512.647 1761.25 509.631C1785.37 508.198 1825.63 511.062 1836.23 530.362C1846.62 549.284 1831 563.908 1832.9 582.898Z\",\n    fill: \"#939393\"\n  })), _path232 || (_path232 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1527.46 574.242L1514.73 573.881C1516.76 566.667 1530.83 562.919 1527.46 574.242Z\",\n    fill: \"#939393\"\n  })), _path233 || (_path233 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1746.64 580.454L1711.29 579.452C1722.27 572.608 1736.08 573.446 1746.64 580.454Z\",\n    fill: \"#939393\"\n  })), _path234 || (_path234 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1674.15 258.367C1674.85 258.568 1675.55 258.758 1676.25 258.958C1623.18 287.778 1667.66 258.481 1674.15 258.367Z\",\n    fill: \"black\"\n  })), _path235 || (_path235 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1689.62 260.928C1693.37 266.01 1687.87 273.297 1684.04 278.313C1684.07 301.428 1674.05 287.843 1689.62 260.928Z\",\n    fill: \"black\"\n  })), _path236 || (_path236 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1678.16 264.859C1684.66 263.895 1675.84 273.32 1675.71 273.827L1675.32 284.448C1670 304.233 1670.7 265.966 1678.16 264.859Z\",\n    fill: \"black\"\n  })), _path237 || (_path237 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1589 264.458C1606.17 265.827 1623.33 267.206 1640.51 268.575C1632.27 268.161 1624.02 267.757 1615.78 267.343C1615.09 273.926 1600.98 264.127 1602.98 269.107C1598.32 267.561 1593.65 266.004 1589 264.458Z\",\n    fill: \"black\"\n  })), _path238 || (_path238 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1658.17 269.604C1662.91 268.526 1652.83 278.872 1653.92 289.153C1644.77 301.95 1653.42 270.692 1658.17 269.604Z\",\n    fill: \"black\"\n  })), _path239 || (_path239 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1632.6 272.069L1643.14 273.962C1636.26 276.032 1631.55 289.391 1628.88 296.417C1624.22 297.912 1630.88 281.174 1637.45 274.864C1632.27 274.367 1627.11 273.859 1621.93 273.361L1632.6 272.069Z\",\n    fill: \"black\"\n  })), _path240 || (_path240 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1648.15 272.514C1647 284.73 1633.31 304.299 1636.83 291.863C1640.61 285.41 1644.38 278.968 1648.15 272.514Z\",\n    fill: \"black\"\n  })), _path241 || (_path241 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1526.06 321.149C1529.8 322.691 1517.02 333.886 1525.71 330.708C1523.42 338.862 1529.61 330.617 1529.11 334.526C1528.3 341.01 1517.2 336.602 1512.64 339.907C1509.89 338.436 1523.83 323.978 1526.06 321.149Z\",\n    fill: \"black\"\n  })), _path242 || (_path242 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1395.77 322.776C1401.6 322.154 1385.38 332.901 1376.81 338.187C1334.67 330.412 1335.73 327.433 1376.89 336.063C1383.18 331.637 1389.48 327.201 1395.77 322.776Z\",\n    fill: \"black\"\n  })), _path243 || (_path243 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1298.57 348.727C1340.58 351.098 1337.33 354.812 1298.49 350.851C1283.45 362.355 1280.53 358.987 1298.57 348.727Z\",\n    fill: \"black\"\n  })), _path244 || (_path244 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1398.82 355.821C1423.35 358.781 1431.41 372.959 1445.74 369.378C1431.6 376.313 1434.63 369.999 1425.33 366.142C1416.5 362.702 1407.65 359.261 1398.82 355.821Z\",\n    fill: \"black\"\n  })), _path245 || (_path245 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1653.87 309.887C1654.57 310.088 1655.27 310.278 1655.97 310.478C1652.49 323.627 1662.41 330.787 1662.27 331.921C1661.59 337.176 1650.75 318.985 1653.86 329.556C1656.13 332.098 1658.39 334.65 1660.66 337.192C1661.97 345.798 1654.17 327.163 1649.46 333.685C1650.93 325.752 1652.41 317.82 1653.87 309.887Z\",\n    fill: \"black\"\n  })), _path246 || (_path246 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1648.47 341.634C1656.24 338.931 1640.88 357.942 1629.35 361.294C1645.29 350.348 1646.97 342.155 1648.47 341.634Z\",\n    fill: \"black\"\n  })), _path247 || (_path247 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1663.9 345.256C1665.66 362.722 1648.31 383.643 1649.49 371.96C1654.3 363.059 1659.09 354.157 1663.9 345.256Z\",\n    fill: \"black\"\n  })), _path248 || (_path248 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1639.65 370.093C1638.62 372.19 1637.61 374.288 1636.58 376.385C1629.27 392.264 1623.11 397.066 1624.91 386.155C1625.43 382.991 1648.72 344.365 1639.65 370.093Z\",\n    fill: \"black\"\n  })), _path249 || (_path249 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1636.58 376.38C1637.61 374.282 1638.62 372.184 1639.64 370.087C1649.26 352.423 1646.15 369.75 1638.55 380.688C1637.89 379.255 1637.24 377.812 1636.58 376.38Z\",\n    fill: \"black\"\n  })), _path250 || (_path250 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1619.29 365.26C1613.87 374.633 1596.7 378.889 1583.48 377.004C1570.29 390.485 1564.93 387.76 1581.38 376.413C1560.28 374.337 1548.29 370.447 1561.05 371.053C1577.51 371.838 1595.44 383.244 1619.29 365.26Z\",\n    fill: \"black\"\n  })), _path251 || (_path251 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1624.91 366.486C1630.49 376.277 1608.02 404.666 1610.72 386.817C1611.58 381.142 1619.6 366.57 1617.95 382.769C1620.27 377.338 1622.59 371.917 1624.91 366.486Z\",\n    fill: \"black\"\n  })), _path252 || (_path252 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1518.66 368.782C1521.94 367.355 1516.53 386.478 1515.86 387.309C1509.72 394.971 1511.91 380.871 1518.66 368.782Z\",\n    fill: \"black\"\n  })), _path253 || (_path253 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1478.99 369.791C1477.57 376.661 1476.13 383.532 1474.7 390.402C1466.63 405.303 1464.89 391.666 1478.99 369.791Z\",\n    fill: \"black\"\n  })), _path254 || (_path254 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1529.9 371.237C1529.08 374.223 1528.26 377.219 1527.45 380.205C1519.77 394.682 1519.27 382.536 1529.9 371.237Z\",\n    fill: \"black\"\n  })), _path255 || (_path255 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1481.74 371.998C1485.37 370.602 1481.34 388.839 1480.4 389.503C1473.87 394.103 1478.1 382.942 1481.74 371.998Z\",\n    fill: \"black\"\n  })), _path256 || (_path256 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1441.96 376.182C1441.06 381.292 1440.17 386.413 1439.27 391.523C1434.09 405.921 1430.52 390.403 1441.96 376.182Z\",\n    fill: \"black\"\n  })), _path257 || (_path257 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1456.07 396.787C1455.35 397.117 1454.63 397.458 1453.91 397.789C1452.85 397.386 1453.43 390.609 1449.63 398.731C1448.47 398.166 1447.3 397.602 1446.15 397.037C1455.73 374.567 1459.85 368.4 1456.07 396.787Z\",\n    fill: \"black\"\n  })), _path258 || (_path258 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1456.07 396.782C1470.25 370.295 1471.87 377.241 1459.52 399.006C1458.38 398.261 1457.21 397.527 1456.07 396.782Z\",\n    fill: \"black\"\n  })), _path259 || (_path259 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1448.91 379.566C1448.01 384.676 1447.12 389.797 1446.23 394.907C1438.88 406.947 1435.95 401.197 1448.91 379.566Z\",\n    fill: \"black\"\n  })), _path260 || (_path260 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1294.71 396.463L1291.84 397.445C1286.68 396.895 1280.46 398.377 1277.76 395.452C1300.39 397.571 1299.52 385.298 1301.5 384.96C1308.29 383.813 1296.21 395.73 1294.71 396.463Z\",\n    fill: \"black\"\n  })), _path261 || (_path261 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1433.41 416.349C1435.38 424.06 1427.57 430.123 1422.78 436.249C1424.13 431.503 1425.49 426.757 1426.84 422.011C1430.65 415.527 1428.68 428.751 1433.41 416.349Z\",\n    fill: \"black\"\n  })), _path262 || (_path262 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1359.69 419.576C1366.98 420.314 1374.26 421.052 1381.55 421.79C1385.79 428.481 1365.37 445.393 1380.02 424.937C1354.13 416.739 1343.03 433.096 1340.8 432.863C1333.09 432.06 1346.92 420.682 1359.69 419.576Z\",\n    fill: \"black\"\n  })), _path263 || (_path263 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1421.91 421.34C1423.3 434.703 1415.11 442.859 1416.55 432.353C1418.34 428.682 1420.12 425.011 1421.91 421.34Z\",\n    fill: \"black\"\n  })), _path264 || (_path264 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1567.56 425.464C1587.31 423.418 1562.98 428.438 1554.6 431.476C1529.48 440.588 1517.87 453.922 1485.38 447.058C1485.64 446.534 1485.88 446.009 1486.14 445.485C1520.44 453.261 1550.56 427.225 1567.56 425.464Z\",\n    fill: \"black\"\n  })), _path265 || (_path265 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1565.72 437.111C1568.75 441.153 1561.6 463.097 1554.97 460.198C1558.55 452.506 1562.14 444.803 1565.72 437.111Z\",\n    fill: \"black\"\n  })), _path266 || (_path266 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1554.05 446.345C1556.6 449.65 1550.56 461.355 1548.47 463.73C1536.92 476.8 1542.21 463.659 1554.05 446.345Z\",\n    fill: \"black\"\n  })), _path267 || (_path267 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1535.63 446.89L1537.7 448.543C1538.74 461.427 1508.36 491.347 1535.63 446.89Z\",\n    fill: \"black\"\n  })), _path268 || (_path268 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1542.7 447.085C1540.81 453.591 1538.93 460.088 1537.04 466.594C1531.42 474.908 1530.14 463.411 1542.7 447.085Z\",\n    fill: \"black\"\n  })), _path269 || (_path269 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1527.03 449.835C1526.2 453.182 1525.37 456.518 1524.54 459.865C1518.19 471.816 1505.7 474.301 1527.03 449.835Z\",\n    fill: \"black\"\n  })), _path270 || (_path270 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1405.11 454.878C1423.35 453.662 1378.28 473.543 1377.1 466.311C1386.43 462.504 1395.77 458.686 1405.11 454.878Z\",\n    fill: \"black\"\n  })), _path271 || (_path271 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1342.35 467.985C1350.32 469.625 1358.27 471.275 1366.24 472.914C1372.89 475.74 1346.69 473.998 1342.35 467.985Z\",\n    fill: \"black\"\n  })), _path272 || (_path272 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1355.09 487.482C1353.13 489.553 1351.16 491.623 1349.2 493.694C1337.56 501.945 1342.31 491.702 1360.39 478.063C1361.09 478.264 1361.79 478.454 1362.49 478.654C1360.02 481.593 1357.56 484.543 1355.09 487.482Z\",\n    fill: \"black\"\n  })), _path273 || (_path273 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1365.07 485.647C1364.09 486.332 1363.14 487.006 1362.16 487.691C1353.53 494.123 1346.61 502.688 1349.2 493.703C1351.16 491.632 1353.13 489.562 1355.09 487.491C1361.4 483.097 1374.67 473.405 1365.07 485.647Z\",\n    fill: \"black\"\n  })), _path274 || (_path274 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1362.16 487.682C1363.13 486.997 1364.09 486.322 1365.07 485.638C1367.73 483.587 1370.41 481.536 1373.08 479.485C1376.42 480.441 1347.97 508.981 1362.16 487.682Z\",\n    fill: \"black\"\n  })), _path275 || (_path275 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1189.59 464.727C1185.73 467.095 1181.88 469.474 1178.01 471.841C1174.53 473.082 1142.65 479.026 1144.38 482.052C1161.26 477.874 1180.89 475.58 1193.11 465.358C1191.94 465.145 1190.76 464.941 1189.59 464.727ZM1183.47 477.312L1184.84 498.084L1187.67 498.164C1188 495.515 1188.33 492.866 1188.67 490.218C1189.53 490.242 1188.34 500.947 1192.6 498.835C1194.96 497.658 1189.21 475.327 1185.38 483.214C1184.75 481.25 1184.11 479.276 1183.47 477.312ZM1193.33 478.655C1192.27 501.25 1199.66 505.404 1197.91 488.885C1196.38 485.471 1194.86 482.069 1193.33 478.655ZM1179 483.565C1176.07 499.026 1185.34 507.699 1182.28 490.569C1181.19 488.231 1180.09 485.903 1179 483.565Z\",\n    fill: \"black\"\n  })), _path276 || (_path276 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1189.59 464.727C1190.76 464.941 1191.94 465.145 1193.11 465.358C1180.89 475.58 1161.26 477.874 1144.38 482.052C1142.65 479.026 1174.53 473.082 1178.01 471.841C1181.88 469.474 1185.73 467.095 1189.59 464.727Z\",\n    fill: \"black\"\n  })), _path277 || (_path277 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1183.48 477.313C1184.11 479.277 1184.75 481.251 1185.38 483.215C1189.21 475.328 1194.96 497.659 1192.6 498.836C1188.35 500.948 1189.53 490.243 1188.67 490.219C1188.33 492.867 1188.01 495.516 1187.67 498.165L1184.84 498.084L1183.48 477.313Z\",\n    fill: \"black\"\n  })), _path278 || (_path278 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1193.34 478.653C1194.87 482.066 1196.39 485.469 1197.92 488.883C1199.67 505.402 1192.27 501.248 1193.34 478.653Z\",\n    fill: \"black\"\n  })), _path279 || (_path279 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1179 483.566C1180.09 485.904 1181.2 488.232 1182.29 490.57C1185.34 507.701 1176.08 499.028 1179 483.566Z\",\n    fill: \"black\"\n  })), _path280 || (_path280 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1246.49 496.105C1264.02 500.674 1281.54 505.254 1299.07 509.822C1284.8 506.09 1268.41 521.138 1282.87 507.768C1270.74 503.884 1258.62 499.99 1246.49 496.105Z\",\n    fill: \"black\"\n  })), _path281 || (_path281 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1480.04 496.349C1493.39 496.196 1463.24 502.071 1435.32 499.866C1433.29 496.938 1469.14 498.294 1471.48 498.233C1474.33 497.601 1477.19 496.98 1480.04 496.349Z\",\n    fill: \"black\"\n  })), _path282 || (_path282 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1380.67 504.165C1421.94 511.554 1425.16 515.058 1380.59 506.289L1380.67 504.165Z\",\n    fill: \"black\"\n  })), _path283 || (_path283 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1483.9 507.089L1472.65 524.314C1458.16 535.864 1465.83 522.239 1483.9 507.089Z\",\n    fill: \"black\"\n  })), _path284 || (_path284 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1471.09 508.853C1473.5 509.857 1463.38 525.827 1459.12 526.589C1455.95 525.074 1468.66 511.187 1471.09 508.853Z\",\n    fill: \"black\"\n  })), _path285 || (_path285 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1492.3 509.452C1490.03 513.46 1487.77 517.478 1485.5 521.486C1473.38 534.252 1470.82 527.343 1492.3 509.452Z\",\n    fill: \"black\"\n  })), _path286 || (_path286 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1499.37 509.654C1502.39 512.759 1491.54 526.443 1488.86 526.367C1484.84 525.456 1493.58 518.686 1499.37 509.654Z\",\n    fill: \"black\"\n  })), _path287 || (_path287 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1459.59 513.84C1456.93 523.42 1439.22 531.977 1451.6 519.462C1454.25 517.591 1456.93 515.711 1459.59 513.84Z\",\n    fill: \"black\"\n  })), _path288 || (_path288 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1436.77 518.514C1442.34 517.747 1439.65 532.566 1435.73 527.522C1436.25 526.123 1436.78 524.713 1437.3 523.314C1437.24 523.014 1430.58 519.37 1436.77 518.514Z\",\n    fill: \"black\"\n  })), _path289 || (_path289 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1105.59 561.713L1061.6 566.715L1048.93 569.963C1040.87 572.028 1032.63 573.273 1024.33 573.679L1016.2 574.076C1015.47 574.112 1014.73 574.203 1014.01 574.348L1008.45 575.468C1003.96 576.372 999.566 573.638 998.417 569.222V569.222C997.54 565.85 998.778 562.265 1001.56 560.129L1003.25 558.827C1009.5 550.689 1026.45 550.998 1036.28 549.075C1049.13 545.899 1056.46 542.98 1069.31 539.804C1076.29 537.372 1098.4 554.546 1105.59 561.713Z\",\n    fill: \"#939393\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path290 || (_path290 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1012.53 608.223C1012.32 608.862 1011.63 609.166 1010.96 609.141L989.005 608.327L978.352 610.021C974.105 610.696 969.981 612.012 966.12 613.923V613.923C960.294 616.807 953.894 618.322 947.414 618.352L925.446 618.454L909.788 616.726C907.789 616.505 905.901 615.708 904.354 614.432V614.432C898.335 609.469 899.808 599.847 907.052 596.807L917.699 592.34C923.941 584.202 935.285 590.776 945.108 588.853C957.964 585.677 966.806 587.305 979.661 584.129C986.366 581.792 1015.23 599.962 1012.53 608.223Z\",\n    fill: \"#939393\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path291 || (_path291 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M951.293 600.77C952.566 602.016 953.842 603.27 955.115 604.517C955.964 597.85 969.058 612.408 967.256 613.87C964.013 616.495 961.418 608.491 960.604 608.698C961.204 610.69 961.818 612.678 962.418 614.67L959.749 615.349L951.293 600.77Z\",\n    fill: \"black\"\n  })), _path292 || (_path292 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M960.971 599.166C963.582 601.222 966.176 603.273 968.787 605.329C976.13 616.752 967.786 615.69 960.971 599.166Z\",\n    fill: \"black\"\n  })), _path293 || (_path293 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M949.274 606.427C951.1 607.825 952.936 609.211 954.762 610.609C963.538 622.13 951.882 618.307 949.274 606.427Z\",\n    fill: \"black\"\n  })), _path294 || (_path294 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M976.137 598.694C976.923 599.621 977.71 600.553 978.496 601.479C981.651 597.102 989.125 607.791 986.881 608.629C982.843 610.133 983.158 604.604 982.303 604.68C982.181 606.053 982.073 607.424 981.951 608.796L979.147 609.047L976.137 598.694Z\",\n    fill: \"black\"\n  })), _path295 || (_path295 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M985.998 598.357C987.785 599.924 989.558 601.487 991.346 603.054C994.394 611.219 986.749 609.88 985.998 598.357Z\",\n    fill: \"black\"\n  })), _path296 || (_path296 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M972.211 602.311C973.476 603.38 974.754 604.442 976.018 605.511C980.409 613.85 970.55 610.422 972.211 602.311Z\",\n    fill: \"black\"\n  })), _path297 || (_path297 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1035.96 556.225C1037.24 557.471 1038.51 558.725 1039.79 559.972C1040.64 553.305 1053.73 567.863 1051.93 569.325C1048.68 571.951 1046.09 563.946 1045.27 564.153C1045.87 566.145 1046.49 568.133 1047.09 570.125L1044.42 570.804L1035.96 556.225Z\",\n    fill: \"black\"\n  })), _path298 || (_path298 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1045.64 554.622C1048.25 556.678 1050.85 558.729 1053.46 560.785C1060.8 572.207 1052.46 571.145 1045.64 554.622Z\",\n    fill: \"black\"\n  })), _path299 || (_path299 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1033.94 561.883C1035.77 563.281 1037.61 564.667 1039.43 566.065C1048.21 577.586 1036.55 573.763 1033.94 561.883Z\",\n    fill: \"black\"\n  })), _path300 || (_path300 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1060.81 554.148C1061.59 555.075 1062.38 556.007 1063.17 556.934C1066.32 552.556 1073.8 563.245 1071.55 564.083C1067.51 565.587 1067.83 560.058 1066.97 560.134C1066.85 561.507 1066.74 562.878 1066.62 564.25L1063.82 564.501L1060.81 554.148Z\",\n    fill: \"black\"\n  })), _path301 || (_path301 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1070.67 553.812C1072.46 555.379 1074.23 556.942 1076.02 558.509C1079.06 566.674 1071.42 565.335 1070.67 553.812Z\",\n    fill: \"black\"\n  })), _path302 || (_path302 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1056.88 557.767C1058.15 558.836 1059.42 559.898 1060.69 560.967C1065.08 569.306 1055.22 565.878 1056.88 557.767Z\",\n    fill: \"black\"\n  })), _path303 || (_path303 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M318.363 510.662C319.476 510.896 317.086 514.384 319.764 517.077C322.325 519.653 326.063 519.039 328.918 522.328C329.15 522.593 331.205 525.024 330.035 526.203C329.173 527.07 327.422 526.408 325.021 527.144C321.507 528.215 320.262 531.102 320.202 531.258C318.722 534.916 322.554 538.008 322.747 538.163C321.129 539.042 318.625 540.209 315.255 540.95C311.973 541.671 309.494 541.71 305.666 541.655C302.329 541.606 297.483 541.628 291.361 541.978C292.97 541.31 295.336 540.152 297.573 538.28C299.538 536.628 299.895 535.691 301.268 534.593C302.889 533.301 305.89 531.829 311.939 531.553C309.135 528.86 308.694 526.568 308.618 525.385C308.558 524.386 308.703 522.963 313.45 516.189C317.026 511.109 317.883 510.573 318.363 510.662Z\",\n    fill: \"#E8AE86\"\n  })), _path304 || (_path304 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M318.399 510.57C319.02 510.788 318.768 511.339 318.776 511.715C318.624 512.798 318.462 514.01 318.825 515.063C319.469 517.445 322.487 518.441 325.275 519.262C327.291 519.914 329.129 521.098 330.205 522.515C331.573 524.022 332.496 527.072 329.031 527.474C325.872 527.507 323.671 528.141 321.952 530.121C319.527 532.609 320.736 536.044 323.427 538.215L323.029 538.418C319.668 540.158 315.793 541.369 311.699 541.81C307.642 542.205 303.534 542.013 299.486 542.261C295.424 542.454 290.786 542.769 286.715 543.1L290.791 541.274C293.434 540.097 295.817 538.581 297.602 536.747C299.292 534.62 301.635 532.389 305.028 531.576C307.229 530.923 309.54 530.683 311.816 530.581L310.868 532.099C306.968 528.237 306.371 524.542 309.791 520.398C312.213 517.176 314.507 513.918 317.412 510.933C317.648 510.776 317.881 510.499 318.373 510.552L318.399 510.57ZM318.34 510.754C317.812 510.775 317.409 511.364 317.089 511.668C314.66 514.551 312.892 517.742 311.199 520.869C310.561 522.165 309.847 523.508 309.714 524.857C309.762 527.068 311.119 529.199 312.996 530.988L314.436 532.358L312.06 532.506C308.113 532.745 303.913 533.507 301.536 535.894C299.23 538.629 295.912 541.177 291.93 542.672L291.293 541.198C296.713 540.962 302.216 541.074 307.621 541.278C310.305 541.376 312.97 541.208 315.512 540.609C318.054 540.037 320.426 539.1 322.489 537.898L322.437 538.412C319.824 536.36 318.233 533.276 319.633 530.545C321.003 527.621 324.437 525.798 328.693 525.87C329.095 525.813 329.07 525.813 329.193 525.693C329.592 524.967 328.98 524.006 328.496 523.211C327.216 521.079 324.766 520.182 321.958 518.993C319.035 517.704 317.909 515.168 318.373 512.836L318.537 511.707C318.543 511.414 318.721 510.917 318.365 510.763L318.34 510.754Z\",\n    fill: \"#3C3636\"\n  })), _path305 || (_path305 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M341.485 531.651C343.477 532.384 345.625 533.283 347.839 534.373C352.14 536.491 355.501 538.75 358.05 540.748C354.934 540.441 350.855 540.423 346.742 541.717C342.692 542.993 340.956 544.781 338.393 544.416C336.751 544.185 334.675 543.057 332.836 539.03C336.055 537.703 337.963 535.19 337.729 532.585C337.448 529.559 334.318 526.914 330.035 526.2C330.804 525.104 333.13 522.13 338.09 520.401C345.585 517.798 352.839 520.232 353.829 520.585C352.8 521.305 351.278 522.514 350.134 524.272C348.782 526.333 349.034 527.469 347.717 528.87C346.844 529.791 345.146 530.973 341.485 531.651Z\",\n    fill: \"#E8AE86\"\n  })), _path306 || (_path306 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M341.612 531.67C349.094 533.599 355.563 537.541 360.918 541.8L357.917 541.539C353.036 541.112 348.202 541.666 343.95 543.502C337.465 546.835 334.546 543.473 332.473 539.125L332.368 538.905L332.655 538.784C337.622 536.844 338.612 531.5 334.334 528.75C332.735 527.574 330.533 527.061 328.362 526.796C331.389 521.37 339.047 517.564 347.234 518.333C350.272 518.53 353.172 519.333 355.864 520.385L354.636 521.198C352.166 522.805 350.523 524.804 349.581 527.166C348.643 529.729 345.145 531.479 341.611 531.661L341.612 531.67ZM341.359 531.644C341.671 531.505 342.271 531.337 342.647 531.234C345.286 530.47 347.619 528.973 348.114 526.86C348.713 524.335 350.47 521.795 353.035 519.985L353.343 521.36C349.401 520.139 344.761 519.803 340.691 520.739C336.569 521.648 333.08 523.811 331.077 526.6L330.308 525.402C336.7 526.418 340.613 532.078 337.243 536.222C336.265 537.511 334.803 538.582 333.056 539.287L333.237 538.947C333.622 539.817 334.081 540.677 334.678 541.472C337.077 544.653 339.444 544.67 343.096 542.488C347.287 540.157 353.008 539.296 358.209 539.959L357.282 541.285C354.988 539.442 352.52 537.711 349.867 536.127C347.187 534.461 344.262 533.116 341.384 531.634L341.359 531.644Z\",\n    fill: \"#3C3636\"\n  })), _path307 || (_path307 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M335.455 543.607C335.081 544.37 334.388 545.465 332.998 546.371C330.703 547.877 327.91 547.972 325.487 548.24C322.774 548.537 318.887 549.234 314.219 551.044C313.519 548.975 313.836 547.349 314.118 546.458C315.318 542.646 319.868 538.909 324.026 539.073C326.041 539.156 326.591 540.089 329.08 539.967C331.784 539.836 332.891 538.647 334.095 539.027C334.919 539.289 335.734 540.267 335.455 543.607Z\",\n    fill: \"#E8AE86\"\n  })), _path308 || (_path308 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M335.58 543.633C334.953 547.14 330.306 548.776 325.994 549.025C321.901 549.521 317.645 550 313.951 551.476C312.573 547.767 313.513 543.579 317.099 540.691C318.868 539.261 321.494 537.891 324.419 538.116C325.49 538.175 326.481 538.574 327.077 538.783C328.282 539.199 329.615 539.138 330.867 538.829C336.425 536.831 336.45 540.813 335.58 543.624L335.58 543.633ZM335.34 543.588C335.072 542.259 335.088 540.709 333.983 539.714C333.805 539.614 333.705 539.623 333.604 539.651C332.567 539.996 330.522 540.886 329.037 540.874C327.469 541.111 325.498 540.249 324.173 540.071C322.144 539.971 320.337 540.823 318.825 541.876C315.666 544.211 313.275 547.626 314.62 550.986L314.049 550.796C315.872 550.091 317.667 549.312 319.592 548.688C323.122 547.241 327.775 547.604 331.301 546.515C332.963 545.938 334.336 544.868 335.353 543.597L335.34 543.588Z\",\n    fill: \"#3C3636\"\n  })), _path309 || (_path309 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M329.09 540.429C334.304 540.405 338.462 537.305 338.378 533.506C338.294 529.706 334 526.646 328.786 526.67C323.573 526.694 319.414 529.794 319.498 533.593C319.582 537.393 323.876 540.453 329.09 540.429Z\",\n    fill: \"url(#paint0_radial_1_1723)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path310 || (_path310 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M413.349 543.182C414.372 543.396 412.174 546.603 414.636 549.079C416.991 551.446 420.427 550.882 423.051 553.906C423.264 554.149 425.153 556.384 424.078 557.468C423.286 558.264 421.675 557.656 419.469 558.333C416.239 559.317 415.094 561.971 415.039 562.114C413.678 565.477 417.201 568.319 417.378 568.462C415.891 569.27 413.589 570.343 410.491 571.023C407.474 571.687 405.195 571.723 401.677 571.671C398.609 571.627 394.155 571.647 388.526 571.969C390.005 571.355 392.181 570.29 394.237 568.569C396.043 567.051 396.372 566.189 397.634 565.18C399.123 563.993 401.882 562.639 407.443 562.385C404.865 559.91 404.46 557.803 404.39 556.716C404.335 555.797 404.468 554.489 408.832 548.262C412.119 543.592 412.907 543.099 413.349 543.182Z\",\n    fill: \"#E8AE86\"\n  })), _path311 || (_path311 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M413.382 543.098C413.953 543.298 413.721 543.805 413.729 544.15C413.589 545.146 413.44 546.26 413.774 547.228C414.366 549.418 417.14 550.333 419.703 551.088C421.556 551.687 423.246 552.775 424.235 554.078C425.492 555.463 426.341 558.268 423.155 558.637C420.252 558.667 418.228 559.25 416.648 561.07C414.419 563.357 415.53 566.514 418.004 568.51L417.638 568.697C414.549 570.297 410.986 571.41 407.223 571.815C403.493 572.178 399.717 572.002 395.996 572.23C392.262 572.407 387.999 572.697 384.256 573.001L388.003 571.322C390.433 570.24 392.624 568.847 394.264 567.161C395.818 565.206 397.971 563.155 401.091 562.407C403.114 561.807 405.238 561.587 407.331 561.493L406.459 562.888C402.874 559.338 402.325 555.942 405.469 552.132C407.695 549.171 409.805 546.176 412.475 543.431C412.692 543.287 412.906 543.033 413.358 543.081L413.382 543.098ZM413.328 543.267C412.842 543.286 412.472 543.827 412.177 544.107C409.945 546.757 408.32 549.691 406.763 552.565C406.176 553.757 405.521 554.991 405.398 556.231C405.443 558.263 406.689 560.222 408.415 561.867L409.739 563.126L407.555 563.263C403.926 563.482 400.065 564.183 397.88 566.377C395.76 568.891 392.711 571.233 389.05 572.608L388.465 571.253C393.447 571.036 398.506 571.139 403.474 571.326C405.941 571.416 408.391 571.261 410.728 570.711C413.065 570.186 415.245 569.324 417.141 568.219L417.094 568.691C414.692 566.805 413.229 563.97 414.516 561.459C415.776 558.772 418.933 557.096 422.845 557.162C423.214 557.11 423.191 557.11 423.304 557C423.672 556.332 423.108 555.449 422.664 554.718C421.487 552.758 419.235 551.934 416.654 550.841C413.966 549.656 412.931 547.325 413.358 545.181L413.509 544.143C413.515 543.873 413.678 543.417 413.351 543.275L413.328 543.267Z\",\n    fill: \"#3C3636\"\n  })), _path312 || (_path312 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M434.603 562.48C436.435 563.154 438.408 563.98 440.444 564.983C444.398 566.929 447.487 569.006 449.83 570.842C446.966 570.56 443.217 570.544 439.436 571.734C435.712 572.906 434.117 574.549 431.761 574.215C430.252 574.002 428.343 572.966 426.653 569.263C429.611 568.043 431.365 565.733 431.15 563.339C430.892 560.557 428.015 558.125 424.078 557.469C424.785 556.462 426.923 553.728 431.482 552.139C438.372 549.746 445.04 551.983 445.95 552.308C445.004 552.97 443.605 554.081 442.553 555.697C441.311 557.591 441.542 558.636 440.332 559.923C439.529 560.77 437.968 561.857 434.603 562.48Z\",\n    fill: \"#E8AE86\"\n  })), _path313 || (_path313 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M434.719 562.497C441.597 564.269 447.544 567.893 452.467 571.809L449.708 571.569C445.221 571.176 440.777 571.686 436.868 573.374C430.907 576.437 428.224 573.346 426.319 569.349L426.222 569.147L426.485 569.037C431.052 567.253 431.961 562.341 428.029 559.812C426.559 558.731 424.535 558.26 422.539 558.016C425.322 553.028 432.362 549.529 439.887 550.237C442.68 550.418 445.346 551.156 447.82 552.123L446.691 552.87C444.421 554.348 442.911 556.185 442.045 558.356C441.183 560.713 437.967 562.321 434.719 562.488L434.719 562.497ZM434.487 562.472C434.773 562.345 435.325 562.19 435.671 562.096C438.097 561.393 440.242 560.017 440.696 558.075C441.247 555.754 442.862 553.419 445.22 551.755L445.503 553.019C441.879 551.897 437.614 551.588 433.872 552.449C430.084 553.284 426.876 555.272 425.035 557.836L424.328 556.735C430.204 557.669 433.801 562.872 430.703 566.681C429.804 567.866 428.46 568.85 426.854 569.499L427.021 569.186C427.374 569.985 427.797 570.776 428.345 571.507C430.55 574.432 432.726 574.447 436.084 572.441C439.936 570.298 445.195 569.506 449.976 570.117L449.124 571.335C447.015 569.641 444.747 568.05 442.308 566.594C439.844 565.062 437.155 563.826 434.51 562.464L434.487 562.472Z\",\n    fill: \"#3C3636\"\n  })), _path314 || (_path314 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M429.059 573.467C428.716 574.168 428.078 575.175 426.801 576.007C424.69 577.391 422.123 577.479 419.896 577.726C417.402 577.999 413.829 578.639 409.538 580.304C408.894 578.401 409.185 576.907 409.445 576.088C410.548 572.583 414.731 569.148 418.552 569.299C420.406 569.375 420.911 570.233 423.199 570.121C425.684 570 426.702 568.907 427.809 569.256C428.566 569.497 429.315 570.396 429.059 573.467Z\",\n    fill: \"#E8AE86\"\n  })), _path315 || (_path315 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M429.175 573.491C428.599 576.715 424.327 578.219 420.363 578.448C416.601 578.904 412.688 579.344 409.293 580.701C408.025 577.291 408.889 573.442 412.187 570.787C413.812 569.472 416.226 568.213 418.915 568.42C419.9 568.474 420.811 568.841 421.359 569.033C422.467 569.415 423.692 569.359 424.843 569.076C429.952 567.239 429.974 570.899 429.175 573.483L429.175 573.491ZM428.955 573.45C428.708 572.228 428.723 570.803 427.707 569.889C427.543 569.797 427.451 569.806 427.359 569.831C426.405 570.148 424.526 570.966 423.16 570.955C421.718 571.173 419.907 570.38 418.689 570.217C416.824 570.125 415.163 570.908 413.773 571.876C410.869 574.023 408.671 577.162 409.908 580.251L409.383 580.076C411.058 579.428 412.709 578.712 414.478 578.138C417.723 576.808 422.001 577.142 425.242 576.14C426.769 575.611 428.032 574.626 428.966 573.458L428.955 573.45Z\",\n    fill: \"#3C3636\"\n  })), _path316 || (_path316 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M423.209 570.543C428.001 570.521 431.824 567.672 431.747 564.179C431.67 560.686 427.722 557.873 422.93 557.895C418.137 557.918 414.314 560.767 414.391 564.26C414.469 567.752 418.416 570.566 423.209 570.543Z\",\n    fill: \"url(#paint1_radial_1_1723)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path317 || (_path317 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1193.99 587.444C1195.38 587.734 1192.4 592.079 1195.74 595.435C1198.93 598.642 1203.59 597.878 1207.14 601.975C1207.43 602.305 1209.99 605.333 1208.53 606.802C1207.46 607.882 1205.28 607.058 1202.29 607.974C1197.91 609.309 1196.36 612.904 1196.28 613.098C1194.44 617.655 1199.21 621.507 1199.45 621.7C1197.44 622.795 1194.32 624.249 1190.12 625.171C1186.03 626.07 1182.95 626.119 1178.18 626.049C1174.02 625.989 1167.98 626.017 1160.36 626.452C1162.36 625.62 1165.31 624.178 1168.1 621.845C1170.54 619.788 1170.99 618.621 1172.7 617.253C1174.72 615.644 1178.46 613.81 1185.99 613.466C1182.5 610.111 1181.95 607.257 1181.85 605.783C1181.78 604.538 1181.96 602.766 1187.87 594.328C1192.33 588 1193.4 587.332 1193.99 587.444Z\",\n    fill: \"#E8AE86\"\n  })), _path318 || (_path318 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1194.04 587.329C1194.81 587.6 1194.5 588.287 1194.51 588.755C1194.32 590.105 1194.12 591.614 1194.57 592.926C1195.37 595.893 1199.13 597.133 1202.6 598.157C1205.11 598.968 1207.41 600.443 1208.75 602.208C1210.45 604.085 1211.6 607.885 1207.28 608.385C1203.35 608.426 1200.61 609.216 1198.46 611.683C1195.44 614.782 1196.95 619.06 1200.3 621.765L1199.81 622.018C1195.62 624.186 1190.79 625.694 1185.69 626.243C1180.64 626.735 1175.52 626.496 1170.48 626.805C1165.42 627.046 1159.64 627.438 1154.57 627.85L1159.65 625.575C1162.94 624.109 1165.91 622.221 1168.13 619.937C1170.24 617.287 1173.16 614.508 1177.38 613.495C1180.13 612.682 1183 612.383 1185.84 612.256L1184.66 614.147C1179.8 609.335 1179.06 604.734 1183.32 599.572C1186.33 595.558 1189.19 591.5 1192.81 587.781C1193.1 587.585 1193.39 587.241 1194.01 587.306L1194.04 587.329ZM1193.97 587.558C1193.31 587.584 1192.81 588.318 1192.41 588.697C1189.38 592.287 1187.18 596.263 1185.07 600.158C1184.27 601.773 1183.39 603.445 1183.22 605.126C1183.28 607.879 1184.97 610.534 1187.31 612.763L1189.1 614.469L1186.14 614.654C1181.23 614.951 1175.99 615.901 1173.03 618.874C1170.16 622.281 1166.03 625.454 1161.07 627.317L1160.27 625.481C1167.03 625.187 1173.88 625.327 1180.61 625.581C1183.96 625.703 1187.28 625.493 1190.44 624.747C1193.61 624.035 1196.56 622.867 1199.13 621.37L1199.07 622.01C1195.81 619.454 1193.83 615.612 1195.58 612.21C1197.28 608.569 1201.56 606.298 1206.86 606.387C1207.36 606.317 1207.33 606.317 1207.48 606.167C1207.98 605.262 1207.22 604.066 1206.62 603.075C1205.02 600.42 1201.97 599.302 1198.47 597.822C1194.83 596.216 1193.43 593.057 1194.01 590.152L1194.21 588.745C1194.22 588.38 1194.44 587.762 1194 587.569L1193.97 587.558Z\",\n    fill: \"#3C3636\"\n  })), _path319 || (_path319 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1222.8 613.589C1225.28 614.503 1227.95 615.622 1230.71 616.981C1236.07 619.619 1240.26 622.433 1243.43 624.921C1239.55 624.539 1234.47 624.517 1229.35 626.129C1224.3 627.718 1222.14 629.945 1218.95 629.491C1216.9 629.203 1214.31 627.798 1212.02 622.781C1216.03 621.128 1218.41 617.998 1218.12 614.754C1217.77 610.984 1213.87 607.689 1208.53 606.799C1209.49 605.435 1212.39 601.73 1218.57 599.576C1227.9 596.333 1236.94 599.365 1238.17 599.805C1236.89 600.703 1235 602.208 1233.57 604.398C1231.89 606.965 1232.2 608.381 1230.56 610.125C1229.47 611.273 1227.36 612.745 1222.8 613.589Z\",\n    fill: \"#E8AE86\"\n  })), _path320 || (_path320 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1222.95 613.611C1232.27 616.013 1240.33 620.924 1247 626.23L1243.26 625.904C1237.18 625.372 1231.16 626.063 1225.87 628.35C1217.79 632.501 1214.15 628.313 1211.57 622.897L1211.44 622.623L1211.8 622.473C1217.98 620.056 1219.22 613.4 1213.89 609.974C1211.9 608.509 1209.15 607.87 1206.45 607.54C1210.22 600.78 1219.76 596.039 1229.96 596.998C1233.74 597.243 1237.35 598.243 1240.71 599.553L1239.18 600.566C1236.1 602.569 1234.06 605.058 1232.88 608C1231.71 611.194 1227.36 613.374 1222.95 613.6L1222.95 613.611ZM1222.64 613.578C1223.03 613.405 1223.78 613.196 1224.24 613.068C1227.53 612.116 1230.44 610.251 1231.05 607.62C1231.8 604.474 1233.99 601.31 1237.18 599.055L1237.57 600.768C1232.66 599.248 1226.88 598.829 1221.81 599.995C1216.67 601.127 1212.33 603.822 1209.83 607.296L1208.87 605.803C1216.84 607.069 1221.71 614.12 1217.51 619.281C1216.29 620.887 1214.47 622.221 1212.3 623.099L1212.52 622.676C1213 623.759 1213.57 624.83 1214.32 625.821C1217.31 629.784 1220.25 629.805 1224.8 627.087C1230.02 624.183 1237.15 623.11 1243.63 623.937L1242.47 625.588C1239.62 623.293 1236.54 621.136 1233.24 619.163C1229.9 617.087 1226.26 615.413 1222.67 613.567L1222.64 613.578Z\",\n    fill: \"#3C3636\"\n  })), _path321 || (_path321 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1215.29 628.484C1214.82 629.434 1213.96 630.798 1212.23 631.926C1209.37 633.802 1205.89 633.921 1202.87 634.255C1199.49 634.625 1194.65 635.493 1188.83 637.748C1187.96 635.17 1188.36 633.145 1188.71 632.035C1190.2 627.286 1195.87 622.632 1201.05 622.836C1203.56 622.939 1204.24 624.101 1207.35 623.95C1210.71 623.786 1212.09 622.305 1213.59 622.778C1214.62 623.105 1215.63 624.323 1215.29 628.484Z\",\n    fill: \"#E8AE86\"\n  })), _path322 || (_path322 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1215.44 628.515C1214.66 632.884 1208.87 634.922 1203.5 635.233C1198.4 635.85 1193.1 636.446 1188.5 638.285C1186.78 633.664 1187.95 628.448 1192.42 624.851C1194.62 623.069 1197.9 621.363 1201.54 621.643C1202.87 621.717 1204.11 622.214 1204.85 622.474C1206.35 622.992 1208.01 622.916 1209.57 622.532C1216.49 620.043 1216.53 625.002 1215.44 628.504L1215.44 628.515ZM1215.14 628.459C1214.81 626.804 1214.83 624.873 1213.45 623.634C1213.23 623.509 1213.11 623.521 1212.98 623.556C1211.69 623.985 1209.14 625.093 1207.29 625.079C1205.34 625.374 1202.88 624.3 1201.23 624.079C1198.71 623.953 1196.46 625.015 1194.57 626.326C1190.64 629.236 1187.66 633.489 1189.33 637.675L1188.62 637.438C1190.89 636.559 1193.13 635.589 1195.53 634.812C1199.92 633.009 1205.72 633.462 1210.11 632.105C1212.18 631.387 1213.89 630.054 1215.16 628.471L1215.14 628.459Z\",\n    fill: \"#3C3636\"\n  })), _path323 || (_path323 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1207.36 624.523C1213.85 624.492 1219.03 620.631 1218.93 615.899C1218.82 611.166 1213.47 607.353 1206.98 607.384C1200.48 607.414 1195.3 611.275 1195.41 616.008C1195.51 620.74 1200.86 624.553 1207.36 624.523Z\",\n    fill: \"url(#paint2_radial_1_1723)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path324 || (_path324 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M837.785 589.122C838.968 589.37 836.428 593.077 839.273 595.939C841.996 598.675 845.967 598.023 849.001 601.519C849.248 601.8 851.432 604.383 850.188 605.637C849.272 606.557 847.411 605.854 844.86 606.636C841.126 607.775 839.803 610.842 839.74 611.008C838.167 614.895 842.239 618.181 842.443 618.345C840.725 619.279 838.063 620.52 834.482 621.307C830.995 622.073 828.36 622.115 824.293 622.056C820.747 622.004 815.597 622.028 809.091 622.399C810.801 621.689 813.315 620.459 815.693 618.469C817.781 616.715 818.16 615.719 819.619 614.552C821.341 613.179 824.53 611.614 830.958 611.321C827.979 608.459 827.51 606.024 827.429 604.767C827.366 603.705 827.52 602.193 832.564 594.995C836.364 589.597 837.275 589.027 837.785 589.122Z\",\n    fill: \"#E8AE86\"\n  })), _path325 || (_path325 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M837.824 589.025C838.484 589.256 838.216 589.842 838.225 590.242C838.063 591.393 837.891 592.681 838.277 593.8C838.961 596.331 842.168 597.389 845.13 598.262C847.273 598.954 849.227 600.212 850.37 601.718C851.823 603.32 852.804 606.561 849.122 606.988C845.765 607.023 843.426 607.696 841.6 609.801C839.023 612.445 840.307 616.094 843.167 618.401L842.744 618.618C839.173 620.467 835.055 621.753 830.704 622.222C826.393 622.641 822.028 622.437 817.726 622.701C813.41 622.906 808.482 623.241 804.155 623.593L808.487 621.652C811.295 620.401 813.828 618.791 815.724 616.842C817.52 614.582 820.01 612.211 823.616 611.346C825.954 610.653 828.41 610.398 830.829 610.289L829.821 611.903C825.677 607.798 825.042 603.873 828.677 599.469C831.25 596.045 833.689 592.583 836.776 589.41C837.026 589.243 837.274 588.95 837.797 589.006L837.824 589.025ZM837.761 589.221C837.2 589.243 836.772 589.869 836.432 590.192C833.851 593.255 831.973 596.646 830.173 599.969C829.495 601.347 828.737 602.773 828.595 604.207C828.646 606.556 830.088 608.821 832.082 610.722L833.613 612.177L831.088 612.335C826.893 612.589 822.43 613.399 819.904 615.935C817.454 618.842 813.929 621.549 809.697 623.138L809.02 621.572C814.78 621.321 820.628 621.44 826.371 621.657C829.223 621.761 832.055 621.582 834.756 620.945C837.458 620.338 839.977 619.342 842.17 618.065L842.115 618.611C839.338 616.43 837.647 613.153 839.135 610.251C840.591 607.144 844.24 605.207 848.763 605.283C849.19 605.223 849.163 605.223 849.294 605.096C849.719 604.324 849.067 603.303 848.554 602.457C847.193 600.192 844.59 599.239 841.606 597.976C838.499 596.606 837.303 593.912 837.797 591.433L837.971 590.233C837.977 589.921 838.166 589.394 837.788 589.23L837.761 589.221Z\",\n    fill: \"#3C3636\"\n  })), _path326 || (_path326 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M862.357 611.43C864.475 612.21 866.756 613.164 869.109 614.323C873.68 616.573 877.251 618.974 879.96 621.097C876.649 620.771 872.314 620.752 867.944 622.127C863.64 623.483 861.796 625.382 859.072 624.995C857.327 624.75 855.12 623.551 853.167 619.271C856.587 617.861 858.615 615.191 858.366 612.423C858.068 609.208 854.742 606.396 850.191 605.638C851.008 604.474 853.479 601.314 858.749 599.476C866.714 596.71 874.423 599.296 875.474 599.671C874.381 600.437 872.764 601.721 871.548 603.589C870.111 605.779 870.379 606.987 868.98 608.475C868.052 609.454 866.247 610.71 862.357 611.43Z\",\n    fill: \"#E8AE86\"\n  })), _path327 || (_path327 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M862.491 611.451C870.442 613.5 877.316 617.689 883.007 622.215L879.817 621.937C874.631 621.484 869.494 622.073 864.975 624.024C858.084 627.565 854.983 623.992 852.78 619.372L852.668 619.139L852.973 619.011C858.251 616.949 859.303 611.27 854.758 608.347C853.058 607.098 850.719 606.553 848.412 606.271C851.628 600.505 859.766 596.461 868.465 597.278C871.693 597.487 874.776 598.341 877.636 599.458L876.331 600.322C873.707 602.031 871.961 604.154 870.96 606.664C869.963 609.388 866.245 611.248 862.491 611.441L862.491 611.451ZM862.223 611.423C862.554 611.275 863.192 611.096 863.591 610.987C866.395 610.175 868.875 608.584 869.401 606.34C870.037 603.656 871.904 600.957 874.63 599.034L874.957 600.494C870.768 599.198 865.838 598.84 861.512 599.835C857.133 600.801 853.425 603.099 851.296 606.063L850.479 604.79C857.271 605.87 861.43 611.884 857.849 616.288C856.809 617.657 855.256 618.795 853.4 619.545L853.592 619.183C854.001 620.107 854.489 621.021 855.123 621.867C857.672 625.247 860.187 625.265 864.069 622.946C868.522 620.469 874.601 619.554 880.128 620.259L879.143 621.668C876.705 619.71 874.083 617.87 871.263 616.187C868.415 614.416 865.307 612.988 862.249 611.413L862.223 611.423Z\",\n    fill: \"#3C3636\"\n  })), _path328 || (_path328 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M855.948 624.133C855.551 624.944 854.815 626.107 853.338 627.069C850.898 628.67 847.931 628.771 845.356 629.056C842.473 629.371 838.343 630.112 833.383 632.036C832.638 629.836 832.975 628.109 833.275 627.162C834.55 623.111 839.385 619.14 843.803 619.315C845.945 619.402 846.529 620.394 849.175 620.265C852.047 620.125 853.223 618.862 854.503 619.265C855.379 619.544 856.244 620.583 855.948 624.133Z\",\n    fill: \"#E8AE86\"\n  })), _path329 || (_path329 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M856.083 624.16C855.416 627.887 850.478 629.625 845.896 629.89C841.547 630.417 837.024 630.926 833.099 632.494C831.634 628.553 832.633 624.103 836.444 621.034C838.323 619.514 841.114 618.059 844.222 618.298C845.361 618.361 846.414 618.785 847.047 619.006C848.328 619.448 849.744 619.383 851.075 619.056C856.98 616.932 857.007 621.163 856.083 624.15L856.083 624.16ZM855.828 624.112C855.542 622.7 855.56 621.053 854.386 619.996C854.196 619.889 854.089 619.899 853.983 619.929C852.881 620.295 850.708 621.241 849.129 621.229C847.463 621.48 845.369 620.564 843.961 620.375C841.805 620.268 839.885 621.174 838.278 622.293C834.922 624.775 832.38 628.403 833.81 631.974L833.203 631.772C835.14 631.022 837.048 630.195 839.093 629.532C842.845 627.994 847.789 628.38 851.536 627.222C853.301 626.61 854.761 625.472 855.841 624.122L855.828 624.112Z\",\n    fill: \"#3C3636\"\n  })), _path330 || (_path330 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M849.185 620.752C854.725 620.726 859.144 617.432 859.055 613.395C858.966 609.357 854.403 606.105 848.863 606.131C843.322 606.156 838.904 609.45 838.993 613.488C839.082 617.525 843.645 620.777 849.185 620.752Z\",\n    fill: \"url(#paint3_radial_1_1723)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path331 || (_path331 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M742.188 602.286C743.333 602.526 740.874 606.114 743.628 608.885C746.264 611.534 750.109 610.903 753.045 614.287C753.285 614.559 755.399 617.06 754.195 618.273C753.308 619.165 751.506 618.484 749.037 619.241C745.422 620.343 744.141 623.312 744.08 623.473C742.557 627.236 746.499 630.417 746.697 630.576C745.033 631.481 742.457 632.682 738.99 633.443C735.614 634.186 733.064 634.226 729.126 634.168C725.693 634.118 720.708 634.141 714.41 634.501C716.065 633.814 718.499 632.623 720.8 630.696C722.822 628.998 723.189 628.033 724.602 626.904C726.269 625.575 729.356 624.06 735.579 623.777C732.695 621.006 732.241 618.649 732.162 617.432C732.101 616.403 732.25 614.94 737.133 607.972C740.812 602.745 741.694 602.194 742.188 602.286Z\",\n    fill: \"#E8AE86\"\n  })), _path332 || (_path332 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M742.225 602.192C742.865 602.416 742.605 602.983 742.614 603.37C742.457 604.484 742.29 605.731 742.664 606.814C743.326 609.265 746.431 610.289 749.299 611.134C751.372 611.804 753.264 613.022 754.371 614.48C755.778 616.03 756.728 619.168 753.163 619.581C749.913 619.615 747.648 620.267 745.88 622.305C743.386 624.864 744.629 628.397 747.398 630.631L746.988 630.84C743.531 632.63 739.544 633.876 735.333 634.329C731.159 634.735 726.933 634.538 722.769 634.793C718.591 634.992 713.819 635.316 709.631 635.656L713.824 633.778C716.543 632.567 718.995 631.007 720.831 629.121C722.57 626.933 724.979 624.638 728.47 623.801C730.735 623.13 733.112 622.883 735.453 622.778L734.478 624.339C730.466 620.366 729.852 616.566 733.371 612.303C735.861 608.988 738.222 605.636 741.21 602.565C741.453 602.403 741.693 602.119 742.199 602.173L742.225 602.192ZM742.165 602.381C741.621 602.403 741.207 603.008 740.877 603.321C738.379 606.287 736.561 609.57 734.819 612.787C734.162 614.12 733.428 615.501 733.29 616.889C733.341 619.163 734.736 621.356 736.667 623.197L738.148 624.605L735.704 624.758C731.644 625.003 727.323 625.788 724.878 628.243C722.505 631.057 719.093 633.678 714.996 635.216L714.341 633.7C719.917 633.457 725.578 633.572 731.138 633.782C733.899 633.883 736.64 633.71 739.255 633.094C741.871 632.506 744.31 631.541 746.432 630.305L746.379 630.833C743.691 628.723 742.054 625.55 743.494 622.74C744.904 619.733 748.437 617.857 752.815 617.931C753.229 617.873 753.203 617.873 753.329 617.75C753.74 617.002 753.11 616.014 752.613 615.196C751.295 613.003 748.776 612.08 745.887 610.857C742.879 609.531 741.721 606.922 742.199 604.523L742.367 603.362C742.374 603.06 742.557 602.549 742.191 602.39L742.165 602.381Z\",\n    fill: \"#3C3636\"\n  })), _path333 || (_path333 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M765.974 623.881C768.024 624.636 770.233 625.56 772.511 626.682C776.936 628.86 780.393 631.184 783.015 633.239C779.809 632.924 775.613 632.905 771.382 634.237C767.216 635.549 765.43 637.388 762.793 637.013C761.105 636.776 758.968 635.615 757.077 631.472C760.388 630.107 762.351 627.521 762.11 624.842C761.822 621.73 758.602 619.008 754.196 618.273C754.987 617.146 757.38 614.087 762.481 612.308C770.192 609.63 777.654 612.134 778.672 612.497C777.614 613.238 776.049 614.482 774.871 616.29C773.481 618.41 773.739 619.579 772.386 621.02C771.487 621.968 769.74 623.184 765.974 623.881Z\",\n    fill: \"#E8AE86\"\n  })), _path334 || (_path334 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M766.104 623.899C773.801 625.883 780.456 629.939 785.965 634.32L782.877 634.052C777.856 633.612 772.883 634.183 768.509 636.072C761.838 639.5 758.835 636.041 756.703 631.568L756.595 631.342L756.89 631.218C762 629.222 763.018 623.725 758.617 620.895C756.972 619.686 754.707 619.158 752.474 618.885C755.588 613.303 763.466 609.388 771.887 610.179C775.013 610.382 777.996 611.208 780.765 612.29L779.502 613.126C776.961 614.78 775.271 616.836 774.302 619.266C773.337 621.903 769.738 623.703 766.103 623.89L766.104 623.899ZM765.844 623.872C766.165 623.729 766.782 623.557 767.169 623.451C769.884 622.665 772.284 621.125 772.793 618.952C773.409 616.354 775.216 613.741 777.856 611.879L778.172 613.293C774.117 612.038 769.344 611.692 765.156 612.655C760.917 613.59 757.327 615.815 755.266 618.684L754.475 617.451C761.051 618.496 765.077 624.319 761.61 628.582C760.603 629.908 759.099 631.01 757.303 631.735L757.489 631.385C757.884 632.28 758.357 633.165 758.971 633.983C761.439 637.256 763.874 637.273 767.631 635.028C771.942 632.63 777.828 631.744 783.178 632.427L782.224 633.79C779.864 631.895 777.326 630.114 774.596 628.484C771.839 626.77 768.83 625.387 765.87 623.863L765.844 623.872Z\",\n    fill: \"#3C3636\"\n  })), _path335 || (_path335 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M759.77 636.18C759.385 636.965 758.672 638.091 757.242 639.022C754.881 640.572 752.008 640.67 749.515 640.946C746.725 641.251 742.726 641.968 737.924 643.831C737.204 641.701 737.529 640.029 737.82 639.112C739.054 635.19 743.735 631.347 748.012 631.516C750.086 631.6 750.651 632.56 753.212 632.435C755.993 632.3 757.132 631.077 758.371 631.468C759.218 631.737 760.056 632.743 759.77 636.18Z\",\n    fill: \"#E8AE86\"\n  })), _path336 || (_path336 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M759.9 636.206C759.254 639.814 754.474 641.497 750.038 641.753C745.828 642.263 741.449 642.756 737.649 644.274C736.231 640.458 737.198 636.15 740.888 633.179C742.707 631.708 745.408 630.299 748.418 630.53C749.52 630.591 750.539 631.002 751.152 631.216C752.392 631.645 753.763 631.582 755.051 631.264C760.768 629.209 760.794 633.304 759.899 636.196L759.9 636.206ZM759.653 636.16C759.376 634.792 759.393 633.198 758.257 632.174C758.073 632.071 757.97 632.081 757.867 632.11C756.8 632.464 754.696 633.38 753.168 633.368C751.555 633.611 749.528 632.724 748.164 632.542C746.077 632.438 744.219 633.315 742.663 634.398C739.414 636.801 736.953 640.313 738.337 643.77L737.75 643.575C739.625 642.849 741.472 642.048 743.452 641.406C747.084 639.917 751.87 640.291 755.497 639.17C757.207 638.577 758.62 637.476 759.666 636.169L759.653 636.16Z\",\n    fill: \"#3C3636\"\n  })), _path337 || (_path337 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M753.223 632.907C758.586 632.882 762.864 629.693 762.778 625.784C762.691 621.876 758.274 618.728 752.91 618.752C747.547 618.777 743.269 621.966 743.355 625.874C743.441 629.783 747.859 632.931 753.223 632.907Z\",\n    fill: \"url(#paint4_radial_1_1723)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path338 || (_path338 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M644.007 586.016C645.132 586.252 642.716 589.777 645.422 592.5C648.012 595.103 651.789 594.482 654.675 597.807C654.909 598.075 656.987 600.532 655.804 601.724C654.933 602.599 653.162 601.931 650.736 602.675C647.185 603.757 645.926 606.675 645.866 606.832C644.37 610.53 648.243 613.655 648.437 613.812C646.803 614.7 644.271 615.88 640.865 616.628C637.548 617.358 635.043 617.397 631.174 617.341C627.801 617.292 622.903 617.314 616.715 617.667C618.341 616.992 620.733 615.822 622.994 613.93C624.98 612.261 625.341 611.313 626.728 610.203C628.366 608.898 631.4 607.409 637.513 607.131C634.68 604.409 634.234 602.093 634.157 600.897C634.096 599.887 634.243 598.449 639.041 591.602C642.656 586.467 643.521 585.926 644.007 586.016Z\",\n    fill: \"#E8AE86\"\n  })), _path339 || (_path339 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M644.043 585.923C644.671 586.143 644.417 586.7 644.425 587.081C644.271 588.175 644.107 589.4 644.474 590.465C645.125 592.872 648.176 593.878 650.993 594.709C653.03 595.367 654.889 596.564 655.977 597.996C657.359 599.519 658.292 602.603 654.789 603.008C651.597 603.042 649.372 603.682 647.635 605.684C645.184 608.199 646.405 611.67 649.126 613.864L648.723 614.07C645.327 615.829 641.409 617.053 637.271 617.498C633.171 617.897 629.019 617.703 624.927 617.954C620.822 618.149 616.134 618.468 612.02 618.802L616.139 616.956C618.81 615.766 621.219 614.235 623.023 612.381C624.732 610.231 627.099 607.977 630.529 607.154C632.754 606.495 635.089 606.252 637.39 606.149L636.431 607.683C632.49 603.779 631.886 600.045 635.344 595.857C637.791 592.6 640.11 589.307 643.046 586.29C643.284 586.131 643.52 585.852 644.017 585.905L644.043 585.923ZM643.984 586.109C643.45 586.13 643.043 586.725 642.719 587.033C640.264 589.946 638.478 593.172 636.766 596.333C636.121 597.643 635.4 599 635.265 600.364C635.314 602.598 636.685 604.752 638.582 606.56L640.038 607.944L637.637 608.095C633.647 608.336 629.402 609.106 626.999 611.519C624.668 614.284 621.315 616.858 617.29 618.37L616.647 616.88C622.125 616.641 627.687 616.755 633.15 616.961C635.862 617.06 638.556 616.89 641.125 616.284C643.695 615.707 646.092 614.759 648.177 613.544L648.125 614.064C645.484 611.99 643.875 608.872 645.29 606.112C646.675 603.157 650.146 601.314 654.448 601.387C654.854 601.33 654.829 601.33 654.953 601.209C655.357 600.474 654.738 599.504 654.249 598.699C652.955 596.545 650.479 595.638 647.641 594.437C644.686 593.134 643.548 590.571 644.017 588.214L644.183 587.072C644.189 586.776 644.369 586.274 644.009 586.118L643.984 586.109Z\",\n    fill: \"#3C3636\"\n  })), _path340 || (_path340 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M667.375 607.225C669.389 607.967 671.56 608.875 673.798 609.977C678.145 612.117 681.542 614.401 684.118 616.42C680.969 616.11 676.846 616.092 672.689 617.4C668.595 618.689 666.841 620.496 664.25 620.128C662.591 619.894 660.492 618.754 658.634 614.683C661.887 613.342 663.816 610.802 663.579 608.17C663.296 605.112 660.132 602.437 655.803 601.716C656.58 600.609 658.931 597.603 663.944 595.855C671.52 593.224 678.851 595.684 679.852 596.041C678.812 596.769 677.274 597.991 676.117 599.767C674.751 601.85 675.005 602.999 673.675 604.414C672.792 605.346 671.075 606.54 667.375 607.225Z\",\n    fill: \"#E8AE86\"\n  })), _path341 || (_path341 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M667.502 607.244C675.065 609.193 681.603 613.177 687.016 617.482L683.983 617.218C679.049 616.787 674.163 617.347 669.866 619.203C663.311 622.571 660.361 619.173 658.266 614.778L658.16 614.556L658.45 614.434C663.47 612.473 664.471 607.072 660.147 604.292C658.53 603.103 656.305 602.585 654.111 602.317C657.171 596.833 664.91 592.986 673.185 593.763C676.255 593.962 679.187 594.774 681.908 595.837L680.666 596.659C678.17 598.284 676.51 600.303 675.557 602.691C674.609 605.282 671.073 607.051 667.502 607.234L667.502 607.244ZM667.247 607.217C667.562 607.076 668.169 606.907 668.549 606.803C671.216 606.03 673.575 604.517 674.075 602.382C674.68 599.83 676.455 597.262 679.049 595.433L679.359 596.822C675.375 595.589 670.686 595.249 666.572 596.196C662.406 597.114 658.879 599.3 656.855 602.119L656.077 600.908C662.538 601.935 666.494 607.656 663.087 611.844C662.098 613.147 660.621 614.229 658.855 614.942L659.038 614.598C659.427 615.477 659.891 616.347 660.494 617.151C662.919 620.366 665.311 620.383 669.003 618.178C673.239 615.821 679.021 614.951 684.278 615.622L683.341 616.961C681.022 615.099 678.528 613.349 675.846 611.748C673.137 610.064 670.181 608.705 667.273 607.208L667.247 607.217Z\",\n    fill: \"#3C3636\"\n  })), _path342 || (_path342 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M661.28 619.316C660.902 620.087 660.202 621.194 658.797 622.109C656.477 623.631 653.654 623.728 651.205 623.999C648.463 624.299 644.535 625.003 639.816 626.833C639.109 624.741 639.429 623.098 639.714 622.197C640.927 618.344 645.526 614.567 649.728 614.733C651.765 614.817 652.321 615.76 654.837 615.637C657.57 615.504 658.688 614.302 659.905 614.686C660.738 614.951 661.562 615.939 661.28 619.316Z\",\n    fill: \"#E8AE86\"\n  })), _path343 || (_path343 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M661.408 619.341C660.774 622.886 656.077 624.54 651.719 624.792C647.582 625.293 643.28 625.777 639.547 627.268C638.153 623.519 639.103 619.287 642.729 616.368C644.516 614.923 647.17 613.538 650.127 613.765C651.21 613.825 652.211 614.229 652.814 614.439C654.032 614.86 655.379 614.798 656.644 614.486C662.261 612.467 662.287 616.491 661.408 619.332L661.408 619.341ZM661.165 619.296C660.894 617.953 660.91 616.386 659.794 615.38C659.613 615.279 659.512 615.289 659.411 615.317C658.362 615.665 656.296 616.565 654.794 616.553C653.209 616.792 651.218 615.921 649.878 615.741C647.827 615.64 646.001 616.501 644.473 617.565C641.28 619.926 638.863 623.377 640.223 626.774L639.646 626.581C641.488 625.868 643.302 625.081 645.248 624.451C648.816 622.988 653.519 623.355 657.083 622.254C658.762 621.671 660.15 620.589 661.178 619.305L661.165 619.296Z\",\n    fill: \"#3C3636\"\n  })), _path344 || (_path344 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M654.848 616.097C660.118 616.072 664.321 612.939 664.236 609.099C664.151 605.259 659.811 602.166 654.541 602.19C649.272 602.215 645.069 605.347 645.153 609.188C645.238 613.028 649.579 616.121 654.848 616.097Z\",\n    fill: \"url(#paint5_radial_1_1723)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path345 || (_path345 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1259.6 551.504C1260.68 551.731 1258.36 555.116 1260.96 557.73C1263.44 560.229 1267.07 559.634 1269.84 562.826C1270.07 563.083 1272.06 565.442 1270.93 566.587C1270.09 567.428 1268.39 566.786 1266.06 567.5C1262.65 568.54 1261.44 571.341 1261.38 571.493C1259.95 575.043 1263.67 578.044 1263.85 578.194C1262.28 579.047 1259.85 580.18 1256.58 580.899C1253.4 581.599 1250.99 581.637 1247.28 581.583C1244.04 581.536 1239.33 581.557 1233.39 581.896C1234.95 581.248 1237.25 580.125 1239.42 578.307C1241.33 576.705 1241.67 575.795 1243.01 574.729C1244.58 573.476 1247.49 572.047 1253.36 571.779C1250.64 569.165 1250.21 566.941 1250.14 565.793C1250.08 564.823 1250.22 563.442 1254.83 556.868C1258.3 551.938 1259.13 551.417 1259.6 551.504Z\",\n    fill: \"#E8AE86\"\n  })), _path346 || (_path346 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1259.63 551.415C1260.24 551.626 1259.99 552.161 1260 552.526C1259.85 553.578 1259.69 554.754 1260.05 555.776C1260.67 558.088 1263.6 559.054 1266.31 559.851C1268.26 560.483 1270.05 561.632 1271.09 563.007C1272.42 564.47 1273.32 567.431 1269.95 567.82C1266.89 567.852 1264.75 568.468 1263.08 570.39C1260.73 572.804 1261.9 576.138 1264.51 578.245L1264.13 578.442C1260.87 580.131 1257.1 581.306 1253.13 581.734C1249.19 582.117 1245.21 581.931 1241.28 582.172C1237.34 582.359 1232.84 582.665 1228.88 582.986L1232.84 581.214C1235.4 580.071 1237.72 578.6 1239.45 576.82C1241.09 574.756 1243.36 572.591 1246.66 571.801C1248.79 571.168 1251.04 570.935 1253.25 570.836L1252.32 572.309C1248.54 568.561 1247.96 564.975 1251.28 560.954C1253.63 557.827 1255.86 554.665 1258.68 551.767C1258.9 551.614 1259.13 551.346 1259.61 551.398L1259.63 551.415ZM1259.58 551.594C1259.06 551.614 1258.67 552.185 1258.36 552.481C1256 555.278 1254.29 558.376 1252.65 561.41C1252.03 562.668 1251.33 563.972 1251.2 565.281C1251.25 567.426 1252.57 569.495 1254.39 571.231L1255.79 572.56L1253.48 572.704C1249.65 572.936 1245.57 573.676 1243.27 575.993C1241.03 578.647 1237.81 581.119 1233.94 582.571L1233.33 581.14C1238.59 580.911 1243.93 581.02 1249.17 581.218C1251.78 581.313 1254.36 581.15 1256.83 580.568C1259.3 580.014 1261.6 579.104 1263.6 577.937L1263.55 578.436C1261.02 576.445 1259.47 573.451 1260.83 570.801C1262.16 567.963 1265.49 566.194 1269.62 566.264C1270.01 566.209 1269.99 566.209 1270.11 566.093C1270.5 565.387 1269.9 564.455 1269.43 563.683C1268.19 561.614 1265.81 560.744 1263.09 559.59C1260.25 558.339 1259.16 555.878 1259.61 553.614L1259.77 552.519C1259.77 552.234 1259.95 551.752 1259.6 551.602L1259.58 551.594Z\",\n    fill: \"#3C3636\"\n  })), _path347 || (_path347 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1282.04 571.878C1283.97 572.59 1286.06 573.462 1288.21 574.52C1292.38 576.575 1295.64 578.768 1298.12 580.707C1295.09 580.409 1291.13 580.392 1287.14 581.648C1283.21 582.886 1281.53 584.621 1279.04 584.267C1277.44 584.043 1275.43 582.948 1273.64 579.039C1276.77 577.752 1278.62 575.313 1278.39 572.785C1278.12 569.848 1275.08 567.28 1270.93 566.587C1271.67 565.525 1273.93 562.638 1278.74 560.96C1286.02 558.433 1293.06 560.796 1294.02 561.139C1293.02 561.838 1291.54 563.011 1290.43 564.716C1289.12 566.717 1289.36 567.82 1288.09 569.179C1287.24 570.073 1285.59 571.22 1282.04 571.878Z\",\n    fill: \"#E8AE86\"\n  })), _path348 || (_path348 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1282.16 571.895C1289.42 573.767 1295.7 577.593 1300.9 581.727L1297.99 581.473C1293.25 581.059 1288.56 581.597 1284.43 583.379C1278.14 586.613 1275.3 583.35 1273.29 579.13L1273.19 578.917L1273.47 578.8C1278.29 576.917 1279.25 571.731 1275.1 569.061C1273.55 567.92 1271.41 567.422 1269.3 567.165C1272.24 561.899 1279.67 558.205 1287.62 558.952C1290.57 559.143 1293.38 559.922 1295.99 560.943L1294.8 561.732C1292.4 563.292 1290.81 565.231 1289.9 567.524C1288.99 570.012 1285.59 571.71 1282.16 571.886L1282.16 571.895ZM1281.92 571.87C1282.22 571.735 1282.8 571.572 1283.17 571.472C1285.73 570.73 1287.99 569.278 1288.47 567.228C1289.05 564.777 1290.76 562.311 1293.25 560.555L1293.55 561.889C1289.72 560.705 1285.22 560.378 1281.27 561.287C1277.27 562.169 1273.88 564.268 1271.94 566.975L1271.19 565.812C1277.39 566.798 1281.19 572.292 1277.92 576.313C1276.97 577.564 1275.55 578.603 1273.86 579.288L1274.03 578.958C1274.41 579.802 1274.85 580.637 1275.43 581.408C1277.76 584.496 1280.06 584.512 1283.6 582.394C1287.67 580.132 1293.22 579.296 1298.27 579.94L1297.37 581.227C1295.14 579.439 1292.75 577.758 1290.17 576.221C1287.57 574.604 1284.73 573.299 1281.94 571.861L1281.92 571.87Z\",\n    fill: \"#3C3636\"\n  })), _path349 || (_path349 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1276.19 583.483C1275.82 584.224 1275.15 585.287 1273.8 586.165C1271.57 587.627 1268.86 587.72 1266.51 587.98C1263.88 588.268 1260.11 588.944 1255.58 590.701C1254.9 588.693 1255.2 587.115 1255.48 586.25C1256.64 582.55 1261.06 578.924 1265.09 579.083C1267.05 579.163 1267.58 580.069 1270 579.951C1272.62 579.823 1273.7 578.669 1274.87 579.038C1275.67 579.292 1276.46 580.241 1276.19 583.483Z\",\n    fill: \"#E8AE86\"\n  })), _path350 || (_path350 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1276.31 583.507C1275.7 586.911 1271.19 588.499 1267.01 588.741C1263.03 589.222 1258.9 589.686 1255.32 591.119C1253.98 587.519 1254.89 583.455 1258.37 580.652C1260.09 579.264 1262.64 577.935 1265.48 578.153C1266.52 578.211 1267.48 578.598 1268.06 578.8C1269.23 579.204 1270.52 579.145 1271.73 578.845C1277.13 576.906 1277.15 580.77 1276.31 583.498L1276.31 583.507ZM1276.08 583.464C1275.82 582.174 1275.83 580.669 1274.76 579.704C1274.59 579.607 1274.49 579.616 1274.39 579.643C1273.38 579.977 1271.4 580.841 1269.96 580.83C1268.44 581.06 1266.52 580.223 1265.24 580.051C1263.27 579.953 1261.52 580.78 1260.05 581.802C1256.98 584.068 1254.66 587.382 1255.97 590.644L1255.41 590.459C1257.18 589.775 1258.92 589.019 1260.79 588.413C1264.22 587.009 1268.73 587.362 1272.16 586.304C1273.77 585.745 1275.1 584.706 1276.09 583.472L1276.08 583.464Z\",\n    fill: \"#3C3636\"\n  })), _path351 || (_path351 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1270.01 580.393C1275.07 580.37 1279.11 577.361 1279.02 573.674C1278.94 569.986 1274.78 567.016 1269.72 567.04C1264.66 567.063 1260.62 570.071 1260.7 573.759C1260.78 577.446 1264.95 580.416 1270.01 580.393Z\",\n    fill: \"url(#paint6_radial_1_1723)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint0_radial_1_1723\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(328.938 533.55) rotate(-0.265483) scale(9.44013 6.88014)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint1_radial_1_1723\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(423.069 564.219) rotate(-0.265483) scale(8.67786 6.32458)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint2_radial_1_1723\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1207.17 615.953) rotate(-0.265483) scale(11.7592 8.57031)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint3_radial_1_1723\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(849.024 613.441) rotate(-0.265483) scale(10.0314 7.3111)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint4_radial_1_1723\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(753.066 625.829) rotate(-0.265483) scale(9.71128 7.07776)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint5_radial_1_1723\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(654.695 609.143) rotate(-0.265483) scale(9.54141 6.95395)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint6_radial_1_1723\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1269.86 573.716) rotate(-0.265483) scale(9.16182 6.67731)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGameBackground1920);\nexport default __webpack_public_path__ + \"static/media/GameBackground1920.b507cbec70b392c11e38f888837310ca.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103, _path104, _path105, _path106, _path107, _path108, _path109, _path110, _path111, _path112, _path113, _path114, _path115, _path116, _path117, _path118, _path119, _path120, _path121, _path122, _path123, _path124, _path125, _path126, _path127, _path128, _path129, _path130, _path131, _path132, _path133, _path134, _path135, _path136, _path137, _path138, _path139, _path140, _path141, _path142, _path143, _path144, _path145, _path146, _path147, _path148, _path149, _path150, _path151, _path152, _path153, _path154, _path155, _path156, _path157, _path158, _path159, _path160, _path161, _path162, _path163, _path164, _path165, _path166, _path167, _path168, _path169, _path170, _path171, _path172, _path173, _path174, _path175, _path176, _path177, _path178, _path179, _path180, _path181, _path182, _path183, _path184, _path185, _path186, _path187, _path188, _path189, _path190, _path191, _path192, _path193, _path194, _path195, _path196, _path197, _path198, _path199, _path200, _path201, _path202, _path203, _path204, _path205, _path206, _path207, _path208, _path209, _path210, _path211, _path212, _path213, _path214, _path215, _path216, _path217, _path218, _path219, _path220, _path221, _path222, _path223, _path224, _path225, _path226, _path227, _path228, _path229, _path230, _path231, _path232, _path233, _path234, _path235, _path236, _path237, _path238, _path239, _path240, _path241, _path242, _path243, _path244, _path245, _path246, _path247, _path248, _path249, _path250, _path251, _path252, _path253, _path254, _path255, _path256, _path257, _path258, _path259, _path260, _path261, _path262, _path263, _path264, _path265, _path266, _path267, _path268, _path269, _path270, _path271, _path272, _path273, _path274, _path275, _path276, _path277, _path278, _path279, _path280, _path281, _path282, _path283, _path284, _path285, _path286, _path287, _path288, _path289, _path290, _path291, _path292, _path293, _path294, _path295, _path296, _path297, _path298, _path299, _path300, _path301, _path302, _path303, _path304, _path305, _path306, _path307, _path308, _path309, _path310, _path311, _path312, _path313, _path314, _path315, _path316, _path317, _path318, _path319, _path320, _path321, _path322, _path323, _path324, _path325, _path326, _path327, _path328, _path329, _path330, _path331, _path332, _path333, _path334, _path335, _path336, _path337, _path338, _path339, _path340, _path341, _path342, _path343, _path344, _path345, _path346, _path347, _path348, _path349, _path350, _path351, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgGameBackground2560(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 2496,\n    height: 1117,\n    viewBox: \"0 0 2496 1117\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M765.598 77.9808C810.868 73.0117 818.942 104.188 823.117 105.128C832.202 106.491 834.515 98.448 844.166 97.2188C866.806 94.3303 884.793 106.252 883.799 123.151C885.471 125.962 905.01 127.381 901.724 149.176C902.737 150.396 915.765 149.205 917.415 158.836C927.965 159.375 937.034 169.457 932.796 176.992C933.86 179.914 957.79 179.43 948.383 189.484L639.174 180.722C648.833 172.036 664.526 168.186 679.284 167.682C682.1 157.753 696.178 158.323 698.551 156.887C702.932 154.233 703.405 146.973 716.953 143.941C696.847 128.571 705.391 112.156 731.545 106.078C729.31 94.3755 752.068 79.4687 765.598 77.9808ZM769.265 80.92C755.882 82.0151 730.73 95.8192 739.035 107.708C690.342 117.003 716.086 143.406 725.515 142.057C729.48 141.489 748.033 96.9474 783.407 133.065C754.85 110.849 720.291 136.252 736.208 159.372C723.429 142.324 714.473 141.56 704.104 159.88C679.941 161.052 684.603 169.846 682.952 170.622C681.665 171.237 659.252 170.985 654.412 176.901C751.503 179.893 848.594 182.871 945.684 185.863C941.905 178.739 929.889 184.239 928.819 182.55C923.769 174.539 937.427 151.435 899.116 168.949C929.812 150.638 893.736 153.458 892.194 151.741C903.656 141.746 896.033 129.777 879.874 127.292C884.843 102.284 843.376 88.3503 830.4 112.423C806.491 102.474 808.885 77.7046 769.265 80.92Z\",\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M769.265 80.9215C808.885 77.7061 806.491 102.475 830.4 112.424C843.376 88.3517 884.843 102.286 879.874 127.294C896.033 129.779 903.656 141.747 892.194 151.743C893.736 153.459 929.812 150.64 899.116 168.951C937.427 151.437 923.769 174.54 928.819 182.551C929.889 184.24 941.905 178.74 945.684 185.864C848.594 182.872 751.503 179.895 654.412 176.903C659.252 170.986 681.665 171.239 682.952 170.623C684.603 169.848 679.941 161.054 704.104 159.881C714.473 141.561 723.429 142.325 736.208 159.373C720.291 136.254 754.85 110.851 783.407 133.066C748.033 96.9489 729.48 141.49 725.515 142.058C716.086 143.407 690.342 117.004 739.035 107.709C730.73 95.8206 755.882 82.0166 769.265 80.9215Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M572.407 196.455C631.17 191.528 635.608 233.417 648.47 232.634C651.061 232.48 660.578 217.879 688.529 221.01C719.788 224.504 720.837 253.213 722.196 255.279C723.698 257.561 752.283 265.062 741.8 287.022C764.665 290.931 761.918 298.962 763.044 299.674C777.536 301.814 790.698 313.543 783.823 325.072C784.9 326.577 807.976 323.644 805.983 338.459C673.052 334.933 540.122 331.393 407.191 327.868C429.979 308.496 453.893 318.828 468.557 301.254C490.91 298.995 487.594 286.412 508.008 280.398C480.417 262.732 493.35 237.751 526.732 232.728C523.418 215.935 551.942 198.172 572.407 196.455ZM572.252 200.703C552.294 202.477 526.817 220.029 533.201 236.456C493.924 239.071 486.45 269.126 518.455 278.567C530.405 246.385 574.69 242.565 589.855 261.452C606.032 281.588 584.41 261.185 583.282 260.557C569.282 252.661 548.615 254.755 536.909 264.205C529.441 270.231 527.643 279.707 524.77 286.543C542.527 311.501 524.894 300.241 519.217 283.551C517.661 283.266 516.085 282.994 514.529 282.709C502.747 286.997 491.138 291.176 489.296 301.841C460.359 302.978 465.977 314.549 464.27 315.309C462.409 316.135 430.66 316.213 424.314 324.1C549.704 327.412 675.093 330.738 800.482 334.05C794.303 326.475 779.07 332.224 777.96 330.576C783.063 321.053 777.243 304.684 764.774 303.976C757.441 306.845 750.09 309.699 742.756 312.567C785.545 281.953 710.643 299.877 738.081 285.499C741.829 260.853 717.366 260.94 716.385 259.367C721.285 228.488 670.758 209.902 651.983 239.821C646.101 237.06 640.238 234.286 634.355 231.525C631.82 229.1 623.452 196.157 572.252 200.703Z\",\n    fill: \"black\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M572.252 200.7C623.452 196.154 631.82 229.096 634.355 231.521C640.238 234.282 646.101 237.057 651.983 239.818C670.758 209.899 721.285 228.484 716.385 259.363C717.366 260.936 741.829 260.85 738.081 285.496C710.643 299.873 785.545 281.95 742.756 312.564C750.09 309.695 757.441 306.841 764.774 303.973C777.243 304.68 783.063 321.049 777.96 330.573C779.07 332.22 794.303 326.471 800.482 334.046C675.093 330.734 549.704 327.408 424.315 324.097C430.66 316.21 462.409 316.131 464.27 315.305C465.977 314.545 460.359 302.974 489.296 301.838C491.138 291.173 502.747 286.993 514.529 282.706C516.085 282.991 517.661 283.262 519.217 283.547C524.894 300.238 542.527 311.498 524.77 286.54C527.643 279.703 529.441 270.228 536.909 264.202C548.615 254.751 569.282 252.658 583.282 260.554C584.41 261.181 606.032 281.584 589.855 261.449C574.69 242.561 530.405 246.382 518.455 278.564C486.45 269.123 493.924 239.068 533.201 236.452C526.817 220.025 552.294 202.474 572.252 200.7Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1726.48 55.6229C1771.75 50.6538 1779.82 81.8298 1784 82.7703C1793.08 84.1335 1795.4 76.0901 1805.05 74.8609C1827.69 71.9724 1845.67 83.8941 1844.68 100.793C1846.35 103.605 1865.89 105.023 1862.61 126.818C1863.62 128.038 1876.65 126.848 1878.3 136.478C1888.85 137.018 1897.92 147.099 1893.68 154.634C1894.74 157.556 1918.67 157.072 1909.26 167.126L1600.06 158.364C1609.71 149.679 1625.41 145.828 1640.17 145.324C1642.98 135.396 1657.06 135.965 1659.43 134.529C1663.81 131.875 1664.29 124.616 1677.83 121.583C1657.73 106.213 1666.27 89.7976 1692.43 83.7198C1690.19 72.0176 1712.95 57.1108 1726.48 55.6229ZM1730.15 58.5621C1716.76 59.6572 1691.61 73.4613 1699.92 85.3497C1651.22 94.6449 1676.97 121.048 1686.4 119.699C1690.36 119.131 1708.92 74.5895 1744.29 110.707C1715.73 88.4913 1681.17 113.895 1697.09 137.014C1684.31 119.966 1675.35 119.202 1664.99 137.522C1640.82 138.694 1645.48 147.488 1643.83 148.264C1642.55 148.879 1620.13 148.627 1615.29 154.543C1712.38 157.535 1809.48 160.513 1906.57 163.505C1902.79 156.381 1890.77 161.881 1889.7 160.192C1884.65 152.181 1898.31 129.077 1860 146.592C1890.69 128.28 1854.62 131.1 1853.08 129.384C1864.54 119.388 1856.91 107.42 1840.76 104.934C1845.72 79.9261 1804.26 65.9923 1791.28 90.065C1767.37 80.1161 1769.77 55.3467 1730.15 58.5621Z\",\n    fill: \"black\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1730.15 58.5635C1769.77 55.3482 1767.37 80.1175 1791.28 90.0664C1804.26 65.9938 1845.72 79.9276 1840.75 104.936C1856.91 107.421 1864.54 119.389 1853.07 129.385C1854.62 131.102 1890.69 128.282 1860 146.593C1898.31 129.079 1884.65 152.182 1889.7 160.193C1890.77 161.882 1902.79 156.382 1906.56 163.507C1809.47 160.515 1712.38 157.537 1615.29 154.545C1620.13 148.628 1642.55 148.881 1643.83 148.265C1645.48 147.49 1640.82 138.696 1664.99 137.523C1675.35 119.203 1684.31 119.967 1697.09 137.015C1681.17 113.896 1715.73 88.4928 1744.29 110.708C1708.91 74.591 1690.36 119.132 1686.4 119.7C1676.97 121.049 1651.22 94.6463 1699.92 85.3511C1691.61 73.4627 1716.76 59.6587 1730.15 58.5635Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1226.53 34.3732C1256.6 31.8519 1258.87 53.2883 1265.45 52.8872C1266.78 52.8087 1271.65 45.3366 1285.95 46.9389C1301.95 48.727 1302.48 63.4183 1303.18 64.4754C1303.95 65.6434 1318.58 69.482 1313.21 80.7198C1324.91 82.7199 1323.51 86.8297 1324.08 87.1942C1331.5 88.2894 1338.23 94.2912 1334.72 100.191C1335.27 100.961 1347.08 99.4604 1346.06 107.042C1278.03 105.237 1210.01 103.426 1141.98 101.622C1153.64 91.7088 1165.88 96.9959 1173.38 88.0024C1184.82 86.8466 1183.13 80.4072 1193.57 77.3298C1179.45 68.2895 1186.07 55.5058 1203.15 52.9356C1201.46 44.3417 1216.05 35.2517 1226.53 34.3732ZM1226.45 36.5473C1216.24 37.455 1203.2 46.4367 1206.46 54.8431C1186.37 56.1816 1182.54 71.5618 1198.92 76.3931C1205.03 59.9243 1227.7 57.9693 1235.46 67.6347C1243.73 77.9386 1232.67 67.4977 1232.09 67.1766C1224.93 63.136 1214.35 64.2074 1208.36 69.0433C1204.54 72.1271 1203.62 76.9761 1202.15 80.4747C1211.24 93.2464 1202.21 87.4845 1199.31 78.9433C1198.51 78.7974 1197.71 78.6585 1196.91 78.5126C1190.88 80.7067 1184.94 82.8454 1184 88.3032C1169.19 88.8847 1172.06 94.8061 1171.19 95.1949C1170.24 95.6177 1153.99 95.6579 1150.74 99.6938C1214.91 101.389 1279.08 103.091 1343.24 104.785C1340.08 100.909 1332.28 103.851 1331.72 103.008C1334.33 98.1343 1331.35 89.7579 1324.97 89.3957C1321.22 90.8636 1317.45 92.324 1313.7 93.7919C1335.6 78.1258 1297.27 87.2977 1311.31 79.9404C1313.23 67.3282 1300.71 67.3725 1300.21 66.5675C1302.71 50.7655 1276.86 41.2547 1267.25 56.5654C1264.24 55.1525 1261.24 53.7327 1258.23 52.3198C1256.93 51.0788 1252.65 34.221 1226.45 36.5473Z\",\n    fill: \"black\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1226.45 36.5427C1252.65 34.2164 1256.93 51.0741 1258.23 52.3151C1261.24 53.728 1264.24 55.1479 1267.25 56.5608C1276.86 41.2501 1302.71 50.7608 1300.2 66.5628C1300.71 67.3678 1313.23 67.3235 1311.31 79.9357C1297.27 87.2931 1335.6 78.1211 1313.7 93.7873C1317.45 92.3194 1321.21 90.859 1324.97 89.391C1331.35 89.7532 1334.33 98.1296 1331.72 103.003C1332.28 103.846 1340.08 100.904 1343.24 104.781C1279.07 103.086 1214.91 101.384 1150.74 99.6891C1153.99 95.6532 1170.24 95.613 1171.19 95.1902C1172.06 94.8015 1169.19 88.88 1184 88.2985C1184.94 82.8407 1190.88 80.7021 1196.91 78.5079C1197.7 78.6538 1198.51 78.7927 1199.31 78.9386C1202.21 87.4798 1211.24 93.2417 1202.15 80.4701C1203.62 76.9715 1204.54 72.1224 1208.36 69.0387C1214.35 64.2027 1224.93 63.1313 1232.09 67.172C1232.67 67.493 1243.73 77.934 1235.46 67.63C1227.69 57.9646 1205.03 59.9196 1198.92 76.3885C1182.54 71.5571 1186.36 56.1769 1206.46 54.8384C1203.2 46.4321 1216.23 37.4503 1226.45 36.5427Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2024.35 196.695L1996.05 777.28C1478.3 774.816 960.557 772.366 442.809 769.901L422.697 616.35L2024.35 196.695Z\",\n    fill: \"#7B52AC\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M953.534 708.469C963.733 695.979 974.106 682.234 984.226 667.189C995.574 650.321 1005 634.174 1012.91 619.115C1017.57 619.732 1024.23 620.049 1030.91 617.945C1047.49 612.712 1051.87 596.422 1055.56 588.303C1061.95 574.219 1079.12 556.385 1126.88 540.597C1127.24 535.421 1129.11 525.442 1138.96 517.336C1142.64 514.322 1148.25 509.699 1154.92 510.195C1162.43 510.763 1165.5 517.393 1173.45 525.05C1178.8 530.177 1187.69 537.069 1202.71 543.246C1202.28 545.657 1200.44 553.602 1191.26 560.111C1180.72 567.584 1168.03 567.806 1165.16 567.805C1166.77 570.387 1168.7 574.141 1169.73 578.824C1173.14 594.43 1163.42 606.739 1160.25 610.656C1150.05 623.178 1135.39 628.805 1129.21 630.843C1135.1 628.959 1150.21 623.409 1160.25 610.656C1175.54 591.218 1166.62 570.9 1165.19 567.806C1168.05 567.806 1180.74 567.584 1191.28 560.112C1200.46 553.603 1202.3 545.642 1202.73 543.247C1205.62 537.254 1222.52 503.613 1259.06 498.412C1262.78 497.887 1266.92 497.617 1271.49 497.795C1273.37 490.675 1277.89 478.622 1290.07 466.834C1295.44 461.622 1305.24 450.704 1313.03 452.314C1318.35 453.402 1318.13 459.309 1323.77 465.688C1330.87 473.741 1343.34 478.021 1357.46 480.133C1380.39 513.223 1403.34 546.33 1426.26 579.42C1432.36 589.189 1439.54 595.192 1445.15 598.938C1450.63 602.599 1457.03 605.672 1458.08 611.195C1458.91 615.58 1455.41 616.467 1455.61 619.897C1456.25 630.74 1491.92 632.251 1504.44 650.361C1507.4 654.645 1508.25 658.66 1508.55 661.011C1463.71 700.339 1416.71 718.879 1389.42 727.589C1372.47 733.006 1274.91 762.827 1167.94 739.02C1119.12 728.153 1092.97 711.596 1027.7 707.226C996.758 705.154 970.933 706.749 953.598 708.503L953.534 708.469Z\",\n    fill: \"#7B52AC\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1160.25 610.656C1163.42 606.739 1173.14 594.43 1169.73 578.824C1168.7 574.141 1166.77 570.387 1165.16 567.805C1168.03 567.806 1180.72 567.584 1191.26 560.111C1200.44 553.602 1202.28 545.657 1202.71 543.246C1187.69 537.069 1178.8 530.177 1173.45 525.05C1165.5 517.393 1162.43 510.763 1154.92 510.195C1148.25 509.699 1142.64 514.322 1138.96 517.336C1129.11 525.442 1127.24 535.421 1126.88 540.597C1079.12 556.385 1061.95 574.219 1055.56 588.303C1051.87 596.422 1047.49 612.712 1030.91 617.945C1024.23 620.049 1017.57 619.732 1012.91 619.115C1005 634.174 995.574 650.321 984.226 667.189C974.106 682.234 963.733 695.979 953.534 708.469L953.598 708.503C970.933 706.749 996.758 705.154 1027.7 707.226C1092.97 711.596 1119.12 728.153 1167.94 739.02C1274.91 762.827 1372.47 733.006 1389.42 727.589C1416.71 718.879 1463.71 700.339 1508.55 661.011C1508.25 658.66 1507.4 654.645 1504.44 650.361C1491.92 632.251 1456.25 630.74 1455.61 619.897C1455.41 616.467 1458.91 615.58 1458.08 611.195C1457.03 605.672 1450.63 602.599 1445.15 598.938C1439.54 595.192 1432.36 589.189 1426.26 579.42C1403.34 546.33 1380.39 513.223 1357.46 480.133C1343.34 478.021 1330.87 473.741 1323.77 465.688C1318.13 459.309 1318.35 453.402 1313.03 452.314C1305.24 450.704 1295.44 461.622 1290.07 466.834C1277.89 478.622 1273.37 490.675 1271.49 497.795C1266.92 497.617 1262.78 497.887 1259.06 498.412C1222.52 503.613 1205.62 537.254 1202.73 543.247C1202.3 545.642 1200.46 553.603 1191.28 560.112C1180.74 567.584 1168.05 567.806 1165.19 567.806C1166.62 570.9 1175.54 591.218 1160.25 610.656ZM1160.25 610.656C1150.05 623.178 1135.39 628.805 1129.21 630.843C1135.1 628.959 1150.21 623.409 1160.25 610.656Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1152 550.774C1149.8 558.435 1146.58 567.116 1141.82 576.399C1134.8 590.078 1126.37 601.244 1118.72 609.881\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1106.21 583.622C1104.66 584.903 1101.94 587.492 1100.47 591.359C1099.14 594.859 1099.41 597.856 1099.74 599.561\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1092.3 584.18C1090.62 585.91 1088.51 588.5 1086.96 591.929C1085.25 595.726 1084.92 599.093 1084.94 601.356\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1088.92 573.017C1085.46 575.795 1081.25 579.763 1077.54 585.021C1073.29 591.04 1071.26 596.588 1070.24 600.614\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1058.72 650.865C1052.48 659.783 1045.86 665.589 1040.8 669.323C1037.11 672.03 1033.92 673.894 1032.5 677.618C1030.41 683.051 1034.49 686.14 1033.26 691.549C1032.59 694.454 1030.3 698.428 1022.75 702.625\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1068.01 661.574C1065 663.88 1061.27 667.231 1057.97 671.726C1054.44 676.505 1052.62 680.913 1051.62 684.196\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1112.45 643.226C1111.39 643.47 1108.65 644.201 1106.45 646.222C1104.4 648.087 1103.9 650.044 1103.76 650.88\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1187.7 657.044C1183.37 660.83 1178.86 665.323 1174.58 670.581C1164.4 683.104 1159.47 695.145 1156.94 704.218\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1227.32 585.461C1224.85 589.64 1220.78 595.131 1214.15 600.581C1210.42 603.626 1206.7 606.009 1203.36 607.869\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1214.3 573.416C1214.79 572.396 1216.26 569.756 1219.97 567.89C1222.29 566.728 1224.54 566.324 1225.92 566.169C1226.03 562.101 1227.07 553.083 1235.13 544.297C1239.45 539.589 1244.4 536.482 1248.11 534.552\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1296.4 491.974C1290.03 494.233 1287.33 496.983 1286.03 498.95C1282.25 504.675 1287.1 508.689 1282.93 514.985C1280.98 517.934 1279.57 517.571 1274.65 522.65C1271.17 526.251 1268.92 529.483 1267.59 531.61\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1286.23 528.345C1286.35 529.35 1286.45 531.728 1284.75 534.313C1282.97 536.993 1280.25 538.386 1279.12 538.887\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1346.21 522.143C1347.07 533.945 1352.16 539.323 1356.84 542.041C1361.81 544.928 1364.71 543.879 1369.71 547.139C1376.28 551.461 1376.46 556.7 1380.39 565.777C1382.29 570.177 1385.5 576.456 1391.09 583.787\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1345.89 556.899C1346.54 558.517 1347.49 560.951 1348.47 563.935C1350.1 568.86 1349.89 569.291 1350.75 570.64C1353.61 575.164 1359.01 575.139 1362.66 578.247C1365.46 580.62 1367.61 585.173 1364.17 594.72\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1371.63 609.471C1371.78 610.687 1372.5 614.584 1376.79 617.84C1379.55 619.937 1382.59 620.831 1384.23 621.217\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1150.56 260.316C1151.58 258.672 1152.59 256.66 1153.62 254.392C1153.27 254.581 1152.89 254.712 1152.53 254.843C1151.91 256.683 1151.28 258.508 1150.56 260.316Z\",\n    fill: \"white\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1211.59 274.074C1211.25 273.341 1210.96 272.61 1210.68 271.865C1210.71 272.22 1210.73 272.589 1210.76 272.944C1210.98 274.085 1211.24 275.17 1211.51 276.226C1211.51 275.503 1211.56 274.796 1211.59 274.074Z\",\n    fill: \"white\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1551.01 309.523C1551.12 309.838 1552.55 311.311 1554.41 313.263C1553.77 311.714 1553.16 310.137 1552.64 308.52C1552.2 307.133 1551.78 305.732 1551.39 304.332C1551.29 307.277 1550.79 308.879 1551.01 309.538L1551.01 309.523Z\",\n    fill: \"white\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1600.11 282.577L1567.03 255.071C1523.59 249.785 1526.65 222.582 1523.39 221.6C1498.61 236.179 1507.39 247.238 1506.23 249.554C1468.99 272.879 1478.08 226.262 1475.48 214.131C1473.29 203.95 1439.26 214.403 1439.35 238.975C1417.48 243.734 1403.39 277.908 1374.99 262.867C1336.52 260.842 1339.63 267.549 1317.83 288.519C1328.54 297.885 1339.23 307.249 1349.93 316.615C1361.28 302.716 1383.09 298.843 1397.29 287.033C1398.18 287.314 1399.08 287.581 1399.98 287.861C1392.23 295.209 1382.66 303.341 1368.91 304.246C1362.84 309.052 1356.79 313.873 1350.72 318.679C1362.98 334.152 1348.15 356.734 1380.29 358.745C1383.29 360.129 1379.17 364.765 1369.14 362.142C1346.77 356.291 1355.77 332.687 1348.82 319.916C1343.87 310.814 1313.05 295.378 1304.71 279.014C1296.52 285.139 1296.11 274.548 1294.99 273.743C1282.05 264.451 1257.54 272.342 1253.32 253.173C1254.24 263.322 1255.17 273.471 1256.09 283.62C1212.01 299.794 1226.46 323.254 1206.12 295.552C1204.81 292.111 1203.48 288.669 1202.17 285.229C1182.81 289.714 1171.14 301.629 1155.96 310.838L1152.17 313.312C1144.36 323.806 1130.49 327.895 1116.35 331.281C1115.99 331.503 1115.63 331.724 1115.24 331.93C1110.41 334.52 1104.91 335.617 1099.1 336.023C1093.46 338.969 1087.71 341.815 1082.23 344.879C1080.04 346.112 1077.87 347.36 1075.72 348.636C1073.29 351.821 1071.58 355.667 1070.93 360.476C1070.33 360.778 1069.75 361.081 1069.18 361.371C1066.59 366.122 1059.44 370.099 1051.06 373.291C1043.6 379.041 1037.62 383.274 1018.38 385.72C1015.74 407.254 985.39 415.738 973.629 432.951C977.029 472.143 945.399 481.617 939.158 491.542C936.265 499.452 925.292 484.334 925.292 484.334L913.172 503.025C1146.21 422.881 1372.11 368.666 1605.16 288.522C1603.26 286.609 1601.59 284.628 1600.12 282.592L1600.11 282.577ZM1118.76 369.272C1119.65 381.102 1104.29 390.354 1091.65 395.98C1101.35 386.456 1112.52 381.095 1118.76 369.272ZM1054.49 422.783L1086.03 398.349C1086.3 399.038 1086.55 399.725 1086.82 400.414C1070.43 415.395 1054.04 430.39 1037.65 445.371C1043.26 437.846 1048.88 430.308 1054.49 422.783ZM977.247 479.586C977.463 481.174 977.662 482.747 977.879 484.334C974.735 491.247 947.69 499.383 977.247 479.586ZM986.734 473.402C991.378 461.783 996.005 450.149 1000.65 438.531C1019.79 426.48 1024.2 406.651 1044.29 394.601C1035.38 406.432 1026.48 418.25 1017.57 430.081C990.438 443.691 1007.39 456.35 986.734 473.402ZM1089.19 422.088C1075.85 431.86 1062.5 441.645 1049.15 451.417L1042.63 469.214C1026.82 494.042 1031.75 471.456 1049.15 451.417C1049.9 448.997 1050.66 446.564 1051.4 444.143C1073.65 431.074 1101.45 404.54 1089.19 422.088ZM1140.31 359.743C1128.53 378.449 1119.29 398.109 1096.23 411.051C1090.98 409.793 1105.89 401.269 1106.9 400.223C1118.04 386.73 1129.17 373.236 1140.31 359.743L1146.59 345.971C1163.6 318.654 1173.96 316.827 1140.31 359.743ZM1274.51 327.082C1273.64 313.665 1268.11 301.299 1262.18 288.682C1273.53 299.417 1278.62 314.006 1274.51 327.082ZM1245.97 346.977C1250.96 354.574 1249.73 362.647 1249.13 370.716C1252.49 382.096 1261.36 385.446 1262.73 387.652C1271.17 401.289 1238.53 386.421 1245.97 346.977ZM1274.35 329.765C1279.09 328.301 1276.65 345.916 1282.65 359.184C1289.72 368.34 1296.77 377.496 1303.84 386.652C1281.17 370.769 1271.67 352.683 1274.35 329.765ZM1299.81 362.19C1304.18 365.363 1308.56 368.522 1312.93 371.695C1326.45 388.707 1310.01 381.031 1299.81 362.19ZM1421.4 264.864C1404.47 289.237 1391.94 280.022 1422.59 260.221C1422.19 261.773 1421.8 263.312 1421.4 264.864ZM1529.55 271.76C1534.29 278.992 1539.04 286.212 1543.78 293.444C1553.61 319.235 1522.64 273.907 1529.55 271.76ZM1568.53 291.502C1558.85 280.177 1549.19 268.852 1539.51 257.526C1548.65 261.982 1574.94 290.041 1568.53 291.502Z\",\n    fill: \"#A68FC8\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M911.854 501.775C910.806 504.623 910.287 507.486 910.56 510.358C910.777 512.675 910.96 514.92 910.918 517.102C911.609 512.642 911.964 507.576 911.854 501.775Z\",\n    fill: \"white\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1422.58 260.214C1422.18 261.766 1421.8 263.305 1421.4 264.857C1404.47 289.231 1391.93 280.015 1422.58 260.214Z\",\n    fill: \"black\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1529.55 271.746C1534.29 278.978 1539.04 286.197 1543.78 293.429C1553.6 319.22 1522.64 273.893 1529.55 271.746Z\",\n    fill: \"black\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1539.51 257.516C1548.64 261.972 1574.94 290.03 1568.52 291.491C1558.85 280.166 1549.19 268.842 1539.51 257.516Z\",\n    fill: \"black\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1262.17 288.674C1273.53 299.41 1278.61 313.998 1274.5 327.074C1273.63 313.657 1268.11 301.292 1262.17 288.674Z\",\n    fill: \"black\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1274.35 329.76C1279.09 328.296 1276.64 345.91 1282.65 359.178C1289.71 368.334 1296.76 377.489 1303.83 386.645C1281.16 370.763 1271.66 352.677 1274.35 329.76Z\",\n    fill: \"black\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1140.3 359.732L1146.59 345.96C1163.6 318.644 1173.96 316.818 1140.3 359.732Z\",\n    fill: \"black\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1245.96 346.976C1250.95 354.573 1249.75 362.647 1249.13 370.715C1252.49 382.094 1261.36 385.445 1262.72 387.65C1271.17 401.287 1238.53 386.419 1245.96 346.976Z\",\n    fill: \"black\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1299.8 362.182C1304.18 365.354 1308.55 368.514 1312.93 371.687C1326.44 388.699 1310 381.022 1299.8 362.182Z\",\n    fill: \"black\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1140.3 359.738C1128.53 378.443 1119.29 398.103 1096.23 411.044C1090.98 409.786 1105.89 401.263 1106.9 400.217C1118.04 386.724 1129.16 373.23 1140.3 359.738Z\",\n    fill: \"black\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1118.76 369.264C1119.65 381.093 1104.29 390.345 1091.64 395.971C1101.34 386.447 1112.51 381.086 1118.76 369.264Z\",\n    fill: \"black\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1044.29 394.6C1035.38 406.431 1026.47 418.249 1017.56 430.08C990.434 443.689 1007.39 456.349 986.73 473.4C991.374 461.781 996.001 450.148 1000.65 438.529C1019.78 426.479 1024.2 406.649 1044.29 394.6Z\",\n    fill: \"black\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1086.03 398.344C1086.29 399.032 1086.55 399.72 1086.82 400.408C1070.42 415.389 1054.03 430.384 1037.64 445.364C1043.25 437.839 1048.88 430.302 1054.48 422.777L1086.03 398.344Z\",\n    fill: \"black\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1049.14 451.415C1049.89 448.995 1050.65 446.562 1051.4 444.142C1073.64 431.072 1101.44 404.539 1089.19 422.087C1075.84 431.858 1062.49 441.644 1049.14 451.415Z\",\n    fill: \"black\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1049.14 451.41L1042.62 469.207C1026.82 494.034 1031.74 471.448 1049.14 451.41Z\",\n    fill: \"black\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M977.241 479.579C977.458 481.166 977.657 482.739 977.873 484.327C974.729 491.239 947.689 499.375 977.241 479.579Z\",\n    fill: \"black\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1155.96 310.834C1174.38 287.489 1189.73 287.323 1208.26 274.806C1209.15 275.087 1210.05 275.354 1210.95 275.634C1212.32 277.746 1201.67 286.69 1217.67 300.924C1239.26 281.194 1262.83 290.6 1244.78 258.736C1252 228.258 1261.69 258.578 1265.66 260.61C1276.16 262.789 1286.69 264.957 1297.2 267.136C1300.32 262.187 1285.72 258.803 1284.08 257.631C1251.01 234.285 1260.52 198.475 1256.33 186.71C1252.9 182.919 1249.48 179.141 1246.05 175.35C1244.89 173.695 1239.03 146.826 1220.2 180.593C1211.22 196.688 1221.49 208.518 1180.83 229.48C1176.22 263.352 1172.66 264.251 1141.06 285.074C1149.34 302.363 1104.67 340.257 1152.17 313.308C1132.77 339.41 1075.65 325.88 1070.93 360.459C1045.8 372.932 1049.88 381.701 1018.36 385.702C1015.72 407.236 985.371 415.72 973.61 432.933C977.01 472.125 945.38 481.599 939.139 491.524C936.246 499.434 934.798 482.163 931.905 490.073C926.696 495.79 890.033 498.52 928.782 512.466C935.033 472.052 970.711 483.029 970.132 430.04C984.28 412.265 1010.55 405.135 1014.88 382.809C1047.07 377.447 1040.93 371.386 1065.56 358.803C1072.91 326.584 1124.22 330.263 1127.78 324.693C1126.3 308.333 1143.05 301.166 1137.5 283.523C1167.25 262.714 1172.58 260.773 1177.27 227.929C1186.1 222.608 1194.92 217.274 1203.75 211.953C1211.94 203.352 1219.38 168.175 1233.09 163.162C1247.16 158.023 1244.58 170.891 1261.78 187.024C1262.29 199.168 1262.78 211.311 1263.28 223.456C1269.16 256.288 1299.21 252.566 1304.79 262.189C1309.11 283.867 1311.37 291.32 1329.85 270.361C1332.56 265.577 1335.28 260.807 1337.99 256.023C1339.55 254.349 1348.04 252.361 1360.21 235.09C1369.3 236.179 1385.17 239.138 1390.73 243.577C1405.04 246.137 1412.38 239.627 1408.91 229.143C1418.02 219.127 1427.11 209.097 1436.22 199.081C1428.33 209.167 1420.44 219.266 1412.55 229.352C1412.34 273.035 1353.66 216.191 1356.49 251.703C1352.15 253.243 1347.79 254.796 1343.45 256.336C1336.33 263.828 1348.38 258.667 1349.69 258.715C1365.43 260.065 1381.15 261.427 1396.89 262.777C1407.76 255.07 1421.09 249.349 1427.49 238.962C1445.81 240.676 1434.39 226.423 1446.15 216.478C1450.12 213.113 1474.51 201.499 1479.27 211.654C1480.45 214.185 1479.49 251.242 1490.5 253.356C1494.54 252.013 1498.55 250.683 1502.59 249.341C1503.63 247.825 1503.73 227.034 1517.22 217.876C1534.74 205.975 1521.84 244.781 1574.54 251.461C1595.09 274.518 1580.79 247.164 1578.17 236.19C1536.88 220.165 1557.42 187.748 1527.02 144.404C1506.37 114.975 1506.82 135.246 1489.63 159.752C1470.99 166.379 1469.18 173.988 1459.23 180.213C1465.11 174.575 1468.53 163.572 1486.23 155.518C1506.54 115.496 1518.34 115.057 1539.12 155.869C1558.61 194.157 1544.84 219.129 1583.79 233.821C1595.15 257.965 1590.33 266.167 1590.9 267.883C1591.24 268.912 1606.4 283.488 1601.81 283.991C1590.21 274.345 1578.63 264.713 1567.02 255.067C1523.59 249.781 1526.65 222.578 1523.39 221.596C1498.61 236.175 1507.39 247.234 1506.23 249.55C1468.98 272.875 1478.08 226.258 1475.48 214.128C1473.29 203.946 1439.26 214.4 1439.35 238.971C1417.48 243.73 1403.39 277.904 1374.99 262.863C1336.52 260.838 1339.63 267.545 1317.83 288.515C1328.54 297.881 1339.22 307.245 1349.93 316.611C1361.28 302.713 1383.09 298.839 1397.29 287.03C1398.18 287.31 1399.08 287.577 1399.97 287.857C1392.22 295.205 1382.66 303.337 1368.9 304.242C1362.84 309.048 1356.79 313.869 1350.72 318.676C1362.98 334.148 1348.15 356.73 1380.29 358.741C1383.29 360.125 1379.18 364.762 1369.14 362.138C1346.77 356.287 1355.77 332.683 1348.82 319.913C1343.87 310.811 1313.05 295.374 1304.71 279.01C1296.52 285.135 1296.11 274.544 1294.99 273.739C1282.05 264.447 1257.54 272.338 1253.32 253.17C1254.24 263.318 1255.17 273.468 1256.09 283.616C1212 299.79 1226.46 323.25 1206.12 295.548C1204.81 292.108 1203.48 288.666 1202.17 285.225C1182.8 289.71 1171.14 301.625 1155.96 310.834Z\",\n    fill: \"black\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1436.22 199.08L1459.23 180.212C1469.18 173.986 1470.99 166.378 1489.63 159.75C1506.82 135.244 1506.37 114.973 1527.02 144.403C1557.42 187.746 1536.88 220.163 1578.17 236.189C1580.79 247.162 1595.09 274.517 1574.53 251.46C1521.84 244.779 1534.74 205.974 1517.22 217.874C1503.72 227.032 1503.63 247.824 1502.59 249.339C1498.55 250.682 1494.53 252.012 1490.5 253.355C1479.49 251.241 1480.45 214.184 1479.27 211.652C1474.51 201.498 1450.12 213.112 1446.14 216.477C1434.39 226.421 1445.81 240.674 1427.49 238.96C1421.09 249.347 1407.76 255.069 1396.89 262.776C1381.15 261.426 1365.43 260.063 1349.69 258.714C1348.38 258.665 1336.33 263.827 1343.45 256.335C1347.79 254.795 1352.15 253.242 1356.49 251.701C1353.66 216.19 1412.34 273.033 1412.54 229.351C1420.44 219.265 1428.33 209.166 1436.22 199.08Z\",\n    fill: \"white\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1155.96 310.836C1154.69 311.664 1153.44 312.481 1152.16 313.309C1104.67 340.258 1149.34 302.365 1141.06 285.075C1172.66 264.252 1176.22 263.353 1180.83 229.481C1221.49 208.52 1211.22 196.689 1220.2 180.595C1239.03 146.828 1244.89 173.696 1246.05 175.352C1249.48 179.143 1252.9 182.921 1256.33 186.712C1260.52 198.476 1251 234.287 1284.07 257.633C1285.72 258.804 1300.32 262.189 1297.2 267.138C1286.69 264.958 1276.16 262.791 1265.65 260.611C1261.69 258.579 1252 228.259 1244.78 258.737C1262.83 290.601 1239.26 281.196 1217.66 300.925C1201.66 286.692 1212.32 277.747 1210.95 275.636C1210.05 275.355 1209.15 275.088 1208.26 274.808C1189.73 287.324 1174.38 287.491 1155.96 310.836Z\",\n    fill: \"white\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2013.11 188.64L2021.51 191.005C2018.55 255.183 2015.57 319.375 2012.61 383.553C1986.29 370.715 1995.15 368.428 1994.32 367.441C1984.83 356.071 1975.9 363.275 1974.3 347.026C1947.44 337.915 1978.93 318.932 1967.39 303.592C1964.27 311.768 1961.14 319.959 1958.01 328.135C1954.5 334.259 1942.1 340.5 1944.03 349.004C1927.59 356.93 1932.39 369.768 1929.91 374.121L1906.82 386.226C1901.18 390.773 1903.55 408.702 1875.28 371.156C1879.41 353.141 1866.77 351.45 1857.61 338.049C1862.93 323.286 1844.14 314.815 1855.13 302.538C1856.85 300.63 1875.26 293.482 1873.69 285.343C1864.37 290.99 1855.03 296.623 1845.71 302.271C1839 329.952 1787.43 354.022 1762.92 372.934C1752.29 355.536 1767.8 345.683 1752.44 323.728C1755.37 321.217 1758.86 317.516 1761.23 312.579C1767.44 299.67 1761.41 287.903 1759.44 284.431C1843.99 252.505 1928.54 220.565 2013.11 188.64ZM1895.41 259.023C1890.1 266.429 1884.81 273.849 1879.5 281.255C1886.1 283.455 1910.19 256.366 1895.41 259.023Z\",\n    fill: \"white\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1895.41 259.026C1910.19 256.369 1886.1 283.457 1879.5 281.257C1884.81 273.852 1890.1 266.432 1895.41 259.026Z\",\n    fill: \"black\"\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M820.666 684.443C838.127 679.707 849.564 673.495 856.68 668.82C875.572 656.412 876.358 646.738 894.668 639.942C907.774 635.082 912.514 638.122 927.378 634.205C939.993 630.877 955.277 623.754 969.697 607.661\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M929.587 654.245C936.252 647.445 946.095 638.878 959.982 630.694C976.819 620.78 993.197 615.191 1004.98 611.995\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1588.95 435.501C1568.07 440.155 1559.4 447.068 1555.8 453.416C1551.58 460.867 1556.15 464.342 1552.07 474.391C1547.94 484.566 1542.12 483.763 1529 499.255C1529 499.255 1526.66 502.038 1510.29 526.468C1505.79 530.778 1501.06 535.818 1496.45 541.614C1491.19 548.227 1487.11 554.505 1483.96 560.115\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1508.22 462.065C1512.44 457.492 1518.83 451.62 1528 445.982C1538.62 439.45 1549.02 435.676 1556.52 433.479\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1577.59 422.974C1582.69 418.313 1587.78 413.652 1592.88 408.991\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1616.93 397.47C1626.94 389.815 1634.75 383.443 1639.75 379.261C1658.96 363.219 1664.99 356.316 1679.25 349.32C1688.3 344.884 1696.56 342.41 1701.7 341.082\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1794.84 379.198C1764.77 391.643 1758.34 401.966 1758.3 409.223C1758.26 415.375 1762.83 418.084 1762.12 425.975C1761.23 435.986 1753.05 441.298 1745 449.901C1737.72 457.676 1738.94 459.171 1724.45 487.043C1719.26 497.046 1711.36 511.708 1700.74 529.638\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1843.86 371.713C1844.77 392.281 1852.62 404.369 1860.03 411.71C1863.89 415.548 1870.54 420.967 1871.32 429.07C1871.96 435.85 1868.21 441.627 1864.82 445.529\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1863.99 467.703C1862.77 474.332 1861.55 480.946 1860.3 487.574\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1855.37 501.853L1855 511.822\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1835.71 473.557C1834.62 476.489 1833.54 479.407 1832.43 482.338\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1838.33 456.247C1845.71 449.269 1846.3 443.998 1846.05 441.169C1845.91 439.734 1845.47 437.907 1844.54 434.223C1843.57 430.297 1842.62 427.08 1841.92 424.906\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1949.06 389.862C1948.52 393.873 1948.63 399.66 1952.63 405.316C1954.53 407.993 1956.03 408.858 1957.63 411.185C1960.01 414.641 1961.83 420.235 1958.44 429.325\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1956.45 362.701C1956.17 363.756 1955.68 366.365 1957.19 369.385C1958.67 372.333 1961.26 374.036 1962.41 374.707\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1968.34 387.452C1968.27 390.526 1968.65 395.13 1971.34 400.111C1975.01 406.964 1979.17 407.351 1983.14 413.758C1988.44 422.286 1987.18 431.409 1986.85 433.837C1985.92 440.588 1983.11 444.25 1985.78 449.713C1987.15 452.531 1989.36 454.55 1990.97 455.772\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.307 476.296C31.6991 513.208 31.0994 543.076 31.6108 563.63C32.5428 600.854 31.962 597.681 28.9782 620.945C25.8697 645.255 25.7847 665.262 29.5296 691.339C31.3193 703.834 34.5887 713.956 37.1428 720.68L394.815 722.473C394.44 714.655 384.308 564.323 238.196 500.642C171.882 471.743 69.2949 473.389 37.295 476.306L37.307 476.296Z\",\n    fill: \"#7E7B74\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M329.561 680.883C306.181 676.564 296.804 676.617 280.91 672.992C270.983 670.732 272.901 670.314 264.525 668.609C248.597 665.363 238.865 666.299 225.423 665.744C215.813 665.348 205.77 663.654 185.696 660.258C150.291 654.275 150.523 651.429 132.617 650.284C117.033 649.289 99.4434 648.375 84.1303 657.309C80.9066 659.195 70.7541 665.118 67.2457 675.406C65.0957 681.698 66.7469 685.789 67.9886 697.753C68.9427 706.939 69.0413 714.885 68.8606 721.127L355.736 722.565C354.337 719.82 352.165 715.657 349.334 710.585C345.902 704.434 345.317 703.784 344.854 701.73C343.202 694.433 348.047 691.242 345.997 687.189C344.352 683.925 339.557 682.716 329.549 680.873L329.561 680.883Z\",\n    fill: \"black\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.816 471.338C280.643 468.877 277.736 467.182 274.536 466.508L256.616 462.736C258.699 460.158 233.802 462.622 233.802 462.622C233.802 462.622 225.062 463.713 221.633 462.561C219.257 461.764 210.438 456.334 207.951 454.788C207.511 454.515 207.042 454.313 206.541 454.189C203.998 453.56 195.539 451.563 189.231 451.205C179.233 450.637 172.726 449.848 167.962 449.476C161.795 448.987 162.367 449.497 149.049 449.381C129.073 449.201 130.889 448.085 124.453 448.74C120.01 449.195 106.064 450.609 96.1599 458.983C92.0423 462.457 88.6229 467.15 87.4154 468.807C86.6262 469.878 83.9488 473.628 82.046 477.542C79.0849 483.651 78.826 489.166 78.439 499.927C78.0217 511.445 77.7672 519.071 77.6703 522.127C87.0097 518.839 96.3612 515.55 105.701 512.271C125.32 527.016 140.554 529.572 150.75 529.255C171.095 528.61 186.138 516.05 205.485 517.69C207.541 517.87 213.661 518.538 217.794 515.561C221.231 513.079 221.913 509.08 221.975 506.233C221.366 511.835 221.617 519.235 225.448 526.901C232.347 540.706 247.272 550.051 247.848 549.616C248.401 549.2 240.011 536.463 227.881 535.227C221.532 534.578 219.55 537.635 210.242 537.22C202.868 536.884 201.209 534.835 194.46 534.024C185.944 533.006 180.295 535.277 171.793 537.545C158.227 541.171 157.44 539.464 137.796 543.09C108.655 548.47 94.0783 551.165 86.6862 557.769C79.7382 563.977 78.1614 577.113 75.0078 603.373C72.6823 622.748 74.1751 628.192 78.5965 631.102C85.1801 635.446 91.6492 629.813 106.367 634.358C111.224 635.856 116.783 638.861 127.886 644.851C138.541 650.599 138.183 651.165 141.184 651.668C148.613 652.93 152.916 649.865 165.578 651.163C165.795 651.184 167.308 651.391 170.308 651.814C186.095 654.014 194.067 655.119 197.321 655.584C207.108 656.967 211.995 657.659 212.467 657.741C220.235 659.024 220.891 659.416 223.827 659.361C229.965 659.232 231.582 657.408 238.323 657.154C241.85 657.022 243.835 657.42 247.778 657.918C247.778 657.918 255.907 658.934 269.068 659.19C279.946 659.403 301.852 655.988 307.572 644.188C312.102 634.831 304.634 623.991 301.701 619.744C298.73 615.438 297.143 614.932 288.999 607.214C284.19 602.66 274.231 593.161 266.109 582.167C261.101 575.381 251.171 560.406 254.106 558.598C256.283 557.265 265.849 562.939 271.07 570.761C274.861 576.436 274.97 581.156 275.587 584.296C279.904 606.233 322.293 619.897 345.388 641.789C348.906 645.122 351.322 648.022 353.03 651.695C355.98 658.042 354.547 661.789 356.327 669.893C357.081 673.571 358.52 678.307 361.472 683.43C375.805 708.285 412.516 719.063 416.568 714.872C419.996 711.324 400.486 696.62 405.662 690.92L434.842 691.067L450.963 697.197L487.212 691.329L480.685 652.335L461.892 636.14L427.127 632.849L433.495 610.396C433.932 608.855 433.599 607.189 432.6 605.917L412.928 580.883C410.761 578.126 407.713 576.197 404.305 575.427L389.714 572.131C387.406 571.61 385.247 570.553 383.411 569.047L364.275 553.338C361.788 551.296 358.68 550.171 355.482 550.155V550.155C346.668 550.111 340.043 541.937 341.85 533.334L346.651 510.473C347.698 505.484 346.126 500.272 342.478 496.644L333.345 487.561C330.511 484.743 326.69 483.149 322.719 483.129L302.7 483.029C299.893 483.015 297.136 482.213 294.742 480.715L288.468 476.788C287.222 476.008 286.094 475.051 285.121 473.949L282.816 471.338Z\",\n    fill: \"#7E7B74\"\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174.986 451.526C125.451 455.888 92.8572 440.032 83.9388 475.464C82.8109 485.744 81.6831 496.034 80.5552 506.314C81.573 522.091 87.1932 505.262 96.8655 505.898C104.156 506.373 120.074 522.264 136.885 524.021C162.742 526.73 177.559 510.027 204.457 511.416C211.881 507.401 207.369 497.441 215.816 496.04C210.755 466.989 219.145 462.78 174.986 451.526Z\",\n    fill: \"black\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.284 453.657C126.309 457.749 95.4005 442.863 86.9402 476.123C85.8699 485.773 84.7996 495.432 83.7292 505.082C84.6932 519.892 90.0242 504.095 99.1966 504.692C106.11 505.138 121.205 520.057 137.147 521.707C161.667 524.251 175.72 508.572 201.228 509.877C208.269 506.109 203.99 496.759 212.001 495.444C207.204 468.174 215.16 464.223 173.284 453.657Z\",\n    fill: \"#939393\"\n  })), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.612 466.826C237.927 466.16 229.179 467.799 220.456 471.171C225.426 490.104 213.703 516.073 225.774 532.931C228.034 536.098 255.084 549.109 261.661 563.48C263.848 560.334 266.047 557.199 268.234 554.053C278.752 545.533 314.865 567.749 326.122 539.408L333.139 509.572C333.192 499.317 325.14 486.521 311.8 485.07C293.864 483.129 292.795 496.266 273.028 471.932C264.556 470.227 256.084 468.531 247.612 466.826ZM234.35 470.742C235.411 478.215 236.485 485.689 237.546 493.162C233.679 486.909 226.575 504.119 227.902 496.1C229.902 493.79 231.89 491.47 233.89 489.161C236.798 479.357 227.104 496.057 226.655 491.116C226.562 490.05 235.2 483.651 232.541 471.231C233.144 471.065 233.747 470.909 234.35 470.742ZM238.209 500.633C239.47 501.167 240.715 508.89 254.067 519.631C244.3 516.137 231.638 497.862 238.209 500.633ZM224.939 503.553C228.837 512.036 232.722 520.519 236.619 529.002C237.345 539.979 223.025 519.853 224.939 503.553ZM247.53 533.538C246.936 534.859 246.342 536.19 245.748 537.512C239.516 527.035 237.273 510.715 245.066 527.551C237.927 503.18 256.898 540.067 257.272 543.046C258.548 553.318 253.4 548.632 247.53 533.538ZM262.558 523.656C282.501 541.231 298.083 531.103 312.159 530.875C323.069 530.7 312.739 533.974 294.671 535.268C308.45 546.399 303.804 548.785 292.863 535.756C281.526 537.113 266.966 532.6 262.558 523.656ZM257.732 524.627C259.585 529.785 261.438 534.932 263.291 540.089C262.265 524.869 268.766 538.762 269.364 544.102C271.248 560.899 252.739 533.624 257.732 524.627Z\",\n    fill: \"black\"\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.35 470.741C233.747 470.907 233.144 471.063 232.542 471.229C235.201 483.649 226.563 490.048 226.656 491.114C227.105 496.055 236.798 479.356 233.89 489.159C231.89 491.469 229.903 493.789 227.903 496.099C226.576 504.118 233.679 486.908 237.547 493.16C236.485 485.687 235.412 478.214 234.35 470.741Z\",\n    fill: \"black\"\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.209 500.631C231.638 497.86 244.3 516.135 254.067 519.629C240.715 508.888 239.47 501.165 238.209 500.631Z\",\n    fill: \"black\"\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M224.94 503.552C223.025 519.852 237.345 539.977 236.618 529.001C232.721 520.518 228.836 512.035 224.94 503.552Z\",\n    fill: \"black\"\n  })), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.067 527.551C245.893 529.546 246.706 531.542 247.531 533.537C253.401 548.632 258.549 553.317 257.272 543.045C256.899 540.066 237.929 503.18 245.067 527.551Z\",\n    fill: \"black\"\n  })), _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.53 533.538C246.705 531.542 245.891 529.547 245.066 527.551C237.273 510.714 239.515 527.035 245.748 537.512C246.342 536.191 246.936 534.859 247.53 533.538Z\",\n    fill: \"black\"\n  })), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.557 523.654C266.965 532.598 281.526 537.111 292.862 535.754C303.803 548.783 308.449 546.397 294.671 535.266C312.738 533.972 323.069 530.698 312.158 530.873C298.082 531.101 282.5 541.229 262.557 523.654Z\",\n    fill: \"black\"\n  })), _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.732 524.627C252.74 533.623 271.248 560.899 269.364 544.102C268.766 538.762 262.265 524.869 263.291 540.089C261.438 534.932 259.585 529.784 257.732 524.627Z\",\n    fill: \"black\"\n  })), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.853 469.16C239.691 468.53 231.415 470.08 223.164 473.27C227.865 491.181 216.775 515.748 228.194 531.696C230.332 534.692 255.922 547 262.144 560.595C264.213 557.62 266.293 554.654 268.362 551.678C278.313 543.618 312.475 564.634 323.125 537.823L329.763 509.598C329.813 499.896 322.196 487.792 309.576 486.419C292.609 484.582 291.597 497.011 272.897 473.99C264.883 472.377 256.868 470.773 248.853 469.16ZM236.307 472.865C237.311 479.934 238.327 487.004 239.331 494.074C235.672 488.159 228.952 504.439 230.208 496.854C232.099 494.668 233.98 492.474 235.872 490.288C238.623 481.015 229.453 496.812 229.027 492.138C228.939 491.13 237.111 485.076 234.596 473.327C235.166 473.17 235.737 473.022 236.307 472.865ZM239.958 501.141C241.151 501.647 242.328 508.953 254.96 519.114C245.72 515.808 233.742 498.52 239.958 501.141ZM227.405 503.904C231.092 511.929 234.767 519.954 238.454 527.979C239.141 538.363 225.594 519.324 227.405 503.904ZM248.776 532.27C248.214 533.52 247.652 534.779 247.09 536.029C241.194 526.119 239.073 510.679 246.445 526.606C239.691 503.551 257.638 538.446 257.992 541.265C259.199 550.982 254.329 546.549 248.776 532.27ZM262.992 522.922C281.859 539.547 296.599 529.966 309.916 529.751C320.237 529.586 310.464 532.683 293.372 533.906C306.407 544.437 302.012 546.694 291.661 534.369C280.937 535.653 267.162 531.382 262.992 522.922ZM258.427 523.841C260.18 528.719 261.932 533.589 263.685 538.467C262.715 524.069 268.866 537.212 269.431 542.264C271.213 558.154 253.703 532.351 258.427 523.841Z\",\n    fill: \"#939393\"\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M236.306 472.865C235.736 473.022 235.165 473.17 234.595 473.327C237.111 485.077 228.939 491.13 229.027 492.139C229.452 496.813 238.622 481.015 235.871 490.289C233.979 492.474 232.099 494.669 230.207 496.854C228.952 504.44 235.672 488.159 239.33 494.074C238.326 487.004 237.31 479.935 236.306 472.865Z\",\n    fill: \"black\"\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.957 501.139C233.741 498.518 245.72 515.807 254.959 519.113C242.328 508.951 241.15 501.645 239.957 501.139Z\",\n    fill: \"black\"\n  })), _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.405 503.903C225.594 519.323 239.141 538.362 238.453 527.978C234.767 519.953 231.092 511.928 227.405 503.903Z\",\n    fill: \"black\"\n  })), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.445 526.605C247.226 528.492 247.995 530.38 248.776 532.268C254.329 546.548 259.199 550.98 257.991 541.263C257.638 538.445 239.692 503.55 246.445 526.605Z\",\n    fill: \"black\"\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.776 532.269C247.995 530.382 247.226 528.494 246.445 526.606C239.073 510.677 241.194 526.118 247.09 536.029C247.652 534.779 248.214 533.519 248.776 532.269Z\",\n    fill: \"black\"\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.992 522.922C267.162 531.382 280.937 535.653 291.661 534.369C302.012 546.694 306.407 544.437 293.372 533.906C310.464 532.683 320.237 529.586 309.916 529.75C296.599 529.966 281.859 539.547 262.992 522.922Z\",\n    fill: \"black\"\n  })), _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.427 523.841C253.704 532.351 271.213 558.154 269.431 542.264C268.866 537.212 262.716 524.07 263.686 538.468C261.933 533.589 260.18 528.72 258.427 523.841Z\",\n    fill: \"black\"\n  })), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.272 530.038C163.833 531.935 95.7257 543.059 79.8132 553.514C61.4438 565.576 67.7927 606.548 63.2766 624.954C73.2023 626.225 83.1406 627.486 93.0664 628.758C105.359 634.739 117.639 640.711 129.932 646.692L152.703 643.674C172.215 651.352 192.821 646.715 213.574 654.421C246.041 642.764 270.327 663.34 289.511 648.537C301.205 639.511 292.277 620.161 283.522 611.44C268.471 604.212 267.692 590.405 255.423 581.02C248.575 568.456 241.714 555.892 234.866 543.328C217.603 525.366 206.948 539.283 187.272 530.038Z\",\n    fill: \"black\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M347.398 555.943C322.89 560.301 299.124 565.369 274.899 556.575C250.83 592.419 316.67 619.424 344.436 640.563C354.83 625.411 374.293 632.548 375.739 625.784C381.802 630.086 395.115 623.402 412.024 629.949C414.179 622.821 416.347 615.702 418.502 608.574C420.143 594.383 408.662 597.253 399.557 581.097C378.138 580.323 362.758 566.883 347.398 555.943ZM305.305 581.62C319.775 583.794 344.878 609.101 374.351 602.876C374.56 603.375 374.757 603.874 374.967 604.373C347.059 609.799 337.46 596.956 316.228 587.649C309.147 584.547 288.488 579.096 305.305 581.62ZM306.599 592.579C309.472 599.892 312.357 607.215 315.23 614.528C309.498 617.039 303.909 596.27 306.599 592.579ZM316.337 601.59C326.038 618.167 330.244 630.634 320.695 618.041C318.962 615.752 314.089 604.605 316.337 601.59ZM332.055 602.664C354.284 645.133 329.055 616.181 330.254 604.149L332.055 602.664ZM326.013 602.634C336.359 618.308 334.992 629.035 330.387 621.076C328.925 614.925 327.475 608.785 326.013 602.634ZM339.329 605.688C356.963 629.255 346.356 626.543 341.216 615.156C340.587 611.997 339.958 608.847 339.329 605.688Z\",\n    fill: \"black\"\n  })), _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M305.304 581.621C288.488 579.097 309.146 584.548 316.227 587.65C337.459 596.957 347.058 609.8 374.966 604.374C374.757 603.875 374.56 603.376 374.35 602.877C344.878 609.102 319.774 583.795 305.304 581.621Z\",\n    fill: \"black\"\n  })), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M306.599 592.58C303.909 596.27 309.498 617.04 315.23 614.529C312.357 607.216 309.472 599.893 306.599 592.58Z\",\n    fill: \"black\"\n  })), _path92 || (_path92 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M316.336 601.59C314.088 604.606 318.96 615.753 320.694 618.042C330.243 630.636 326.036 618.168 316.336 601.59Z\",\n    fill: \"black\"\n  })), _path93 || (_path93 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M332.054 602.667L330.253 604.151C329.054 616.184 354.283 645.137 332.054 602.667Z\",\n    fill: \"black\"\n  })), _path94 || (_path94 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M326.012 602.636C327.474 608.787 328.924 614.928 330.386 621.079C334.992 629.039 336.358 618.311 326.012 602.636Z\",\n    fill: \"black\"\n  })), _path95 || (_path95 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M339.329 605.689C339.958 608.849 340.587 611.998 341.216 615.158C346.356 626.545 356.963 629.257 339.329 605.689Z\",\n    fill: \"black\"\n  })), _path96 || (_path96 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M346.493 558.01C323.379 562.12 300.965 566.9 278.118 558.606C255.419 592.411 317.513 617.88 343.699 637.816C353.502 623.525 371.858 630.257 373.221 623.878C378.94 627.935 391.495 621.631 407.442 627.806C409.474 621.083 411.519 614.369 413.552 607.647C415.099 594.263 404.271 596.97 395.684 581.733C375.484 581.003 360.979 568.328 346.493 558.01ZM306.795 582.226C320.441 584.276 344.116 608.144 371.912 602.273C372.11 602.744 372.296 603.214 372.493 603.685C346.173 608.802 337.12 596.69 317.096 587.912C310.418 584.987 290.935 579.846 306.795 582.226ZM308.015 592.562C310.725 599.459 313.446 606.365 316.155 613.262C310.749 615.63 305.478 596.043 308.015 592.562ZM317.199 601.06C326.348 616.694 330.315 628.452 321.309 616.575C319.674 614.416 315.079 603.904 317.199 601.06ZM332.023 602.073C352.987 642.126 329.194 614.821 330.324 603.473L332.023 602.073ZM326.324 602.045C336.081 616.827 334.793 626.944 330.449 619.438C329.07 613.637 327.703 607.845 326.324 602.045ZM338.883 604.925C355.514 627.151 345.51 624.593 340.662 613.855C340.069 610.875 339.476 607.904 338.883 604.925Z\",\n    fill: \"#939393\"\n  })), _path97 || (_path97 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M306.795 582.229C290.935 579.849 310.418 584.989 317.096 587.915C337.12 596.692 346.173 608.805 372.493 603.687C372.296 603.217 372.11 602.746 371.912 602.276C344.116 608.146 320.441 584.279 306.795 582.229Z\",\n    fill: \"black\"\n  })), _path98 || (_path98 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M308.015 592.562C305.478 596.043 310.749 615.631 316.155 613.263C313.445 606.366 310.725 599.459 308.015 592.562Z\",\n    fill: \"black\"\n  })), _path99 || (_path99 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M317.199 601.059C315.079 603.903 319.674 614.416 321.31 616.574C330.315 628.452 326.348 616.694 317.199 601.059Z\",\n    fill: \"black\"\n  })), _path100 || (_path100 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M332.024 602.074L330.325 603.474C329.194 614.822 352.988 642.128 332.024 602.074Z\",\n    fill: \"black\"\n  })), _path101 || (_path101 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M326.324 602.043C327.703 607.844 329.07 613.636 330.449 619.437C334.793 626.943 336.081 616.826 326.324 602.043Z\",\n    fill: \"black\"\n  })), _path102 || (_path102 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M338.883 604.925C339.476 607.905 340.069 610.875 340.662 613.855C345.51 624.594 355.513 627.152 338.883 604.925Z\",\n    fill: \"black\"\n  })), _path103 || (_path103 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M392.704 631.844C386.6 631.683 353.668 635.919 351.078 640.098C349.432 642.749 354.574 672.924 356.193 675.969C361.859 686.622 386.312 681.248 397.959 685.638C417.586 682.819 427.185 678.804 441.518 692.826C451.781 691.713 462.044 690.609 472.306 689.495C472.688 662.633 474.465 653.482 443.521 640.064C426.09 643.86 408.61 632.252 392.704 631.844ZM378.351 650.69C380.773 651.369 383.195 652.038 385.617 652.718C387.612 652.847 418.256 652.682 416.452 655.362C392.559 656.566 366.951 650.135 378.351 650.69ZM463.021 661.071L463.036 663.063C424.771 669.901 427.598 666.719 463.021 661.071ZM374.803 660.629C389.867 675.371 396.095 688.367 383.995 677.104L374.803 660.629ZM385.695 662.675C387.719 664.936 398.24 678.331 395.495 679.651C391.875 678.807 383.611 663.541 385.695 662.675ZM367.568 662.584C385.492 679.999 383.138 686.39 373.096 674.063C371.253 670.24 369.411 666.407 367.568 662.584ZM361.526 662.554C366.258 671.191 373.56 677.799 370.11 678.528C367.814 678.517 358.877 665.369 361.526 662.554ZM395.402 667.702C397.627 669.536 399.865 671.379 402.091 673.212C412.361 685.312 397.442 676.754 395.402 667.702ZM414.776 672.778C420.04 673.77 414.265 676.977 414.207 677.256C414.616 678.582 415.037 679.918 415.446 681.245C411.978 685.847 410.032 671.888 414.776 672.778Z\",\n    fill: \"black\"\n  })), _path104 || (_path104 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M378.35 650.691C366.95 650.136 392.559 656.567 416.452 655.363C418.255 652.683 387.611 652.848 385.616 652.719C383.194 652.039 380.772 651.37 378.35 650.691Z\",\n    fill: \"black\"\n  })), _path105 || (_path105 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M463.02 661.072C427.597 666.719 424.77 669.901 463.035 663.063L463.02 661.072Z\",\n    fill: \"black\"\n  })), _path106 || (_path106 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M374.802 660.628L383.994 677.104C396.094 688.367 389.866 675.371 374.802 660.628Z\",\n    fill: \"black\"\n  })), _path107 || (_path107 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M385.695 662.674C383.612 663.54 391.876 678.806 395.496 679.651C398.24 678.33 387.719 664.934 385.695 662.674Z\",\n    fill: \"black\"\n  })), _path108 || (_path108 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M367.569 662.584C369.411 666.407 371.254 670.24 373.096 674.063C383.138 686.391 385.493 680 367.569 662.584Z\",\n    fill: \"black\"\n  })), _path109 || (_path109 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M361.525 662.554C358.876 665.368 367.813 678.517 370.109 678.529C373.559 677.799 366.257 671.191 361.525 662.554Z\",\n    fill: \"black\"\n  })), _path110 || (_path110 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M395.4 667.702C397.441 676.754 412.359 685.312 402.089 673.212C399.864 671.379 397.626 669.535 395.4 667.702Z\",\n    fill: \"black\"\n  })), _path111 || (_path111 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M414.775 672.776C410.031 671.886 411.977 685.846 415.446 681.244C415.036 679.917 414.615 678.581 414.206 677.254C414.264 676.976 420.039 673.769 414.775 672.776Z\",\n    fill: \"black\"\n  })), _path112 || (_path112 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M394.026 633.761C388.114 633.606 356.217 637.709 353.709 641.756C352.114 644.323 357.095 673.55 358.663 676.5C364.151 686.817 387.835 681.613 399.116 685.864C418.125 683.134 427.423 679.246 441.305 692.827C451.245 691.748 461.186 690.679 471.126 689.601C471.495 663.583 473.217 654.719 443.246 641.723C426.362 645.4 409.432 634.157 394.026 633.761ZM380.124 652.015C382.47 652.673 384.816 653.321 387.162 653.979C389.094 654.105 418.774 653.945 417.027 656.54C393.886 657.707 369.083 651.478 380.124 652.015ZM462.132 662.07L462.147 663.999C425.085 670.622 427.823 667.54 462.132 662.07ZM376.688 661.642C391.278 675.921 397.31 688.507 385.591 677.599L376.688 661.642ZM387.237 663.624C389.197 665.813 399.388 678.787 396.729 680.066C393.223 679.248 385.219 664.462 387.237 663.624ZM369.68 663.536C387.041 680.403 384.76 686.593 375.034 674.653C373.25 670.95 371.465 667.238 369.68 663.536ZM363.828 663.506C368.411 671.871 375.484 678.272 372.142 678.978C369.918 678.967 361.263 666.232 363.828 663.506ZM396.639 668.493C398.794 670.268 400.962 672.054 403.118 673.829C413.065 685.549 398.615 677.259 396.639 668.493ZM415.404 673.409C420.503 674.37 414.909 677.476 414.853 677.746C415.249 679.03 415.657 680.325 416.053 681.609C412.694 686.067 410.809 672.547 415.404 673.409Z\",\n    fill: \"#939393\"\n  })), _path113 || (_path113 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M380.124 652.015C369.082 651.478 393.885 657.707 417.027 656.54C418.774 653.945 389.094 654.105 387.161 653.979C384.815 653.321 382.47 652.673 380.124 652.015Z\",\n    fill: \"#939393\"\n  })), _path114 || (_path114 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M462.132 662.072C427.823 667.542 425.085 670.624 462.147 664.001L462.132 662.072Z\",\n    fill: \"#939393\"\n  })), _path115 || (_path115 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M376.688 661.643L385.591 677.601C397.31 688.51 391.278 675.923 376.688 661.643Z\",\n    fill: \"#939393\"\n  })), _path116 || (_path116 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M387.237 663.626C385.219 664.464 393.223 679.251 396.729 680.069C399.388 678.79 389.197 665.815 387.237 663.626Z\",\n    fill: \"#939393\"\n  })), _path117 || (_path117 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M369.68 663.537C371.464 667.24 373.249 670.952 375.034 674.655C384.76 686.596 387.04 680.406 369.68 663.537Z\",\n    fill: \"#939393\"\n  })), _path118 || (_path118 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M363.828 663.507C361.263 666.233 369.918 678.968 372.142 678.98C375.484 678.273 368.411 671.872 363.828 663.507Z\",\n    fill: \"#939393\"\n  })), _path119 || (_path119 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M396.638 668.492C398.614 677.259 413.064 685.548 403.117 673.829C400.961 672.053 398.794 670.267 396.638 668.492Z\",\n    fill: \"#939393\"\n  })), _path120 || (_path120 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M415.403 673.409C410.808 672.547 412.693 686.068 416.053 681.61C415.656 680.326 415.248 679.031 414.852 677.747C414.908 677.477 420.502 674.37 415.403 673.409Z\",\n    fill: \"#939393\"\n  })), _path121 || (_path121 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M381.933 722.398L425.438 722.616C419.686 713.436 410.544 714.127 401.132 705.069C384.819 678.85 382.802 692.83 355.702 690.404C342.462 711.018 356.939 707.894 366.75 712.365C371.815 715.706 376.868 719.057 381.933 722.398Z\",\n    fill: \"#939393\"\n  })), _path122 || (_path122 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.9848 720.86L148.701 721.23C157.884 714.993 169.699 714.634 178.912 721.381L336.011 722.169C333.402 711.462 345.323 715.405 346.887 722.223C349.128 722.852 350.068 722.597 350.513 722.241C353.155 720.134 342.463 711.198 341.249 698.228C340.92 694.732 341.356 691.816 341.8 689.837C318.926 674.608 286.579 682.501 261.293 671.013L185.114 664.657C169.378 661.262 153.642 657.858 137.906 654.463C117.347 652.379 82.8943 653.819 73.3902 671.565C64.0647 688.963 77.0573 703.137 74.9848 720.86Z\",\n    fill: \"#939393\"\n  })), _path123 || (_path123 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M336.011 722.17L346.887 722.225C345.323 715.406 333.402 711.463 336.011 722.17Z\",\n    fill: \"black\"\n  })), _path124 || (_path124 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M148.702 721.227L178.913 721.379C169.701 714.631 157.885 714.99 148.702 721.227Z\",\n    fill: \"black\"\n  })), _path125 || (_path125 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M186.556 532.289C164.19 534.099 99.2004 544.706 84.0163 554.676C66.4878 566.179 72.5459 605.25 68.2365 622.803C77.7078 624.015 87.1911 625.218 96.6625 626.43C108.392 632.135 120.11 637.829 131.84 643.534L153.569 640.656C172.188 647.978 191.85 643.556 211.653 650.904C242.634 639.788 265.808 659.41 284.113 645.293C295.272 636.686 286.753 618.233 278.399 609.917C264.037 603.024 263.293 589.857 251.586 580.907C245.052 568.926 238.505 556.945 231.97 544.963C215.498 527.834 205.331 541.106 186.556 532.289Z\",\n    fill: \"#939393\"\n  })), _path126 || (_path126 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.5331 688.748L2454.82 700.886L2458.32 1147.69L37.0329 1135.55L33.5331 688.748Z\",\n    fill: \"#718B34\"\n  })), _path127 || (_path127 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M813.852 631.277C819.61 632.262 859.868 638.974 903.752 635.795C961.374 631.629 961.772 615.026 1023.08 605.025C1040.83 602.125 1095.01 594.672 1157.46 606.054C1189.13 611.828 1197.42 617.79 1235.1 623.791C1272.48 629.741 1304.12 630.198 1324.99 629.67C1327.02 620.144 1331.94 606.858 1345.99 600.863C1365.2 592.674 1383.29 610.68 1417.32 609.547C1434.36 608.966 1451.64 600.567 1486.2 583.755C1529.55 562.684 1524.45 555.947 1549.42 543.243C1552.72 541.551 1561.51 537.249 1561.98 530.982C1562.24 527.375 1559.52 526.419 1559.36 521.481C1559.19 516.302 1562.13 515.378 1563.52 508.84C1565.05 501.611 1561.9 500.6 1563.95 497.199C1566.32 493.254 1571.78 492.572 1589.37 488.492C1611.28 483.399 1610.98 482.569 1616.17 482.588C1621.1 482.614 1632.28 483.442 1645.38 491.737C1661.07 484.725 1674.07 483.293 1684.76 484.588C1779.38 496.045 1798.35 732.564 1800.31 759.626C1563.38 752.104 1326.43 745.05 1089.48 738.492C880.817 732.722 672.139 727.319 463.428 722.299C459.223 715.474 453.71 707.748 446.532 699.634C438.157 690.168 429.493 682.451 421.731 676.348C454.594 663.811 487.439 651.274 520.302 638.738C531.377 640.895 546.836 642.949 565.309 642.536C580.874 642.184 593.988 640.188 603.879 638.086C620.744 634.68 637.609 631.273 654.475 627.867C659.775 624.317 665.076 620.767 670.377 617.217C673.631 608.718 679.671 606.125 681.889 605.337C683.074 604.917 685.058 604.35 693.34 603.932C699.522 603.626 704.931 603.339 712.238 603.773C719.319 604.187 729.47 605.325 742.331 608.709C763.811 614.364 766.18 619.265 787.506 625.526C797.403 628.429 804.868 629.718 813.89 631.264L813.852 631.277Z\",\n    fill: \"black\"\n  })), _path128 || (_path128 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1754.53 760.72L1921.92 760.72L2089.3 760.72C2111.67 738.332 2161.42 676.594 2148.04 658.466C2127.23 630.274 1872.26 674.985 1831.06 689.497C1775.35 709.098 1757.81 752.081 1754.53 760.72Z\",\n    fill: \"#409519\"\n  })), _path129 || (_path129 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2452.64 429.192C2459.92 481.993 2459.67 524.515 2458.06 553.73C2455.13 606.639 2448.18 608.483 2451.91 641.733C2455.8 676.477 2463.12 698.615 2456.25 735.52C2452.96 753.205 2447.46 767.438 2443.21 776.872L2068.84 821.492L2016.7 709.287C2017.59 698.184 1966.85 538.281 2197.31 455.187C2301.9 417.478 2402.85 423.415 2452.65 429.206L2452.64 429.192Z\",\n    fill: \"#7E7B74\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path130 || (_path130 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2047.64 706.92C2084.28 701.976 2098.91 702.532 2123.85 698.192C2139.42 695.486 2136.45 694.792 2149.58 692.797C2174.55 688.997 2189.7 690.829 2210.69 690.729C2225.7 690.658 2241.43 688.765 2272.88 684.964C2328.35 678.271 2328.1 674.209 2356.08 673.499C2380.43 672.885 2407.91 672.487 2431.44 685.983C2436.4 688.831 2452 697.779 2457.06 712.596C2460.17 721.657 2457.43 727.392 2455.02 744.35C2453.17 757.368 2456.32 773.143 2456.36 782.032L2025.06 777.306C2022.89 777.282 2020.77 776.675 2018.93 775.548V775.548C2013.3 772.111 2010.25 764.266 2011.81 757.824C2012.61 754.506 2013.72 751.062 2015.61 748.16C2021.21 739.586 2022.15 738.691 2022.95 735.793C2025.82 725.497 2018.39 720.708 2021.75 715.047C2024.44 710.488 2031.97 709.014 2047.66 706.907L2047.64 706.92Z\",\n    fill: \"black\"\n  })), _path131 || (_path131 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2214.8 389.045C2214.91 389.104 2215.39 389.373 2216.02 389.348C2221.65 389.054 2229.59 364.017 2221.7 355.216C2201.69 332.931 2058.27 394.079 2045.32 378.572C2042.17 374.797 2052.38 363.986 2072.82 342.35C2098.26 315.427 2108.94 311.746 2114.34 310.283C2118.7 309.102 2125.98 307.678 2157.51 311.733C2218.54 319.558 2245.65 331.866 2257.97 338.254C2273.6 346.352 2277.59 351.243 2278.99 355.862C2282.78 368.345 2267.88 379.505 2274 384.569C2275.41 385.743 2277.29 386.038 2289.02 385.817C2304.64 385.522 2314.82 384.734 2322.27 384.448C2331.9 384.069 2330.99 384.767 2351.77 385.284C2382.94 386.054 2380.15 384.373 2390.17 385.635C2397.08 386.512 2418.78 389.239 2433.9 401.66C2440.18 406.814 2445.33 413.666 2447.15 416.085C2448.34 417.65 2452.37 423.122 2455.18 428.788C2459.56 437.63 2459.74 445.489 2459.92 460.819C2460.12 477.227 2460.21 488.089 2460.24 492.442C2445.8 487.283 2431.34 482.125 2416.9 476.981C2385.71 496.95 2361.85 499.804 2345.95 498.829C2314.24 496.867 2291.27 478.227 2261.03 479.567C2257.81 479.717 2248.24 480.353 2241.91 475.907C2236.65 472.199 2235.74 466.474 2235.76 462.42C2236.48 470.422 2235.8 480.936 2229.52 491.646C2218.21 510.931 2194.56 523.46 2193.68 522.811C2192.83 522.191 2206.42 504.501 2225.39 503.366C2235.32 502.769 2238.29 507.219 2252.83 507.107C2264.35 507.008 2267.02 504.177 2277.58 503.371C2290.9 502.359 2299.63 505.881 2312.8 509.543C2333.82 515.398 2335.11 513.01 2365.62 519.177C2410.86 528.327 2433.49 532.909 2444.76 542.684C2455.36 551.873 2457.3 570.641 2461.18 608.163C2464.04 635.845 2461.49 643.513 2454.48 647.426C2444.04 653.268 2434.17 644.922 2411.03 650.632C2403.39 652.514 2394.6 656.503 2377.04 664.455C2360.19 672.087 2360.73 672.91 2356.03 673.471C2344.39 674.885 2337.8 670.304 2317.99 671.501C2317.65 671.519 2315.29 671.736 2310.59 672.184C2285.87 674.503 2273.39 675.666 2268.3 676.16C2252.98 677.626 2245.33 678.359 2244.59 678.451C2232.42 679.878 2231.38 680.402 2226.8 680.173C2217.23 679.675 2214.78 676.997 2204.28 676.288C2198.78 675.92 2195.67 676.384 2189.49 676.89C2189.49 676.89 2176.77 677.919 2156.23 677.606C2139.25 677.352 2105.22 671.369 2096.76 654.288C2090.06 640.744 2102.14 625.705 2106.89 619.814C2111.69 613.84 2114.19 613.202 2127.2 602.641C2134.88 596.408 2150.79 583.405 2163.9 568.182C2171.98 558.786 2188.06 537.991 2183.56 535.269C2180.22 533.26 2165.07 540.841 2156.61 551.701C2150.47 559.58 2150.12 566.289 2149.03 570.724C2141.43 601.711 2074.76 618.974 2037.86 648.933C2032.24 653.495 2028.36 657.496 2025.55 662.633C2020.7 671.512 2022.78 676.915 2019.69 688.353V688.353C2016.46 701.014 2007.43 709.229 1994.55 711.457L1986.12 712.917C1982.31 713.576 1978.45 713.908 1974.59 713.908L1951.73 713.908C1947.52 713.908 1943.33 713.636 1939.15 713.181C1933.69 712.587 1925.42 711.777 1917.44 711.342C1910.75 710.983 1904.84 710.659 1898.31 711.552C1878.72 714.215 1875.09 724.758 1853.68 731.722C1843.92 734.904 1843.51 733.092 1828.9 736.194C1788.27 744.839 1778.49 761.63 1764.39 757.601C1749.11 753.242 1753.75 731.541 1733.33 725.604C1729.23 724.41 1729.77 725.971 1715.17 724.253C1656.2 717.28 1663.3 712.562 1593.06 702.846C1473.95 686.372 1426.65 696.203 1420.77 682.653C1406.39 649.498 1677.32 562.958 1684.67 484.572C1685.19 479.1 1685.61 460.796 1702.13 451.355C1721.19 440.469 1752.2 446.791 1775.44 453.829C1775.86 443.194 1778.85 428.677 1792.68 419.939C1818.39 403.699 1856.34 423.43 1910.7 417.726C1955.28 413.064 1944.82 398.208 2002.54 383.952C2103.01 359.14 2208.78 385.812 2214.73 389L2214.8 389.045Z\",\n    fill: \"black\"\n  })), _path132 || (_path132 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1174.65 155.14C1175.67 153.496 1176.69 151.483 1177.71 149.215C1177.37 149.404 1176.99 149.535 1176.62 149.666C1176.01 151.506 1175.38 153.331 1174.65 155.14Z\",\n    fill: \"white\"\n  })), _path133 || (_path133 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1235.68 168.897C1235.35 168.165 1235.05 167.433 1234.78 166.688C1234.8 167.044 1234.83 167.413 1234.85 167.768C1235.07 168.909 1235.34 169.993 1235.6 171.05C1235.61 170.327 1235.65 169.62 1235.68 168.897Z\",\n    fill: \"white\"\n  })), _path134 || (_path134 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M900.242 464.913C896.416 471 895.715 477.814 892.562 484.047C893.332 483.644 894.14 483.213 894.967 482.783C895.913 475.466 897.803 469.707 900.262 464.9L900.242 464.913Z\",\n    fill: \"white\"\n  })), _path135 || (_path135 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M919.603 442.172C924.837 436.806 929.683 430.734 932.715 421.591C932.329 422.331 931.868 423.069 931.35 423.806C930.395 425.168 929.274 426.412 928.041 427.611C926.114 432.858 923.128 437.608 919.603 442.172Z\",\n    fill: \"white\"\n  })), _path136 || (_path136 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1575.11 204.347C1575.21 204.661 1576.65 206.134 1578.5 208.086C1577.86 206.537 1577.26 204.96 1576.73 203.344C1576.29 201.956 1575.87 200.555 1575.49 199.155C1575.38 202.1 1574.89 203.702 1575.11 204.361L1575.11 204.347Z\",\n    fill: \"white\"\n  })), _path137 || (_path137 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M935.947 396.599C934.899 399.447 934.379 402.31 934.652 405.181C934.87 407.498 935.053 409.744 935.011 411.926C935.702 407.465 936.057 402.4 935.947 396.599Z\",\n    fill: \"white\"\n  })), _path138 || (_path138 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M693.301 603.945C714.319 610.892 722.041 607.184 725.25 607.686C754.186 612.277 795.916 633.505 793.062 637.251C788.305 638.293 783.548 639.349 778.792 640.391C777.864 639.968 776.006 625.682 771.715 627.432C783.915 663.474 735.182 635.016 750.665 635.341C753.041 648.366 755.217 634.237 760.041 637.025C761.372 637.799 761.822 650.812 765.749 635.769C772.4 650.049 771.011 630.176 767.892 628.741C766.407 628.061 764.932 635.391 758.259 634.139C752.723 630.679 747.187 627.205 741.651 623.745C722.313 619.412 702.955 615.092 683.616 610.759C699.344 620.958 694.678 619.507 701.645 633.952C697.45 610.782 705.189 614.886 708.218 634.847C697.357 637.658 688.824 627.351 672.704 625.335C676.881 614.297 678.054 608.532 693.301 603.945Z\",\n    fill: \"#939393\"\n  })), _path139 || (_path139 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M709.702 619.994C718.439 617.449 717.619 648.231 719.077 621.677C727.172 623.792 735.286 625.922 743.38 628.036C744.553 652.297 751.588 636.378 712.905 635.679C711.831 630.446 710.776 625.227 709.702 619.994Z\",\n    fill: \"#939393\"\n  })), _path140 || (_path140 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1684.74 484.6C1695.74 484.912 1689.63 491.345 1701.4 493.578C1708.79 494.978 1729.08 490.308 1757.45 509.343C1792.52 511.896 1801.53 508.678 1777.67 524.092C1768.87 504.222 1707.16 498.235 1692.12 515.288C1673.2 536.726 1702.23 536.585 1702.61 538.268C1703.77 543.518 1621.96 585.473 1616.51 596.079C1597.69 594.596 1578.87 593.127 1560.05 591.644C1535.93 593.597 1500.66 616.343 1480.44 626.955C1465.22 642.6 1439.09 671.29 1420.84 682.682C1407.4 688.921 1393.97 695.147 1380.53 701.386C1331.78 712.707 1359.45 674.18 1294.27 659.957L1328.68 648.173C1329.27 644.348 1293.45 623.94 1360.17 638.433C1377.4 641.204 1382.49 630.829 1399.97 633.89C1432.49 619.501 1412.93 621.087 1417.56 617.377C1436.09 609.864 1454.59 602.364 1473.12 594.851C1499.45 580.74 1559.43 532.637 1571.7 531.015C1612.47 525.62 1668.94 576.909 1667.3 523.091C1657.4 512.873 1664.37 507.102 1664.15 505.99C1658.63 502.049 1653.11 498.121 1647.59 494.18L1684.74 484.6Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path141 || (_path141 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1605.4 486.612C1669.55 493.533 1654.94 511.067 1656.24 515.697C1657.45 519.97 1669.38 527.566 1656.13 544.756C1627.42 543.29 1613.31 530.599 1585 528.564C1567.3 527.297 1558.39 537.677 1563.81 514.495C1565.73 513.6 1567.65 512.719 1569.57 511.823C1558.77 489.034 1592.5 497.318 1605.4 486.612ZM1640.98 498.097L1623.54 510.361C1560.04 501.29 1603.72 515.059 1621.55 513.14C1625.87 512.667 1646.79 498.573 1640.98 498.097Z\",\n    fill: \"#939393\"\n  })), _path142 || (_path142 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1644.48 501.894C1650.29 502.37 1629.38 516.464 1625.06 516.937C1607.23 518.856 1563.55 505.087 1627.05 514.158L1644.48 501.894Z\",\n    fill: \"#939393\"\n  })), _path143 || (_path143 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1355.8 602.871C1372.31 600.872 1406.05 609.909 1410.17 612.917C1429.4 626.987 1382.99 630.194 1375.41 634.615C1361 632.789 1346.61 630.963 1332.2 629.137C1333.72 617.882 1338.59 604.949 1355.8 602.871Z\",\n    fill: \"#939393\"\n  })), _path144 || (_path144 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1067.03 603.193C1127.11 601.507 1173.43 610.163 1228.5 626.198C1213 627.772 1174.02 625.008 1185.33 645.53C1188.27 650.845 1248.34 649.555 1251.58 640.319C1254.76 631.223 1229.72 629.62 1277.32 633.251C1249.72 638.041 1259.6 639.143 1248.21 655.109C1212.46 650.396 1176.1 652.839 1140.58 656.313C1100.74 656.389 1056.88 642.231 997.499 646.588C974.02 654.343 952.94 665.697 926.861 668.686C915.424 692.491 892.856 654.042 876.574 650.25C863.342 647.167 804.246 660.193 809.5 678.12C776.912 674.829 744.304 671.552 711.716 668.261C677.759 659.034 643.821 649.793 609.864 640.566C626.036 637.012 642.209 633.444 658.381 629.891C671.952 610.697 668.597 628.181 669.745 628.795C671.097 629.514 680.878 627.31 699.602 638.147C731.051 635.423 771.355 657.957 778.738 641.807C809.427 643.867 793.086 633.41 796.068 632.374C801.63 630.462 861.797 642.969 918.569 637.263C975.588 631.535 999.596 605.096 1067.03 603.193Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path145 || (_path145 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1200.06 629.642C1206.56 628.635 1242.36 631.18 1246.13 634.491C1257.24 644.29 1230.26 640.123 1227.78 646.021C1219.45 641.56 1194.78 647.382 1190.07 644.952C1185.88 642.792 1190.38 631.154 1200.06 629.642ZM1228.19 634.691C1218.4 635.591 1208.63 636.505 1198.84 637.404C1194.09 643.365 1249.17 635.413 1228.19 634.691Z\",\n    fill: \"#939393\"\n  })), _path146 || (_path146 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1299.94 633.893C1315.53 631.287 1324.2 647.211 1322.05 648.696C1308.71 652.103 1295.38 655.496 1282.04 658.903C1255.31 660.159 1238.09 646.359 1268.19 650.714C1239.42 633.072 1280.77 640.452 1290.31 639.291C1293.52 637.496 1296.72 635.687 1299.94 633.893ZM1314.71 642.817C1302.34 645.543 1289.98 648.255 1277.61 650.981C1279.13 653.831 1330.68 644.291 1314.71 642.817Z\",\n    fill: \"#939393\"\n  })), _path147 || (_path147 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1228.19 634.692C1249.17 635.414 1194.09 643.366 1198.84 637.404C1208.63 636.505 1218.4 635.591 1228.19 634.692Z\",\n    fill: \"black\"\n  })), _path148 || (_path148 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1314.71 642.814C1330.68 644.287 1279.13 653.827 1277.61 650.977C1289.98 648.251 1302.35 645.539 1314.71 642.814Z\",\n    fill: \"black\"\n  })), _path149 || (_path149 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.283 638.736C546.705 646.516 575.601 646.002 603.19 642.503C636.376 650.602 669.644 658.052 700.303 670.772C736.662 674.17 773.04 677.554 809.399 680.951C809.694 681.668 809.97 682.385 810.264 683.102C740.557 688.456 670.832 693.796 601.125 699.15C550.79 700.162 301.031 719.65 252.478 733.386C244.175 717.826 223.564 712.139 224.054 710.607C256.917 698.071 487.42 651.272 520.283 638.736Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path150 || (_path150 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M859.504 652.599C879.977 650.655 897.425 666.999 908.564 678.797C880.299 692.046 846.364 680.14 816.734 686.828C798.782 668.287 852.288 653.287 859.504 652.599ZM879.727 667.348C874.184 668.24 873.838 679.798 877.429 678.624C878.103 677.226 878.795 675.828 879.469 674.429C880.664 676.348 881.839 678.281 883.034 680.201C888.281 681.739 888.593 665.926 879.727 667.348Z\",\n    fill: \"#939393\"\n  })), _path151 || (_path151 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1334.56 745.444L1195.61 749.388C1163.33 750.305 1131.07 748.095 1099.26 742.791L1064.96 737.07C1104.1 734.329 1165.95 717.405 1204.77 707.742C1222.95 709.675 1241.11 711.607 1259.29 713.54C1276.95 712.155 1294.63 710.756 1312.29 709.371C1345.02 707.676 1375.22 714.302 1418.75 688.288C1465.75 697.856 1513.28 685.877 1560.36 686.63C1572.23 688.851 1584.11 691.088 1595.98 693.31C1635.37 698.877 1658.28 694.451 1616.3 705.227C1567.48 715.652 1518.66 726.092 1469.84 736.518C1443.87 735.825 1446.6 700.957 1390.8 730.026C1369.63 732.587 1348.09 731.027 1334.56 745.444Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path152 || (_path152 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1053.64 737.49L1023.47 736.635C948.581 713.915 881.233 721.681 804.03 731.246L690.9 741.368L505.121 742.229L235.934 754.17L230.653 736.636C225.835 730.588 452.837 702.746 452.837 702.746C495.078 690.773 553.255 702.983 606.679 702.143L765.674 689.637C826.305 688.349 885.386 696.984 939.907 673.309C1006.77 695.291 1077.74 709.537 1149.63 718.945C1119.66 729.792 1086.5 734.296 1053.64 737.49Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path153 || (_path153 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1259.44 706.93C1255.29 704.686 1254.56 698.286 1259.15 691.583C1258.21 691.316 1257.28 691.062 1256.34 690.795C1248.35 720.637 1245.61 711.373 1253.04 677.942C1244.93 681.852 1247.73 706.145 1242.53 707.415C1231.57 706.212 1220.61 705.008 1209.65 703.804C1210.8 701.214 1211.95 698.624 1213.08 696.048C1219.69 686.056 1220.65 683.688 1220.18 683.49C1219.61 683.233 1216.57 686.223 1214.62 688.564C1212.27 691.375 1210.86 693.986 1210.12 695.51C1207.61 700.684 1208.2 702.742 1205.34 704.391C1203.84 705.256 1201.05 706.212 1199.85 705.483C1195.81 703.015 1212.8 683.125 1211.35 682.446C1210.87 682.22 1208.63 684.155 1206.9 686.048C1203.07 690.249 1203.16 692.775 1198.86 699.487C1196.94 702.494 1195.14 704.754 1192.61 704.852C1191.83 704.887 1191.16 704.698 1190.71 704.543C1200.85 687.932 1205.55 679.489 1204.86 679.228C1203.82 678.83 1196.23 688.354 1185.03 705.091C1188.5 705.062 1191.96 705.018 1195.43 704.989C1196.33 704.773 1197.31 704.589 1198.41 704.45C1201.73 704.034 1204.65 704.244 1206.77 704.559C1190.56 708.098 1174.37 711.637 1158.16 715.175C1126.84 711.892 1091.8 706.887 1054.07 699.24C1011.11 690.538 973.268 680.166 940.957 669.808C995.367 652.793 988.989 646.531 1053.94 651.036C1122.59 665.244 1194.68 655.194 1263.93 663.366C1220.78 671.868 1177.86 661.948 1215.52 671.209C1250.76 671.498 1288.45 657.156 1320.13 674.882C1304.97 693.264 1300.45 697.162 1299.44 696.751C1298.4 696.325 1300.04 690.856 1302.77 686.326C1305.18 682.34 1308.47 679.017 1306.95 677.712C1306.64 677.434 1306.14 677.264 1305.68 677.265C1300.29 677.169 1297.05 699.703 1292.13 699.493C1291.7 699.48 1291.4 699.288 1291.04 699.05C1287.07 696.471 1294.51 688.148 1290.43 685.169C1290.01 684.859 1289.42 684.431 1288.61 684.422C1283.81 684.4 1285.36 699.471 1273.63 705.489C1269.57 707.572 1263.16 708.978 1259.42 706.944L1259.44 706.93ZM1023.48 658.665C1021.12 659.179 1024.06 666.081 1011.05 663.274C1022.69 669.133 995.474 678.853 1001.92 680.736C1012.51 673.92 1019.62 665.148 1022 673.508C1002.11 694.011 1029.74 668.667 1031.32 676.608C1031.55 677.691 1018.23 689.435 1036.01 677.449C1029.66 692.793 1040.72 678.646 1041.61 679.026L1041.41 684.691C1043.84 685.312 1049.2 679.468 1051.85 682.86C1052.47 683.629 1045.2 692.085 1056.54 683.702C1086.55 688.819 1095.71 684.117 1060.42 680.976C1059.02 680.341 1069.31 670.497 1057.92 671.691C1063.13 680.444 1046.73 684.615 1055.12 670.903C1052.17 670.039 1039.91 686.902 1049.52 669.326C1026.2 686.074 1047.98 664.959 1040.19 666.227C1034.3 676.168 1029.09 675.736 1030.82 664.543C1014.77 677.018 1029.27 657.383 1023.48 658.665ZM1183.12 680.2C1145.34 730.392 1186.16 687.431 1185.87 682.405L1183.12 680.2ZM1190.56 683.246C1170.01 712.193 1176.79 715.108 1193.36 684.034C1192.43 683.767 1191.5 683.514 1190.56 683.246Z\",\n    fill: \"#939393\"\n  })), _path154 || (_path154 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1322.9 677.073C1324.55 676.864 1343.02 689.012 1322.18 696.9C1317.68 694.476 1333.38 682.672 1324.58 682.791C1297.53 716.672 1318.88 677.568 1322.9 677.073Z\",\n    fill: \"#939393\"\n  })), _path155 || (_path155 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1764.44 757.631L1475.97 749.458C1476.78 745.539 1466.91 742.85 1471.62 739.411C1503.91 733.705 1536.21 728.014 1568.5 722.309C1596.45 715.063 1624.38 707.83 1652.34 700.584C1692.52 724.901 1747.94 715.924 1795.32 713.141C1905.65 733.875 1847.42 709.231 1764.44 757.631Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path156 || (_path156 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M939.364 723.741C970.279 724.604 1016.09 735.608 1047.02 735.464V735.464L1094 740.14L1141.06 748.239L1192.23 749.922L1263.77 747.671L1478.36 738.998L1598 714.767L1650.49 699.167L1688.33 714.348L1745.52 718.563L1798.26 713.839L1853.88 723.82L1807.29 736.834L1766.78 754.939L1755.01 762.032L1550.63 770.018L1446.79 776.258L1369.36 781.736L1309.05 790.974L1201.98 805.548L1122.04 813.597L1026.77 821.718L902.347 822.294L693.135 804.067L491.339 774.285L281.476 754.169L496.613 742.908L566.493 742.584L691.766 742.004L817.963 730.807C850.184 726.065 901.034 722.671 939.364 723.741Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path157 || (_path157 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2126.93 314.259C2173.51 310.178 2265.25 334.141 2269.59 361.54C2268.02 370.001 2266.47 378.463 2264.89 386.924L2233.09 405.161C2198.52 399.149 2159.17 397.467 2128.98 413.553C2109.79 404.971 2090.59 396.403 2071.4 387.821C2062.32 384.502 2041.38 381.598 2045.32 378.576C2076.72 363.177 2081.79 318.211 2126.93 314.259ZM2231.54 344.159C2222.89 344.31 2163.58 383.373 2234.34 344.947C2233.4 344.679 2232.47 344.426 2231.54 344.159ZM2252.17 347.579C2231.4 383.466 2244.77 401.58 2244.72 370.759C2249.83 364.07 2257.17 354.355 2252.17 347.579ZM2236.88 352.816C2226.94 354.292 2226 405.315 2233.1 378.935L2233.61 364.773C2233.79 364.098 2245.55 351.531 2236.88 352.816ZM2118 352.283C2124.21 354.344 2130.43 356.42 2136.64 358.482C2133.98 351.842 2152.79 364.907 2153.72 356.13C2164.7 356.682 2175.7 357.221 2186.69 357.773C2163.78 355.947 2140.9 354.108 2118 352.283ZM2221.7 355.221L2214.8 389.049C2222.39 393.049 2224.13 356.339 2221.7 355.221ZM2210.23 359.149C2203.89 360.6 2192.37 402.278 2204.56 385.215C2203.11 371.508 2216.55 357.712 2210.23 359.149ZM2176.14 362.436L2161.92 364.159C2168.82 364.823 2175.7 365.5 2182.61 366.163C2173.84 374.577 2164.97 396.894 2171.18 394.901C2174.75 385.533 2181.02 367.72 2190.2 364.961L2176.14 362.436ZM2196.88 363.024C2191.84 371.628 2186.81 380.218 2181.78 388.822C2177.08 405.403 2195.34 379.311 2196.88 363.024Z\",\n    fill: \"#939393\"\n  })), _path158 || (_path158 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2231.53 344.16C2232.47 344.427 2233.4 344.68 2234.34 344.948C2163.58 383.373 2222.88 344.311 2231.53 344.16Z\",\n    fill: \"#939393\"\n  })), _path159 || (_path159 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2252.17 347.577C2257.17 354.353 2249.83 364.068 2244.72 370.756C2244.77 401.577 2231.41 383.464 2252.17 347.577Z\",\n    fill: \"#939393\"\n  })), _path160 || (_path160 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2236.88 352.811C2245.55 351.526 2233.79 364.093 2233.61 364.769L2233.1 378.93C2226 405.309 2226.94 354.287 2236.88 352.811Z\",\n    fill: \"#939393\"\n  })), _path161 || (_path161 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2118 352.28C2140.9 354.105 2163.78 355.944 2186.68 357.77C2175.7 357.218 2164.7 356.679 2153.71 356.127C2152.79 364.904 2133.98 351.84 2136.64 358.479C2130.43 356.417 2124.2 354.341 2118 352.28Z\",\n    fill: \"#939393\"\n  })), _path162 || (_path162 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2221.69 355.22C2224.12 356.338 2222.39 393.047 2214.8 389.047L2221.69 355.22Z\",\n    fill: \"#939393\"\n  })), _path163 || (_path163 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2210.23 359.149C2216.54 357.712 2203.11 371.508 2204.56 385.214C2192.37 402.277 2203.89 360.6 2210.23 359.149Z\",\n    fill: \"#939393\"\n  })), _path164 || (_path164 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2176.13 362.438L2190.19 364.963C2181.02 367.722 2174.74 385.534 2171.17 394.903C2164.97 396.896 2173.84 374.579 2182.6 366.165C2175.7 365.502 2168.82 364.825 2161.91 364.161L2176.13 362.438Z\",\n    fill: \"#939393\"\n  })), _path165 || (_path165 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2196.87 363.024C2195.34 379.312 2177.08 405.403 2181.78 388.823C2186.81 380.218 2191.84 371.628 2196.87 363.024Z\",\n    fill: \"#939393\"\n  })), _path166 || (_path166 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2297.86 388.561C2374.96 397.309 2426.44 376.425 2438.95 427.291C2440.3 441.973 2441.65 456.67 2443 471.353C2440.79 493.746 2432.69 469.515 2417.58 469.923C2406.19 470.224 2380.72 492.015 2354.43 493.652C2313.99 496.178 2291.53 471.654 2249.52 472.25C2238.09 466.156 2245.53 452.219 2232.41 449.791C2241.45 408.723 2228.53 402.304 2297.86 388.561Z\",\n    fill: \"#939393\"\n  })), _path167 || (_path167 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2031.81 386.698C2046.11 382.623 2111.26 405.592 2111.04 413.752C2108.06 417.679 2105.09 421.621 2102.11 425.549C2061.67 421.879 2043.5 439.752 2040.18 467.741C2013.79 454.277 1986.25 441.617 1955.5 434.862C1966.49 389.185 1984.47 398.697 2031.81 386.698ZM2034.08 427.874C2031.11 431.646 2012.52 450.924 2016.19 452.885C2022.27 448.478 2037.06 454.355 2038.15 445.71C2038.81 440.498 2030.56 451.492 2033.62 440.62C2022.03 444.856 2039.07 429.929 2034.08 427.874Z\",\n    fill: \"#939393\"\n  })), _path168 || (_path168 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1957.56 404.438C1958.49 404.706 1959.43 404.959 1960.36 405.227C1956.95 412.218 1953.56 419.21 1950.16 426.202C1948.34 427.469 1915.02 421.946 1957.56 404.438Z\",\n    fill: \"#939393\"\n  })), _path169 || (_path169 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1802.33 417.054C1814.33 415.693 1863.36 424.709 1866.18 425.952C1876.67 430.573 1861.27 433.893 1864.33 450.708C1843.08 456.4 1795.98 485.29 1781.01 458.271C1773.7 445.064 1780.18 419.588 1802.33 417.054ZM1860.37 430.04C1851.98 435.941 1843.57 441.855 1835.19 447.756C1780.31 436.249 1778.9 440.221 1835.08 450.588C1846.51 443.54 1868.14 429.211 1860.37 430.04Z\",\n    fill: \"#939393\"\n  })), _path170 || (_path170 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1926.67 423.405C1943.91 436.411 1922.3 428.64 1899.86 433.986C1880 438.711 1865.6 458.929 1870.4 439.531C1874.72 422.032 1909.37 424.63 1926.67 423.405Z\",\n    fill: \"#939393\"\n  })), _path171 || (_path171 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1934.16 425.039C1938.52 426.112 1942.89 427.171 1947.25 428.245C1956.62 437.356 1925.71 428.102 1934.16 425.039Z\",\n    fill: \"#939393\"\n  })), _path172 || (_path172 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2034.09 427.867C2039.07 429.922 2022.03 444.849 2033.62 440.612C2030.56 451.484 2038.82 440.49 2038.15 445.702C2037.06 454.347 2022.27 448.47 2016.19 452.877C2012.52 450.916 2031.12 431.639 2034.09 427.867Z\",\n    fill: \"#939393\"\n  })), _path173 || (_path173 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1860.37 430.033C1868.14 429.204 1846.51 443.533 1835.08 450.581C1778.9 440.214 1780.31 436.242 1835.19 447.748C1843.57 441.848 1851.98 435.934 1860.37 430.033Z\",\n    fill: \"#939393\"\n  })), _path174 || (_path174 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1911.12 435.724L1933.75 436.365C1956.65 438.658 2022.95 465.771 2042.62 478.435C2046.62 495.673 2046.83 517.256 2067.21 528.749C2051.89 526.189 2036.58 523.628 2021.25 521.068C2006.47 529.622 1991.7 538.192 1976.91 546.747C1962.31 550.118 1947.73 553.476 1933.13 556.847C1921.05 516.584 1841.01 546.029 1790.87 524.463C1786.89 519.729 1818 502.536 1828.8 493.641C1848.04 477.784 1882.22 438.59 1911.12 435.724ZM1864.43 474.095C1876.21 478.681 1888.01 483.269 1899.79 487.855C1912.19 492.998 1908.14 501.418 1926.99 492.17C1907.89 496.945 1897.14 478.041 1864.43 474.095ZM2024.22 491.381C2015.22 507.5 2012.31 526.3 2020.49 516.084C2021.38 514.975 2028.6 489.478 2024.22 491.381ZM1971.33 492.718C1952.52 521.885 1954.84 540.068 1965.61 520.2C1967.51 511.039 1969.43 501.879 1971.33 492.718ZM2039.2 494.641C2025.03 509.706 2025.7 525.9 2035.94 506.598C2037.03 502.617 2038.11 498.622 2039.2 494.641ZM1975 495.657C1970.14 510.249 1964.5 525.13 1973.2 518.997C1974.46 518.112 1979.84 493.795 1975 495.657ZM1921.95 501.242C1906.7 520.204 1911.46 540.894 1918.37 521.697C1919.56 514.883 1920.75 508.056 1921.95 501.242ZM1940.76 528.711C1942.29 529.704 1943.84 530.683 1945.37 531.677C1961.83 502.656 1959.68 493.394 1940.76 528.711C1945.8 490.86 1940.31 499.083 1927.54 529.045C1929.08 529.797 1930.64 530.55 1932.17 531.303C1937.25 520.474 1936.47 529.51 1937.88 530.047C1938.84 529.606 1939.8 529.151 1940.76 528.711ZM1931.22 505.758C1913.94 534.599 1917.85 542.266 1927.64 526.212C1928.83 519.399 1930.03 512.571 1931.22 505.758Z\",\n    fill: \"#939393\"\n  })), _path175 || (_path175 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1723.79 448.851C1741.04 450.516 1758.27 452.195 1775.51 453.861C1776.07 455.762 1776.64 457.678 1777.19 459.579C1799.16 480.233 1775.11 474.689 1787.67 508.785C1755.25 511.722 1746.75 496.44 1731.62 493.02C1691.15 483.864 1685.26 501.347 1703.71 456.079C1710.41 453.675 1717.1 451.256 1723.79 448.851ZM1730.77 464.643C1706.71 478.322 1710.61 482.813 1730.66 467.475C1782.45 472.756 1786.78 467.804 1730.77 464.643Z\",\n    fill: \"#939393\"\n  })), _path176 || (_path176 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1857.55 455.474L1860.3 457.678C1838.95 475.445 1821.97 496.64 1795.16 510.41C1771.44 463.014 1805.58 476.172 1832.58 467.525C1840.9 463.507 1849.23 459.491 1857.55 455.474Z\",\n    fill: \"#939393\"\n  })), _path177 || (_path177 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1730.77 464.64C1786.78 467.801 1782.45 472.753 1730.66 467.472C1710.61 482.81 1706.72 478.319 1730.77 464.64Z\",\n    fill: \"#939393\"\n  })), _path178 || (_path178 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1864.43 474.094C1897.14 478.041 1907.89 496.944 1926.99 492.17C1908.14 501.417 1912.18 492.998 1899.78 487.855C1888 483.268 1876.21 478.681 1864.43 474.094Z\",\n    fill: \"#939393\"\n  })), _path179 || (_path179 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2183.96 406.593C2199.1 406.142 2212.68 408.923 2226.15 414.167C2217.65 440.848 2234.91 478.394 2215.41 501.757C2211.76 506.148 2169.05 523.268 2158.22 543.375C2154.93 538.788 2151.63 534.215 2148.34 529.627C2132.27 516.966 2075.05 546.718 2058.61 505.82L2048.85 463.014C2049.17 448.422 2062.24 430.632 2083.11 429.253C2111.17 427.411 2112.31 446.156 2144.11 412.552C2157.4 410.561 2170.68 408.584 2183.96 406.593ZM2204.5 412.845C2202.55 423.422 2200.57 433.999 2198.62 444.576C2204.9 435.879 2215.3 460.727 2213.55 449.252C2210.52 445.863 2207.51 442.46 2204.49 439.071C2200.34 424.976 2214.8 449.23 2215.69 442.224C2215.88 440.712 2202.66 431.166 2207.3 413.633C2206.37 413.366 2205.43 413.112 2204.5 412.845ZM2197.29 455.17C2195.3 455.865 2193.06 466.788 2171.8 481.383C2187.18 476.914 2207.65 451.565 2197.29 455.17ZM2217.88 460.007C2211.46 471.875 2205.07 483.744 2198.65 495.612C2197.08 511.19 2220.22 483.294 2217.88 460.007ZM2181.45 501.504C2182.32 503.414 2183.2 505.338 2184.07 507.249C2194.21 492.665 2198.35 469.561 2185.53 493.114C2197.63 458.809 2166.58 510.311 2165.88 514.53C2163.48 529.078 2171.69 522.676 2181.45 501.504ZM2158.4 486.674C2126.59 510.653 2102.68 495.444 2080.73 494.397C2063.72 493.589 2079.71 498.777 2107.84 501.545C2085.9 516.673 2093.06 520.307 2110.64 502.333C2128.27 504.845 2151.17 499.171 2158.4 486.674ZM2165.89 488.304C2162.79 495.546 2159.7 502.773 2156.6 510.015C2158.81 488.415 2148.11 507.846 2146.97 515.412C2143.37 539.212 2173.32 501.359 2165.89 488.304Z\",\n    fill: \"#939393\"\n  })), _path180 || (_path180 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2204.5 412.844C2205.43 413.111 2206.36 413.365 2207.3 413.632C2202.66 431.164 2215.88 440.711 2215.69 442.222C2214.8 449.228 2200.34 424.974 2204.48 439.07C2207.51 442.458 2210.52 445.861 2213.55 449.25C2215.3 460.725 2204.9 435.878 2198.62 444.574C2200.57 433.997 2202.54 423.421 2204.5 412.844Z\",\n    fill: \"#939393\"\n  })), _path181 || (_path181 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2197.29 455.174C2207.65 451.569 2187.18 476.917 2171.8 481.387C2193.06 466.792 2195.3 455.869 2197.29 455.174Z\",\n    fill: \"#939393\"\n  })), _path182 || (_path182 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2217.88 460.005C2220.22 483.292 2197.08 511.188 2198.65 495.61C2205.07 483.742 2211.46 471.873 2217.88 460.005Z\",\n    fill: \"#939393\"\n  })), _path183 || (_path183 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2185.53 493.116C2184.16 495.913 2182.82 498.71 2181.45 501.506C2171.7 522.679 2163.48 529.08 2165.88 514.532C2166.58 510.314 2197.63 458.813 2185.53 493.116Z\",\n    fill: \"#939393\"\n  })), _path184 || (_path184 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2181.45 501.501C2182.82 498.704 2184.16 495.907 2185.53 493.111C2198.35 469.559 2194.21 492.662 2184.07 507.245C2183.2 505.335 2182.32 503.411 2181.45 501.501Z\",\n    fill: \"#939393\"\n  })), _path185 || (_path185 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2158.4 486.675C2151.16 499.172 2128.27 504.846 2110.64 502.334C2093.06 520.308 2085.9 516.674 2107.84 501.546C2079.71 498.778 2063.72 493.59 2080.73 494.398C2102.68 495.445 2126.59 510.654 2158.4 486.675Z\",\n    fill: \"#939393\"\n  })), _path186 || (_path186 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2165.89 488.304C2173.32 501.358 2143.37 539.211 2146.97 515.412C2148.11 507.846 2158.8 488.415 2156.6 510.014C2159.7 502.773 2162.79 495.546 2165.89 488.304Z\",\n    fill: \"#939393\"\n  })), _path187 || (_path187 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2024.22 491.384C2028.59 489.481 2021.38 514.978 2020.49 516.087C2012.31 526.302 2015.22 507.502 2024.22 491.384Z\",\n    fill: \"#939393\"\n  })), _path188 || (_path188 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1971.33 492.719C1969.43 501.88 1967.51 511.04 1965.61 520.201C1954.84 540.069 1952.52 521.886 1971.33 492.719Z\",\n    fill: \"#939393\"\n  })), _path189 || (_path189 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2039.2 494.644C2038.11 498.625 2037.03 502.621 2035.94 506.602C2025.7 525.904 2025.03 509.709 2039.2 494.644Z\",\n    fill: \"#939393\"\n  })), _path190 || (_path190 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1974.99 495.663C1979.84 493.801 1974.46 518.117 1973.2 519.003C1964.5 525.135 1970.14 510.254 1974.99 495.663Z\",\n    fill: \"#939393\"\n  })), _path191 || (_path191 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2270.9 506.88C2305.72 510.603 2406.68 529.029 2429.97 543.993C2456.86 561.257 2445.87 616.531 2451.89 641.723C2437.07 642.962 2422.23 644.186 2407.4 645.424C2388.88 652.938 2370.37 660.437 2351.85 667.95L2318.07 662.74C2288.73 672.201 2258.23 664.901 2227.05 674.338C2179.16 656.933 2142.23 683.658 2114.23 662.635C2097.17 649.818 2111.19 624.003 2124.55 612.601C2147.23 603.533 2148.91 584.839 2167.53 572.707C2178.2 555.997 2188.88 539.289 2199.55 522.579C2225.93 499.056 2241.26 518.459 2270.9 506.88Z\",\n    fill: \"#939393\"\n  })), _path192 || (_path192 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1921.94 501.247C1920.75 508.06 1919.56 514.887 1918.37 521.701C1911.46 540.898 1906.7 520.208 1921.94 501.247Z\",\n    fill: \"#939393\"\n  })), _path193 || (_path193 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1940.76 528.712C1939.8 529.152 1938.84 529.607 1937.88 530.048C1936.46 529.511 1937.25 520.475 1932.17 531.304C1930.63 530.551 1929.08 529.798 1927.54 529.046C1940.31 499.085 1945.8 490.862 1940.76 528.712Z\",\n    fill: \"#939393\"\n  })), _path194 || (_path194 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1940.76 528.713C1959.67 493.398 1961.83 502.659 1945.37 531.679C1943.84 530.686 1942.29 529.707 1940.76 528.713Z\",\n    fill: \"#939393\"\n  })), _path195 || (_path195 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1931.21 505.765C1930.02 512.578 1928.83 519.406 1927.64 526.219C1917.84 542.272 1913.93 534.606 1931.21 505.765Z\",\n    fill: \"#939393\"\n  })), _path196 || (_path196 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1725.61 528.285C1727.61 527.307 1743.72 511.418 1734.67 512.948C1732.03 513.397 1733.19 529.762 1703.02 526.936C1706.61 530.837 1714.91 528.861 1721.79 529.595C1712.91 531.385 1708.42 537.211 1694.3 533.069C1683.23 529.82 1697.11 511.302 1712.2 508.058C1733.43 503.485 1782.89 518.964 1770.13 523.876C1754.84 522.38 1740.3 525.71 1725.61 528.285Z\",\n    fill: \"#939393\"\n  })), _path197 || (_path197 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1725.62 528.286L1721.79 529.595C1714.91 528.862 1706.61 530.838 1703.02 526.937C1733.19 529.762 1732.03 513.398 1734.67 512.949C1743.73 511.419 1727.61 527.308 1725.62 528.286Z\",\n    fill: \"#939393\"\n  })), _path198 || (_path198 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1779.45 526.98C1793.81 530.222 1808.15 533.464 1822.51 536.706C1848.99 540.221 1914.81 534.317 1924.57 558.736C1931.02 574.896 1901.68 573.143 1901.52 595.65C1873.76 573.131 1809.54 592.066 1769.69 587.662C1744.56 584.88 1734.37 568.672 1709.56 580.288C1687.02 590.835 1694.03 625.893 1622.98 599.808C1654.25 579.188 1685.5 558.582 1716.77 537.963C1730.06 532.215 1764.34 526.297 1779.45 526.98ZM1910.55 554.795C1904.25 571.33 1906.88 553.698 1901.79 562.343C1899.99 568.672 1898.17 575 1896.38 581.328C1902.77 573.16 1913.18 565.076 1910.55 554.795ZM1812.25 559.098C1795.23 560.572 1776.79 575.742 1787.07 576.814C1790.04 577.125 1804.84 555.315 1839.36 566.245C1819.83 593.52 1847.06 570.971 1841.4 562.05C1831.68 561.066 1821.98 560.082 1812.25 559.098ZM1895.21 561.448C1892.83 566.342 1890.46 571.237 1888.07 576.131C1886.15 590.14 1897.07 579.264 1895.21 561.448Z\",\n    fill: \"#939393\"\n  })), _path199 || (_path199 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1910.55 554.795C1913.18 565.076 1902.77 573.159 1896.38 581.328C1898.17 575 1899.99 568.672 1901.79 562.343C1906.88 553.698 1904.25 571.33 1910.55 554.795Z\",\n    fill: \"#939393\"\n  })), _path200 || (_path200 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1812.25 559.1C1821.97 560.084 1831.68 561.068 1841.4 562.052C1847.06 570.973 1819.83 593.522 1839.36 566.247C1804.84 555.318 1790.04 577.126 1787.07 576.815C1776.79 575.744 1795.23 560.574 1812.25 559.1Z\",\n    fill: \"#939393\"\n  })), _path201 || (_path201 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1895.21 561.454C1897.07 579.27 1886.15 590.146 1888.07 576.137C1890.46 571.243 1892.83 566.348 1895.21 561.454Z\",\n    fill: \"#939393\"\n  })), _path202 || (_path202 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2024.76 528.255C2062.82 535.713 2099.7 544.144 2137.84 532.877C2173.96 585.106 2070.18 620.144 2026.03 648.791C2010.42 626.701 1979.77 635.856 1977.78 626.16C1968.16 631.968 1947.65 621.776 1921.02 630.222C1917.94 619.97 1914.84 609.732 1911.76 599.48C1909.76 579.207 1927.56 583.88 1942.4 561.363C1975.84 561.36 2000.37 543.031 2024.76 528.255ZM2089.41 566.946C2066.75 569.295 2026.59 604.009 1980.86 593.641C1980.51 594.34 1980.18 595.039 1979.84 595.738C2023.16 604.89 2038.64 587.112 2072.13 574.962C2083.3 570.912 2115.74 564.219 2089.41 566.946ZM2086.96 582.47C2082.19 592.727 2077.4 602.996 2072.62 613.253C2081.47 617.118 2091.01 587.859 2086.96 582.47ZM2071.41 594.789C2055.62 617.874 2048.56 635.395 2063.96 617.969C2066.75 614.802 2074.8 599.194 2071.41 594.789ZM2046.85 595.51C2010.49 654.787 2050.99 614.894 2049.6 597.715L2046.85 595.51ZM2056.27 595.778C2039.51 617.546 2041.22 632.876 2048.72 621.79C2051.24 613.115 2053.75 604.453 2056.27 595.778ZM2035.38 599.438C2006.94 632.061 2023.59 628.748 2032.06 612.812C2033.17 608.35 2034.27 603.901 2035.38 599.438Z\",\n    fill: \"#939393\"\n  })), _path203 || (_path203 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2089.41 566.94C2115.74 564.212 2083.3 570.906 2072.13 574.956C2038.64 587.106 2023.16 604.884 1979.83 595.732C1980.18 595.033 1980.51 594.333 1980.85 593.634C2026.59 604.003 2066.75 569.289 2089.41 566.94Z\",\n    fill: \"#939393\"\n  })), _path204 || (_path204 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2086.96 582.472C2091.01 587.86 2081.47 617.119 2072.62 613.253C2077.4 602.997 2082.19 592.728 2086.96 582.472Z\",\n    fill: \"#939393\"\n  })), _path205 || (_path205 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2071.41 594.787C2074.79 599.193 2066.75 614.8 2063.96 617.967C2048.56 635.393 2055.62 617.872 2071.41 594.787Z\",\n    fill: \"#939393\"\n  })), _path206 || (_path206 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2046.85 595.519L2049.6 597.723C2050.99 614.902 2010.49 654.794 2046.85 595.519Z\",\n    fill: \"#939393\"\n  })), _path207 || (_path207 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2056.27 595.776C2053.75 604.451 2051.24 613.113 2048.72 621.788C2041.22 632.874 2039.51 617.544 2056.27 595.776Z\",\n    fill: \"#939393\"\n  })), _path208 || (_path208 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2035.38 599.439C2034.27 603.901 2033.16 608.35 2032.06 612.812C2023.59 628.747 2006.94 632.06 2035.38 599.439Z\",\n    fill: \"#939393\"\n  })), _path209 || (_path209 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1726.53 580.762C1733.56 580.508 1761.92 599.372 1790.07 598.157C1806.44 590.611 1877.13 587.964 1890.25 593.907C1902.91 599.653 1913.92 629.566 1912.45 632.104C1910.9 634.81 1885.78 636.239 1883.1 634.817C1881.56 633.993 1874.92 605.381 1878.41 633.975C1868.31 637.304 1876.38 627.68 1870.52 617.448L1867 636.487L1863.23 636.38C1856.36 604.643 1861.86 644.28 1855.79 633.334L1855.48 641.831C1820.85 657.706 1825.19 664.534 1833.67 644.757C1826.44 653.058 1819.23 661.36 1812 669.661C1800.39 672.663 1756.64 653.079 1742.91 649.274C1727.47 644.995 1693.89 644.043 1691.5 635.767C1688.68 626.033 1703.1 581.63 1726.53 580.762ZM1872.82 606.172C1860.37 611.249 1847.91 616.34 1835.46 621.417C1837.03 631.059 1897.13 604.55 1872.82 606.172ZM1789.14 623.648C1794.92 631.666 1829.85 633.988 1820.98 630.221C1810.36 628.035 1799.76 625.835 1789.14 623.648ZM1798.27 657.931C1794.81 669.911 1804.04 658.491 1815.55 649.914C1796.62 678.312 1834.57 640.26 1830.1 638.985C1826.55 641.72 1822.98 644.454 1819.42 647.189C1832.23 630.866 1814.53 643.789 1806.12 649.647C1809.42 645.729 1812.69 641.795 1815.99 637.877C1815.05 637.609 1814.12 637.356 1813.18 637.088C1789.08 655.274 1782.75 668.931 1798.27 657.931Z\",\n    fill: \"#939393\"\n  })), _path210 || (_path210 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1872.82 606.165C1897.13 604.543 1837.03 631.05 1835.46 621.409C1847.91 616.332 1860.36 611.241 1872.82 606.165Z\",\n    fill: \"#939393\"\n  })), _path211 || (_path211 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1789.14 623.652C1799.76 625.838 1810.36 628.038 1820.98 630.225C1829.85 633.992 1794.92 631.669 1789.14 623.652Z\",\n    fill: \"#939393\"\n  })), _path212 || (_path212 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1806.12 649.651C1803.51 652.413 1800.88 655.173 1798.27 657.935C1782.75 668.935 1789.08 655.278 1813.18 637.093C1814.12 637.36 1815.05 637.614 1815.98 637.881C1812.69 641.8 1809.41 645.733 1806.12 649.651Z\",\n    fill: \"#939393\"\n  })), _path213 || (_path213 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1819.42 647.19C1818.12 648.103 1816.84 649.002 1815.55 649.915C1804.04 658.492 1794.81 669.911 1798.27 657.931C1800.88 655.17 1803.51 652.409 1806.12 649.648C1814.52 643.79 1832.22 630.867 1819.42 647.19Z\",\n    fill: \"#939393\"\n  })), _path214 || (_path214 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1815.55 649.921C1816.85 649.008 1818.12 648.109 1819.42 647.196C1822.98 644.461 1826.55 641.727 1830.1 638.992C1834.56 640.267 1796.62 678.32 1815.55 649.921Z\",\n    fill: \"#939393\"\n  })), _path215 || (_path215 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1559.74 600.127C1594.43 597.027 1633.67 613.449 1666.59 620.166C1651.78 629.202 1636.99 638.225 1622.19 647.261C1621.71 647.333 1620.17 640.513 1616.53 647.101C1609.04 635.278 1607.88 653.023 1604.76 659.526C1603.58 656.445 1602 636.666 1597.99 638.07C1604.06 682.869 1587.14 672.608 1564.54 675.398C1519.97 680.912 1474.8 689.797 1429.24 685.032C1469 658.302 1475.17 629.373 1525.39 610.495C1536.84 607.034 1548.29 603.588 1559.74 600.127ZM1585.46 619.285C1580.31 622.442 1575.17 625.614 1570.02 628.771C1565.37 630.426 1522.86 638.351 1525.17 642.386C1547.68 636.814 1573.85 633.757 1590.15 620.127C1588.59 619.842 1587.02 619.57 1585.46 619.285ZM1577.3 636.066L1579.12 663.762L1582.89 663.868C1583.34 660.337 1583.77 656.805 1584.22 653.274C1585.37 653.306 1583.8 667.58 1589.47 664.763C1592.62 663.194 1584.95 633.419 1579.84 643.935C1579 641.317 1578.15 638.684 1577.3 636.066ZM1590.45 637.856C1589.03 667.983 1598.89 673.522 1596.55 651.497C1594.51 646.945 1592.49 642.408 1590.45 637.856ZM1571.33 644.403C1567.43 665.018 1579.79 676.582 1575.71 653.741C1574.26 650.624 1572.79 647.52 1571.33 644.403Z\",\n    fill: \"#939393\"\n  })), _path216 || (_path216 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1585.46 619.286C1587.02 619.571 1588.59 619.843 1590.15 620.128C1573.85 633.757 1547.68 636.815 1525.17 642.386C1522.86 638.352 1565.37 630.427 1570.02 628.772C1575.17 625.615 1580.31 622.443 1585.46 619.286Z\",\n    fill: \"#939393\"\n  })), _path217 || (_path217 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1577.3 636.063C1578.15 638.681 1579 641.314 1579.84 643.932C1584.95 633.416 1592.62 663.191 1589.46 664.76C1583.79 667.576 1585.37 653.303 1584.22 653.271C1583.77 656.802 1583.34 660.334 1582.89 663.865L1579.12 663.758L1577.3 636.063Z\",\n    fill: \"#939393\"\n  })), _path218 || (_path218 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1590.45 637.857C1592.49 642.408 1594.51 646.945 1596.55 651.497C1598.88 673.522 1589.03 667.983 1590.45 637.857Z\",\n    fill: \"#939393\"\n  })), _path219 || (_path219 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1571.33 644.406C1572.79 647.523 1574.26 650.627 1575.71 653.745C1579.79 676.586 1567.43 665.022 1571.33 644.406Z\",\n    fill: \"#939393\"\n  })), _path220 || (_path220 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1662.2 637.066C1670.91 639.681 1679.61 642.281 1688.33 644.895C1706.46 648.244 1724.57 651.593 1742.7 654.942C1765.22 661.052 1785.37 673.602 1809.91 675.275C1822.23 729.524 1821.26 697.656 1733.2 708.543C1672.34 708.35 1664.09 690.721 1609.38 688.023C1616.62 671.642 1635.15 637.675 1662.2 637.066ZM1661.32 661.142C1677.49 666.321 1693.65 671.513 1709.82 676.692C1690.54 694.519 1712.4 674.455 1731.43 679.431C1708.06 673.339 1684.69 667.233 1661.32 661.142Z\",\n    fill: \"#939393\"\n  })), _path221 || (_path221 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1661.32 661.143C1684.69 667.234 1708.06 673.34 1731.42 679.432C1712.39 674.455 1690.54 694.519 1709.82 676.693C1693.65 671.514 1677.49 666.322 1661.32 661.143Z\",\n    fill: \"#939393\"\n  })), _path222 || (_path222 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1951.08 633.905C1960.61 633.991 2011.82 641.708 2015.69 647.786C2018.15 651.641 2008.94 694.306 2006.29 698.555C1997.03 713.419 1959.1 704.518 1940.75 710.165C1910.25 705.147 1895.43 698.944 1872.52 718.156C1856.55 716.045 1840.58 713.948 1824.62 711.837C1825.09 673.602 1822.68 660.491 1871.48 642.991C1898.52 649.286 1926.25 633.669 1951.08 633.905ZM1972.73 661.454C1968.92 662.296 1965.12 663.124 1961.31 663.966C1958.19 664.047 1910.4 662.239 1913.1 666.144C1950.33 669.084 1990.53 661.249 1972.73 661.454ZM1840.23 671.876L1840.13 674.708C1899.55 686.401 1895.27 681.729 1840.23 671.876ZM1977.87 675.776C1953.78 695.975 1943.55 714.143 1962.87 698.742L1977.87 675.776ZM1960.79 678.127C1957.55 681.239 1940.6 699.756 1944.83 701.775C1950.51 700.759 1964.01 679.466 1960.79 678.127ZM1989.08 678.929C1960.42 702.784 1963.84 711.996 1980 694.974C1983.02 689.631 1986.05 684.273 1989.08 678.929ZM1998.5 679.196C1990.78 691.24 1979.13 700.266 1984.48 701.481C1988.06 701.582 2002.52 683.336 1998.5 679.196ZM1945.45 684.781C1941.91 687.275 1938.34 689.782 1934.8 692.276C1918.3 708.962 1941.91 697.553 1945.45 684.781ZM1915.03 691.007C1906.78 692.148 1915.66 697.007 1915.74 697.407C1915.05 699.273 1914.34 701.152 1913.65 703.018C1918.88 709.744 1922.46 689.984 1915.03 691.007Z\",\n    fill: \"#939393\"\n  })), _path223 || (_path223 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1972.72 661.456C1990.53 661.251 1950.33 669.086 1913.1 666.146C1910.39 662.241 1958.19 664.049 1961.31 663.967C1965.11 663.125 1968.92 662.298 1972.72 661.456Z\",\n    fill: \"#939393\"\n  })), _path224 || (_path224 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1840.23 671.874C1895.26 681.726 1899.55 686.398 1840.13 674.706L1840.23 671.874Z\",\n    fill: \"#939393\"\n  })), _path225 || (_path225 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1977.87 675.779L1962.87 698.745C1943.55 714.146 1953.78 695.978 1977.87 675.779Z\",\n    fill: \"#939393\"\n  })), _path226 || (_path226 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1960.79 678.131C1964.01 679.47 1950.51 700.763 1944.83 701.779C1940.61 699.759 1957.55 681.243 1960.79 678.131Z\",\n    fill: \"#939393\"\n  })), _path227 || (_path227 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1989.08 678.93C1986.05 684.274 1983.02 689.632 1980 694.976C1963.84 711.997 1960.42 702.785 1989.08 678.93Z\",\n    fill: \"#939393\"\n  })), _path228 || (_path228 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1998.5 679.193C2002.52 683.333 1988.06 701.579 1984.48 701.477C1979.13 700.262 1990.78 691.236 1998.5 679.193Z\",\n    fill: \"#939393\"\n  })), _path229 || (_path229 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1945.45 684.782C1941.91 697.554 1918.3 708.964 1934.8 692.277C1938.34 689.783 1941.91 687.276 1945.45 684.782Z\",\n    fill: \"#939393\"\n  })), _path230 || (_path230 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1915.03 691.007C1922.46 689.984 1918.87 709.742 1913.65 703.017C1914.34 701.151 1915.05 699.272 1915.74 697.406C1915.66 697.007 1906.78 692.148 1915.03 691.007Z\",\n    fill: \"#939393\"\n  })), _path231 || (_path231 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2443.2 776.863L2328.18 773.604C2314.11 764.26 2295.69 763.142 2281.05 772.268L2035.94 765.323C2040.44 750.225 2022.71 761.711 2020 771.331C2017.95 771.783 2016.28 766.821 2015.24 762.575C2014.36 759.005 2015.7 755.308 2018.08 752.474C2022.01 747.789 2027.56 739.803 2028.72 730.996C2029.03 728.64 2027.21 726.199 2025.16 723.981C2021.96 720.537 2023.06 716.41 2027.52 714.842C2065.87 701.372 2117.14 710.483 2154.53 696.383L2273.62 691.252C2298.3 687.23 2322.99 683.195 2347.67 679.173C2379.82 677.263 2433.51 681.081 2447.64 706.815C2461.49 732.045 2440.66 751.543 2443.2 776.863Z\",\n    fill: \"#939393\"\n  })), _path232 || (_path232 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2035.94 765.323L2018.98 764.842C2021.69 755.223 2040.44 750.225 2035.94 765.323Z\",\n    fill: \"#939393\"\n  })), _path233 || (_path233 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2328.18 773.605L2281.05 772.269C2295.69 763.143 2314.11 764.261 2328.18 773.605Z\",\n    fill: \"#939393\"\n  })), _path234 || (_path234 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2231.53 344.155C2232.47 344.422 2233.4 344.676 2234.33 344.943C2163.58 383.369 2222.88 344.307 2231.53 344.155Z\",\n    fill: \"black\"\n  })), _path235 || (_path235 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2252.17 347.568C2257.17 354.345 2249.83 364.06 2244.72 370.748C2244.76 401.568 2231.4 383.455 2252.17 347.568Z\",\n    fill: \"black\"\n  })), _path236 || (_path236 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2236.88 352.81C2245.55 351.525 2233.79 364.092 2233.61 364.767L2233.09 378.929C2226 405.308 2226.93 354.286 2236.88 352.81Z\",\n    fill: \"black\"\n  })), _path237 || (_path237 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2118 352.275C2140.9 354.101 2163.78 355.94 2186.68 357.766C2175.7 357.213 2164.7 356.675 2153.71 356.123C2152.79 364.9 2133.98 351.835 2136.64 358.474C2130.43 356.413 2124.2 354.337 2118 352.275Z\",\n    fill: \"black\"\n  })), _path238 || (_path238 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2210.22 359.137C2216.54 357.7 2203.11 371.495 2204.56 385.202C2192.37 402.265 2203.89 360.587 2210.22 359.137Z\",\n    fill: \"black\"\n  })), _path239 || (_path239 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2176.13 362.422L2190.19 364.947C2181.01 367.706 2174.74 385.518 2171.17 394.886C2164.96 396.88 2173.84 374.562 2182.6 366.149C2175.7 365.486 2168.81 364.809 2161.91 364.145L2176.13 362.422Z\",\n    fill: \"black\"\n  })), _path240 || (_path240 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2196.87 363.017C2195.33 379.304 2177.08 405.396 2181.78 388.815C2186.81 380.211 2191.84 371.621 2196.87 363.017Z\",\n    fill: \"black\"\n  })), _path241 || (_path241 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2034.08 427.865C2039.07 429.92 2022.03 444.847 2033.62 440.611C2030.56 451.482 2038.81 440.489 2038.15 445.701C2037.06 454.346 2022.27 448.469 2016.18 452.875C2012.52 450.914 2031.11 431.637 2034.08 427.865Z\",\n    fill: \"black\"\n  })), _path242 || (_path242 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1860.36 430.032C1868.13 429.203 1846.51 443.533 1835.08 450.58C1778.9 440.213 1780.31 436.241 1835.18 447.748C1843.57 441.847 1851.98 435.933 1860.36 430.032Z\",\n    fill: \"black\"\n  })), _path243 || (_path243 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1730.76 464.636C1786.78 467.796 1782.44 472.749 1730.66 467.468C1710.6 482.805 1706.71 478.315 1730.76 464.636Z\",\n    fill: \"black\"\n  })), _path244 || (_path244 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1864.42 474.093C1897.14 478.039 1907.88 496.943 1926.99 492.168C1908.14 501.416 1912.18 492.996 1899.78 487.853C1888 483.267 1876.2 478.679 1864.42 474.093Z\",\n    fill: \"black\"\n  })), _path245 || (_path245 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2204.49 412.848C2205.43 413.115 2206.36 413.369 2207.29 413.636C2202.65 431.168 2215.88 440.715 2215.69 442.226C2214.79 449.232 2200.33 424.978 2204.48 439.074C2207.51 442.462 2210.52 445.865 2213.55 449.254C2215.3 460.729 2204.9 435.882 2198.62 444.578C2200.57 434.001 2202.54 423.425 2204.49 412.848Z\",\n    fill: \"black\"\n  })), _path246 || (_path246 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2197.29 455.177C2207.65 451.572 2187.17 476.92 2171.8 481.39C2193.05 466.795 2195.3 455.872 2197.29 455.177Z\",\n    fill: \"black\"\n  })), _path247 || (_path247 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2217.87 460.005C2220.21 483.292 2197.08 511.188 2198.65 495.61C2205.06 483.742 2211.46 471.873 2217.87 460.005Z\",\n    fill: \"black\"\n  })), _path248 || (_path248 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2185.53 493.121C2184.16 495.918 2182.81 498.715 2181.45 501.511C2171.69 522.683 2163.47 529.085 2165.87 514.537C2166.57 510.319 2197.63 458.817 2185.53 493.121Z\",\n    fill: \"black\"\n  })), _path249 || (_path249 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2181.44 501.504C2182.81 498.707 2184.16 495.91 2185.52 493.113C2198.35 469.562 2194.2 492.665 2184.06 507.248C2183.19 505.338 2182.32 503.414 2181.44 501.504Z\",\n    fill: \"black\"\n  })), _path250 || (_path250 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2158.39 486.678C2151.16 499.175 2128.27 504.849 2110.64 502.337C2093.05 520.31 2085.9 516.677 2107.84 501.549C2079.7 498.781 2063.72 493.593 2080.73 494.401C2102.68 495.448 2126.59 510.657 2158.39 486.678Z\",\n    fill: \"black\"\n  })), _path251 || (_path251 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2165.88 488.312C2173.31 501.366 2143.36 539.219 2146.97 515.42C2148.11 507.854 2158.8 488.423 2156.6 510.022C2159.69 502.781 2162.79 495.553 2165.88 488.312Z\",\n    fill: \"black\"\n  })), _path252 || (_path252 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2024.22 491.375C2028.59 489.471 2021.37 514.968 2020.48 516.077C2012.3 526.293 2015.21 507.493 2024.22 491.375Z\",\n    fill: \"black\"\n  })), _path253 || (_path253 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1971.33 492.719C1969.42 501.88 1967.51 511.04 1965.61 520.2C1954.84 540.068 1952.52 521.885 1971.33 492.719Z\",\n    fill: \"black\"\n  })), _path254 || (_path254 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2039.2 494.646C2038.11 498.628 2037.02 502.623 2035.93 506.604C2025.7 525.907 2025.02 509.712 2039.2 494.646Z\",\n    fill: \"black\"\n  })), _path255 || (_path255 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1974.99 495.662C1979.83 493.801 1974.46 518.116 1973.2 519.002C1964.5 525.135 1970.14 510.254 1974.99 495.662Z\",\n    fill: \"black\"\n  })), _path256 || (_path256 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1921.94 501.241C1920.75 508.055 1919.56 514.882 1918.36 521.695C1911.46 540.893 1906.7 520.202 1921.94 501.241Z\",\n    fill: \"black\"\n  })), _path257 || (_path257 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1940.76 528.713C1939.8 529.154 1938.84 529.609 1937.88 530.049C1936.46 529.513 1937.25 520.477 1932.17 531.305C1930.63 530.553 1929.07 529.8 1927.53 529.047C1940.31 499.086 1945.8 490.864 1940.76 528.713Z\",\n    fill: \"black\"\n  })), _path258 || (_path258 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1940.76 528.708C1959.67 493.392 1961.82 502.654 1945.37 531.674C1943.83 530.681 1942.29 529.701 1940.76 528.708Z\",\n    fill: \"black\"\n  })), _path259 || (_path259 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1931.21 505.755C1930.02 512.568 1928.83 519.395 1927.63 526.209C1917.84 542.262 1913.93 534.595 1931.21 505.755Z\",\n    fill: \"black\"\n  })), _path260 || (_path260 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1725.61 528.284L1721.79 529.593C1714.91 528.859 1706.61 530.836 1703.01 526.934C1733.18 529.76 1732.02 513.396 1734.66 512.946C1743.72 511.417 1727.61 527.305 1725.61 528.284Z\",\n    fill: \"black\"\n  })), _path261 || (_path261 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1910.55 554.796C1913.17 565.078 1902.76 573.161 1896.37 581.329C1898.17 575.001 1899.98 568.673 1901.78 562.345C1906.87 553.7 1904.25 571.331 1910.55 554.796Z\",\n    fill: \"black\"\n  })), _path262 || (_path262 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1812.25 559.099C1821.97 560.084 1831.67 561.067 1841.4 562.052C1847.05 570.973 1819.83 593.521 1839.36 566.247C1804.84 555.317 1790.04 577.126 1787.07 576.815C1776.79 575.744 1795.23 560.573 1812.25 559.099Z\",\n    fill: \"black\"\n  })), _path263 || (_path263 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1895.21 561.451C1897.07 579.267 1886.14 590.143 1888.07 576.134C1890.45 571.24 1892.82 566.345 1895.21 561.451Z\",\n    fill: \"black\"\n  })), _path264 || (_path264 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2089.41 566.95C2115.74 564.223 2083.3 570.916 2072.13 574.966C2038.64 587.116 2023.16 604.894 1979.84 595.742C1980.18 595.043 1980.51 594.344 1980.86 593.645C2026.59 604.013 2066.75 569.299 2089.41 566.95Z\",\n    fill: \"black\"\n  })), _path265 || (_path265 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2086.96 582.48C2091.01 587.868 2081.47 617.127 2072.62 613.261C2077.39 603.005 2082.19 592.736 2086.96 582.48Z\",\n    fill: \"black\"\n  })), _path266 || (_path266 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2071.41 594.792C2074.79 599.198 2066.75 614.805 2063.96 617.972C2048.56 635.398 2055.62 617.877 2071.41 594.792Z\",\n    fill: \"black\"\n  })), _path267 || (_path267 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2046.84 595.518L2049.59 597.722C2050.99 614.9 2010.49 654.793 2046.84 595.518Z\",\n    fill: \"black\"\n  })), _path268 || (_path268 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2056.27 595.777C2053.75 604.452 2051.24 613.114 2048.72 621.789C2041.22 632.875 2039.51 617.545 2056.27 595.777Z\",\n    fill: \"black\"\n  })), _path269 || (_path269 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2035.38 599.445C2034.27 603.908 2033.17 608.356 2032.06 612.818C2023.59 628.754 2006.94 632.067 2035.38 599.445Z\",\n    fill: \"black\"\n  })), _path270 || (_path270 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1872.82 606.169C1897.13 604.548 1837.04 631.055 1835.46 621.414C1847.91 616.337 1860.37 611.246 1872.82 606.169Z\",\n    fill: \"black\"\n  })), _path271 || (_path271 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1789.14 623.644C1799.76 625.83 1810.36 628.03 1820.98 630.217C1829.85 633.984 1794.92 631.662 1789.14 623.644Z\",\n    fill: \"black\"\n  })), _path272 || (_path272 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1806.12 649.642C1803.51 652.403 1800.88 655.164 1798.27 657.925C1782.75 668.925 1789.08 655.269 1813.18 637.083C1814.12 637.351 1815.05 637.604 1815.99 637.871C1812.69 641.79 1809.41 645.723 1806.12 649.642Z\",\n    fill: \"black\"\n  })), _path273 || (_path273 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1819.42 647.193C1818.13 648.106 1816.85 649.006 1815.55 649.919C1804.05 658.496 1794.82 669.915 1798.27 657.935C1800.88 655.174 1803.51 652.413 1806.12 649.652C1814.53 643.794 1832.23 630.871 1819.42 647.193Z\",\n    fill: \"black\"\n  })), _path274 || (_path274 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1815.55 649.907C1816.85 648.994 1818.13 648.094 1819.42 647.181C1822.98 644.447 1826.55 641.712 1830.1 638.978C1834.57 640.253 1796.62 678.305 1815.55 649.907Z\",\n    fill: \"black\"\n  })), _path275 || (_path275 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1585.46 619.3C1580.31 622.457 1575.17 625.629 1570.02 628.786C1565.37 630.441 1522.86 638.366 1525.17 642.4C1547.68 636.829 1573.85 633.771 1590.15 620.142C1588.59 619.857 1587.02 619.585 1585.46 619.3ZM1577.3 636.081L1579.12 663.776L1582.89 663.883C1583.34 660.351 1583.77 656.819 1584.22 653.288C1585.37 653.321 1583.79 667.594 1589.46 664.778C1592.62 663.208 1584.95 633.434 1579.84 643.95C1579 641.331 1578.15 638.699 1577.3 636.081ZM1590.45 637.871C1589.03 667.997 1598.88 673.536 1596.55 651.511C1594.51 646.959 1592.49 642.422 1590.45 637.871ZM1571.33 644.417C1567.43 665.032 1579.79 676.596 1575.71 653.756C1574.26 650.638 1572.79 647.535 1571.33 644.417Z\",\n    fill: \"black\"\n  })), _path276 || (_path276 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1585.46 619.3C1587.02 619.585 1588.59 619.857 1590.15 620.142C1573.85 633.771 1547.68 636.829 1525.17 642.4C1522.86 638.366 1565.37 630.441 1570.02 628.786C1575.17 625.629 1580.31 622.457 1585.46 619.3Z\",\n    fill: \"black\"\n  })), _path277 || (_path277 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1577.3 636.082C1578.15 638.7 1579 641.332 1579.85 643.951C1584.95 633.435 1592.62 663.209 1589.47 664.779C1583.8 667.595 1585.37 653.322 1584.22 653.289C1583.77 656.82 1583.34 660.352 1582.89 663.884L1579.12 663.777L1577.3 636.082Z\",\n    fill: \"black\"\n  })), _path278 || (_path278 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1590.45 637.867C1592.49 642.419 1594.52 646.956 1596.56 651.507C1598.89 673.532 1589.03 667.994 1590.45 637.867Z\",\n    fill: \"black\"\n  })), _path279 || (_path279 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1571.34 644.418C1572.79 647.536 1574.26 650.64 1575.72 653.757C1579.79 676.598 1567.43 665.034 1571.34 644.418Z\",\n    fill: \"black\"\n  })), _path280 || (_path280 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1661.32 661.139C1684.69 667.231 1708.06 673.337 1731.43 679.428C1712.39 674.452 1690.54 694.516 1709.82 676.69C1693.65 671.511 1677.49 666.318 1661.32 661.139Z\",\n    fill: \"black\"\n  })), _path281 || (_path281 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1972.72 661.463C1990.52 661.259 1950.32 669.093 1913.1 666.153C1910.39 662.249 1958.19 664.057 1961.31 663.975C1965.11 663.133 1968.92 662.305 1972.72 661.463Z\",\n    fill: \"black\"\n  })), _path282 || (_path282 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1840.23 671.884C1895.26 681.737 1899.54 686.409 1840.12 674.717L1840.23 671.884Z\",\n    fill: \"black\"\n  })), _path283 || (_path283 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1977.86 675.784L1962.87 698.75C1943.55 714.151 1953.78 695.983 1977.86 675.784Z\",\n    fill: \"black\"\n  })), _path284 || (_path284 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1960.79 678.136C1964 679.475 1950.51 700.768 1944.83 701.784C1940.6 699.764 1957.54 681.248 1960.79 678.136Z\",\n    fill: \"black\"\n  })), _path285 || (_path285 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1989.07 678.934C1986.05 684.278 1983.02 689.636 1979.99 694.98C1963.84 712.001 1960.42 702.789 1989.07 678.934Z\",\n    fill: \"black\"\n  })), _path286 || (_path286 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1998.5 679.203C2002.52 683.343 1988.06 701.589 1984.47 701.488C1979.12 700.273 1990.77 691.247 1998.5 679.203Z\",\n    fill: \"black\"\n  })), _path287 || (_path287 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1945.45 684.785C1941.91 697.557 1918.3 708.967 1934.8 692.28C1938.34 689.786 1941.9 687.279 1945.45 684.785Z\",\n    fill: \"black\"\n  })), _path288 || (_path288 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1915.02 691.016C1922.46 689.994 1918.87 709.752 1913.64 703.026C1914.33 701.161 1915.04 699.281 1915.73 697.415C1915.65 697.016 1906.77 692.158 1915.02 691.016Z\",\n    fill: \"black\"\n  })), _path289 || (_path289 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1473.46 748.616L1414.8 755.286L1397.9 759.617C1387.16 762.371 1376.17 764.031 1365.11 764.571L1354.27 765.1C1353.29 765.148 1352.31 765.27 1351.35 765.464L1343.93 766.957C1337.95 768.162 1332.09 764.516 1330.56 758.629V758.629C1329.39 754.133 1331.04 749.353 1334.75 746.505L1337.01 744.769C1345.33 733.918 1367.94 734.33 1381.04 731.767C1398.18 727.532 1407.94 723.64 1425.09 719.405C1434.39 716.162 1463.87 739.061 1473.46 748.616Z\",\n    fill: \"#939393\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path290 || (_path290 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1349.25 810.965C1348.99 811.586 1348.31 811.892 1347.64 811.867L1318.01 810.768L1303.8 813.027C1298.14 813.927 1292.64 815.682 1287.5 818.23V818.23C1279.73 822.075 1271.19 824.095 1262.55 824.136L1233.26 824.271L1212.39 821.966C1209.72 821.672 1207.2 820.61 1205.14 818.909V818.909C1197.12 812.291 1199.08 799.462 1208.74 795.409L1222.93 789.452C1231.26 778.602 1246.38 787.367 1259.48 784.803C1276.62 780.568 1288.41 782.739 1305.55 778.504C1314.58 775.356 1353.77 800.116 1349.25 810.965Z\",\n    fill: \"#939393\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path291 || (_path291 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1267.73 800.691C1269.42 802.353 1271.12 804.025 1272.82 805.687C1273.95 796.798 1291.41 816.208 1289.01 818.157C1284.69 821.659 1281.23 810.986 1280.14 811.262C1280.94 813.918 1281.76 816.569 1282.56 819.225L1279 820.13L1267.73 800.691Z\",\n    fill: \"black\"\n  })), _path292 || (_path292 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1280.63 798.554C1284.11 801.295 1287.57 804.03 1291.05 806.771C1300.84 822.001 1289.72 820.585 1280.63 798.554Z\",\n    fill: \"black\"\n  })), _path293 || (_path293 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1265.03 808.235C1267.47 810.098 1269.92 811.947 1272.35 813.81C1284.05 829.172 1268.51 824.074 1265.03 808.235Z\",\n    fill: \"black\"\n  })), _path294 || (_path294 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1300.85 797.923C1301.9 799.159 1302.95 800.401 1304 801.637C1308.2 795.8 1318.17 810.053 1315.18 811.169C1309.79 813.175 1310.21 805.803 1309.07 805.904C1308.91 807.734 1308.77 809.563 1308.6 811.393L1304.86 811.726L1300.85 797.923Z\",\n    fill: \"black\"\n  })), _path295 || (_path295 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1314 797.473C1316.38 799.563 1318.75 801.647 1321.13 803.736C1325.19 814.622 1315 812.838 1314 797.473Z\",\n    fill: \"black\"\n  })), _path296 || (_path296 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1295.62 802.745C1297.3 804.171 1299.01 805.587 1300.69 807.013C1306.55 818.131 1293.4 813.56 1295.62 802.745Z\",\n    fill: \"black\"\n  })), _path297 || (_path297 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1380.62 741.297C1382.32 742.959 1384.02 744.631 1385.72 746.292C1386.85 737.403 1404.31 756.814 1401.9 758.763C1397.58 762.264 1394.12 751.591 1393.03 751.867C1393.83 754.523 1394.65 757.175 1395.45 759.831L1391.89 760.736L1380.62 741.297Z\",\n    fill: \"black\"\n  })), _path298 || (_path298 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1393.52 739.159C1397 741.9 1400.46 744.636 1403.95 747.377C1413.74 762.607 1402.61 761.191 1393.52 739.159Z\",\n    fill: \"black\"\n  })), _path299 || (_path299 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1377.93 748.842C1380.36 750.706 1382.81 752.554 1385.25 754.417C1396.95 769.779 1381.41 764.682 1377.93 748.842Z\",\n    fill: \"black\"\n  })), _path300 || (_path300 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1413.75 738.529C1414.79 739.764 1415.84 741.007 1416.89 742.242C1421.1 736.406 1431.06 750.658 1428.07 751.775C1422.69 753.78 1423.11 746.408 1421.97 746.51C1421.8 748.34 1421.66 750.168 1421.5 751.998L1417.76 752.332L1413.75 738.529Z\",\n    fill: \"black\"\n  })), _path301 || (_path301 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1426.89 738.08C1429.28 740.169 1431.64 742.253 1434.02 744.343C1438.09 755.229 1427.9 753.444 1426.89 738.08Z\",\n    fill: \"black\"\n  })), _path302 || (_path302 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1408.51 743.353C1410.2 744.778 1411.9 746.195 1413.59 747.62C1419.44 758.739 1406.3 754.168 1408.51 743.353Z\",\n    fill: \"black\"\n  })), _path303 || (_path303 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M473.797 692.228C475.234 692.53 472.147 697.034 475.605 700.513C478.914 703.839 483.741 703.046 487.427 707.294C487.728 707.637 490.382 710.776 488.871 712.299C487.758 713.418 485.495 712.564 482.395 713.514C477.857 714.897 476.249 718.625 476.172 718.827C474.26 723.551 479.209 727.544 479.457 727.745C477.369 728.88 474.135 730.388 469.783 731.344C465.544 732.276 462.342 732.326 457.398 732.254C453.089 732.191 446.83 732.22 438.923 732.672C441.001 731.809 444.057 730.314 446.946 727.895C449.484 725.763 449.945 724.552 451.718 723.134C453.811 721.466 457.687 719.564 465.499 719.208C461.878 715.73 461.309 712.771 461.21 711.243C461.133 709.952 461.32 708.114 467.451 699.366C472.07 692.805 473.176 692.113 473.797 692.228Z\",\n    fill: \"#E8AE86\"\n  })), _path304 || (_path304 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M473.842 692.109C474.645 692.39 474.32 693.102 474.33 693.588C474.134 694.987 473.924 696.552 474.393 697.912C475.225 700.988 479.123 702.274 482.723 703.335C485.326 704.176 487.701 705.705 489.091 707.535C490.857 709.482 492.049 713.421 487.574 713.94C483.494 713.982 480.651 714.801 478.431 717.359C475.3 720.572 476.861 725.008 480.337 727.811L479.822 728.074C475.482 730.322 470.477 731.885 465.19 732.455C459.95 732.965 454.645 732.717 449.417 733.037C444.171 733.287 438.181 733.694 432.923 734.121L438.187 731.762C441.6 730.242 444.679 728.285 446.984 725.916C449.167 723.169 452.192 720.288 456.574 719.237C459.417 718.395 462.402 718.085 465.341 717.953L464.116 719.913C459.08 714.925 458.309 710.154 462.726 704.802C465.853 700.641 468.817 696.433 472.569 692.577C472.873 692.374 473.174 692.017 473.809 692.086L473.842 692.109ZM473.766 692.346C473.084 692.373 472.565 693.134 472.151 693.527C469.014 697.25 466.731 701.371 464.544 705.41C463.72 707.084 462.799 708.818 462.626 710.56C462.689 713.415 464.44 716.168 466.865 718.479L468.725 720.247L465.656 720.439C460.558 720.747 455.134 721.732 452.064 724.815C449.086 728.347 444.801 731.637 439.658 733.568L438.836 731.665C445.836 731.36 452.943 731.504 459.924 731.768C463.389 731.894 466.831 731.677 470.114 730.904C473.398 730.166 476.46 728.955 479.124 727.402L479.058 728.066C475.683 725.416 473.628 721.433 475.436 717.906C477.206 714.13 481.641 711.776 487.138 711.869C487.657 711.795 487.624 711.795 487.783 711.64C488.299 710.702 487.508 709.462 486.883 708.434C485.229 705.681 482.066 704.523 478.439 702.988C474.664 701.323 473.209 698.048 473.81 695.036L474.021 693.577C474.029 693.198 474.259 692.557 473.799 692.358L473.766 692.346Z\",\n    fill: \"#3C3636\"\n  })), _path305 || (_path305 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M503.657 719.334C506.231 720.282 509.004 721.442 511.864 722.85C517.419 725.585 521.759 728.503 525.051 731.083C521.027 730.687 515.759 730.664 510.447 732.335C505.216 733.982 502.975 736.291 499.664 735.821C497.544 735.523 494.862 734.066 492.488 728.864C496.644 727.151 499.109 723.905 498.807 720.541C498.444 716.633 494.402 713.216 488.871 712.294C489.864 710.88 492.868 707.039 499.272 704.806C508.953 701.444 518.321 704.587 519.599 705.043C518.27 705.974 516.305 707.535 514.827 709.804C513.081 712.466 513.406 713.934 511.707 715.743C510.579 716.933 508.385 718.459 503.657 719.334Z\",\n    fill: \"#E8AE86\"\n  })), _path306 || (_path306 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M503.821 719.359C513.484 721.85 521.839 726.941 528.756 732.442L524.879 732.104C518.575 731.553 512.332 732.269 506.841 734.64C498.466 738.944 494.696 734.602 492.019 728.987L491.883 728.703L492.253 728.547C498.669 726.041 499.947 719.14 494.422 715.588C492.357 714.069 489.513 713.407 486.71 713.064C490.619 706.056 500.509 701.141 511.082 702.134C515.005 702.389 518.751 703.426 522.228 704.784L520.641 705.834C517.452 707.91 515.33 710.491 514.113 713.542C512.902 716.853 508.384 719.113 503.821 719.347L503.821 719.359ZM503.495 719.325C503.898 719.145 504.673 718.929 505.158 718.796C508.566 717.809 511.58 715.875 512.219 713.147C512.992 709.886 515.261 706.605 518.575 704.268L518.971 706.043C513.881 704.467 507.888 704.033 502.632 705.242C497.309 706.416 492.802 709.209 490.215 712.811L489.222 711.264C497.477 712.576 502.532 719.886 498.179 725.238C496.915 726.902 495.028 728.285 492.772 729.196L493.006 728.757C493.502 729.88 494.096 730.991 494.866 732.018C497.964 736.127 501.021 736.148 505.739 733.33C511.151 730.32 518.54 729.207 525.257 730.065L524.059 731.776C521.096 729.397 517.909 727.161 514.483 725.115C511.021 722.963 507.244 721.227 503.527 719.313L503.495 719.325Z\",\n    fill: \"#3C3636\"\n  })), _path307 || (_path307 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M495.87 734.775C495.388 735.761 494.492 737.175 492.697 738.344C489.733 740.289 486.126 740.412 482.996 740.758C479.493 741.142 474.473 742.042 468.445 744.38C467.54 741.707 467.949 739.608 468.314 738.457C469.863 733.533 475.74 728.707 481.109 728.92C483.713 729.026 484.422 730.231 487.638 730.074C491.129 729.904 492.558 728.369 494.114 728.859C495.178 729.198 496.23 730.461 495.87 734.775Z\",\n    fill: \"#E8AE86\"\n  })), _path308 || (_path308 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M496.032 734.808C495.222 739.337 489.221 741.45 483.652 741.772C478.366 742.413 472.868 743.031 468.098 744.937C466.318 740.147 467.532 734.738 472.164 731.009C474.448 729.162 477.839 727.393 481.617 727.683C483.001 727.76 484.28 728.275 485.05 728.544C486.607 729.082 488.328 729.003 489.945 728.604C497.123 726.024 497.155 731.165 496.032 734.796L496.032 734.808ZM495.722 734.75C495.375 733.034 495.396 731.031 493.97 729.747C493.739 729.617 493.609 729.63 493.48 729.666C492.141 730.111 489.5 731.26 487.581 731.245C485.556 731.551 483.011 730.437 481.299 730.208C478.679 730.078 476.346 731.179 474.393 732.539C470.314 735.555 467.224 739.965 468.962 744.305L468.225 744.059C470.579 743.148 472.897 742.142 475.383 741.337C479.943 739.467 485.952 739.937 490.506 738.53C492.651 737.785 494.425 736.403 495.739 734.762L495.722 734.75Z\",\n    fill: \"#3C3636\"\n  })), _path309 || (_path309 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M487.65 730.671C494.383 730.639 499.754 726.636 499.645 721.729C499.537 716.822 493.991 712.87 487.258 712.901C480.524 712.932 475.154 716.935 475.262 721.842C475.37 726.749 480.916 730.702 487.65 730.671Z\",\n    fill: \"url(#paint0_radial_1_2583)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path310 || (_path310 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M596.468 734.225C597.79 734.503 594.952 738.643 598.131 741.841C601.172 744.899 605.61 744.17 608.998 748.075C609.274 748.39 611.714 751.275 610.325 752.676C609.302 753.704 607.222 752.919 604.372 753.793C600.201 755.064 598.722 758.491 598.652 758.676C596.894 763.019 601.444 766.69 601.672 766.874C599.752 767.918 596.779 769.304 592.778 770.183C588.882 771.039 585.939 771.086 581.394 771.02C577.433 770.962 571.68 770.988 564.411 771.403C566.321 770.61 569.13 769.236 571.786 767.013C574.119 765.052 574.543 763.939 576.173 762.636C578.097 761.102 581.66 759.354 588.841 759.027C585.513 755.829 584.989 753.109 584.898 751.705C584.827 750.518 584.999 748.829 590.635 740.787C594.881 734.756 595.898 734.119 596.468 734.225Z\",\n    fill: \"#E8AE86\"\n  })), _path311 || (_path311 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M596.511 734.116C597.249 734.374 596.95 735.029 596.96 735.476C596.779 736.761 596.586 738.2 597.017 739.45C597.782 742.279 601.365 743.46 604.674 744.436C607.068 745.209 609.251 746.614 610.528 748.297C612.152 750.086 613.248 753.708 609.134 754.184C605.384 754.223 602.77 754.976 600.73 757.327C597.851 760.281 599.286 764.358 602.481 766.936L602.008 767.177C598.019 769.243 593.417 770.681 588.557 771.204C583.74 771.673 578.863 771.445 574.058 771.74C569.236 771.969 563.73 772.343 558.896 772.735L563.735 770.568C566.873 769.17 569.702 767.371 571.821 765.194C573.828 762.668 576.609 760.02 580.637 759.054C583.251 758.279 585.994 757.994 588.696 757.873L587.57 759.675C582.941 755.09 582.232 750.704 586.293 745.784C589.167 741.959 591.891 738.091 595.34 734.546C595.62 734.36 595.897 734.032 596.481 734.095L596.511 734.116ZM596.441 734.334C595.814 734.359 595.336 735.058 594.956 735.419C592.072 738.842 589.974 742.631 587.964 746.343C587.206 747.882 586.359 749.476 586.2 751.078C586.258 753.702 587.868 756.232 590.097 758.356L591.806 759.982L588.986 760.159C584.3 760.442 579.313 761.347 576.491 764.181C573.753 767.428 569.815 770.452 565.087 772.228L564.331 770.478C570.766 770.197 577.3 770.33 583.716 770.573C586.902 770.689 590.066 770.489 593.084 769.778C596.102 769.1 598.917 767.987 601.367 766.56L601.305 767.17C598.203 764.734 596.314 761.072 597.976 757.83C599.603 754.359 603.68 752.195 608.733 752.28C609.21 752.213 609.18 752.213 609.326 752.07C609.8 751.208 609.073 750.068 608.499 749.123C606.979 746.592 604.071 745.528 600.737 744.116C597.266 742.586 595.929 739.575 596.481 736.806L596.675 735.466C596.683 735.117 596.894 734.528 596.471 734.345L596.441 734.334Z\",\n    fill: \"#3C3636\"\n  })), _path312 || (_path312 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M623.918 759.148C626.284 760.019 628.833 761.085 631.462 762.38C636.568 764.894 640.558 767.576 643.584 769.947C639.885 769.583 635.042 769.562 630.16 771.099C625.351 772.613 623.291 774.736 620.247 774.303C618.299 774.029 615.833 772.69 613.65 767.908C617.471 766.333 619.737 763.349 619.459 760.257C619.126 756.665 615.41 753.524 610.325 752.676C611.238 751.376 614 747.845 619.887 745.792C628.786 742.702 637.398 745.591 638.573 746.011C637.351 746.866 635.545 748.301 634.186 750.387C632.581 752.834 632.88 754.183 631.318 755.846C630.281 756.94 628.264 758.343 623.918 759.148Z\",\n    fill: \"#E8AE86\"\n  })), _path313 || (_path313 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M624.068 759.17C632.951 761.46 640.631 766.14 646.989 771.196L643.426 770.886C637.631 770.379 631.892 771.038 626.844 773.217C619.145 777.174 615.68 773.182 613.219 768.02L613.094 767.759L613.435 767.616C619.332 765.313 620.507 758.969 615.428 755.703C613.53 754.307 610.916 753.698 608.338 753.384C611.932 746.941 621.024 742.423 630.743 743.336C634.349 743.57 637.793 744.524 640.989 745.772L639.53 746.737C636.599 748.646 634.648 751.018 633.53 753.822C632.416 756.866 628.263 758.944 624.068 759.159L624.068 759.17ZM623.769 759.139C624.139 758.974 624.851 758.774 625.297 758.653C628.43 757.745 631.201 755.968 631.788 753.46C632.499 750.462 634.584 747.446 637.631 745.298L637.995 746.93C633.316 745.481 627.807 745.082 622.975 746.193C618.082 747.272 613.939 749.84 611.561 753.151L610.648 751.728C618.237 752.935 622.883 759.655 618.882 764.574C617.72 766.104 615.985 767.376 613.911 768.213L614.126 767.809C614.583 768.842 615.128 769.863 615.836 770.807C618.685 774.584 621.495 774.604 625.831 772.013C630.806 769.246 637.598 768.223 643.773 769.011L642.672 770.585C639.948 768.397 637.019 766.342 633.869 764.461C630.687 762.483 627.214 760.887 623.798 759.128L623.769 759.139Z\",\n    fill: \"#3C3636\"\n  })), _path314 || (_path314 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M616.758 773.339C616.315 774.245 615.492 775.545 613.842 776.62C611.117 778.408 607.801 778.521 604.924 778.839C601.704 779.192 597.089 780.019 591.548 782.169C590.716 779.711 591.092 777.782 591.427 776.724C592.852 772.198 598.254 767.762 603.19 767.957C605.583 768.054 606.235 769.162 609.191 769.018C612.4 768.861 613.714 767.45 615.144 767.901C616.122 768.213 617.089 769.373 616.758 773.339Z\",\n    fill: \"#E8AE86\"\n  })), _path315 || (_path315 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M616.909 773.37C616.164 777.534 610.647 779.476 605.528 779.772C600.669 780.361 595.615 780.929 591.23 782.681C589.594 778.278 590.71 773.306 594.968 769.878C597.068 768.18 600.185 766.553 603.658 766.82C604.93 766.891 606.106 767.365 606.814 767.612C608.244 768.106 609.827 768.033 611.313 767.667C617.911 765.295 617.941 770.022 616.909 773.359L616.909 773.37ZM616.624 773.317C616.305 771.739 616.324 769.898 615.013 768.717C614.801 768.599 614.682 768.61 614.563 768.643C613.331 769.052 610.904 770.109 609.14 770.095C607.278 770.376 604.939 769.352 603.365 769.142C600.957 769.022 598.812 770.034 597.017 771.284C593.267 774.057 590.427 778.11 592.025 782.1L591.347 781.874C593.511 781.037 595.642 780.112 597.927 779.372C602.119 777.653 607.643 778.085 611.828 776.791C613.801 776.107 615.432 774.836 616.639 773.328L616.624 773.317Z\",\n    fill: \"#3C3636\"\n  })), _path316 || (_path316 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M609.203 769.564C615.392 769.535 620.329 765.855 620.23 761.344C620.13 756.834 615.032 753.2 608.842 753.229C602.653 753.258 597.716 756.937 597.815 761.448C597.915 765.959 603.013 769.592 609.203 769.564Z\",\n    fill: \"url(#paint1_radial_1_2583)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path317 || (_path317 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1604.66 791.387C1606.45 791.762 1602.61 797.374 1606.91 801.707C1611.03 805.85 1617.05 804.863 1621.64 810.154C1622.01 810.581 1625.32 814.491 1623.44 816.389C1622.05 817.782 1619.23 816.718 1615.37 817.902C1609.72 819.625 1607.72 824.269 1607.62 824.52C1605.24 830.405 1611.4 835.379 1611.71 835.629C1609.11 837.043 1605.08 838.921 1599.66 840.112C1594.38 841.273 1590.39 841.335 1584.23 841.246C1578.87 841.167 1571.07 841.204 1561.22 841.766C1563.81 840.691 1567.62 838.829 1571.21 835.816C1574.38 833.16 1574.95 831.652 1577.16 829.885C1579.77 827.807 1584.59 825.438 1594.33 824.995C1589.81 820.662 1589.11 816.976 1588.98 815.073C1588.89 813.464 1589.12 811.176 1596.76 800.279C1602.51 792.105 1603.89 791.243 1604.66 791.387Z\",\n    fill: \"#E8AE86\"\n  })), _path318 || (_path318 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1604.72 791.24C1605.72 791.59 1605.31 792.477 1605.33 793.082C1605.08 794.824 1604.82 796.774 1605.4 798.468C1606.44 802.301 1611.3 803.901 1615.78 805.224C1619.02 806.271 1621.98 808.176 1623.71 810.456C1625.91 812.88 1627.4 817.788 1621.82 818.434C1616.74 818.487 1613.2 819.507 1610.43 822.692C1606.53 826.695 1608.48 832.22 1612.81 835.713L1612.17 836.04C1606.76 838.84 1600.53 840.787 1593.94 841.497C1587.41 842.132 1580.8 841.823 1574.29 842.222C1567.76 842.533 1560.3 843.04 1553.75 843.572L1560.3 840.634C1564.56 838.74 1568.39 836.302 1571.26 833.352C1573.98 829.93 1577.75 826.342 1583.21 825.032C1586.75 823.983 1590.47 823.597 1594.13 823.432L1592.6 825.874C1586.33 819.661 1585.37 813.718 1590.87 807.051C1594.77 801.868 1598.46 796.626 1603.13 791.823C1603.51 791.57 1603.89 791.126 1604.68 791.211L1604.72 791.24ZM1604.62 791.536C1603.77 791.569 1603.13 792.517 1602.61 793.006C1598.7 797.643 1595.86 802.778 1593.14 807.808C1592.11 809.894 1590.96 812.054 1590.75 814.224C1590.82 817.78 1593.01 821.209 1596.03 824.087L1598.34 826.29L1594.52 826.529C1588.17 826.913 1581.41 828.14 1577.59 831.98C1573.88 836.38 1568.54 840.478 1562.14 842.884L1561.11 840.513C1569.83 840.133 1578.69 840.313 1587.38 840.642C1591.7 840.799 1595.98 840.528 1600.07 839.565C1604.16 838.645 1607.98 837.137 1611.3 835.203L1611.21 836.03C1607.01 832.729 1604.45 827.767 1606.7 823.374C1608.91 818.671 1614.43 815.738 1621.28 815.853C1621.93 815.762 1621.89 815.762 1622.08 815.569C1622.73 814.4 1621.74 812.855 1620.96 811.575C1618.9 808.146 1614.96 806.703 1610.44 804.791C1605.74 802.717 1603.93 798.637 1604.68 794.885L1604.94 793.069C1604.95 792.597 1605.24 791.798 1604.66 791.55L1604.62 791.536Z\",\n    fill: \"#3C3636\"\n  })), _path319 || (_path319 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1641.86 825.156C1645.06 826.337 1648.52 827.782 1652.08 829.536C1659 832.943 1664.41 836.578 1668.51 839.791C1663.5 839.297 1656.93 839.269 1650.32 841.351C1643.8 843.403 1641.01 846.279 1636.88 845.693C1634.24 845.321 1630.9 843.507 1627.95 837.027C1633.12 834.892 1636.19 830.849 1635.82 826.66C1635.37 821.792 1630.33 817.535 1623.44 816.386C1624.68 814.625 1628.42 809.84 1636.4 807.058C1648.46 802.87 1660.13 806.786 1661.72 807.354C1660.06 808.513 1657.61 810.458 1655.77 813.285C1653.6 816.601 1654 818.429 1651.89 820.682C1650.48 822.164 1647.75 824.066 1641.86 825.156Z\",\n    fill: \"#E8AE86\"\n  })), _path320 || (_path320 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1642.06 825.185C1654.1 828.288 1664.51 834.63 1673.12 841.482L1668.29 841.061C1660.44 840.375 1652.66 841.267 1645.82 844.22C1635.39 849.582 1630.7 844.173 1627.36 837.178L1627.19 836.824L1627.65 836.63C1635.64 833.509 1637.24 824.912 1630.36 820.487C1627.78 818.596 1624.24 817.771 1620.75 817.344C1625.62 808.614 1637.94 802.492 1651.11 803.729C1655.99 804.046 1660.66 805.338 1664.99 807.03L1663.01 808.338C1659.04 810.924 1656.4 814.139 1654.88 817.939C1653.37 822.063 1647.75 824.878 1642.06 825.17L1642.06 825.185ZM1641.66 825.143C1642.16 824.919 1643.12 824.649 1643.73 824.484C1647.97 823.254 1651.73 820.846 1652.52 817.448C1653.49 813.385 1656.31 809.299 1660.44 806.387L1660.93 808.598C1654.59 806.635 1647.13 806.094 1640.58 807.6C1633.95 809.063 1628.34 812.542 1625.11 817.029L1623.88 815.101C1634.16 816.736 1640.46 825.842 1635.03 832.508C1633.46 834.582 1631.11 836.305 1628.3 837.439L1628.59 836.892C1629.21 838.291 1629.95 839.675 1630.91 840.954C1634.77 846.072 1638.57 846.099 1644.45 842.589C1651.19 838.838 1660.4 837.453 1668.76 838.521L1667.27 840.653C1663.58 837.689 1659.61 834.903 1655.34 832.355C1651.03 829.674 1646.33 827.512 1641.7 825.128L1641.66 825.143Z\",\n    fill: \"#3C3636\"\n  })), _path321 || (_path321 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1632.16 844.392C1631.56 845.62 1630.44 847.381 1628.21 848.838C1624.51 851.261 1620.02 851.414 1616.12 851.846C1611.76 852.323 1605.51 853.444 1598 856.357C1596.87 853.027 1597.38 850.412 1597.83 848.979C1599.76 842.845 1607.08 836.834 1613.77 837.098C1617.02 837.231 1617.9 838.732 1621.9 838.537C1626.25 838.325 1628.03 836.413 1629.97 837.023C1631.3 837.445 1632.61 839.018 1632.16 844.392Z\",\n    fill: \"#E8AE86\"\n  })), _path322 || (_path322 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1632.36 844.433C1631.35 850.075 1623.88 852.707 1616.94 853.108C1610.36 853.906 1603.51 854.676 1597.57 857.05C1595.35 851.083 1596.86 844.347 1602.63 839.701C1605.48 837.4 1609.7 835.196 1614.41 835.558C1616.13 835.653 1617.72 836.295 1618.68 836.63C1620.62 837.3 1622.77 837.202 1624.78 836.705C1633.72 833.491 1633.76 839.896 1632.36 844.418L1632.36 844.433ZM1631.98 844.361C1631.54 842.223 1631.57 839.729 1629.79 838.128C1629.51 837.967 1629.34 837.983 1629.18 838.028C1627.51 838.582 1624.22 840.014 1621.83 839.995C1619.31 840.376 1616.14 838.989 1614.01 838.703C1610.75 838.541 1607.84 839.913 1605.41 841.606C1600.33 845.364 1596.48 850.857 1598.64 856.263L1597.72 855.957C1600.66 854.822 1603.54 853.569 1606.64 852.566C1612.32 850.237 1619.81 850.822 1625.48 849.069C1628.15 848.142 1630.36 846.42 1632 844.376L1631.98 844.361Z\",\n    fill: \"#3C3636\"\n  })), _path323 || (_path323 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1621.92 839.276C1630.31 839.238 1637 834.251 1636.86 828.139C1636.73 822.026 1629.82 817.103 1621.43 817.142C1613.04 817.18 1606.35 822.167 1606.49 828.279C1606.62 834.392 1613.53 839.315 1621.92 839.276Z\",\n    fill: \"url(#paint2_radial_1_2583)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path324 || (_path324 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1144.62 793.557C1146.15 793.877 1142.87 798.664 1146.54 802.361C1150.06 805.895 1155.19 805.053 1159.11 809.567C1159.43 809.93 1162.25 813.266 1160.64 814.885C1159.46 816.074 1157.05 815.166 1153.76 816.176C1148.94 817.646 1147.23 821.607 1147.15 821.822C1145.11 826.842 1150.37 831.085 1150.64 831.298C1148.42 832.504 1144.98 834.107 1140.36 835.123C1135.85 836.113 1132.45 836.166 1127.2 836.09C1122.62 836.023 1115.97 836.054 1107.56 836.534C1109.77 835.617 1113.02 834.028 1116.09 831.458C1118.79 829.192 1119.28 827.906 1121.16 826.399C1123.39 824.626 1127.5 822.605 1135.81 822.227C1131.96 818.531 1131.35 815.386 1131.25 813.762C1131.17 812.39 1131.36 810.438 1137.88 801.142C1142.79 794.17 1143.96 793.434 1144.62 793.557Z\",\n    fill: \"#E8AE86\"\n  })), _path325 || (_path325 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1144.67 793.432C1145.53 793.73 1145.18 794.487 1145.19 795.003C1144.98 796.489 1144.76 798.152 1145.26 799.598C1146.14 802.867 1150.28 804.233 1154.11 805.361C1156.87 806.254 1159.4 807.879 1160.88 809.824C1162.75 811.892 1164.02 816.079 1159.26 816.63C1154.93 816.675 1151.91 817.545 1149.55 820.263C1146.22 823.677 1147.88 828.391 1151.57 831.37L1151.03 831.65C1146.41 834.038 1141.1 835.699 1135.48 836.304C1129.91 836.846 1124.27 836.583 1118.72 836.923C1113.14 837.188 1106.78 837.621 1101.19 838.075L1106.78 835.569C1110.41 833.953 1113.68 831.873 1116.13 829.356C1118.45 826.437 1121.67 823.376 1126.32 822.259C1129.34 821.364 1132.51 821.034 1135.64 820.894L1134.34 822.977C1128.99 817.676 1128.17 812.607 1132.86 806.919C1136.18 802.498 1139.33 798.026 1143.32 793.929C1143.64 793.713 1143.96 793.334 1144.64 793.407L1144.67 793.432ZM1144.59 793.684C1143.87 793.712 1143.31 794.521 1142.87 794.938C1139.54 798.894 1137.12 803.274 1134.79 807.565C1133.91 809.344 1132.94 811.187 1132.75 813.039C1132.82 816.072 1134.68 818.997 1137.26 821.453L1139.23 823.332L1135.97 823.536C1130.56 823.863 1124.79 824.91 1121.53 828.186C1118.36 831.939 1113.81 835.435 1108.35 837.488L1107.47 835.465C1114.91 835.141 1122.46 835.294 1129.88 835.575C1133.56 835.709 1137.22 835.478 1140.71 834.656C1144.2 833.872 1147.45 832.585 1150.28 830.935L1150.21 831.641C1146.63 828.825 1144.44 824.592 1146.37 820.844C1148.25 816.832 1152.96 814.33 1158.8 814.429C1159.35 814.351 1159.32 814.351 1159.49 814.186C1160.03 813.189 1159.19 811.871 1158.53 810.779C1156.77 807.854 1153.41 806.623 1149.56 804.991C1145.54 803.222 1144 799.742 1144.64 796.541L1144.86 794.992C1144.87 794.589 1145.11 793.908 1144.63 793.696L1144.59 793.684Z\",\n    fill: \"#3C3636\"\n  })), _path326 || (_path326 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1176.36 822.368C1179.09 823.375 1182.04 824.608 1185.08 826.105C1190.98 829.011 1195.59 832.112 1199.09 834.853C1194.81 834.432 1189.22 834.407 1183.57 836.184C1178.01 837.934 1175.63 840.388 1172.11 839.888C1169.86 839.571 1167.01 838.023 1164.49 832.495C1168.9 830.674 1171.52 827.225 1171.2 823.651C1170.82 819.498 1166.52 815.867 1160.64 814.887C1161.7 813.384 1164.89 809.303 1171.7 806.93C1181.98 803.357 1191.94 806.697 1193.3 807.182C1191.88 808.171 1189.8 809.83 1188.23 812.242C1186.37 815.07 1186.72 816.63 1184.91 818.552C1183.71 819.816 1181.38 821.439 1176.36 822.368Z\",\n    fill: \"#E8AE86\"\n  })), _path327 || (_path327 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1176.53 822.394C1186.8 825.04 1195.68 830.45 1203.03 836.296L1198.91 835.937C1192.21 835.351 1185.57 836.112 1179.74 838.632C1170.84 843.206 1166.83 838.591 1163.99 832.624L1163.84 832.323L1164.24 832.157C1171.05 829.494 1172.41 822.161 1166.54 818.386C1164.35 816.772 1161.33 816.069 1158.35 815.705C1162.5 808.257 1173.01 803.034 1184.24 804.09C1188.41 804.36 1192.39 805.463 1196.09 806.906L1194.4 808.022C1191.01 810.228 1188.76 812.97 1187.47 816.212C1186.18 819.73 1181.38 822.132 1176.53 822.381L1176.53 822.394ZM1176.18 822.357C1176.61 822.167 1177.43 821.936 1177.95 821.795C1181.57 820.746 1184.77 818.692 1185.45 815.793C1186.27 812.327 1188.69 808.841 1192.21 806.357L1192.63 808.244C1187.22 806.569 1180.85 806.108 1175.27 807.393C1169.61 808.64 1164.82 811.608 1162.07 815.436L1161.02 813.791C1169.79 815.186 1175.16 822.954 1170.53 828.641C1169.19 830.41 1167.19 831.879 1164.79 832.847L1165.04 832.38C1165.56 833.574 1166.19 834.754 1167.01 835.846C1170.31 840.212 1173.55 840.234 1178.57 837.24C1184.32 834.041 1192.17 832.859 1199.31 833.77L1198.03 835.589C1194.89 833.06 1191.5 830.684 1187.86 828.51C1184.18 826.223 1180.17 824.379 1176.22 822.345L1176.18 822.357Z\",\n    fill: \"#3C3636\"\n  })), _path328 || (_path328 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1168.08 838.773C1167.57 839.821 1166.62 841.323 1164.71 842.566C1161.56 844.633 1157.73 844.764 1154.4 845.132C1150.68 845.539 1145.34 846.496 1138.94 848.98C1137.98 846.139 1138.41 843.909 1138.8 842.686C1140.44 837.454 1146.69 832.326 1152.39 832.551C1155.16 832.664 1155.91 833.945 1159.33 833.778C1163.04 833.597 1164.56 831.966 1166.21 832.487C1167.34 832.847 1168.46 834.189 1168.08 838.773Z\",\n    fill: \"#E8AE86\"\n  })), _path329 || (_path329 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1168.25 838.809C1167.39 843.622 1161.02 845.867 1155.1 846.209C1149.48 846.89 1143.64 847.547 1138.57 849.572C1136.68 844.482 1137.97 838.735 1142.89 834.772C1145.32 832.809 1148.92 830.929 1152.94 831.238C1154.41 831.319 1155.77 831.867 1156.58 832.152C1158.24 832.724 1160.07 832.64 1161.79 832.217C1169.41 829.474 1169.45 834.938 1168.25 838.796L1168.25 838.809ZM1167.92 838.747C1167.56 836.923 1167.58 834.796 1166.06 833.43C1165.82 833.293 1165.68 833.306 1165.54 833.345C1164.12 833.817 1161.31 835.039 1159.27 835.023C1157.12 835.348 1154.42 834.164 1152.6 833.921C1149.81 833.783 1147.33 834.952 1145.26 836.397C1140.92 839.603 1137.64 844.289 1139.49 848.9L1138.7 848.64C1141.21 847.671 1143.67 846.602 1146.31 845.747C1151.16 843.76 1157.54 844.259 1162.38 842.764C1164.66 841.973 1166.55 840.504 1167.94 838.76L1167.92 838.747Z\",\n    fill: \"#3C3636\"\n  })), _path330 || (_path330 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1159.35 834.406C1166.5 834.372 1172.21 830.119 1172.09 824.904C1171.98 819.69 1166.08 815.49 1158.93 815.523C1151.77 815.556 1146.07 819.81 1146.18 825.024C1146.3 830.239 1152.19 834.439 1159.35 834.406Z\",\n    fill: \"url(#paint3_radial_1_2583)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path331 || (_path331 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1021.16 810.558C1022.64 810.868 1019.46 815.502 1023.02 819.081C1026.42 822.502 1031.39 821.687 1035.18 826.057C1035.49 826.409 1038.22 829.638 1036.67 831.205C1035.52 832.356 1033.19 831.477 1030 832.455C1025.34 833.878 1023.68 837.713 1023.6 837.92C1021.64 842.78 1026.73 846.888 1026.98 847.094C1024.83 848.262 1021.51 849.813 1017.03 850.797C1012.67 851.756 1009.38 851.807 1004.29 851.733C999.857 851.669 993.419 851.699 985.284 852.163C987.422 851.275 990.566 849.737 993.538 847.249C996.149 845.056 996.623 843.81 998.447 842.351C1000.6 840.635 1004.59 838.679 1012.62 838.313C1008.9 834.734 1008.31 831.69 1008.21 830.118C1008.13 828.79 1008.32 826.9 1014.63 817.901C1019.38 811.151 1020.52 810.439 1021.16 810.558Z\",\n    fill: \"#E8AE86\"\n  })), _path332 || (_path332 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1021.21 810.436C1022.03 810.725 1021.7 811.458 1021.71 811.957C1021.51 813.396 1021.29 815.006 1021.77 816.405C1022.63 819.57 1026.64 820.892 1030.34 821.984C1033.02 822.849 1035.46 824.423 1036.89 826.305C1038.71 828.308 1039.94 832.361 1035.33 832.894C1031.14 832.938 1028.21 833.78 1025.93 836.411C1022.71 839.717 1024.31 844.28 1027.89 847.164L1027.36 847.434C1022.89 849.746 1017.75 851.355 1012.31 851.94C1006.92 852.465 1001.46 852.21 996.081 852.54C990.684 852.796 984.522 853.215 979.113 853.654L984.529 851.228C988.04 849.664 991.206 847.651 993.578 845.214C995.823 842.388 998.935 839.425 1003.44 838.343C1006.37 837.477 1009.44 837.158 1012.46 837.022L1011.2 839.039C1006.02 833.907 1005.23 828.999 1009.77 823.493C1012.99 819.213 1016.04 814.884 1019.9 810.917C1020.21 810.709 1020.52 810.342 1021.17 810.412L1021.21 810.436ZM1021.13 810.68C1020.43 810.708 1019.89 811.49 1019.47 811.894C1016.24 815.724 1013.89 819.964 1011.64 824.119C1010.79 825.841 1009.85 827.625 1009.67 829.417C1009.73 832.354 1011.54 835.186 1014.03 837.563L1015.94 839.382L1012.79 839.58C1007.54 839.897 1001.96 840.91 998.804 844.081C995.74 847.715 991.333 851.099 986.041 853.086L985.195 851.128C992.397 850.814 999.708 850.963 1006.89 851.234C1010.45 851.364 1013.99 851.14 1017.37 850.345C1020.75 849.586 1023.9 848.34 1026.64 846.743L1026.57 847.426C1023.1 844.7 1020.99 840.602 1022.85 836.974C1024.67 833.089 1029.23 830.667 1034.89 830.763C1035.42 830.687 1035.39 830.688 1035.55 830.528C1036.08 829.563 1035.27 828.287 1034.62 827.23C1032.92 824.398 1029.67 823.206 1025.94 821.627C1022.05 819.914 1020.56 816.545 1021.17 813.447L1021.39 811.946C1021.4 811.556 1021.64 810.897 1021.16 810.692L1021.13 810.68Z\",\n    fill: \"#3C3636\"\n  })), _path333 || (_path333 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1051.88 838.448C1054.53 839.423 1057.38 840.616 1060.32 842.065C1066.04 844.878 1070.5 847.88 1073.89 850.534C1069.75 850.126 1064.33 850.103 1058.86 851.822C1053.48 853.517 1051.18 855.892 1047.77 855.408C1045.59 855.101 1042.83 853.603 1040.39 848.251C1044.66 846.489 1047.2 843.15 1046.89 839.69C1046.52 835.669 1042.36 832.154 1036.67 831.205C1037.69 829.75 1040.78 825.799 1047.37 823.502C1057.33 820.043 1066.96 823.277 1068.28 823.746C1066.91 824.703 1064.89 826.309 1063.37 828.644C1061.57 831.383 1061.91 832.892 1060.16 834.753C1059 835.977 1056.74 837.548 1051.88 838.448Z\",\n    fill: \"#E8AE86\"\n  })), _path334 || (_path334 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1052.05 838.472C1061.99 841.034 1070.58 846.272 1077.7 851.931L1073.71 851.583C1067.22 851.016 1060.8 851.753 1055.15 854.192C1046.54 858.62 1042.66 854.153 1039.91 848.376L1039.77 848.084L1040.15 847.924C1046.75 845.346 1048.06 838.247 1042.38 834.592C1040.25 833.03 1037.33 832.349 1034.44 831.997C1038.47 824.787 1048.64 819.731 1059.52 820.753C1063.55 821.015 1067.41 822.081 1070.98 823.479L1069.35 824.559C1066.07 826.695 1063.89 829.35 1062.63 832.488C1061.39 835.894 1056.74 838.219 1052.05 838.46L1052.05 838.472ZM1051.71 838.437C1052.13 838.252 1052.92 838.029 1053.42 837.893C1056.93 836.877 1060.03 834.888 1060.69 832.082C1061.48 828.727 1063.82 825.352 1067.22 822.948L1067.63 824.774C1062.4 823.153 1056.23 822.706 1050.82 823.95C1045.35 825.157 1040.71 828.031 1038.05 831.736L1037.03 830.144C1045.52 831.494 1050.72 839.015 1046.24 844.52C1044.94 846.232 1043 847.655 1040.68 848.592L1040.92 848.14C1041.43 849.295 1042.04 850.438 1042.83 851.495C1046.02 855.722 1049.17 855.744 1054.02 852.845C1059.59 849.748 1067.19 848.603 1074.1 849.485L1072.87 851.246C1069.82 848.798 1066.54 846.498 1063.01 844.393C1059.45 842.18 1055.57 840.394 1051.74 838.425L1051.71 838.437Z\",\n    fill: \"#3C3636\"\n  })), _path335 || (_path335 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1043.87 854.332C1043.37 855.346 1042.45 856.801 1040.6 858.004C1037.55 860.005 1033.84 860.131 1030.62 860.488C1027.02 860.882 1021.85 861.808 1015.65 864.213C1014.72 861.463 1015.14 859.304 1015.52 858.12C1017.11 853.055 1023.16 848.091 1028.68 848.309C1031.36 848.418 1032.09 849.658 1035.4 849.496C1038.99 849.321 1040.46 847.742 1042.06 848.247C1043.15 848.595 1044.24 849.894 1043.87 854.332Z\",\n    fill: \"#E8AE86\"\n  })), _path336 || (_path336 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1044.03 854.366C1043.2 859.025 1037.03 861.199 1031.3 861.53C1025.86 862.189 1020.2 862.825 1015.3 864.785C1013.47 859.858 1014.71 854.294 1019.48 850.457C1021.83 848.557 1025.32 846.737 1029.21 847.036C1030.63 847.115 1031.94 847.645 1032.74 847.922C1034.34 848.475 1036.11 848.394 1037.77 847.984C1045.16 845.329 1045.19 850.619 1044.03 854.353L1044.03 854.366ZM1043.71 854.306C1043.36 852.54 1043.38 850.481 1041.91 849.159C1041.68 849.026 1041.54 849.039 1041.41 849.076C1040.03 849.533 1037.31 850.716 1035.34 850.701C1033.26 851.015 1030.64 849.869 1028.88 849.634C1026.18 849.5 1023.78 850.632 1021.77 852.031C1017.58 855.134 1014.4 859.671 1016.19 864.135L1015.43 863.883C1017.85 862.945 1020.23 861.91 1022.79 861.082C1027.48 859.159 1033.66 859.642 1038.35 858.195C1040.56 857.429 1042.38 856.006 1043.73 854.318L1043.71 854.306Z\",\n    fill: \"#3C3636\"\n  })), _path337 || (_path337 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1035.41 850.104C1042.34 850.072 1047.86 845.954 1047.75 840.906C1047.64 835.858 1041.93 831.792 1035.01 831.824C1028.08 831.856 1022.56 835.974 1022.67 841.022C1022.78 846.07 1028.48 850.136 1035.41 850.104Z\",\n    fill: \"url(#paint4_radial_1_2583)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path338 || (_path338 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M894.36 789.546C895.813 789.851 892.693 794.404 896.188 797.92C899.532 801.282 904.411 800.481 908.137 804.774C908.441 805.12 911.123 808.293 909.596 809.833C908.471 810.964 906.184 810.1 903.051 811.061C898.464 812.459 896.839 816.226 896.761 816.43C894.829 821.205 899.831 825.242 900.082 825.444C897.971 826.591 894.702 828.115 890.303 829.082C886.019 830.024 882.783 830.074 877.786 830.002C873.43 829.938 867.105 829.967 859.113 830.424C861.213 829.552 864.302 828.041 867.222 825.596C869.787 823.441 870.253 822.217 872.045 820.784C874.161 819.098 878.078 817.176 885.974 816.816C882.314 813.3 881.739 810.309 881.639 808.765C881.561 807.46 881.75 805.603 887.947 796.761C892.615 790.129 893.733 789.429 894.36 789.546Z\",\n    fill: \"#E8AE86\"\n  })), _path339 || (_path339 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M894.407 789.426C895.219 789.709 894.889 790.429 894.9 790.92C894.701 792.334 894.49 793.916 894.964 795.291C895.805 798.4 899.744 799.699 903.383 800.772C906.014 801.622 908.414 803.168 909.819 805.017C911.604 806.985 912.809 810.967 908.286 811.491C904.162 811.534 901.289 812.361 899.045 814.946C895.88 818.194 897.458 822.677 900.971 825.511L900.451 825.777C896.065 828.048 891.006 829.629 885.662 830.204C880.366 830.72 875.003 830.469 869.72 830.793C864.418 831.045 858.363 831.456 853.049 831.888L858.37 829.504C861.819 827.968 864.931 825.989 867.26 823.596C869.467 820.819 872.524 817.907 876.954 816.845C879.827 815.993 882.844 815.68 885.815 815.546L884.577 817.528C879.487 812.486 878.707 807.664 883.172 802.255C886.332 798.049 889.328 793.796 893.12 789.899C893.427 789.694 893.732 789.333 894.374 789.402L894.407 789.426ZM894.33 789.666C893.641 789.693 893.116 790.462 892.697 790.859C889.527 794.621 887.22 798.787 885.009 802.869C884.176 804.561 883.245 806.314 883.07 808.075C883.134 810.961 884.904 813.742 887.355 816.078L889.234 817.866L886.133 818.06C880.98 818.371 875.498 819.366 872.395 822.482C869.385 826.053 865.055 829.378 859.856 831.33L859.025 829.406C866.1 829.097 873.284 829.244 880.339 829.51C883.842 829.638 887.32 829.418 890.639 828.636C893.958 827.891 897.053 826.667 899.746 825.098L899.679 825.768C896.267 823.09 894.19 819.064 896.018 815.499C897.807 811.683 902.289 809.303 907.845 809.397C908.37 809.323 908.337 809.323 908.498 809.167C909.019 808.218 908.219 806.965 907.588 805.926C905.916 803.143 902.719 801.973 899.054 800.421C895.237 798.738 893.767 795.428 894.374 792.384L894.588 790.91C894.596 790.527 894.828 789.879 894.364 789.677L894.33 789.666Z\",\n    fill: \"#3C3636\"\n  })), _path340 || (_path340 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M924.541 816.938C927.141 817.896 929.944 819.069 932.835 820.492C938.45 823.256 942.836 826.206 946.164 828.813C942.096 828.412 936.772 828.389 931.403 830.079C926.116 831.744 923.851 834.077 920.505 833.602C918.362 833.3 915.651 831.828 913.251 826.57C917.452 824.838 919.943 821.558 919.638 818.158C919.272 814.208 915.186 810.755 909.595 809.823C910.599 808.393 913.635 804.511 920.109 802.254C929.893 798.856 939.362 802.033 940.653 802.494C939.31 803.434 937.324 805.012 935.83 807.306C934.066 809.997 934.394 811.48 932.676 813.308C931.536 814.511 929.319 816.054 924.541 816.938Z\",\n    fill: \"#E8AE86\"\n  })), _path341 || (_path341 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M924.705 816.961C934.471 819.478 942.916 824.624 949.907 830.184L945.988 829.843C939.617 829.286 933.307 830.01 927.757 832.406C919.292 836.756 915.481 832.367 912.776 826.692L912.639 826.405L913.013 826.248C919.497 823.715 920.789 816.74 915.205 813.149C913.117 811.614 910.244 810.945 907.41 810.599C911.361 803.515 921.357 798.547 932.043 799.552C936.009 799.809 939.795 800.857 943.309 802.23L941.705 803.291C938.482 805.39 936.338 807.998 935.108 811.081C933.883 814.428 929.316 816.712 924.704 816.949L924.705 816.961ZM924.375 816.927C924.782 816.745 925.566 816.526 926.056 816.392C929.501 815.394 932.547 813.44 933.193 810.683C933.974 807.386 936.267 804.071 939.617 801.708L940.018 803.502C934.872 801.91 928.816 801.471 923.502 802.693C918.123 803.879 913.568 806.702 910.953 810.343L909.949 808.779C918.293 810.105 923.402 817.494 919.003 822.903C917.725 824.585 915.817 825.983 913.537 826.904L913.774 826.46C914.275 827.595 914.875 828.718 915.654 829.756C918.785 833.909 921.875 833.93 926.643 831.082C932.113 828.039 939.581 826.915 946.37 827.782L945.16 829.512C942.165 827.107 938.944 824.846 935.481 822.779C931.982 820.604 928.164 818.849 924.408 816.915L924.375 816.927Z\",\n    fill: \"#3C3636\"\n  })), _path342 || (_path342 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M916.668 832.549C916.181 833.545 915.276 834.974 913.461 836.156C910.465 838.122 906.82 838.247 903.656 838.597C900.116 838.984 895.042 839.894 888.949 842.257C888.034 839.555 888.448 837.434 888.816 836.271C890.383 831.294 896.322 826.417 901.749 826.631C904.38 826.738 905.097 827.957 908.347 827.798C911.876 827.626 913.321 826.074 914.893 826.57C915.969 826.912 917.032 828.189 916.668 832.549Z\",\n    fill: \"#E8AE86\"\n  })), _path343 || (_path343 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M916.834 832.583C916.015 837.161 909.949 839.297 904.32 839.622C898.978 840.27 893.421 840.894 888.6 842.821C886.801 837.979 888.028 832.513 892.71 828.743C895.018 826.876 898.446 825.088 902.264 825.382C903.663 825.459 904.956 825.98 905.734 826.252C907.307 826.796 909.047 826.716 910.681 826.313C917.936 823.705 917.968 828.902 916.834 832.571L916.834 832.583ZM916.52 832.525C916.17 830.79 916.191 828.766 914.749 827.468C914.516 827.337 914.385 827.35 914.254 827.386C912.9 827.835 910.231 828.997 908.292 828.982C906.245 829.291 903.673 828.166 901.943 827.934C899.294 827.803 896.936 828.915 894.962 830.29C890.839 833.338 887.717 837.795 889.473 842.182L888.728 841.934C891.107 841.013 893.451 839.996 895.963 839.182C900.572 837.293 906.646 837.767 911.248 836.345C913.417 835.593 915.21 834.195 916.537 832.537L916.52 832.525Z\",\n    fill: \"#3C3636\"\n  })), _path344 || (_path344 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M908.362 828.393C915.167 828.362 920.595 824.316 920.486 819.356C920.377 814.397 914.771 810.402 907.965 810.433C901.16 810.465 895.732 814.511 895.841 819.47C895.951 824.43 901.556 828.425 908.362 828.393Z\",\n    fill: \"url(#paint5_radial_1_2583)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path345 || (_path345 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1689.39 744.976C1690.78 745.269 1687.79 749.641 1691.14 753.017C1694.35 756.245 1699.04 755.476 1702.62 759.598C1702.91 759.931 1705.48 762.977 1704.02 764.456C1702.94 765.542 1700.74 764.712 1697.73 765.635C1693.33 766.977 1691.77 770.595 1691.69 770.791C1689.84 775.376 1694.64 779.251 1694.88 779.446C1692.86 780.548 1689.72 782.011 1685.49 782.939C1681.38 783.843 1678.27 783.892 1673.47 783.822C1669.29 783.761 1663.22 783.789 1655.54 784.227C1657.56 783.39 1660.53 781.939 1663.33 779.592C1665.79 777.522 1666.24 776.348 1667.96 774.971C1669.99 773.352 1673.75 771.506 1681.34 771.161C1677.82 767.785 1677.27 764.913 1677.17 763.43C1677.1 762.177 1677.28 760.394 1683.23 751.904C1687.71 745.536 1688.79 744.864 1689.39 744.976Z\",\n    fill: \"#E8AE86\"\n  })), _path346 || (_path346 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1689.43 744.861C1690.21 745.133 1689.9 745.825 1689.91 746.296C1689.72 747.654 1689.51 749.172 1689.97 750.493C1690.77 753.478 1694.56 754.726 1698.05 755.756C1700.58 756.572 1702.88 758.056 1704.23 759.832C1705.95 761.721 1707.1 765.545 1702.76 766.048C1698.8 766.089 1696.04 766.884 1693.89 769.366C1690.85 772.485 1692.36 776.79 1695.74 779.511L1695.24 779.766C1691.02 781.947 1686.17 783.464 1681.04 784.017C1675.95 784.512 1670.8 784.271 1665.73 784.582C1660.64 784.825 1654.82 785.219 1649.72 785.634L1654.83 783.345C1658.14 781.87 1661.13 779.97 1663.37 777.671C1665.48 775.005 1668.42 772.209 1672.67 771.189C1675.43 770.372 1678.33 770.071 1681.18 769.942L1679.99 771.845C1675.11 767.004 1674.36 762.374 1678.64 757.18C1681.68 753.141 1684.56 749.057 1688.2 745.315C1688.49 745.118 1688.78 744.772 1689.4 744.838L1689.43 744.861ZM1689.36 745.091C1688.7 745.117 1688.19 745.856 1687.79 746.237C1684.75 749.85 1682.53 753.85 1680.41 757.769C1679.61 759.394 1678.71 761.077 1678.55 762.768C1678.61 765.539 1680.31 768.21 1682.66 770.453L1684.47 772.169L1681.49 772.356C1676.54 772.655 1671.28 773.61 1668.3 776.602C1665.41 780.031 1661.25 783.223 1656.26 785.098L1655.46 783.25C1662.25 782.954 1669.15 783.095 1675.92 783.351C1679.29 783.473 1682.63 783.262 1685.81 782.512C1689 781.795 1691.97 780.62 1694.56 779.114L1694.49 779.758C1691.22 777.186 1689.22 773.32 1690.98 769.897C1692.7 766.233 1697 763.948 1702.34 764.038C1702.84 763.966 1702.81 763.967 1702.96 763.816C1703.46 762.906 1702.7 761.702 1702.09 760.704C1700.48 758.033 1697.41 756.909 1693.89 755.419C1690.23 753.803 1688.82 750.624 1689.4 747.701L1689.61 746.286C1689.61 745.918 1689.84 745.296 1689.39 745.103L1689.36 745.091Z\",\n    fill: \"#3C3636\"\n  })), _path347 || (_path347 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1718.37 771.287C1720.87 772.207 1723.56 773.333 1726.33 774.7C1731.72 777.354 1735.94 780.186 1739.13 782.689C1735.23 782.305 1730.11 782.283 1724.96 783.905C1719.88 785.504 1717.71 787.744 1714.49 787.288C1712.44 786.998 1709.83 785.585 1707.53 780.536C1711.56 778.873 1713.95 775.723 1713.66 772.459C1713.31 768.666 1709.39 765.35 1704.02 764.455C1704.98 763.082 1707.9 759.355 1714.11 757.187C1723.51 753.924 1732.6 756.975 1733.84 757.418C1732.55 758.32 1730.64 759.836 1729.21 762.038C1727.51 764.622 1727.83 766.046 1726.18 767.802C1725.09 768.956 1722.96 770.438 1718.37 771.287Z\",\n    fill: \"#E8AE86\"\n  })), _path348 || (_path348 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1718.53 771.309C1727.9 773.727 1736.01 778.668 1742.73 784.006L1738.96 783.679C1732.85 783.144 1726.79 783.839 1721.46 786.14C1713.33 790.317 1709.67 786.103 1707.07 780.653L1706.94 780.378L1707.3 780.227C1713.53 777.795 1714.77 771.097 1709.4 767.649C1707.4 766.175 1704.64 765.533 1701.92 765.2C1705.71 758.399 1715.31 753.628 1725.57 754.593C1729.38 754.839 1733.02 755.846 1736.39 757.164L1734.85 758.183C1731.76 760.198 1729.7 762.703 1728.52 765.663C1727.34 768.877 1722.95 771.07 1718.53 771.298L1718.53 771.309ZM1718.21 771.276C1718.6 771.102 1719.35 770.892 1719.82 770.763C1723.13 769.805 1726.06 767.928 1726.68 765.281C1727.43 762.115 1729.63 758.932 1732.85 756.663L1733.23 758.386C1728.29 756.857 1722.47 756.435 1717.37 757.609C1712.21 758.748 1707.83 761.459 1705.32 764.955L1704.36 763.453C1712.37 764.726 1717.28 771.821 1713.05 777.015C1711.82 778.63 1709.99 779.973 1707.8 780.857L1708.03 780.43C1708.51 781.52 1709.09 782.598 1709.84 783.595C1712.84 787.583 1715.81 787.604 1720.39 784.869C1725.64 781.947 1732.81 780.867 1739.33 781.699L1738.17 783.361C1735.29 781.051 1732.2 778.881 1728.87 776.896C1725.51 774.807 1721.85 773.122 1718.24 771.265L1718.21 771.276Z\",\n    fill: \"#3C3636\"\n  })), _path349 || (_path349 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1710.81 786.276C1710.34 787.232 1709.47 788.604 1707.73 789.739C1704.85 791.627 1701.35 791.747 1698.32 792.083C1694.92 792.455 1690.04 793.328 1684.19 795.598C1683.32 793.003 1683.71 790.966 1684.07 789.849C1685.57 785.07 1691.27 780.387 1696.49 780.593C1699.01 780.696 1699.7 781.866 1702.82 781.713C1706.21 781.548 1707.6 780.058 1709.11 780.534C1710.14 780.863 1711.16 782.089 1710.81 786.276Z\",\n    fill: \"#E8AE86\"\n  })), _path350 || (_path350 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1710.97 786.307C1710.18 790.703 1704.36 792.754 1698.95 793.066C1693.82 793.688 1688.49 794.288 1683.86 796.137C1682.13 791.489 1683.31 786.24 1687.8 782.62C1690.02 780.828 1693.31 779.111 1696.98 779.393C1698.32 779.467 1699.56 779.967 1700.31 780.228C1701.82 780.75 1703.49 780.673 1705.06 780.286C1712.03 777.782 1712.06 782.772 1710.97 786.296L1710.97 786.307ZM1710.67 786.251C1710.33 784.585 1710.35 782.642 1708.97 781.395C1708.74 781.27 1708.62 781.282 1708.49 781.317C1707.19 781.748 1704.63 782.864 1702.77 782.85C1700.8 783.146 1698.33 782.065 1696.67 781.843C1694.13 781.717 1691.86 782.785 1689.97 784.105C1686.01 787.032 1683.01 791.312 1684.7 795.524L1683.98 795.286C1686.27 794.402 1688.52 793.425 1690.93 792.644C1695.35 790.829 1701.19 791.285 1705.61 789.92C1707.69 789.197 1709.41 787.855 1710.68 786.263L1710.67 786.251Z\",\n    fill: \"#3C3636\"\n  })), _path351 || (_path351 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1702.83 782.284C1709.37 782.254 1714.58 778.369 1714.48 773.606C1714.37 768.844 1708.99 765.008 1702.45 765.038C1695.92 765.069 1690.71 768.954 1690.81 773.716C1690.92 778.478 1696.3 782.314 1702.83 782.284Z\",\n    fill: \"url(#paint6_radial_1_2583)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint0_radial_1_2583\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(487.454 721.786) rotate(-0.265483) scale(12.1918 8.8856)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint1_radial_1_2583\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(609.023 761.396) rotate(-0.265483) scale(11.2073 8.16811)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint2_radial_1_2583\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1621.67 828.209) rotate(-0.265483) scale(15.1868 11.0684)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint3_radial_1_2583\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1159.14 824.964) rotate(-0.265483) scale(12.9555 9.44217)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint4_radial_1_2583\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1035.21 840.964) rotate(-0.265483) scale(12.542 9.14082)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint5_radial_1_2583\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(908.164 819.413) rotate(-0.265483) scale(12.3226 8.98093)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint6_radial_1_2583\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1702.64 773.661) rotate(-0.265483) scale(11.8324 8.62364)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGameBackground2560);\nexport default __webpack_public_path__ + \"static/media/GameBackground2560.cf98713399f97051d9ad6f7a72e8cf25.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgYellowRulerRotate(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1228,\n    height: 637,\n    viewBox: \"0 0 1228 637\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.8367 489.065C25.2698 487.819 14.3646 483.965 2.41967 477.617L1205.76 149.279L1222.07 178.8C1219.31 177.186 1215.8 176.064 1211.77 175.539C1206.47 174.848 1200.57 175.259 1195.13 176.694C1184.44 179.524 1176.91 185.852 1176.42 192.294C1173.63 190.848 1170.2 189.834 1166.43 189.342C1161.06 188.642 1155.31 188.997 1149.8 190.358C1139.47 192.903 1131.58 198.745 1129.8 205.04C1126.9 203.034 1122.99 201.667 1118.38 201.066C1112.88 200.349 1106.77 200.818 1101.17 202.382C1090.92 205.259 1083.7 211.434 1083.15 217.665C1080.19 215.735 1076.27 214.411 1071.74 213.82C1065.68 213.031 1059.09 213.629 1053.16 215.515C1043.72 218.507 1037.2 224.411 1036.54 230.412C1033.63 228.457 1029.73 227.113 1025.2 226.523C1020.05 225.852 1014.54 226.196 1009.26 227.513C998.377 230.231 990.657 236.578 990.044 243.164C987.134 241.392 983.389 240.175 979.111 239.618C973.177 238.845 966.672 239.412 960.768 241.204C951.198 244.105 944.403 249.961 943.456 255.969C940.546 254.196 936.775 252.965 932.482 252.406C926.563 251.635 920.045 252.189 914.13 253.959C904.446 256.856 897.522 262.717 896.498 268.767C893.572 266.8 889.674 265.456 885.114 264.862C879.363 264.113 873.035 264.639 867.285 266.354C857.245 269.344 850.407 275.409 849.947 281.619C847.254 280.336 844.009 279.431 840.488 278.972C835.017 278.259 829.155 278.621 823.521 280.009C813.289 282.534 805.504 288.111 803.355 294.348C800.465 292.321 796.53 290.94 791.9 290.337C786.402 289.62 780.296 290.089 774.695 291.653C764.458 294.521 757.247 300.698 756.672 306.915C753.784 304.974 749.927 303.646 745.41 303.057C740.093 302.364 734.182 302.773 728.74 304.218C718.14 307.028 710.662 313.278 710.049 319.661C707.177 317.711 703.32 316.383 698.803 315.794C693.486 315.102 687.559 315.519 682.116 316.975C671.558 319.79 664.138 326.036 663.585 332.395C660.611 330.464 656.71 329.141 652.179 328.551C646.119 327.761 639.508 328.369 633.578 330.254C624.151 333.249 617.635 339.152 616.975 345.154C614.06 343.209 610.16 341.876 605.629 341.285C600.425 340.607 594.863 340.965 589.522 342.305C578.63 345.056 570.907 351.423 570.309 358.012C567.446 356.406 563.86 355.285 559.82 354.759C553.816 353.977 547.211 354.542 541.233 356.356C531.738 359.235 524.99 364.851 523.763 370.822C520.822 369.163 517.141 368.008 513.031 367.472C508.191 366.842 503.002 367.087 498.038 368.177C487.11 370.569 478.634 376.806 477.002 383.539C474.108 381.543 470.197 380.187 465.61 379.589C460.055 378.866 453.876 379.347 448.241 380.949C438.117 383.831 430.966 389.984 430.395 396.169C427.506 394.239 423.649 392.911 419.132 392.322C413.773 391.624 407.788 392.045 402.287 393.514C391.713 396.338 384.22 402.596 383.593 408.977C380.648 407.04 376.748 405.706 372.231 405.118C367.097 404.449 361.61 404.784 356.333 406.069C345.377 408.768 337.542 415.121 336.794 421.754C333.924 419.794 330.053 418.464 325.522 417.874C320.023 417.157 313.917 417.627 308.316 419.19C298.064 422.067 290.839 428.242 290.29 434.473C287.316 432.542 283.413 431.229 278.896 430.641C272.85 429.853 266.241 430.45 260.298 432.323C250.772 435.315 244.181 441.241 243.501 447.283C240.544 445.333 236.63 443.998 232.085 443.405C226.096 442.625 219.544 443.218 213.661 445.067C204.163 448.063 197.633 453.964 197.012 459.993C194.052 458.064 190.137 456.739 185.606 456.149C179.588 455.365 173.023 455.956 167.098 457.799C157.514 460.795 150.894 466.727 150.213 472.78C147.23 470.805 143.29 469.456 138.731 468.862C134.172 468.268 128.842 468.495 123.947 469.604C112.669 472.154 104.327 478.87 103.728 485.769C98.5444 483.808 93.3589 482.478 88.2808 481.817C85.1667 481.411 82.061 481.253 79.0215 481.339C70.6329 481.586 65.166 483.628 59.8805 485.597C56.5964 486.831 53.4937 487.991 49.7658 488.717C45.1864 489.61 40.1591 489.716 34.8426 489.023L34.8367 489.065Z\",\n    fill: \"#FFE54D\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1205.45 149.852L1220.8 177.607C1218.25 176.396 1215.21 175.55 1211.83 175.11C1206.44 174.408 1200.43 174.825 1194.9 176.28C1184.41 179.06 1176.89 185.176 1175.91 191.544C1173.2 190.279 1169.98 189.378 1166.47 188.921C1161.02 188.21 1155.17 188.563 1149.57 189.955C1139.44 192.451 1131.62 198.087 1129.42 204.253C1126.53 202.451 1122.77 201.211 1118.42 200.645C1112.83 199.916 1106.6 200.391 1100.91 201.986C1090.9 204.797 1083.72 210.722 1082.65 216.841C1079.71 215.129 1076.01 213.96 1071.78 213.41C1065.63 212.608 1058.9 213.221 1052.88 215.127C1043.66 218.053 1037.18 223.703 1036.05 229.58C1033.17 227.853 1029.47 226.665 1025.24 226.113C1020.01 225.431 1014.4 225.783 1009.03 227.12C998.352 229.791 990.664 235.906 989.552 242.384C986.698 240.823 983.149 239.739 979.165 239.22C973.133 238.434 966.499 239.006 960.507 240.819C951.145 243.661 944.365 249.305 943.005 255.205C940.124 253.629 936.549 252.531 932.537 252.008C926.519 251.224 919.886 251.785 913.868 253.584C904.407 256.413 897.529 262.045 896.065 267.974C893.151 266.222 889.434 265.02 885.169 264.464C879.32 263.702 872.877 264.234 867.036 265.981C857.175 268.919 850.335 274.791 849.427 280.932C846.826 279.811 843.796 279.009 840.541 278.585C834.972 277.859 829.01 278.218 823.287 279.638C813.245 282.123 805.501 287.513 803.013 293.62C800.111 291.784 796.329 290.53 791.952 289.96C786.355 289.231 780.134 289.706 774.444 291.301C764.444 294.103 757.284 300.019 756.182 306.114C753.319 304.411 749.656 303.227 745.462 302.68C740.061 301.977 734.034 302.392 728.504 303.858C718.156 306.604 710.714 312.59 709.56 318.86C706.698 317.147 703.049 315.964 698.841 315.416C693.426 314.71 687.398 315.136 681.866 316.612C671.546 319.362 664.16 325.356 663.081 331.603C660.146 329.902 656.439 328.723 652.217 328.172C646.044 327.368 639.319 327.982 633.298 329.898C624.095 332.826 617.614 338.476 616.486 344.353C613.584 342.624 609.905 341.448 605.669 340.896C600.38 340.207 594.704 340.561 589.287 341.934C578.588 344.634 570.896 350.781 569.797 357.272C567.008 355.858 563.619 354.86 559.859 354.37C553.743 353.573 547.037 354.146 540.955 355.99C531.638 358.817 524.915 364.254 523.304 370.11C520.426 368.621 516.914 367.584 513.056 367.081C508.132 366.44 502.857 366.685 497.805 367.795C487.068 370.148 478.651 376.168 476.594 382.77C473.7 380.978 469.957 379.751 465.651 379.19C459.983 378.451 453.717 378.942 447.993 380.576C437.943 383.436 430.972 389.216 429.909 395.347C427.046 393.645 423.381 392.471 419.201 391.926C413.744 391.215 407.658 391.644 402.068 393.134C391.732 395.892 384.286 401.91 383.133 408.17C380.214 406.46 376.522 405.272 372.3 404.722C367.082 404.042 361.48 404.373 356.128 405.691C345.41 408.324 337.608 414.435 336.349 420.948C333.488 419.225 329.825 418.04 325.603 417.49C320.006 416.761 313.785 417.236 308.094 418.832C298.079 421.642 290.904 427.567 289.827 433.686C286.893 431.985 283.184 430.816 278.976 430.268C272.818 429.465 266.108 430.07 260.06 431.972C250.772 434.899 244.215 440.583 243.053 446.498C240.121 444.776 236.402 443.584 232.165 443.032C226.063 442.237 219.411 442.839 213.424 444.717C204.151 447.635 197.653 453.305 196.564 459.208C193.631 457.497 189.922 456.327 185.7 455.777C179.584 454.98 172.889 455.577 166.873 457.461C157.528 460.381 150.928 466.07 149.777 472.007C146.82 470.261 143.088 469.057 138.823 468.501C133.956 467.867 128.751 468.121 123.767 469.251C112.623 471.765 104.274 478.319 103.227 485.16C98.2388 483.331 93.2424 482.079 88.3607 481.443C85.2185 481.034 82.0568 480.869 78.9737 480.96C70.4559 481.211 64.944 483.269 59.6121 485.264C56.3589 486.48 53.2717 487.632 49.6014 488.355C45.095 489.236 40.1548 489.332 34.9365 488.652C25.7062 487.449 15.2155 483.799 3.72503 477.779L1158.28 162.72L1205.45 149.852ZM1206.06 148.71C804.436 258.297 402.81 367.883 1.18309 477.469C15.0942 484.984 26.0931 488.368 34.7903 489.501C40.9345 490.301 45.9068 489.974 49.9438 489.182C59.8516 487.246 65.6922 482.198 79.0844 481.81C82.2826 481.713 85.3403 481.907 88.216 482.282C94.6688 483.123 100.192 484.903 104.284 486.498C104.386 479.469 112.804 472.624 124.155 470.062C129.064 468.955 134.106 468.744 138.679 469.34C143.462 469.963 147.723 471.472 150.757 473.796C150.822 467.556 157.509 461.343 167.363 458.254C173.333 456.395 179.802 455.877 185.554 456.626C190.281 457.242 194.518 458.716 197.558 460.999C197.56 454.804 204.146 448.599 213.911 445.53C219.839 443.666 226.294 443.146 232.018 443.892C236.759 444.51 240.995 445.994 244.018 448.296C244.08 442.077 250.723 435.868 260.533 432.784C266.506 430.905 273.033 430.383 278.813 431.136C283.54 431.752 287.777 433.226 290.833 435.5C290.691 429.104 297.928 422.63 308.536 419.661C314.211 418.074 320.179 417.673 325.454 418.36C330.209 418.98 334.4 420.48 337.308 422.788C337.364 415.989 345.378 409.274 356.525 406.535C361.789 405.238 367.241 404.952 372.137 405.59C377.033 406.228 381.113 407.703 384.109 409.99C384.045 403.444 391.596 396.872 402.48 393.97C408.056 392.478 413.875 392.122 419.038 392.794C423.779 393.412 427.971 394.902 430.91 397.192C430.779 390.819 437.953 384.391 448.436 381.395C454.145 379.77 460.172 379.355 465.503 380.049C470.258 380.669 474.449 382.169 477.385 384.481C478.477 377.528 487.053 371.078 498.202 368.64C503.18 367.552 508.292 367.35 512.935 367.955C517.255 368.518 521.165 369.778 524.2 371.685C524.97 365.611 531.781 359.746 541.455 356.816C547.478 354.986 553.973 354.492 559.738 355.244C564.003 355.799 567.872 357.043 570.837 358.94C570.808 352.238 578.659 345.565 589.712 342.783C595.04 341.44 600.58 341.133 605.532 341.779C610.484 342.424 614.508 343.891 617.475 346.186C617.518 339.996 624.087 333.811 633.812 330.726C639.787 328.825 646.301 328.302 652.094 329.057C656.822 329.673 661.073 331.148 664.111 333.441C663.971 326.928 671.465 320.359 682.319 317.465C687.851 315.988 693.612 315.635 698.718 316.3C703.474 316.92 707.664 318.42 710.586 320.73C710.494 314.18 718.062 307.588 728.957 304.71C734.473 303.242 740.233 302.899 745.339 303.565C750.095 304.184 754.285 305.684 757.224 307.975C757.082 301.579 764.32 295.105 774.928 292.136C780.603 290.55 786.571 290.148 791.845 290.835C796.601 291.455 800.791 292.955 803.699 295.263C805.411 288.884 813.316 283.054 823.727 280.477C829.333 279.086 835.175 278.764 840.422 279.448C844.195 279.94 847.654 280.948 850.502 282.455C850.432 276.154 857.349 269.832 867.522 266.806C873.331 265.076 879.535 264.62 885.034 265.336C889.776 265.954 893.996 267.447 896.961 269.752C897.41 263.519 904.354 257.414 914.352 254.419C920.325 252.636 926.719 252.15 932.401 252.891C936.889 253.475 940.929 254.827 943.941 256.902C944.325 250.725 951.149 244.658 961.004 241.666C966.952 239.858 973.36 239.374 979.041 240.115C983.544 240.701 987.597 242.065 990.591 244.16C990.536 237.443 998.417 230.764 1009.47 228.002C1014.75 226.686 1020.22 226.391 1025.11 227.029C1029.88 227.65 1034.09 229.152 1037.05 231.457C1037.1 225.257 1043.66 219.082 1053.4 215.989C1059.36 214.096 1065.89 213.564 1071.67 214.317C1076.4 214.933 1080.65 216.409 1083.69 218.702C1083.55 212.306 1090.78 205.832 1101.39 202.863C1107.07 201.277 1113.04 200.875 1118.31 201.563C1123.07 202.182 1127.26 203.682 1130.16 205.99C1131.46 199.504 1139.4 193.453 1150 190.837C1155.5 189.474 1161.23 189.17 1166.36 189.839C1170.39 190.363 1174.06 191.495 1176.98 193.194C1176.87 186.642 1184.45 180.053 1195.35 177.175C1200.86 175.717 1206.6 175.371 1211.7 176.036C1216.46 176.656 1220.65 178.156 1223.59 180.457L1206.07 148.765L1206.06 148.71Z\",\n    fill: \"black\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.766 415.706L279.398 417.151L279.886 418.371C280.066 418.272 280.219 418.203 280.437 418.105C281.266 417.754 282.2 417.546 283.03 417.663C283.912 417.76 284.676 418.205 285.183 419.064C286 420.446 285.336 422.261 282.989 423.255C281.93 423.704 280.935 423.878 280.324 423.865L279.91 422.413C280.397 422.411 281.302 422.276 282.093 421.934C282.935 421.573 283.621 420.844 283.161 420.061C282.7 419.277 281.721 419.133 279.986 419.875C279.502 420.079 279.181 420.248 278.847 420.448L277.117 416.318L281.901 414.269L282.742 415.695L282.766 415.706Z\",\n    fill: \"black\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M327.178 402.432C326.936 402.519 326.629 402.666 326.32 402.856C324.632 403.908 324.342 405.471 324.864 406.778L324.902 406.758C325.034 406.114 325.53 405.421 326.487 405.011C328.018 404.357 329.667 404.836 330.519 406.283C331.325 407.643 330.977 409.353 329.179 410.124C327.38 410.895 325.379 410.211 324.239 408.285C323.376 406.827 323.309 405.41 323.738 404.32C324.095 403.409 324.846 402.619 325.861 402.041C326.183 401.851 326.464 401.713 326.681 401.615L327.165 402.432L327.178 402.432ZM329.367 406.845C328.746 405.789 327.651 405.449 326.567 405.907C325.866 406.21 325.434 406.864 325.425 407.544C325.417 407.692 325.446 407.864 325.549 408.048C326.301 409.258 327.481 409.878 328.718 409.351C329.739 408.912 329.988 407.911 329.367 406.845Z\",\n    fill: \"black\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M374.069 387.456L374.461 388.12L374.669 396.476L373.457 396.993L373.352 388.832L373.353 388.811L369.092 390.625L368.597 389.797L374.069 387.456Z\",\n    fill: \"black\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M419.398 382.665C418.846 381.729 419.105 380.792 419.946 379.942L419.91 379.909C418.723 379.937 417.934 379.471 417.554 378.829C416.864 377.654 417.553 376.362 419.071 375.708C420.755 374.985 422.126 375.527 422.667 376.452C423.035 377.083 423.081 377.904 422.263 378.798L422.286 378.83C423.589 378.732 424.633 379.091 425.162 379.994C425.922 381.278 425.139 382.705 423.481 383.407C421.669 384.188 420.019 383.731 419.387 382.643L419.398 382.665ZM424.044 380.621C423.515 379.718 422.522 379.605 421.176 379.819C420.305 380.509 420.102 381.309 420.517 382.017C420.928 382.787 421.983 383.158 423.092 382.69C424.202 382.222 424.493 381.393 424.044 380.621ZM418.617 378.296C419.055 379.036 419.948 379.155 421.081 378.954C421.695 378.414 422.005 377.714 421.601 377.049C421.255 376.462 420.479 376.017 419.42 376.465C418.45 376.885 418.237 377.654 418.617 378.296Z\",\n    fill: \"black\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M94.3315 468.262L94.3066 468.261L93.203 469.611L92.5245 468.947L93.9067 467.267L94.9143 466.838L99.2895 474.238L98.1541 474.726L94.332 468.251L94.3315 468.262Z\",\n    fill: \"black\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M139.885 461.651L139.516 461.03L139.986 459.868C141.135 457.115 141.578 455.739 140.922 454.608C140.473 453.857 139.637 453.346 138.348 453.903C137.557 454.244 137.102 454.865 136.88 455.314L136.083 454.773C136.429 454.084 137.088 453.397 138.095 452.968C139.97 452.168 141.406 452.925 142.027 453.98C142.833 455.351 142.329 456.949 141.391 459.231L141.024 460.078L141.023 460.099L144.939 458.432L145.435 459.259L139.898 461.63L139.885 461.651Z\",\n    fill: \"black\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M185.256 447.587C185.703 447.626 186.642 447.577 187.458 447.236C188.963 446.592 188.952 445.571 188.57 444.96C187.948 443.926 186.586 443.948 185.45 444.436L184.8 444.72L184.35 443.968L185.001 443.685C185.855 443.325 186.709 442.485 186.191 441.604C185.846 441.016 185.088 440.679 184.004 441.137C183.316 441.429 182.801 441.984 182.557 442.368L181.826 441.766C182.112 441.287 182.819 440.623 183.763 440.224C185.472 439.492 186.756 440.03 187.286 440.923C187.735 441.685 187.591 442.562 186.716 443.347L186.715 443.368C187.902 443.095 189.172 443.41 189.795 444.444C190.497 445.63 190.023 447.133 187.943 448.02C186.974 448.44 185.957 448.54 185.386 448.486L185.244 447.576L185.256 447.587Z\",\n    fill: \"black\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.405 435.705L236.207 433.692L232.176 435.419L231.784 434.755L232.864 428.373L234.127 427.826L236.857 432.43L238.068 431.913L238.529 432.696L237.317 433.213L238.515 435.227L237.405 435.705ZM235.747 432.898L234.285 430.427C234.055 430.036 233.837 429.644 233.632 429.243L233.594 429.263C233.579 429.805 233.546 430.218 233.524 430.664L232.892 434.085L232.89 434.106L235.748 432.887L235.747 432.898Z\",\n    fill: \"black\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M466.649 370.69C466.915 370.605 467.197 370.456 467.582 370.247C468.213 369.878 468.712 369.366 468.968 368.748C469.277 368.058 469.306 367.23 468.953 366.291L468.915 366.311C468.73 367.016 468.213 367.613 467.346 367.984C465.79 368.647 464.183 368.075 463.446 366.813C462.618 365.409 463.079 363.672 464.852 362.911C466.625 362.149 468.447 362.911 469.564 364.804C470.531 366.437 470.561 367.842 470.12 368.92C469.779 369.768 469.068 370.496 468.182 370.994C467.783 371.234 467.425 371.401 467.132 371.517L466.648 370.701L466.649 370.69ZM464.561 366.249C465.101 367.174 466.144 367.544 467.165 367.105C467.956 366.763 468.372 366.173 468.413 365.6C468.419 365.483 468.401 365.344 468.309 365.192C467.56 363.929 466.436 363.195 465.211 363.722C464.203 364.151 463.951 365.205 464.561 366.249Z\",\n    fill: \"black\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M508.088 353.618L508.064 353.613L506.646 354.782L505.706 353.45L507.681 351.867L509.436 351.429L512.805 359.488L510.758 359.995L508.09 353.608L508.088 353.618Z\",\n    fill: \"black\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M520.777 353.034C521.826 355.525 521.415 357.518 519.102 358.09C516.789 358.662 514.946 357.057 513.986 354.78C513.011 352.446 513.345 350.317 515.684 349.74C518.104 349.136 519.855 350.83 520.777 353.034ZM516.102 354.243C516.859 356.1 517.726 356.853 518.551 356.644C519.376 356.436 519.434 355.409 518.662 353.571C517.889 351.733 517.091 350.951 516.24 351.165C515.455 351.36 515.299 352.367 516.102 354.243Z\",\n    fill: \"black\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M556.357 338.911L556.332 338.906L555.069 340.063L554.485 339.292L556.065 337.854L557.115 337.595L560.484 345.654L559.3 345.95L556.359 338.9L556.357 338.911Z\",\n    fill: \"black\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M563.496 337.137L563.472 337.132L562.209 338.289L561.624 337.518L563.204 336.08L564.254 335.821L567.623 343.88L566.44 344.177L563.498 337.126L563.496 337.137Z\",\n    fill: \"black\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M602.107 326.209L602.082 326.204L600.819 327.361L600.235 326.591L601.815 325.153L602.865 324.894L606.234 332.953L605.05 333.249L602.108 326.199L602.107 326.209Z\",\n    fill: \"black\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M609.541 332.145L609.257 331.469L609.87 330.394C611.358 327.854 611.972 326.563 611.47 325.333C611.123 324.514 610.364 323.87 609.02 324.209C608.195 324.417 607.666 324.958 607.389 325.366L606.671 324.698C607.102 324.072 607.84 323.5 608.89 323.24C610.844 322.757 612.164 323.744 612.642 324.893C613.261 326.386 612.558 327.886 611.339 329.994L610.868 330.773L610.865 330.794L614.945 329.787L615.328 330.689L609.557 332.126L609.541 332.145Z\",\n    fill: \"black\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M647.857 314.17L647.832 314.165L646.569 315.322L645.985 314.552L647.565 313.114L648.615 312.855L651.984 320.914L650.8 321.21L647.859 314.16L647.857 314.17Z\",\n    fill: \"black\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M655.063 318.778C655.5 318.89 656.433 318.997 657.283 318.793C658.851 318.403 658.971 317.389 658.673 316.721C658.191 315.592 656.844 315.39 655.66 315.686L654.981 315.86L654.634 315.041L655.313 314.867C656.203 314.651 657.153 313.96 656.755 313C656.489 312.361 655.785 311.901 654.656 312.176C653.939 312.353 653.36 312.818 653.069 313.158L652.425 312.44C652.768 312.013 653.552 311.472 654.535 311.231C656.317 310.788 657.515 311.533 657.923 312.506C658.269 313.335 658.014 314.181 657.049 314.815L657.045 314.836C658.252 314.761 659.466 315.282 659.948 316.411C660.489 317.703 659.828 319.114 657.661 319.651C656.65 319.907 655.634 319.838 655.076 319.69L655.053 318.765L655.063 318.778Z\",\n    fill: \"black\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M695.856 300.386L695.832 300.381L694.569 301.538L693.984 300.767L695.565 299.329L696.615 299.07L699.984 307.129L698.8 307.426L695.858 300.375L695.856 300.386Z\",\n    fill: \"black\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M707.07 305.384L706.146 303.19L701.944 304.237L701.643 303.515L703.529 297.365L704.846 297.032L706.949 302.046L708.212 301.734L708.566 302.586L707.303 302.899L708.227 305.093L707.07 305.384ZM705.794 302.327L704.667 299.636C704.491 299.21 704.326 298.786 704.175 298.354L704.135 298.368C704.051 298.902 703.965 299.307 703.886 299.745L702.822 303.033L702.818 303.054L705.796 302.316L705.794 302.327Z\",\n    fill: \"black\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M740.59 289.827L740.566 289.822L739.147 291L738.206 289.669L740.181 288.086L741.936 287.647L745.305 295.706L743.258 296.214L740.59 289.827Z\",\n    fill: \"black\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M751.61 286.952L748.099 287.828L748.425 289.119C748.615 289.05 748.775 289.007 749.002 288.946C749.866 288.735 750.815 288.682 751.62 288.935C752.477 289.178 753.175 289.744 753.565 290.68C754.194 292.185 753.305 293.874 750.86 294.473C749.758 294.743 748.753 294.752 748.152 294.638L747.929 293.13C748.41 293.208 749.321 293.223 750.146 293.015C751.024 292.796 751.794 292.187 751.44 291.334C751.086 290.481 750.138 290.177 748.33 290.626C747.826 290.749 747.488 290.863 747.132 291.006L745.955 286.627L750.941 285.384L751.587 286.936L751.61 286.952Z\",\n    fill: \"black\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M787.357 275.837L787.333 275.832L786.07 276.989L785.485 276.219L787.065 274.781L788.115 274.522L791.484 282.581L790.301 282.877L787.359 275.827L787.357 275.837Z\",\n    fill: \"black\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M796.9 273.2C796.65 273.246 796.328 273.342 795.999 273.479C794.197 274.243 793.71 275.745 794.057 277.127L794.097 277.114C794.31 276.497 794.89 275.892 795.887 275.643C797.482 275.248 799.049 275.994 799.704 277.569C800.325 279.051 799.762 280.689 797.887 281.156C796.013 281.624 794.125 280.616 793.247 278.518C792.582 276.93 792.698 275.514 793.261 274.505C793.731 273.66 794.574 273.001 795.65 272.595C795.992 272.46 796.288 272.37 796.515 272.309L796.887 273.198L796.9 273.2ZM798.495 277.936C798.016 276.787 796.98 276.27 795.851 276.545C795.119 276.729 794.609 277.306 794.513 277.979C794.486 278.125 794.493 278.3 794.571 278.5C795.157 279.823 796.243 280.632 797.532 280.314C798.596 280.047 798.971 279.096 798.495 277.936Z\",\n    fill: \"black\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M834.607 263.307L834.583 263.302L833.32 264.459L832.735 263.688L834.316 262.25L835.365 261.991L838.734 270.05L837.551 270.346L834.609 263.296L834.607 263.307Z\",\n    fill: \"black\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M844.54 259.71L844.841 260.432L843.973 268.752L842.71 269.064L843.655 260.956L843.658 260.935L839.22 262.03L838.837 261.128L844.54 259.71Z\",\n    fill: \"black\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M881.857 249.076L881.833 249.071L880.57 250.228L879.985 249.458L881.566 248.02L882.615 247.761L885.984 255.819L884.801 256.116L881.859 249.066L881.857 249.076Z\",\n    fill: \"black\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M888.325 252.991C887.9 251.972 888.276 251.086 889.216 250.382L889.185 250.343C888.009 250.176 887.29 249.583 886.998 248.884C886.467 247.605 887.313 246.437 888.896 246.039C890.651 245.601 891.935 246.365 892.35 247.371C892.632 248.057 892.573 248.879 891.65 249.63L891.669 249.666C892.968 249.783 893.952 250.311 894.358 251.294C894.944 252.693 893.988 253.978 892.261 254.4C890.372 254.876 888.801 254.151 888.317 252.968L888.325 252.991ZM893.175 251.731C892.768 250.749 891.802 250.473 890.445 250.463C889.497 251.003 889.195 251.763 889.513 252.533C889.819 253.365 890.814 253.906 891.969 253.626C893.124 253.345 893.518 252.571 893.175 251.731ZM888.115 248.53C888.452 249.336 889.318 249.602 890.463 249.59C891.139 249.156 891.534 248.512 891.221 247.787C890.955 247.147 890.246 246.578 889.143 246.848C888.132 247.105 887.823 247.831 888.115 248.53Z\",\n    fill: \"black\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M927.607 236.281L927.583 236.276L926.32 237.433L925.735 236.663L927.315 235.225L928.353 234.963L931.722 243.022L930.538 243.319L927.597 236.268L927.607 236.281Z\",\n    fill: \"black\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M935.443 241.259C935.717 241.218 936.015 241.118 936.421 240.974C937.091 240.712 937.65 240.287 937.982 239.716C938.376 239.083 938.51 238.267 938.283 237.278L938.242 237.291C937.969 237.96 937.382 238.467 936.478 238.691C934.857 239.092 933.344 238.259 932.779 236.887C932.141 235.358 932.82 233.712 934.668 233.25C936.517 232.788 938.218 233.843 939.077 235.905C939.822 237.683 939.671 239.081 939.098 240.077C938.651 240.862 937.856 241.466 936.917 241.813C936.505 241.988 936.118 242.092 935.814 242.159L935.441 241.27L935.443 241.259ZM933.94 236.509C934.355 237.515 935.336 238.054 936.401 237.787C937.225 237.579 937.712 237.062 937.826 236.501C937.847 236.387 937.847 236.246 937.776 236.079C937.199 234.704 936.183 233.79 934.906 234.111C933.868 234.373 933.472 235.373 933.94 236.509Z\",\n    fill: \"black\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M973.173 232.561L972.693 231.423L973.463 230.185C974.776 228.118 975.363 226.973 974.99 226.019C974.714 225.366 974.053 224.948 973.003 225.207C972.219 225.402 971.693 225.922 971.348 226.359L970.181 225.154C970.675 224.531 971.577 223.895 972.801 223.585C974.848 223.077 976.42 223.868 977.032 225.326C977.601 226.678 976.951 228.027 976.081 229.395L975.513 230.22L975.51 230.24L978.937 229.401L979.584 230.953L973.163 232.548L973.173 232.561Z\",\n    fill: \"black\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M985.885 224.9C986.933 227.39 986.522 229.384 984.209 229.955C981.897 230.527 980.053 228.923 979.093 226.645C978.118 224.311 978.452 222.182 980.791 221.605C983.13 221.028 984.962 222.695 985.885 224.9ZM981.207 226.119C981.964 227.975 982.831 228.728 983.656 228.52C984.481 228.312 984.539 227.285 983.767 225.447C982.994 223.609 982.196 222.827 981.345 223.04C980.56 223.235 980.404 224.242 981.207 226.119Z\",\n    fill: \"black\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1022.56 219.265L1022.28 218.589L1022.89 217.514C1024.38 214.974 1024.99 213.683 1024.49 212.453C1024.14 211.634 1023.38 210.99 1022.04 211.329C1021.22 211.538 1020.69 212.078 1020.41 212.486L1019.69 211.818C1020.12 211.192 1020.86 210.62 1021.91 210.36C1023.87 209.877 1025.18 210.864 1025.66 212.013C1026.28 213.506 1025.58 215.006 1024.36 217.114L1023.89 217.893L1023.89 217.914L1027.97 216.907L1028.35 217.809L1022.58 219.246L1022.56 219.265Z\",\n    fill: \"black\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1029.42 209.786L1029.39 209.781L1028.13 210.938L1027.55 210.168L1029.13 208.73L1030.18 208.471L1033.55 216.529L1032.36 216.826L1029.42 209.776L1029.42 209.786Z\",\n    fill: \"black\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1069.06 206.571L1068.78 205.895L1069.39 204.82C1070.88 202.28 1071.49 200.989 1070.99 199.759C1070.64 198.94 1069.89 198.296 1068.54 198.635C1067.72 198.844 1067.19 199.384 1066.91 199.792L1066.19 199.124C1066.62 198.498 1067.36 197.926 1068.41 197.667C1070.37 197.183 1071.69 198.171 1072.16 199.32C1072.78 200.812 1072.08 202.312 1070.86 204.42L1070.39 205.2L1070.39 205.221L1074.47 204.213L1074.85 205.115L1069.08 206.552L1069.06 206.571Z\",\n    fill: \"black\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1076.21 204.79L1075.92 204.114L1076.53 203.039C1078.02 200.5 1078.64 199.208 1078.13 197.979C1077.79 197.16 1077.03 196.515 1075.68 196.855C1074.86 197.063 1074.33 197.603 1074.05 198.011L1073.34 197.343C1073.77 196.718 1074.5 196.145 1075.55 195.886C1077.51 195.402 1078.83 196.39 1079.31 197.539C1079.92 199.031 1079.22 200.531 1078 202.639L1077.53 203.419L1077.53 203.44L1081.61 202.432L1081.99 203.334L1076.22 204.772L1076.21 204.79Z\",\n    fill: \"black\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1114.06 193.776L1113.78 193.1L1114.39 192.026C1115.88 189.486 1116.49 188.195 1115.99 186.965C1115.64 186.146 1114.88 185.502 1113.54 185.841C1112.72 186.049 1112.19 186.589 1111.91 186.998L1111.19 186.33C1111.62 185.704 1112.36 185.131 1113.41 184.872C1115.36 184.389 1116.68 185.376 1117.16 186.525C1117.78 188.017 1117.08 189.518 1115.86 191.626L1115.39 192.405L1115.39 192.426L1119.47 191.419L1119.85 192.321L1114.08 193.758L1114.06 193.776Z\",\n    fill: \"black\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1120.97 190.672C1121.41 190.784 1122.34 190.89 1123.19 190.687C1124.76 190.297 1124.88 189.282 1124.58 188.614C1124.1 187.486 1122.75 187.283 1121.57 187.58L1120.89 187.753L1120.54 186.934L1121.22 186.761C1122.11 186.544 1123.06 185.853 1122.66 184.894C1122.4 184.254 1121.69 183.795 1120.56 184.07C1119.85 184.246 1119.27 184.711 1118.98 185.052L1118.33 184.334C1118.68 183.907 1119.46 183.365 1120.44 183.125C1122.22 182.681 1123.42 183.427 1123.83 184.399C1124.18 185.229 1123.92 186.075 1122.96 186.709L1122.95 186.729C1124.16 186.654 1125.37 187.176 1125.86 188.304C1126.4 189.596 1125.74 191.008 1123.57 191.545C1122.56 191.801 1121.54 191.732 1120.98 191.584L1120.96 190.659L1120.97 190.672Z\",\n    fill: \"black\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1161.31 180.752L1161.03 180.077L1161.64 179.002C1163.13 176.462 1163.74 175.171 1163.24 173.941C1162.89 173.122 1162.14 172.478 1160.79 172.817C1159.97 173.025 1159.44 173.565 1159.16 173.974L1158.44 173.306C1158.87 172.68 1159.61 172.107 1160.66 171.848C1162.62 171.365 1163.94 172.352 1164.41 173.501C1165.03 174.993 1164.33 176.494 1163.11 178.602L1162.64 179.381L1162.64 179.402L1166.72 178.395L1167.1 179.297L1161.33 180.734L1161.31 180.752Z\",\n    fill: \"black\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1172.24 178.03L1171.32 175.836L1167.12 176.884L1166.82 176.161L1168.7 170.012L1170.02 169.678L1172.12 174.693L1173.39 174.38L1173.74 175.233L1172.48 175.545L1173.4 177.739L1172.24 178.03ZM1170.97 174.984L1169.84 172.293C1169.66 171.867 1169.5 171.443 1169.35 171.011L1169.31 171.025C1169.22 171.559 1169.14 171.964 1169.06 172.402L1167.99 175.69L1167.99 175.711L1170.97 174.973L1170.97 174.984Z\",\n    fill: \"black\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1198.92 171.023L1198.44 169.884L1199.21 168.647C1200.53 166.58 1201.11 165.435 1200.74 164.48C1200.46 163.828 1199.8 163.41 1198.75 163.669C1197.97 163.864 1197.44 164.383 1197.1 164.821L1195.93 163.616C1196.42 162.992 1197.33 162.356 1198.55 162.046C1200.6 161.539 1202.17 162.329 1202.78 163.788C1203.35 165.139 1202.7 166.488 1201.83 167.857L1201.26 168.681L1201.26 168.702L1204.69 167.863L1205.33 169.415L1198.91 171.01L1198.92 171.023Z\",\n    fill: \"black\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1209.96 161.082L1206.45 161.959L1206.78 163.249C1206.97 163.18 1207.13 163.138 1207.36 163.076C1208.22 162.865 1209.17 162.812 1209.97 163.066C1210.83 163.308 1211.53 163.874 1211.92 164.81C1212.55 166.315 1211.66 168.005 1209.22 168.603C1208.11 168.873 1207.11 168.882 1206.51 168.768L1206.28 167.261C1206.76 167.339 1207.68 167.354 1208.5 167.146C1209.38 166.926 1210.15 166.317 1209.8 165.464C1209.44 164.612 1208.49 164.307 1206.69 164.756C1206.18 164.879 1205.84 164.993 1205.49 165.136L1204.31 160.757L1209.3 159.515L1209.94 161.067L1209.96 161.082Z\",\n    fill: \"black\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.6947 480.514C55.743 483.005 55.332 484.998 53.0194 485.57C50.7067 486.142 48.8635 484.537 47.9036 482.26C46.9287 479.926 47.2625 477.797 49.6015 477.22C51.9406 476.643 53.7725 478.31 54.6947 480.514ZM50.0176 481.734C50.7742 483.59 51.6412 484.343 52.4661 484.135C53.2909 483.927 53.3496 482.899 52.577 481.061C51.8044 479.224 51.0061 478.441 50.1548 478.655C49.3705 478.85 49.2139 479.857 50.0176 481.734Z\",\n    fill: \"black\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1200.82 149.857L1205.78 158.853\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.0299 466.823L48.009 475.821\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M86.714 454.882L91.6791 463.878\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M132.98 442.234L137.945 451.23\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M179.247 429.579L184.212 438.575\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M226.805 416.569L231.784 425.566\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.073 403.915L278.036 412.921\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M319.338 391.266L324.302 400.272\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M365.605 378.612L370.569 387.619\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M413.162 365.612L418.142 374.609\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M459.43 352.955L464.395 361.951\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M506.989 339.944L511.969 348.941\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M553.257 327.295L558.236 336.292\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M599.523 314.641L604.502 323.639\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M645.791 301.984L650.756 310.98\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M693.349 288.978L698.327 297.986\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M739.615 276.33L744.593 285.338\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M785.882 263.666L790.86 272.674\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M832.15 251.019L837.127 260.027\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M879.708 238.013L884.687 247.01\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M925.974 225.366L930.953 234.363\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M972.242 212.708L977.221 221.706\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1019.8 199.705L1024.78 208.702\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1066.07 187.047L1071.05 196.044\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1112.33 174.398L1117.31 183.406\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1159.89 161.386L1164.87 170.394\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgYellowRulerRotate);\nexport default __webpack_public_path__ + \"static/media/YellowRulerRotate.d6a85f760c1ac484eec05cf3ee00fbe5.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _g, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgYodelyGuy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 87,\n    height: 181,\n    viewBox: \"0 0 87 181\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.6635 31.3628C67.1192 31.435 68.575 31.5095 70.0329 31.5817C77.5066 33.298 82.4365 35.614 84.5577 43.4992C81.4273 40.3469 76.0202 36.7195 71.7799 35.5177C67.9467 34.4319 65.5847 34.7691 61.9507 36.3934C54.8558 39.561 51.8414 46.6647 51.2482 46.2334C50.4076 44.1888 54.8033 37.7594 56.1627 36.2839C58.0388 34.248 62.949 31.6824 65.6635 31.3628Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.6246 39.4555C12.4938 45.5018 6.014 50.3879 4.72024 58.0432C7.29025 52.2771 13.3081 44.4663 18.3715 40.8762C16.9377 39.6591 17.6491 39.0592 16.6246 39.4555C17.2069 38.3259 17.7892 37.1963 18.3715 36.0667C19.1027 34.8649 20.8474 33.8535 20.5563 32.3496C20.46 31.8483 17.3711 28.7507 17.9359 22.7285C11.7626 20.8633 17.752 16.3647 20.3396 13.9808C20.0484 12.0478 20.5388 9.80831 21.4319 8.07673C21.3662 5.66214 20.0331 -0.176226 22.4148 2.06324C22.938 0.738822 23.7874 2.79002 24.3807 2.71997C24.7659 2.674 25.0374 0.333837 31.5894 2.50106C37.4978 -2.4135 38.704 7.90817 40.8734 11.5771C39.9321 16.5376 46.379 18.0678 45.024 20.9794C44.0279 23.1181 40.6764 22.1352 40.4378 22.5095C40.2911 23.8208 40.1466 25.1343 40 26.4456C41.5214 30.2087 43.3712 37.4371 36.8323 33.9892C35.4247 37.0146 36.0421 38.6105 32.3534 39.346C35.0745 43.0784 34.7811 48.8117 36.285 50.7163C37.1585 51.4452 38.032 52.1742 38.9054 52.9032C40.348 54.6764 40.6742 58.2993 44.2578 56.7298C44.3672 56.8392 44.4767 56.9487 44.5862 57.0581C43.8484 57.6404 45.0897 59.2538 45.3502 59.3545C51.3571 57.8593 57.364 56.3664 63.3709 54.8712C62.3267 49.8669 64.6012 50.3419 64.6822 50.0595C64.3911 49.6217 64.0999 49.1839 63.8088 48.7482C63.2264 46.1016 65.2076 46.5438 65.3368 46.3424C64.9361 42.9537 64.5355 39.5627 64.1349 36.174C58.1959 37.8136 53.3426 43.2908 50.8098 48.6388C49.4175 42.4086 56.6241 33.3632 62.6047 31.5812C63.7869 27.1855 67.9593 26.5879 69.1568 30.9245C78.7144 32.7984 83.4582 34.9459 85.4306 45.0289C84.9293 45.7667 83.4035 42.6756 80.9517 40.7646C78.1124 38.5514 72.1449 35.7011 68.5 35.2983C67.9462 38.987 68.6401 42.6625 69.0451 46.3424C72.771 44.1533 72.6637 46.9597 72.8673 47.1086C73.3401 47.2181 73.813 47.3275 74.288 47.437C74.4697 47.9842 74.6514 48.5293 74.8331 49.0766C75.3366 49.394 76.7771 48.028 76.0349 51.5919C79.6535 52.2355 77.1908 54.8471 77.1273 55.0901C76.2976 58.2556 76.6632 60.6132 70.4658 62.4149C71.0854 69.8863 71.7027 77.3578 72.3222 84.8292C73.9597 93.8286 74.8463 103.016 75.816 112.165V116.538C76.4706 121.131 77.1273 125.722 77.7819 130.315C78.1453 134.907 78.5108 139.498 78.8742 144.091C79.0209 144.31 79.1654 144.528 79.312 144.747C76.0546 148.309 76.7048 145.03 75.5993 141.904C73.3949 126.948 71.8713 111.941 70.7942 96.8562C69.5048 90.1575 68.8984 83.3318 68.3906 76.5193C66.9348 71.9528 66.9852 67.0339 66.2058 62.3054C57.1757 65.079 53.2594 73.2094 42.397 76.3004C43.8068 78.8332 46.1776 82.5022 43.9251 85.0481C43.7215 87.2876 45.267 90.3042 43.2705 91.39C42.7429 97.4144 45.6523 93.3886 47.0927 98.9336C51.0834 98.9533 54.6189 98.3448 57.0313 102.103C57.3706 106.545 57.2327 111.077 55.5033 115.225C55.477 120.788 53.6863 126.177 53.0996 131.626C52.9529 131.773 52.8085 131.917 52.6618 132.064C53.2441 134.397 53.8264 136.729 54.4087 139.062C54.759 141.799 53.7476 148.386 56.484 148.138C58.3119 147.972 59.3036 141.129 65.6586 142.453C67.8411 142.909 67.5368 146.245 68.0622 146.389C68.4847 146.505 69.0407 145.36 69.0451 147.155C69.0517 149.373 67.4164 148.591 67.2982 149.123C67.2544 149.318 69.1677 151.488 66.2058 151.748C65.6739 154.296 65.05 152.379 64.1306 152.733C63.3293 153.534 62.5281 154.338 61.7269 155.139C59.5334 156.472 55.2603 156.446 56.1578 160.06C49.2774 165.48 51.0572 162.621 49.932 161.919C49.7875 161.829 48.5003 162 46.8738 160.608C42.5984 156.945 46.6811 152.591 44.3629 148.033C45.0524 142.915 41.1646 133.616 43.9251 133.6C43.2683 128.706 44.9102 123.894 44.3629 118.949C44.5621 116.887 47.0423 109.522 45.3458 110.092C44.9999 110.208 44.6584 113.285 41.0858 115.886C39.7329 118.907 38.958 124.08 35.1883 124.415C34.6585 130.573 30.0702 139.377 29.5097 145.19C29.4375 150.001 29.3631 154.811 29.2908 159.622C29.4375 159.914 29.582 160.205 29.7287 160.498C27.6468 163.401 24.477 167.308 27.8723 170.229C28.8837 167.05 31.8915 165.697 34.8621 167.385C37.986 169.16 35.6349 172.753 35.845 173.398C35.9567 173.744 36.9462 173.744 36.7185 174.491C36.5762 174.957 29.3784 178.771 28.7457 180.067C28.4546 179.92 28.1634 179.775 27.8723 179.629C21.9573 179.802 24.7222 179.011 22.5199 175.802C21.3903 174.891 20.2629 173.981 19.1333 173.068C18.0848 172.926 17.6842 174.791 17.3864 174.817C15.6746 173.687 13.9649 172.558 12.253 171.428C13.2337 167.444 9.70922 161.882 16.8392 161.807C17.7126 159.692 18.5861 157.58 19.4595 155.465C19.3282 147.061 19.7945 138.528 21.8632 130.317C22.5177 128.277 23.1745 126.234 23.829 124.194C16.9026 122.418 20.5847 117.773 18.4766 115.993C17.4193 115.1 10.6484 114.428 8.10023 109.104C4.74213 102.086 7.00129 93.3908 4.71367 94.562C3.6016 95.1312 3.51404 97.8478 3.07621 91.6089C5.44921 91.6133 2.67123 87.9377 2.20276 86.1427C1.76493 82.9356 1.3293 79.7286 0.891479 76.5215C1.3293 72.2943 1.76493 68.0672 2.20276 63.8378C3.95843 58.3672 5.56523 52.8069 8.97368 48.0937C11.5218 45.215 14.0699 42.3363 16.6181 39.4555H16.6246ZM21.5392 2.06105C20.5672 2.3719 22.4433 4.46907 22.3032 4.79525L21.3203 4.46688C20.3023 5.03605 22.6928 6.62097 22.741 6.76326C22.949 7.38934 20.5869 7.04565 23.1788 8.07454C23.065 9.1275 25.6766 12.0062 26.3465 10.5898C26.5479 11.5793 27.0163 11.7282 26.8916 10.9182C25.5803 8.87794 24.2712 6.8355 22.9599 4.79525C22.8833 4.65295 22.3907 1.7896 21.5392 2.06105ZM22.8483 2.06105C23.0322 5.51765 25.2432 6.78953 25.797 7.63671C26.3136 8.42698 27.3907 12.363 28.7457 11.4633C28.4174 9.67697 28.0912 7.89065 27.7628 6.10653C26.8412 5.51328 26.9156 7.08506 26.561 7.09163C25.9371 7.10257 26.5304 2.58862 25.4686 6.21598C24.8666 6.19409 25.2913 4.12976 25.1403 3.70069C24.5339 1.97348 24.6236 5.11486 24.3763 5.12142C23.7458 4.4625 24.3872 2.66962 22.8483 2.06105ZM26.7821 16.9317C25.5759 17.2141 27.2944 18.0503 27.3272 18.1335C27.3513 18.1948 26.9244 19.3353 27.4367 19.3353C27.6271 19.3353 27.684 17.6607 28.529 19.9921C29.1661 18.3415 30.5167 20.4058 30.6043 20.7583C30.9918 22.3169 29.6214 24.7797 29.4025 24.8037C29.293 24.8147 28.9231 23.9325 28.0912 24.147C25.9765 28.3961 27.9927 22.8532 26.1254 22.3979C25.6876 22.4701 25.2519 22.5446 24.8141 22.6168C22.4455 24.0572 26.0269 28.7879 24.4857 27.5379C24.35 27.4285 23.8334 25.1255 22.8483 25.2416C22.3382 25.9705 21.8281 26.6995 21.3203 27.4285C21.1167 27.4285 20.2082 24.4973 20.3374 28.1947C17.5769 27.1045 21.4363 32.5729 21.4297 33.0063C21.4232 33.4945 19.2669 33.6893 21.4297 36.9424C24.0151 39.311 26.5982 41.6796 29.1836 44.0482C29.4375 42.4808 29.6936 40.9134 29.9476 39.346C29.1464 38.3981 28.3451 37.4502 27.5439 36.5024C29.0719 36.5221 29.0347 39.3241 32.6774 38.7987C34.3849 38.5535 35.057 37.5575 35.6261 36.0645C35.6086 35.4319 32.6402 34.9087 31.1472 31.5812C29.8841 34.0374 30.6109 30.5151 31.2567 30.1605C32.4169 29.5213 30.5977 31.1412 33.2225 33.6587C36.5981 36.8986 36.2084 33.1815 36.8258 33.1114C41.8432 37.019 41.8498 31.3142 39.3367 26.4412C40.1269 23.3064 39.6519 21.5792 39.1178 18.5691C38.6602 17.7592 30.6634 17.9168 29.3981 17.803C28.5246 17.5118 27.6512 17.2206 26.7777 16.9273L26.7821 16.9317ZM19.7923 34.8627C15.5826 40.318 18.5292 39.4817 19.6828 42.1875C20.2192 43.444 21.2152 49.5648 22.9599 52.4654H23.3977C28.0649 41.0272 31.4799 52.8463 32.2439 52.3559C31.4033 47.6406 28.4261 43.895 25.0352 40.5478C23.4218 38.9542 21.7143 38.9279 19.7923 34.8627ZM30.9305 39.2366C30.7488 39.346 30.5671 39.4555 30.3854 39.5649C30.5671 42.1612 28.3276 45.3639 31.0399 46.7802C31.0859 46.1344 31.5193 41.1148 32.4607 41.6424C32.2067 42.772 31.9506 43.9016 31.6967 45.0311C33.8464 46.2767 34.9935 49.4356 34.7549 46.9991C34.6279 45.6988 32.6971 38.7922 30.9327 39.2366H30.9305ZM19.1355 43.1726C5.33757 55.5695 1.30303 68.0496 3.2995 86.5805C5.10114 89.1811 8.56213 92.583 11.7101 93.2507C16.5568 94.2796 12.5354 91.5191 12.4741 90.5165C12.3734 88.8878 14.221 92.8632 15.6417 93.9053C16.7735 94.7349 21.1276 96.3505 22.4126 96.0922C24.1968 94.5248 25.9809 92.9574 27.765 91.39C28.7851 87.3817 29.8031 83.3712 30.8232 79.363C30.74 78.958 26.2852 75.7225 31.0421 76.7382C30.6634 73.842 32.8262 71.642 32.789 68.8662C34.1725 68.2839 35.5561 67.6994 36.9396 67.1171C33.3341 60.4994 33.4501 64.9915 31.9156 66.4604C31.6967 66.5326 31.4778 66.607 31.261 66.6793C35.4729 59.2779 31.758 64.8141 29.1858 67.0076C26.8916 68.6473 24.5996 70.2869 22.3054 71.9288C20.7949 74.293 23.8509 75.4007 25.0352 75.0986C25.8495 74.8906 28.1481 69.3347 28.4218 71.0531C28.4896 71.4866 25.0615 75.7947 26.1276 76.191C29.1113 77.3008 29.9541 71.9003 30.7138 72.2549C30.3613 74.7812 27.0251 79.028 25.2519 75.5342C23.2117 75.7137 20.8781 74.7396 21.4297 72.3644C21.699 71.1998 29.1048 66.5851 30.7138 65.0396C33.1678 62.6819 31.9506 60.7577 36.0661 64.4923C38.1064 69.0698 37.9181 65.9262 36.285 63.6167C34.0762 60.4972 31.7996 62.0121 31.0421 60.992C30.4992 59.7989 25.6087 50.9658 25.0352 50.8235C23.9866 50.563 23.7918 54.2626 22.9599 53.5577C22.0142 51.1519 21.0663 48.7461 20.1206 46.3424C19.882 45.6222 19.9061 43.1419 19.1377 43.1726H19.1355ZM71.3415 46.0162C69.0998 45.8805 67.9309 50.7907 68.7211 51.0468C69.0473 51.1519 73.8852 46.1717 71.3415 46.0162ZM64.5706 46.8897C63.1739 47.3122 65.2054 50.0639 65.1157 50.2784C61.3526 51.8152 64.9734 56.0993 65.1157 56.6203C65.8906 59.4355 62.7864 58.8641 60.6367 59.5734C56.2454 61.0204 51.8847 62.6097 47.3116 63.5094C40.8997 67.0755 33.9383 66.0094 35.5167 72.476C34.2601 70.6065 36.458 67.0448 33.9887 68.54C33.1305 69.0588 33.4589 70.6306 33.2247 71.2742C32.7868 72.2221 32.3512 73.17 31.9134 74.1179C30.7816 80.5889 37.6204 78.6471 40.7596 75.9764C51.4162 74.1004 56.6482 65.0987 65.2229 61.9814C65.2952 61.8348 65.3696 61.6903 65.4418 61.5436C72.2784 63.7218 67.9155 60.6417 67.736 59.4661C67.8455 58.6277 67.9549 57.7893 68.0644 56.9508C68.8678 56.3707 68.2154 58.6934 68.3928 59.4661C69.0845 60.3046 69.7763 61.143 70.468 61.9814C71.4728 62.1741 77.1164 59.1903 76.475 55.5301C70.2929 57.8681 72.0858 56.5327 71.1226 55.6396C71 55.5257 68.6554 55.3594 70.1397 53.3432C68.9313 53.295 68.3752 51.1256 68.0644 51.0468C67.215 50.8323 68.9138 54.0153 65.5535 50.7184C65.8008 49.8297 65.884 46.4935 64.5706 46.8919V46.8897ZM72.8695 47.5464C72.1142 47.7106 67.0092 53.8839 70.6848 52.577C71.8143 51.5197 72.9417 50.4623 74.0713 49.4072C74.3909 48.5184 73.8174 47.3428 72.8695 47.5486V47.5464ZM34.4265 48.4199C33.7873 48.8227 35.3985 51.0643 35.6283 51.5897C36.5018 53.7044 37.3752 55.8169 38.2487 57.9316C39.711 62.0887 39.3235 66.977 42.2898 65.2563C43.5923 64.5011 45.302 57.2902 43.9272 59.0239C43.3581 59.7442 42.3204 64.1377 41.7425 63.1789C41.3857 62.5856 46.1952 55.5082 42.0709 57.6032C41.4886 58.5511 40.9063 59.499 40.324 60.4469C39.6782 60.0528 41.4711 58.0257 41.3069 57.277C41.2193 56.8764 37.2767 51.165 36.0639 51.1541C35.7159 50.0333 35.289 49.2101 34.4265 48.4199ZM75.492 49.5144C74.2486 49.6436 70.1397 53.4154 70.1397 54.2166C70.1397 54.7245 71.0197 55.4119 71.7771 54.9828C72.0814 54.8099 77.02 50.4733 75.4899 49.5166L75.492 49.5144ZM75.9277 52.1392C74.1961 52.3296 68.3096 59.0809 75.4899 55.1996C78.8501 53.3848 77.1536 52.0035 75.9277 52.1392ZM32.8963 54.1072C32.9335 54.6545 32.9685 55.1996 33.0058 55.7468C32.9576 55.8979 30.0373 57.1895 33.1152 56.7319C33.194 59.8492 34.0697 57.01 34.2076 56.9508C34.2798 56.9202 35.44 57.5901 35.6283 56.8414C35.7597 56.3204 34.2426 56.7363 34.8643 54.545C33.6275 55.1076 33.3735 53.7591 32.8985 54.1072H32.8963ZM63.0404 55.1996C57.1429 56.7297 51.2454 58.2599 45.348 59.7923C44.7197 60.1645 42.9947 64.7266 44.0367 64.604C45.2013 64.0939 46.3659 63.5839 47.5305 63.0738C53.0646 61.5436 58.5987 60.0134 64.1306 58.481C65.617 57.9797 64.286 55.1317 63.0382 55.2017L63.0404 55.1996ZM42.0709 76.6288C41.1624 78.5705 43.3734 81.7863 43.8178 84.2819C45.4136 81.5784 43.2355 79.0631 42.0709 76.6288ZM39.4505 77.5044C34.884 79.028 38.6799 82.6795 37.7036 88.6558C39.3104 88.4412 40.3896 87.3751 41.7447 86.5783C41.6812 85.4224 39.9168 77.5723 39.4505 77.5022V77.5044ZM36.3923 78.8157C34.8446 78.8179 33.7501 79.4812 32.3512 80.0175C32.9335 83.6339 33.1196 87.2 33.1152 90.8427C40.1707 91.1229 36.0836 82.8831 36.9374 78.9252C36.7557 78.8879 36.574 78.8529 36.3923 78.8157ZM41.852 87.1256C40.0941 88.6032 38.1896 88.9206 37.4825 89.3125C37.0447 89.8226 36.609 90.3326 36.1712 90.8427C35.3569 91.2805 32.3096 91.2039 32.5679 92.0445C35.5079 94.2358 38.9492 94.6058 42.5065 94.9976C42.7867 93.9118 42.8393 87.3204 41.852 87.1256ZM5.15587 89.5314C5.70096 91.7555 6.24824 93.9775 6.79333 96.2016C5.96584 100.685 7.27055 104.971 8.75915 109.104C12.358 115.672 27.082 117.561 34.0981 117.414C33.3429 115.367 32.6292 113.213 32.8963 110.963C30.5737 111.188 20.0068 109.419 18.6977 108.995C13.8532 107.419 11.4233 98.2112 11.3795 93.5791C7.04507 92.2547 5.51926 89.3979 5.15368 89.5336L5.15587 89.5314ZM27.4367 92.3751C25.9087 93.7608 24.3785 95.1443 22.8505 96.53C20.3965 97.2612 15.4031 94.1132 14.9872 94.1242C13.503 94.1636 17.0187 98.5527 17.6075 99.1547C22.5812 104.218 27.1214 104.144 33.7719 103.748C35.2189 100.521 38.0539 98.0098 39.9978 95.3282C39.8621 94.956 33.9142 94.3321 32.6796 92.594C32.4826 94.1876 30.937 95.8689 29.4025 96.0922C25.7598 96.6263 28.7457 92.3181 27.4367 92.3751ZM29.6214 92.8107C27.9336 93.0427 26.7186 96.3549 29.8403 95.4354C31.9659 94.8094 32.0404 92.478 29.6214 92.8107ZM41.1974 97.6224C39.109 100.475 36.8104 103.237 35.845 106.698C37.4431 107.729 40.7399 108.712 42.7254 109.214C42.9246 109.264 46.2608 109.222 46.5476 110.199C45.8931 113.478 45.2363 116.76 44.5818 120.039C45.5056 122.71 43.4369 131.899 44.144 133.16C44.3979 133.123 44.654 133.088 44.908 133.051C45.3129 133.268 44.6518 134.102 46.2192 133.051C48.2201 134.089 52.2918 133.625 52.8807 130.536C54.4919 124.275 54.3146 117.605 56.3745 111.51C58.8023 96.6394 52.1933 100.166 47.0905 99.3737C45.1247 98.7914 43.1589 98.2069 41.193 97.6246L41.1974 97.6224ZM19.963 104.082C19.8645 104.325 19.7682 104.571 19.6697 104.814C17.52 104.42 19.2559 105.381 19.3041 105.473L19.523 106.569C19.6697 106.374 19.8164 106.18 19.9608 105.985C20.0769 105.994 20.6767 107.388 20.5453 105.691C22.6119 106.541 20.5607 105.481 20.9109 104.595C19.639 105.247 20.6132 103.894 19.9608 104.082H19.963ZM19.1355 116.21C19.442 119.632 22.1259 117.13 20.8825 116.648C20.3001 116.501 19.7178 116.357 19.1355 116.21ZM40.324 116.21C33.2115 120.133 29.3127 115.847 39.0127 120.146C39.2272 119.146 41.042 116.169 40.324 116.21ZM24.8163 119.708C25.5015 123.793 23.9385 124.586 23.1788 127.252C21.3071 133.819 19.6565 141.433 20.1206 148.246C21.9617 150.82 21.3903 149.454 21.977 149.666C22.1237 149.885 22.2682 150.104 22.4148 150.323C22.614 150.4 23.3255 149.502 23.9428 150.98C24.5251 150.908 25.1074 150.833 25.6897 150.761C26.7821 151.052 27.8745 151.343 28.9668 151.637C29.0041 149.778 29.0391 147.919 29.0763 146.061C29.6849 139.581 32.9598 133.058 34.1003 128.568C34.7527 125.995 35.2518 122.351 33.5552 120.367C30.6437 120.148 27.73 119.929 24.8185 119.711L24.8163 119.708ZM52.3378 132.83C52.1649 133.504 52.502 135.623 51.7927 134.47C51.2542 133.596 51.5979 131.545 51.0287 135.236C50.5208 135.244 50.5734 131.996 49.7174 135.017C49.4263 134.653 49.1351 134.288 48.844 133.924C47.4583 137.922 48.4434 131.656 46.6592 135.236C45.5253 130.86 46.7227 138.587 44.9123 133.924C44.6212 134.362 44.33 134.8 44.0389 135.236C43.8616 135.247 42.9093 132.243 43.2749 136.438C43.4938 137.458 43.7127 138.478 43.9294 139.498C46.7643 138.379 50.2844 137.096 53.2135 136.983C53.4061 136.886 52.8238 133.228 52.34 132.828L52.3378 132.83ZM51.9 137.639C50.372 138.003 48.8418 138.368 47.3138 138.732C43.2158 140.03 43.9557 140.496 44.9102 144.636C46.4053 144.511 53.6381 141.921 53.9753 140.809C54.2883 139.774 54.0256 137.469 51.9 137.639ZM20.2279 149.012C20.0812 150.47 19.9368 151.928 19.7901 153.386C22.7147 154.763 25.8474 155.892 29.0741 156.12C29.2865 154.025 28.6976 149.69 27.4367 153.605C26.6311 153.611 27.6337 151.074 26.6727 151.527C26.6267 154.163 26.5107 153.46 25.9087 151.418C25.2716 151.376 24.9236 155.321 24.5974 151.418C24.234 151.855 23.8684 152.293 23.505 152.729C22.984 147.359 22.7169 154.953 21.7581 150.323C20.3549 152.924 20.8759 150.065 20.2301 149.012H20.2279ZM19.7923 153.821C18.5007 156.963 26.5216 160.776 28.3101 160.163C29.096 159.894 29.0106 156.75 28.7479 156.665C25.97 156.481 22.0952 155.389 19.7923 153.821Z\",\n    fill: \"#A77C50\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_1_2469\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 0,\n    y: 1,\n    width: 86,\n    height: 180\n  }, _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.6244 39.456C12.4935 45.5023 6.01376 50.3884 4.71999 58.0437C7.29001 52.2776 13.3079 44.4668 18.3713 40.8767C16.9374 39.6595 17.6489 39.0597 16.6244 39.456C17.2067 38.3264 17.789 37.1968 18.3713 36.0672C19.1025 34.8654 20.8472 33.854 20.556 32.3501C20.4597 31.8488 17.3709 28.7512 17.9357 22.7289C11.7624 20.8638 17.7518 16.3652 20.3393 13.9813C20.0482 12.0483 20.5385 9.8088 21.4317 8.07721C21.366 5.66262 20.0328 -0.175738 22.4146 2.06372C22.9378 0.739311 23.7872 2.79051 24.3804 2.72046C24.7657 2.67449 25.0371 0.334325 31.5892 2.50155C37.4976 -2.41301 38.7038 7.90865 40.8732 11.5776C39.9319 16.5381 46.3788 18.0683 45.0237 20.9798C44.0277 23.1186 40.6762 22.1357 40.4375 22.51C40.2909 23.8213 40.1464 25.1348 39.9997 26.4461C41.5212 30.2091 43.371 37.4376 36.8321 33.9897C35.4245 37.0151 36.0418 38.611 32.3532 39.3465C35.0742 43.0789 34.7809 48.8122 36.2848 50.7167C37.1583 51.4457 38.0317 52.1747 38.9052 52.9037C40.3478 54.6769 40.674 58.2998 44.2575 56.7302C44.367 56.8397 44.4765 56.9492 44.5859 57.0586C43.8482 57.6409 45.0894 59.2543 45.3499 59.355C51.3568 57.8598 57.3638 56.3668 63.3707 54.8717C62.3265 49.8674 64.601 50.3424 64.682 50.06C64.3908 49.6222 64.0997 49.1844 63.8085 48.7487C63.2262 46.1021 65.2074 46.5443 65.3365 46.3429C64.9359 42.9542 64.5353 39.5632 64.1347 36.1745C58.1956 37.8141 53.3424 43.2913 50.8096 48.6393C49.4173 42.4091 56.6238 33.3637 62.6045 31.5817C63.7866 27.186 67.9591 26.5883 69.1565 30.925C78.7142 32.7989 83.458 34.9464 85.4304 45.0294C84.9291 45.7672 83.4033 42.6761 80.9514 40.765C78.1122 38.5519 72.1446 35.7016 68.4998 35.2988C67.9459 38.9875 68.6399 42.663 69.0449 46.3429C72.7707 44.1538 72.6635 46.9602 72.8671 47.1091C73.3399 47.2185 73.8128 47.328 74.2878 47.4375C74.4695 47.9847 74.6512 48.5298 74.8329 49.0771C75.3364 49.3945 76.7768 48.0285 76.0347 51.5924C79.6533 52.236 77.1906 54.8476 77.1271 55.0906C76.2974 58.256 76.663 60.6137 70.4656 62.4154C71.0851 69.8868 71.7025 77.3582 72.322 84.8297C73.9594 93.8291 74.846 103.017 75.8158 112.165V116.539C76.4703 121.132 77.1271 125.722 77.7816 130.315C78.145 134.908 78.5106 139.498 78.874 144.091C79.0207 144.31 79.1651 144.529 79.3118 144.748C76.0544 148.31 76.7046 145.03 75.5991 141.904C73.3946 126.948 71.871 111.942 70.794 96.8567C69.5046 90.158 68.8982 83.3323 68.3903 76.5198C66.9346 71.9533 66.9849 67.0344 66.2056 62.3059C57.1755 65.0795 53.2592 73.2099 42.3968 76.3009C43.8066 78.8337 46.1774 82.5027 43.9248 85.0486C43.7212 87.2881 45.2667 90.3047 43.2703 91.3905C42.7427 97.4149 45.652 93.3891 47.0925 98.9341C51.0832 98.9538 54.6186 98.3453 57.031 102.104C57.3703 106.546 57.2324 111.077 55.503 115.226C55.4767 120.788 53.6861 126.178 53.0994 131.626C52.9527 131.773 52.8082 131.917 52.6616 132.064C53.2439 134.398 53.8262 136.729 54.4085 139.063C54.7587 141.799 53.7474 148.386 56.4837 148.139C58.3116 147.972 59.3033 141.129 65.6583 142.454C67.8409 142.909 67.5366 146.245 68.062 146.39C68.4845 146.506 69.0405 145.361 69.0449 147.156C69.0514 149.373 67.4162 148.592 67.298 149.124C67.2542 149.319 69.1675 151.488 66.2056 151.749C65.6736 154.297 65.0497 152.379 64.1303 152.734C63.3291 153.535 62.5279 154.338 61.7267 155.14C59.5332 156.473 55.26 156.446 56.1576 160.061C49.2772 165.481 51.0569 162.622 49.9317 161.919C49.7872 161.83 48.5001 162 46.8735 160.608C42.5982 156.946 46.6809 152.591 44.3626 148.034C45.0522 142.916 41.1643 133.616 43.9248 133.601C43.2681 128.706 44.9099 123.894 44.3626 118.949C44.5618 116.887 47.0421 109.523 45.3455 110.092C44.9997 110.208 44.6582 113.286 41.0855 115.887C39.7327 118.908 38.9577 124.08 35.1881 124.415C34.6583 130.573 30.0699 139.378 29.5095 145.19C29.4373 150.002 29.3628 154.811 29.2906 159.623C29.4373 159.914 29.5817 160.205 29.7284 160.499C27.6466 163.401 24.4767 167.309 27.872 170.229C28.8834 167.051 31.8913 165.698 34.8619 167.385C37.9857 169.161 35.6346 172.753 35.8448 173.399C35.9564 173.745 36.9459 173.745 36.7182 174.491C36.576 174.958 29.3782 178.771 28.7455 180.067C28.4543 179.92 28.1632 179.776 27.872 179.629C21.9571 179.802 24.7219 179.012 22.5197 175.803C21.3901 174.892 20.2627 173.981 19.1331 173.068C18.0845 172.926 17.6839 174.791 17.3862 174.818C15.6743 173.688 13.9646 172.558 12.2527 171.429C13.2335 167.445 9.70898 161.882 16.8389 161.808C17.7124 159.693 18.5858 157.58 19.4593 155.466C19.3279 147.062 19.7942 138.529 21.8629 130.317C22.5175 128.277 23.1742 126.235 23.8288 124.194C16.9024 122.419 20.5845 117.774 18.4764 115.994C17.419 115.101 10.6481 114.429 8.09998 109.105C4.74188 102.086 7.00105 93.3913 4.71342 94.5625C3.60136 95.1316 3.51379 97.8483 3.07597 91.6094C5.44897 91.6137 2.67098 87.9382 2.20251 86.1432C1.76469 82.9361 1.32906 79.729 0.891235 76.522C1.32906 72.2948 1.76469 68.0677 2.20251 63.8383C3.95818 58.3677 5.56499 52.8073 8.97344 48.0942C11.5216 45.2155 14.0697 42.3368 16.6178 39.456H16.6244ZM21.5389 2.06153C20.567 2.37239 22.443 4.46956 22.3029 4.79574L21.32 4.46737C20.3021 5.03654 22.6926 6.62145 22.7408 6.76375C22.9487 7.38983 20.5867 7.04614 23.1786 8.07503C23.0648 9.12799 25.6764 12.0067 26.3462 10.5903C26.5476 11.5798 27.0161 11.7287 26.8913 10.9187C25.58 8.87843 24.271 6.83599 22.9597 4.79574C22.8831 4.65344 22.3905 1.79008 21.5389 2.06153ZM22.848 2.06153C23.0319 5.51814 25.2429 6.79002 25.7968 7.6372C26.3134 8.42747 27.3904 12.3635 28.7455 11.4638C28.4171 9.67746 28.091 7.89114 27.7626 6.10701C26.841 5.51376 26.9154 7.08555 26.5608 7.09211C25.9369 7.10306 26.5301 2.58911 25.4684 6.21647C24.8664 6.19458 25.2911 4.13025 25.14 3.70118C24.5336 1.97397 24.6234 5.11535 24.376 5.12191C23.7456 4.46299 24.387 2.67011 22.848 2.06153ZM26.7819 16.9322C25.5757 17.2146 27.2941 18.0508 27.327 18.134C27.351 18.1953 26.9242 19.3358 27.4364 19.3358C27.6269 19.3358 27.6838 17.6611 28.5288 19.9926C29.1658 18.342 30.5165 20.4063 30.6041 20.7587C30.9915 22.3174 29.6211 24.7801 29.4022 24.8042C29.2928 24.8152 28.9228 23.933 28.091 24.1475C25.9763 28.3966 27.9924 22.8537 26.1251 22.3984C25.6873 22.4706 25.2517 22.5451 24.8139 22.6173C22.4452 24.0577 26.0266 28.7884 24.4855 27.5384C24.3498 27.429 23.8331 25.126 22.848 25.242C22.338 25.971 21.8279 26.7 21.32 27.429C21.1164 27.429 20.208 24.4977 20.3371 28.1952C17.5766 27.105 21.4361 32.5734 21.4295 33.0068C21.4229 33.495 19.2666 33.6898 21.4295 36.9429C24.0148 39.3115 26.598 41.6801 29.1833 44.0487C29.4373 42.4813 29.6934 40.9139 29.9473 39.3465C29.1461 38.3986 28.3449 37.4507 27.5437 36.5028C29.0717 36.5225 29.0345 39.3246 32.6771 38.7992C34.3847 38.554 35.0567 37.558 35.6259 36.065C35.6084 35.4324 32.6399 34.9092 31.147 31.5817C29.8838 34.0379 30.6106 30.5156 31.2564 30.161C32.4166 29.5218 30.5975 31.1417 33.2222 33.6592C36.5978 36.8991 36.2082 33.182 36.8255 33.1119C41.843 37.0195 41.8495 31.3146 39.3364 26.4417C40.1267 23.3069 39.6517 21.5797 39.1175 18.5696C38.66 17.7597 30.6632 17.9173 29.3979 17.8034C28.5244 17.5123 27.6509 17.2211 26.7775 16.9278L26.7819 16.9322ZM19.792 34.8632C15.5824 40.3185 18.5289 39.4822 19.6826 42.188C20.2189 43.4445 21.215 49.5653 22.9597 52.4658H23.3975C28.0647 41.0277 31.4797 52.8468 32.2437 52.3564C31.4031 47.641 28.4259 43.8955 25.035 40.5483C23.4216 38.9546 21.7141 38.9284 19.792 34.8632ZM30.9302 39.237C30.7485 39.3465 30.5668 39.456 30.3851 39.5654C30.5668 42.1617 28.3274 45.3644 31.0397 46.7807C31.0857 46.1349 31.5191 41.1153 32.4604 41.6429C32.2065 42.7725 31.9504 43.902 31.6964 45.0316C33.8461 46.2772 34.9932 49.4361 34.7546 46.9996C34.6276 45.6993 32.6968 38.7927 30.9324 39.237H30.9302ZM19.1353 43.1731C5.33732 55.57 1.30279 68.0501 3.29926 86.581C5.1009 89.1816 8.56188 92.5835 11.7098 93.2512C16.5565 94.2801 12.5351 91.5196 12.4738 90.517C12.3731 88.8883 14.2207 92.8637 15.6415 93.9057C16.7732 94.7354 21.1274 96.351 22.4124 96.0927C24.1965 94.5253 25.9807 92.9579 27.7648 91.3905C28.7849 87.3822 29.8028 83.3717 30.823 79.3635C30.7398 78.9585 26.2849 75.723 31.0419 76.7387C30.6632 73.8425 32.826 71.6425 32.7888 68.8667C34.1723 68.2844 35.5558 67.6999 36.9393 67.1176C33.3339 60.4999 33.4499 64.9919 31.9153 66.4608C31.6964 66.5331 31.4775 66.6075 31.2608 66.6798C35.4726 59.2784 31.7577 64.8146 29.1855 67.0081C26.8913 68.6478 24.5993 70.2874 22.3051 71.9292C20.7946 74.2935 23.8506 75.4012 25.035 75.0991C25.8493 74.8911 28.1479 69.3351 28.4215 71.0536C28.4894 71.487 25.0612 75.7952 26.1273 76.1914C29.1111 77.3013 29.9539 71.9008 30.7135 72.2554C30.3611 74.7817 27.0249 79.0285 25.2517 75.5347C23.2114 75.7142 20.8778 74.7401 21.4295 72.3649C21.6987 71.2003 29.1045 66.5856 30.7135 65.0401C33.1675 62.6824 31.9504 60.7582 36.0659 64.4928C38.1061 69.0703 37.9179 65.9267 36.2848 63.6172C34.076 60.4977 31.7993 62.0126 31.0419 60.9924C30.499 59.7994 25.6085 50.9663 25.035 50.824C23.9864 50.5635 23.7915 54.2631 22.9597 53.5582C22.014 51.1524 21.0661 48.7465 20.1204 46.3429C19.8818 45.6227 19.9059 43.1424 19.1375 43.1731H19.1353ZM71.3412 46.0167C69.0996 45.881 67.9306 50.7912 68.7209 51.0473C69.0471 51.1524 73.885 46.1721 71.3412 46.0167ZM64.5703 46.8902C63.1737 47.3127 65.2052 50.0644 65.1154 50.2789C61.3523 51.8157 64.9731 56.0998 65.1154 56.6208C65.8904 59.436 62.7862 58.8646 60.6365 59.5739C56.2451 61.0209 51.8844 62.6102 47.3114 63.5099C40.8995 67.076 33.9381 66.0099 35.5164 72.4765C34.2599 70.607 36.4577 67.0453 33.9884 68.5405C33.1303 69.0593 33.4587 70.6311 33.2244 71.2747C32.7866 72.2226 32.351 73.1705 31.9131 74.1184C30.7814 80.5894 37.6202 78.6476 40.7593 75.9769C51.4159 74.1008 56.6479 65.0992 65.2227 61.9819C65.2949 61.8352 65.3693 61.6908 65.4416 61.5441C72.2782 63.7223 67.9153 60.6422 67.7358 59.4666C67.8452 58.6282 67.9547 57.7898 68.0641 56.9513C68.8675 56.3712 68.2152 58.6939 68.3925 59.4666C69.0843 60.3051 69.776 61.1435 70.4678 61.9819C71.4726 62.1746 77.1161 59.1908 76.4747 55.5306C70.2927 57.8686 72.0855 56.5332 71.1223 55.6401C70.9997 55.5262 68.6552 55.3599 70.1394 53.3437C68.931 53.2955 68.375 51.1261 68.0641 51.0473C67.2148 50.8328 68.9135 54.0157 65.5532 50.7189C65.8006 49.8302 65.8838 46.4939 64.5703 46.8924V46.8902ZM72.8692 47.5469C72.114 47.7111 67.009 53.8844 70.6845 52.5775C71.8141 51.5202 72.9415 50.4628 74.0711 49.4077C74.3907 48.5189 73.8171 47.3433 72.8692 47.5491V47.5469ZM34.4262 48.4204C33.787 48.8232 35.3982 51.0648 35.6281 51.5902C36.5015 53.7049 37.375 55.8174 38.2484 57.9321C39.7108 62.0892 39.3233 66.9775 42.2895 65.2568C43.5921 64.5016 45.3018 57.2906 43.927 59.0244C43.3578 59.7446 42.3202 64.1382 41.7423 63.1794C41.3854 62.5861 46.1949 55.5087 42.0706 57.6037C41.4883 58.5516 40.906 59.4995 40.3237 60.4473C39.6779 60.0533 41.4708 58.0262 41.3066 57.2775C41.2191 56.8769 37.2765 51.1655 36.0637 51.1546C35.7156 50.0337 35.2888 49.2106 34.4262 48.4204ZM75.4918 49.5149C74.2484 49.6441 70.1394 53.4159 70.1394 54.2171C70.1394 54.725 71.0194 55.4124 71.7769 54.9833C72.0812 54.8104 77.0198 50.4738 75.4896 49.5171L75.4918 49.5149ZM75.9274 52.1397C74.1958 52.3301 68.3093 59.0813 75.4896 55.2C78.8499 53.3853 77.1533 52.0039 75.9274 52.1397ZM32.8961 54.1077C32.9333 54.655 32.9683 55.2 33.0055 55.7473C32.9574 55.8984 30.0371 57.1899 33.115 56.7324C33.1938 59.8497 34.0694 57.0104 34.2073 56.9513C34.2796 56.9207 35.4398 57.5906 35.6281 56.8419C35.7594 56.3209 34.2424 56.7368 34.8641 54.5455C33.6272 55.1081 33.3733 53.7596 32.8982 54.1077H32.8961ZM63.0401 55.2C57.1427 56.7302 51.2452 58.2604 45.3477 59.7928C44.7195 60.165 42.9944 64.7271 44.0364 64.6045C45.2011 64.0944 46.3657 63.5843 47.5303 63.0743C53.0643 61.5441 58.5984 60.0139 64.1303 58.4815C65.6167 57.9802 64.2857 55.1322 63.0379 55.2022L63.0401 55.2ZM42.0706 76.6293C41.1621 78.571 43.3731 81.7868 43.8175 84.2824C45.4134 81.5789 43.2352 79.0636 42.0706 76.6293ZM39.4503 77.5049C34.8838 79.0285 38.6797 82.68 37.7033 88.6563C39.3102 88.4417 40.3894 87.3756 41.7444 86.5788C41.681 85.4229 39.9165 77.5728 39.4503 77.5027V77.5049ZM36.3921 78.8162C34.8444 78.8184 33.7498 79.4817 32.351 80.018C32.9333 83.6344 33.1193 87.2005 33.115 90.8432C40.1705 91.1234 36.0834 82.8836 36.9372 78.9256C36.7555 78.8884 36.5738 78.8534 36.3921 78.8162ZM41.8517 87.1261C40.0939 88.6037 38.1893 88.9211 37.4822 89.313C37.0444 89.8231 36.6088 90.3331 36.171 90.8432C35.3566 91.281 32.3094 91.2044 32.5677 92.045C35.5077 94.2363 38.949 94.6063 42.5063 94.9981C42.7865 93.9123 42.839 87.3209 41.8517 87.1261ZM5.15563 89.5319C5.70072 91.756 6.24799 93.978 6.79308 96.2021C5.9656 100.685 7.27031 104.972 8.7589 109.105C12.3578 115.672 27.0818 117.561 34.0979 117.415C33.3426 115.368 32.629 113.214 32.8961 110.963C30.5734 111.189 20.0066 109.42 18.6975 108.995C13.853 107.419 11.4231 98.2117 11.3793 93.5796C7.04483 92.2552 5.51902 89.3984 5.15344 89.5341L5.15563 89.5319ZM27.4364 92.3756C25.9084 93.7613 24.3782 95.1448 22.8502 96.5305C20.3962 97.2617 15.4029 94.1137 14.9869 94.1247C13.5027 94.1641 17.0184 98.5532 17.6073 99.1552C22.581 104.219 27.1212 104.144 33.7717 103.748C35.2187 100.521 38.0536 98.0103 39.9975 95.3287C39.8618 94.9565 33.914 94.3326 32.6793 92.5945C32.4823 94.1881 30.9368 95.8694 29.4022 96.0927C25.7595 96.6268 28.7455 92.3186 27.4364 92.3756ZM29.6211 92.8112C27.9333 93.0432 26.7184 96.3554 29.8401 95.4359C31.9657 94.8098 32.0401 92.4784 29.6211 92.8112ZM41.1972 97.6229C39.1088 100.475 36.8102 103.238 35.8448 106.699C37.4428 107.73 40.7396 108.713 42.7252 109.214C42.9244 109.265 46.2606 109.223 46.5474 110.199C45.8928 113.479 45.2361 116.76 44.5815 120.039C45.5053 122.71 43.4366 131.9 44.1437 133.161C44.3977 133.124 44.6538 133.089 44.9077 133.051C45.3127 133.268 44.6516 134.102 46.219 133.051C48.2198 134.089 52.2916 133.625 52.8805 130.536C54.4917 124.275 54.3143 117.605 56.3743 111.511C58.802 96.6399 52.1931 100.167 47.0903 99.3741C45.1244 98.7918 43.1586 98.2074 41.1928 97.625L41.1972 97.6229ZM19.9628 104.083C19.8643 104.326 19.768 104.571 19.6694 104.814C17.5197 104.42 19.2557 105.381 19.3039 105.473L19.5228 106.57C19.6694 106.375 19.8161 106.18 19.9606 105.985C20.0766 105.994 20.6764 107.388 20.5451 105.692C22.6116 106.541 20.5604 105.482 20.9107 104.595C19.6388 105.248 20.6129 103.895 19.9606 104.083H19.9628ZM19.1353 116.211C19.4418 119.632 22.1256 117.13 20.8822 116.648C20.2999 116.502 19.7176 116.357 19.1353 116.211ZM40.3237 116.211C33.2113 120.133 29.3125 115.847 39.0124 120.147C39.227 119.146 41.0417 116.169 40.3237 116.211ZM24.816 119.709C25.5012 123.794 23.9382 124.586 23.1786 127.252C21.3069 133.82 19.6563 141.434 20.1204 148.246C21.9614 150.82 21.3901 149.454 21.9768 149.667C22.1234 149.886 22.2679 150.105 22.4146 150.324C22.6138 150.4 23.3253 149.503 23.9426 150.98C24.5249 150.908 25.1072 150.834 25.6895 150.761C26.7819 151.053 27.8742 151.344 28.9666 151.637C29.0038 149.778 29.0388 147.92 29.0761 146.061C29.6846 139.582 32.9595 133.058 34.1001 128.568C34.7524 125.996 35.2515 122.351 33.555 120.368C30.6435 120.149 27.7297 119.93 24.8182 119.711L24.816 119.709ZM52.3376 132.83C52.1646 133.505 52.5017 135.624 51.7925 134.47C51.254 133.597 51.5976 131.545 51.0285 135.236C50.5206 135.245 50.5731 131.996 49.7172 135.017C49.426 134.654 49.1349 134.288 48.8437 133.925C47.458 137.922 48.4431 131.657 46.659 135.236C45.525 130.86 46.7225 138.588 44.9121 133.925C44.6209 134.363 44.3298 134.801 44.0386 135.236C43.8613 135.247 42.9091 132.244 43.2746 136.438C43.4936 137.458 43.7125 138.478 43.9292 139.498C46.7641 138.38 50.2842 137.097 53.2132 136.983C53.4058 136.887 52.8235 133.229 52.3398 132.828L52.3376 132.83ZM51.8997 137.64C50.3717 138.003 48.8415 138.369 47.3135 138.732C43.2155 140.03 43.9555 140.497 44.9099 144.636C46.4051 144.511 53.6379 141.922 53.975 140.81C54.2881 139.774 54.0254 137.469 51.8997 137.64ZM20.2277 149.012C20.081 150.47 19.9365 151.928 19.7898 153.386C22.7145 154.763 25.8471 155.893 29.0739 156.12C29.2862 154.025 28.6973 149.691 27.4364 153.605C26.6308 153.612 27.6334 151.074 26.6724 151.528C26.6264 154.163 26.5104 153.461 25.9084 151.418C25.2714 151.377 24.9233 155.321 24.5971 151.418C24.2337 151.856 23.8682 152.294 23.5048 152.729C22.9838 147.359 22.7167 154.954 21.7579 150.324C20.3546 152.924 20.8756 150.065 20.2299 149.012H20.2277ZM19.792 153.822C18.5005 156.963 26.5214 160.777 28.3099 160.164C29.0958 159.894 29.0104 156.751 28.7477 156.665C25.9697 156.482 22.095 155.389 19.792 153.822Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_1_2469)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.3726 151.635H4.72034V188.208H46.3726V151.635Z\",\n    fill: \"#826E59\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80.6472 134.465H40.9893V169.049H80.6472V134.465Z\",\n    fill: \"#826E59\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.2757 157.711L19.0885 149.757L16.8331 154.346L33.0204 162.301L35.2757 157.711Z\",\n    fill: \"#450000\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.254 132.59L40.1613 139.871L40.9979 142.409L63.0906 135.128L62.254 132.59Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.7208 95.078L11.8357 90.0874L7.59881 111.214L32.4839 116.205L36.7208 95.078Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.0985 47.4132L16.8298 36.9458L-15.4574 74.7894L-3.18871 85.2568L29.0985 47.4132Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.52044 74.6592H-5.10022V95.5959H8.52044V74.6592Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.3239 46.8555H24.9213V60.4455H40.3239V46.8555Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.8543 58.043H28.748V67.3314H41.8543V58.043Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.6173 75.4599L35.9806 78.6357L40.8954 93.5493L50.5322 90.3734L45.6173 75.4599Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.2982 80.3183L29.6079 78.9766L26.3369 95.2869L33.0272 96.6286L36.2982 80.3183Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.9979 99.7856H33.2183V103.472H39.9979V99.7856Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.1243 94.6636H37.5504V101.583H49.1243V94.6636Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.4352 102.197L34.9553 99.6104L27.5649 112.411L32.0447 114.997L39.4352 102.197Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.0639 105.152H30.1664V117.98H36.0639V105.152Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.6437 116.209H14.6239V123.944H40.6437V116.209Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.3481 103.281H32.3513V111.608H45.3481V103.281Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.1175 108.523H32.4193V117.094H43.1175V108.523Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.3477 108.945H40.3237V116.209H45.3477V108.945Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.1564 98.5389L46.9397 96.9956L42.1004 135.303L54.317 136.846L59.1564 98.5389Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.4613 126.293L19.7706 124.185L16.2801 151.815L32.9708 153.923L36.4613 126.293Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.8291 54.2642H41.7445V78.1999H65.8291V54.2642Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.9978 67.1167H33.5071V91.0612H39.9978V67.1167Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.3368 58.043H11.5459V78.7148H29.3368V58.043Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.8376 67.5589L28.2059 63.8877L23.7095 76.9093L34.3412 80.5805L38.8376 67.5589Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.9063 62.0942H29.335V67.6655H34.9063V62.0942Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.8542 64.147H33.6713V67.3299H36.8542V64.147Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.5984 81.1177H0.332886V93.9612H17.5984V81.1177Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.46377 91.0605H-0.673584V98.1401H8.46377V91.0605Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.9769 96.9307H3.78125V116.21H10.9769V96.9307Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.1377 108.925H8.46362V116.21H19.1377V108.925Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.125 22.3496H20.6179V46.8567H45.125V22.3496Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.1243 13.4353L14.6239 13.0457L15.5784 11.2134L49.1243 11.6512V13.4353Z\",\n    fill: \"#731D00\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.868 23.9837C18.2489 21.8537 18.6889 19.5814 20.7182 18.0665C23.1219 16.2692 26.0772 16.788 26.782 16.9325C29.4112 18.2679 30.2759 19.8659 30.6042 20.7591C32.87 26.893 23.4086 36.1902 19.7922 34.8635C17.2112 33.9179 17.2528 27.4381 17.868 23.9859V23.9837Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.4901 9.66962C17.1176 7.25941 18.9236 3.84002 19.6898 2.38864C21.0864 -0.258001 23.0916 -4.06049 26.8854 -4.80698C32.1152 -5.83586 37.0735 -0.330241 38.9627 3.8444C40.6396 7.55056 40.3747 11.2567 40.1623 11.2961C39.9828 11.3312 39.3918 8.8509 37.6777 5.04184C36.6882 2.83959 36.1869 2.11719 35.3638 1.87201C33.803 1.40791 32.1283 2.97532 31.7671 3.32777C30.8477 2.67979 29.3635 1.88733 27.5706 1.95738C26.9204 1.98365 25.8871 2.02305 25.4931 2.71262C25.1056 3.39344 25.5719 4.3063 25.6857 4.5274C26.0995 5.33518 26.8 5.69639 27.0561 5.81241C27.3517 5.75768 27.8136 5.72266 28.1704 5.98316C28.652 6.3378 28.6651 7.03831 28.6848 7.52429C28.7199 8.40651 28.8227 9.64773 29.1139 11.2939C28.5885 11.4866 27.5137 11.7974 26.2024 11.5501C25.3836 11.3968 24.3175 11.1976 23.7177 10.3504C23.2055 9.62803 23.3149 8.82901 22.6035 8.46561C22.2751 8.29705 22.054 8.3671 21.8438 8.13068C21.4279 7.66221 21.7213 6.74935 21.7453 6.75154C21.776 6.75592 21.7037 8.15914 21.3163 9.49231C21.0667 10.3526 20.8675 11.04 20.4012 11.1648C19.7554 11.3377 18.8864 10.357 18.4901 9.66306V9.66962Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.403 172.984C17.4218 171.684 15.3838 170.487 13.2997 169.361C13.21 169.3 13.1224 169.237 13.0327 169.175C12.8904 169.077 12.7481 169.02 12.6123 168.996C12.4701 168.921 12.3299 168.845 12.1877 168.77C10.9399 168.118 9.83217 170.007 11.0822 170.659C11.4543 170.854 11.8243 171.051 12.192 171.251C14.1644 172.63 16.0033 174.164 17.7217 175.85C18.5864 176.697 19.8474 175.677 19.5518 174.747C19.994 174.289 20.0969 173.44 19.4008 172.984H19.403Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.4955 172.707C34.9369 173.988 33.4089 175.5 31.6773 176.547C29.9939 177.565 28.4834 178.567 26.997 179.874C25.9374 180.807 27.4895 182.35 28.5447 181.422C29.3743 180.693 30.204 179.953 31.1431 179.362C31.8765 178.9 32.6711 178.548 33.3804 178.044C35.0069 176.888 36.5043 175.518 38.0432 174.253C39.1334 173.357 37.577 171.816 36.4955 172.705V172.707Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.8196 144.881C68.4278 144.925 68.0535 145.153 67.8783 145.612C66.7312 148.631 64.9974 151.437 63.4585 154.27C62.7864 155.509 64.6757 156.615 65.3477 155.376C65.4068 155.268 65.4637 155.161 65.5228 155.056C65.7002 155.012 65.8775 154.907 66.0351 154.728C67.1187 153.489 68.0688 152.145 68.8087 150.669C69.1568 149.977 69.4632 149.259 69.7281 148.53C69.9952 147.793 70.1068 146.919 70.5053 146.247C71.1642 145.133 69.6318 144.117 68.8196 144.885V144.881Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.9552 157.805C54.3655 159.112 52.1545 161.047 49.5757 162.362C49.3808 162.435 49.1838 162.505 48.9868 162.57C48.7285 162.656 48.5424 162.807 48.4198 162.989C48.1615 163.26 48.1418 163.63 48.2753 163.96C48.3979 164.409 48.7613 164.777 49.2801 164.74C49.4662 164.76 49.6654 164.731 49.869 164.641C50.0748 164.552 50.2762 164.455 50.4754 164.357C51.559 163.945 52.6142 163.457 53.6146 162.87C54.8755 162.13 56.016 160.929 57.4171 160.473C57.8593 160.329 58.0891 160 58.1548 159.644C59.2559 158.963 58.1767 157.192 56.9552 157.807V157.805Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.3007 107.956C42.9416 107.921 42.5936 107.961 42.2499 108.022C41.7617 107.845 41.175 107.847 40.6584 107.829C40.1615 107.814 39.5157 107.711 38.8984 107.698C38.6006 107.545 38.2963 107.42 37.9592 107.422C37.8804 107.422 37.8016 107.431 37.725 107.446C37.6506 106.378 35.9124 106.032 35.5731 107.251C35.1243 108.869 34.912 110.557 35.0302 112.236C35.1309 113.641 35.2535 115.441 37.0639 115.388C39.7828 115.307 42.39 113.059 43.6312 110.795C43.756 110.568 43.7866 110.327 43.7472 110.099C44.6798 109.777 44.5244 108.072 43.3007 107.956Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.0001 119.966C34.2098 119.705 33.1809 119.749 32.3512 119.67C31.2085 119.559 30.0658 119.458 28.9209 119.386C27.7979 119.316 26.6705 119.333 25.5497 119.259C24.7857 119.208 23.9779 118.81 23.2161 118.97C22.4849 119.123 22.0077 119.81 22.15 120.544C22.3163 121.404 23.2007 121.789 23.91 122.124C24.6521 122.474 25.3286 122.07 25.4862 121.439C25.6394 121.448 25.7927 121.454 25.9459 121.459C26.8675 121.487 27.7869 121.507 28.7064 121.562C29.6367 121.619 30.5649 121.693 31.4931 121.778C31.9222 121.818 32.349 121.859 32.7781 121.903C32.8219 121.908 32.8722 121.91 32.9248 121.912C32.835 122.744 33.6516 123.622 34.4988 123.009C35.0745 122.591 35.7947 122.464 35.9873 121.649C36.1625 120.901 35.7115 120.202 35.0022 119.968L35.0001 119.966Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.8352 78.0432C33.4696 77.8966 33.0997 77.7805 32.7253 77.6842C31.8803 77.3777 31.0682 76.999 30.2801 76.5415C29.0586 75.8344 27.9553 77.7236 29.1746 78.4307C29.4526 78.5927 29.7372 78.7437 30.0218 78.8904C30.1706 79.2472 30.4881 79.5384 30.9719 79.5822C31.3309 79.6128 31.6833 79.6763 32.0292 79.7595C32.432 79.904 32.8392 80.0375 33.2529 80.1535C34.6408 80.5432 35.1137 78.5511 33.8352 78.0432Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.373 94.198C7.23728 93.9726 7.12782 93.7537 7.03807 93.5304C7.11688 93.0028 7.02275 92.4511 6.79727 91.952C6.7907 91.8404 6.78194 91.7309 6.76881 91.6302C6.76224 91.5842 6.75567 91.5383 6.74473 91.4945C7.12125 91.1618 7.33579 90.5729 7.10812 90.0584C6.40323 88.467 5.55166 86.9696 4.54248 85.5532C4.47462 85.4569 4.38705 85.3737 4.29073 85.3037C4.29073 85.1964 4.27541 85.0804 4.24038 84.9578C4.00177 84.1435 3.73908 83.34 3.45449 82.541C3.42603 81.3698 3.32314 80.2074 3.15896 79.0428C3.553 76.3874 3.99301 73.7386 4.48994 71.1007C4.78328 69.5465 5.09195 67.9966 5.42031 66.4489C5.69833 65.1398 5.80779 63.3775 6.83886 62.4121C7.86993 61.4467 6.31785 59.9012 5.29116 60.8644C4.28416 61.8101 3.91858 63.082 3.62962 64.3911C3.24215 66.1446 2.88094 67.9068 2.54163 69.6712C1.86301 73.2001 1.27851 76.7486 0.779395 80.3081C0.713722 80.7788 0.91731 81.1597 1.2216 81.4005C1.22816 81.5121 1.23692 81.6238 1.2413 81.7354C1.16249 81.8755 1.10338 82.0353 1.0793 82.2214C0.982983 82.9526 1.06179 83.6312 1.30041 84.3273C1.35951 84.5025 1.45364 84.6426 1.5631 84.7564C1.61345 84.9556 1.66599 85.157 1.71852 85.3562C1.63972 85.5532 1.62439 85.7853 1.71196 86.0436C1.92649 86.6784 2.14102 87.3111 2.35556 87.9459C1.65723 88.1298 1.12528 89.0909 1.76231 89.8176C1.93087 90.0103 2.10381 90.1942 2.28113 90.3715C2.13227 90.6167 2.025 90.8903 1.96808 91.1749C1.83893 91.8338 1.91117 92.5475 2.14102 93.2042C2.13446 93.7953 2.28769 94.3425 2.75179 94.6621C2.65547 94.9314 2.54163 95.1262 2.43655 94.9927C1.55872 93.8916 0.0197732 95.448 0.888851 96.5404C1.97027 97.8976 3.94923 97.2015 4.64756 95.8443C4.71542 95.7107 4.77891 95.5662 4.83582 95.4218C5.0613 95.4261 5.2824 95.3955 5.49693 95.3364C6.24123 96.49 8.09541 95.3999 7.36644 94.2024L7.373 94.198Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.8091 103.237C28.9869 103.662 24.9042 103.487 21.4739 101.567C18.5492 99.9295 16.2353 96.9961 16.0318 93.5702C15.9486 92.1691 13.7573 92.1604 13.8426 93.5702C14.0813 97.5587 16.4696 101.02 19.8058 103.123C23.6411 105.54 28.4068 105.917 32.8091 105.429C34.1948 105.275 34.2101 103.084 32.8091 103.239V103.237Z\",\n    fill: \"#AFA730\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.572 109.569C26.6575 109.352 21.2022 109.126 17.2114 105.858C15.4645 104.429 14.313 102.603 13.8293 100.398C13.2951 97.9576 13.2448 95.4992 12.2071 93.1853C11.6314 91.9025 9.74437 93.0146 10.3179 94.2908C11.4387 96.7886 11.1958 99.641 12.0517 102.218C12.7982 104.468 14.2736 106.348 16.141 107.785C20.5454 111.173 26.2306 111.526 31.5742 111.76C32.9818 111.821 32.9796 109.632 31.5742 109.571L31.572 109.569Z\",\n    fill: \"#AFA730\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M82.1422 143.494C82.0437 143.49 81.9474 143.494 81.8511 143.494C81.7963 143.391 81.7197 143.293 81.6125 143.207C81.492 143.111 81.3695 143.024 81.2447 142.94C82.2188 142.605 82.3721 141.274 81.2622 140.859C81.1571 140.819 81.0498 140.784 80.9426 140.747C80.9251 140.517 80.8353 140.294 80.6624 140.114C80.7565 140.075 80.8506 140.038 80.947 139.998C81.8401 139.615 81.5271 138.216 80.6865 137.997C80.6098 137.978 80.5332 137.96 80.4566 137.94C80.3318 137.551 80.0013 137.238 79.4562 137.238C79.2657 137.238 79.0775 137.238 78.887 137.238C78.841 137.095 78.7688 136.962 78.6659 136.852C79.0337 136.524 79.0599 136.003 78.8345 135.587H78.841C79.5656 135.482 79.7867 134.587 79.5087 133.993C80.1326 133.488 79.813 132.255 78.9483 132.069C78.9242 131.949 78.8826 131.831 78.8257 131.719C79.1957 131.393 79.2854 130.872 79.0906 130.454C79.373 130.005 79.1782 129.313 78.7141 128.948C79.0381 128.873 79.3599 128.801 79.6838 128.726C80.9667 128.435 80.5485 126.688 79.3927 126.577L78.8301 126.522C78.9111 126.211 78.8804 125.878 78.7163 125.627C79.2022 125.29 79.4452 124.611 79.2176 124.142C79.3883 123.543 79.0337 122.763 78.2106 122.656C78.1602 122.65 78.1077 122.645 78.0573 122.639C78.1734 122.293 78.1471 121.894 77.9544 121.605C78.4601 121.038 78.4733 120.071 77.5035 119.863L76.444 119.637C76.7723 119.607 77.1007 119.58 77.4312 119.558C78.6659 119.482 78.8257 117.833 77.8603 117.45C78.0486 117.122 78.1033 116.735 77.9698 116.43C78.4142 116.343 78.8564 116.255 79.3007 116.165C80.3406 115.96 80.3493 114.254 79.3007 114.055C78.8016 113.961 78.3025 113.882 77.8012 113.812C77.8406 113.63 77.8384 113.449 77.7903 113.282C78.1646 113.208 78.3791 112.987 78.4623 112.711C79.57 112.409 79.605 110.861 78.4667 110.601C79.6729 110.601 80.8791 110.609 82.0831 110.631C83.5214 110.658 83.4491 108.593 82.0831 108.442C80.3865 108.254 78.6878 108.136 76.989 108.081C77.2189 107.744 77.278 107.282 77.1313 106.921C77.4444 106.562 77.5516 106.034 77.359 105.644C77.8713 105.119 77.7509 104.121 76.9869 103.854C77.5232 103.372 77.6107 102.433 76.9146 102.092C76.9102 101.962 76.8818 101.833 76.8336 101.715C77.5889 101.614 77.8625 100.853 77.6567 100.257C77.8187 99.6485 77.486 98.9086 76.6432 98.867C76.6147 98.867 76.5862 98.8648 76.56 98.8626C76.5884 98.7313 76.5928 98.5912 76.5709 98.4533C76.6541 98.346 76.7132 98.2256 76.7526 98.0986C77.5954 97.7309 77.5516 96.4415 76.6651 96.0934C76.6213 95.7891 76.4483 95.522 76.1156 95.4016C76.1769 95.209 76.1835 95.001 76.1375 94.804C76.2382 94.445 76.155 94.0334 75.8923 93.7379C76.8883 93.6503 77.8844 93.5628 78.8804 93.4774C79.8743 93.3898 80.1523 92.4573 79.7692 91.8334C80.0604 91.1964 79.7495 90.2813 78.8213 90.2507C78.2237 90.231 77.6261 90.2134 77.0284 90.1937C77.0328 90.15 77.0328 90.104 77.0328 90.0602C77.3349 89.421 77.0197 88.4622 76.0871 88.4337C76.0455 88.4337 76.0039 88.4337 75.9624 88.4337C75.8901 87.9149 75.4895 87.3961 74.8963 87.3457C74.7386 87.3326 74.5832 87.3194 74.4256 87.3063C74.4672 86.7743 74.152 86.2117 73.4865 86.1176C73.4865 85.8571 73.4077 85.5922 73.261 85.3821C73.6047 85.3405 73.9484 85.2967 74.2899 85.2551C75.4983 85.1062 75.6887 83.6286 74.7562 83.1864C75.1546 82.6829 75.0451 81.7744 74.4387 81.4833C75.2356 81.3585 76.0324 81.2337 76.8292 81.1089C77.8822 80.9447 77.7859 79.7057 77.1073 79.1847C77.3678 78.5258 77.0591 77.6611 76.144 77.707C74.5526 77.788 72.9742 77.7377 71.4112 77.5582C72.4948 77.2911 73.5981 77.1072 74.7167 77.0175C75.8529 76.9255 76.3104 75.0845 75.0079 74.8678C74.9072 74.8503 74.8065 74.8371 74.708 74.8218C74.7649 74.2614 74.4103 73.6419 73.6616 73.5652C72.9917 73.4952 72.324 73.4251 71.6542 73.3551C71.9453 73.3069 72.2387 73.2631 72.532 73.2194C73.62 73.0596 73.5302 71.3389 72.532 71.1091C71.941 70.9733 71.3499 70.8442 70.7566 70.7238C71.3543 70.6384 71.9563 70.564 72.5583 70.5005C73.7032 70.3801 74.141 68.6594 72.8494 68.3508C72.2912 68.2172 71.7308 68.0925 71.1704 67.9764C71.2908 67.9392 71.4112 67.9042 71.5294 67.867C72.5364 67.5605 72.6064 66.0303 71.5294 65.7567C71.1047 65.6494 70.68 65.5509 70.2531 65.4568C70.61 65.3802 70.969 65.3101 71.328 65.2466C72.2715 65.0802 72.2912 64.0601 71.7855 63.4866C72.1971 63.3903 72.6064 63.2896 73.0158 63.1845C73.8674 62.9656 74.1563 61.5842 73.2763 61.1836C73.1778 61.1377 73.0793 61.0982 72.9808 61.0567C73.1472 60.4371 72.7422 59.6512 71.9475 59.6096L68.55 59.428C68.4296 59.2112 68.2085 59.0492 67.867 59.0033C66.8622 58.8675 66.026 58.977 65.1131 59.4236C64.0755 59.9336 64.66 61.4091 65.6648 61.4638L68.4537 61.6127C68.4887 61.7265 68.5413 61.836 68.6091 61.9367C67.2891 62.1928 65.9603 62.403 64.6249 62.5671C63.2414 62.7357 63.1955 64.638 64.6249 64.7563C64.7125 64.7628 64.8001 64.7716 64.8876 64.7781C63.8412 65.2773 64.058 66.7681 65.2773 66.8797C65.7611 66.9235 66.2427 66.9804 66.7221 67.0439C66.5098 67.1096 66.2974 67.173 66.0873 67.2387C64.9183 67.5955 65.1591 69.0338 66.1551 69.3403C65.5509 69.4716 64.9489 69.6117 64.3491 69.7649C63.0597 70.0933 63.4954 71.7724 64.6403 71.9147C65.2467 71.9913 65.853 72.0745 66.4594 72.1664C65.7939 72.3262 65.1306 72.4948 64.4717 72.6743C63.2108 73.018 63.5895 74.7014 64.7629 74.824C65.1744 74.8678 65.5838 74.9094 65.9953 74.9531C65.7742 75.6011 66.1726 76.514 67.0089 76.4921C67.2519 76.4855 67.4949 76.4833 67.7379 76.479C67.3745 76.6256 67.0111 76.7789 66.6499 76.9452C66.0041 77.2408 65.9888 78.0617 66.3653 78.5652L66.2164 78.5783C64.8942 78.6943 64.7957 80.612 66.0479 80.7543C65.4524 81.3125 65.8968 82.6019 66.8556 82.6654C66.8666 82.6654 66.8775 82.6654 66.8863 82.6676C66.3718 82.9303 66.304 83.541 66.5426 84.0314C65.4437 84.1934 65.2138 85.4806 65.945 85.9994C65.54 86.3781 65.6188 87.1093 66.0194 87.5515C65.9734 88.1382 66.4047 88.8321 67.0921 88.889C67.2978 88.9065 67.5036 88.9241 67.7094 88.9394C67.5168 89.4407 67.7335 90.1259 68.2392 90.4039C67.7597 91.0409 67.994 92.1005 69.0535 92.1333C69.1017 92.1333 69.1476 92.1355 69.1958 92.1377C68.1822 92.2252 67.1687 92.315 66.1551 92.4026C65.216 92.4857 64.9117 93.3548 65.2182 93.9765C64.6972 94.4034 64.6819 95.2966 65.1766 95.7103C65.1262 96.2335 65.413 96.7676 66.0522 96.8508C65.7633 97.3259 65.8487 98.0154 66.3127 98.3482C66.4266 98.7729 66.7637 99.1385 67.3241 99.1691C67.7466 99.191 68.1691 99.2151 68.5916 99.237C68.5675 99.3377 68.5566 99.4449 68.561 99.5522C68.2829 99.5522 68.0027 99.5522 67.7247 99.5522C66.3171 99.5631 66.3127 101.743 67.7247 101.741C68.2238 101.737 68.7208 101.741 69.2177 101.752C69.0929 101.984 69.0535 102.265 69.1017 102.532C69.0272 102.538 68.9528 102.543 68.8806 102.549C68.0071 102.619 67.6744 103.405 67.8889 104.018C67.6043 104.447 67.6415 105.06 68.0071 105.426C68.0181 105.566 68.0531 105.704 68.1144 105.831C67.1577 106.262 67.3022 107.81 68.5456 107.91C68.6135 107.917 68.6814 107.919 68.7492 107.926C68.9047 108.024 69.0995 108.085 69.3337 108.085H70.008C69.9292 108.144 69.8613 108.219 69.8022 108.3C69.5307 108.339 69.3228 108.464 69.1783 108.637C68.9178 108.65 68.6595 108.661 68.399 108.674C66.9914 108.746 66.987 110.795 68.399 110.863C68.7602 110.881 69.1236 110.898 69.4848 110.916C69.4848 110.933 69.4826 110.951 69.4804 110.971C68.5982 111.415 68.7711 112.982 69.9817 113.041C69.9905 113.041 69.997 113.041 70.0036 113.041C70.0167 113.271 70.0933 113.506 70.2269 113.707C69.3797 114.112 69.4454 115.511 70.4283 115.749C69.846 116.047 69.7803 116.844 70.1196 117.356C70.0846 117.363 70.0474 117.369 70.0123 117.376C69.0469 117.564 69.0338 118.768 69.6511 119.287C69.5264 119.83 69.7628 120.456 70.3976 120.592C70.5399 120.622 70.6822 120.653 70.8223 120.682C70.6187 120.708 70.4173 120.736 70.2137 120.763C68.8674 120.942 68.758 122.978 70.2137 122.952C70.2641 122.952 70.3166 122.952 70.367 122.952C70.17 123.576 70.4852 124.34 71.363 124.353C71.4834 124.353 71.6038 124.361 71.7242 124.364C71.7133 124.591 71.768 124.821 71.8753 125.018C71.5535 125.257 71.4221 125.649 71.4637 126.021C70.5574 126.505 70.9821 127.956 72.0438 128.059C72.2168 128.076 72.3919 128.092 72.5648 128.109C72.532 128.116 72.4992 128.124 72.4642 128.131C71.1682 128.427 71.6148 130.149 72.7553 130.281L72.9961 130.309C72.9961 130.368 72.9961 130.43 73.0071 130.489C72.2759 130.778 72.0767 131.693 72.4795 132.218C72.1839 132.575 72.2124 133.149 72.4882 133.56C72.4204 133.796 72.4423 134.064 72.5386 134.311C72.4423 134.324 72.3459 134.339 72.2518 134.353C70.923 134.545 71.4375 136.369 72.543 136.502C72.6612 136.515 72.7772 136.531 72.8954 136.544C72.486 137.109 72.6787 138.039 73.4668 138.262C73.5543 138.286 73.6397 138.308 73.7273 138.33C73.7426 138.455 73.7776 138.573 73.8323 138.683C73.9484 139.096 74.2855 139.438 74.8415 139.44C74.9269 139.44 75.0101 139.442 75.0933 139.444C74.4365 139.83 74.3227 140.762 74.8328 141.215C74.859 141.318 74.8963 141.419 74.9488 141.511C74.7649 141.859 74.7518 142.31 74.94 142.654C74.6204 142.993 74.5723 143.518 74.778 143.925C74.697 144.028 74.616 144.133 74.5416 144.245C74.4475 144.383 74.3993 144.556 74.3928 144.735C74.0753 145.423 74.3752 146.399 75.3166 146.299C75.5858 146.27 75.8485 146.228 76.1068 146.18C76.109 146.18 76.1134 146.18 76.1156 146.182C76.0828 146.213 76.0499 146.242 76.0193 146.272C74.9816 147.268 76.4943 148.685 77.567 147.82C78.2018 147.308 78.8629 146.787 79.5744 146.388C79.7495 146.36 79.9225 146.327 80.0998 146.285C80.3822 146.22 80.5814 146.075 80.7083 145.889C81.1615 145.747 81.6365 145.67 82.1422 145.688C83.552 145.738 83.5498 143.549 82.1422 143.499V143.494Z\",\n    fill: \"#684836\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.006 47.0112C69.7323 47.0068 69.4609 47.0025 69.1873 46.9981C69.1873 46.9959 69.1873 46.9937 69.1894 46.9915C69.6316 46.9193 70.0717 46.8427 70.5095 46.7551C71.523 46.5537 71.4771 45.365 70.8357 44.8527C70.9342 44.5463 70.8991 44.2026 70.7306 43.9268C70.7262 43.8567 70.7153 43.7866 70.6977 43.7166C70.8313 43.2 70.6167 42.598 69.96 42.4009C69.7586 42.3396 69.5572 42.2849 69.3536 42.2302C69.7389 41.6523 69.6667 40.8051 68.7866 40.6234C68.7253 40.6102 68.6641 40.6015 68.6049 40.5884C68.6728 40.1308 68.4889 39.6251 68.0642 39.4106C68.5677 39.1611 68.7232 38.5284 68.5437 38.0293C68.6225 37.8279 68.6465 37.6046 68.6159 37.3923C70.0235 37.3835 70.0257 35.1966 68.6159 35.2031C66.4727 35.2141 64.2639 35.3958 62.6506 36.9654C61.996 37.6024 62.4141 38.4737 63.0643 38.7429C62.5674 39.1961 62.4689 40.0542 63.0183 40.4504C62.8914 40.6803 62.8717 40.9627 62.9417 41.232C61.9895 41.5516 61.9413 42.784 62.7819 43.2153C62.4667 43.8611 62.7622 44.8002 63.6816 44.8068C63.802 44.96 63.9684 45.0782 64.1829 45.1439L63.4868 45.3628C62.8147 45.5752 62.5958 46.2822 62.7841 46.8295C62.6922 46.8624 62.6002 46.8952 62.5105 46.9302C61.4006 47.3527 61.4991 49.0602 62.8016 49.0799C63.0643 49.0843 63.327 49.0887 63.5897 49.0931C63.605 49.2463 63.6466 49.3995 63.7167 49.5418C62.5083 49.8198 62.5367 51.6193 63.8962 51.6981C65.4417 51.7879 66.9697 51.6434 68.4627 51.2778C68.8523 51.2428 69.242 51.2056 69.6316 51.1705C70.7393 51.0676 70.9736 49.6578 70.3103 49.1544C71.5384 48.9136 71.2056 47.0265 70.0082 47.0068L70.006 47.0112Z\",\n    fill: \"#684836\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.4236 28.6744C69.3207 28.6679 69.2178 28.6613 69.115 28.6547C69.4083 28.0681 69.2638 27.2668 68.4735 27.1289C66.5537 26.794 64.6864 26.9013 62.8453 27.5624C62.6965 27.6149 62.5695 27.6981 62.4601 27.7988C61.8909 27.7857 61.3239 27.7791 60.7547 27.7791C59.566 27.7791 59.2092 29.7515 60.4636 29.9288C60.4636 29.9288 60.4658 29.9288 60.468 29.9288C60.468 29.9726 60.4702 30.0142 60.4745 30.058C60.1878 30.6928 60.7219 31.6385 61.4968 31.6516C62.3615 31.667 63.2175 31.6144 64.0669 31.5006C64.8133 31.4984 65.5576 31.494 66.3041 31.4918C66.5865 31.4918 66.812 31.4021 66.9828 31.262C67.8978 31.1525 68.8085 31.008 69.717 30.8263C70.9866 30.5724 70.597 28.7511 69.4258 28.6766L69.4236 28.6744Z\",\n    fill: \"#684836\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M86.4903 44.8613C86.8406 44.5439 86.996 43.9988 86.753 43.4844C83.9378 37.5256 78.6949 31.4771 71.5365 31.9697C71.5693 31.3983 71.2212 30.8072 70.4835 30.8226C68.371 30.8598 66.2673 30.9911 64.1657 31.2166C64.0191 31.2319 63.8855 31.2779 63.7629 31.3458C62.4035 31.4596 61.0572 31.6522 59.7262 31.9324C59.1965 31.58 58.4193 31.6303 58.1719 32.3024C57.7385 32.4162 57.3051 32.5344 56.876 32.668C56.0813 32.9132 55.9172 33.9355 56.3397 34.4806C55.6764 34.717 55.0415 35.1242 54.5074 35.5248C52.9597 36.685 51.6528 38.0554 50.5013 39.6053C50.1861 40.03 50.2561 40.4481 50.5101 40.7458C49.3651 41.9104 48.5814 43.596 48.0517 44.9686C47.6861 45.9143 47.1038 47.2672 47.94 48.1275C48.7084 48.9178 49.8117 48.5872 50.6983 48.2129C52.4233 47.4861 53.9119 46.3412 55.0787 44.9336C55.8602 44.3797 56.5761 43.7296 57.189 43.005C58.1107 41.9148 59.4657 39.8154 59.7963 37.8934C60.0064 37.8343 60.1816 37.7248 60.337 37.5869C60.3961 37.5803 60.4574 37.5716 60.5209 37.5541C63.1325 36.8601 65.7879 36.4048 68.487 36.245C70.2799 36.1399 72.1516 36.0961 73.8985 36.5449C73.9139 36.5755 73.927 36.6084 73.9467 36.639C75.4791 39.0646 78.0381 40.2401 80.6279 41.2143C81.3349 41.9082 82.042 42.6 82.7929 43.2392C82.817 43.3027 82.8411 43.3662 82.8651 43.4318C82.6747 43.92 82.7579 44.5111 83.3051 44.765C83.3095 44.7672 83.3139 44.7694 83.3205 44.7716C83.662 45.6801 84.1458 46.455 85.3432 46.6455C86.313 46.7987 87.0026 45.9428 86.5801 45.0365C86.5516 44.9774 86.5188 44.9204 86.4881 44.8613H86.4903ZM54.8204 41.2865C54.8292 41.142 54.8335 40.9954 54.8335 40.8509C54.9518 40.667 55.0765 40.4765 55.2079 40.2905C55.0962 40.6298 54.9671 40.9625 54.8204 41.2865ZM56.6724 36.6806C56.714 36.6609 56.7578 36.6412 56.7994 36.6259C57.3357 36.4245 57.4539 36.3938 57.6115 36.8973C57.6312 36.9565 57.64 37.0221 57.6466 37.0922C57.4211 36.8185 57.0467 36.6762 56.6724 36.6828V36.6806Z\",\n    fill: \"#77767A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.9983 40.4553C71.8516 40.4224 71.705 40.3874 71.5583 40.3546C72.7338 40.1488 72.6178 38.2946 71.3175 38.1852L69.4896 38.0297C69.5553 38.0035 69.6231 37.9838 69.6888 37.9553C70.4265 37.6467 70.93 36.3726 69.9493 35.9545C69.8595 35.9151 69.7676 35.8822 69.6778 35.8494C69.5158 35.5648 69.2137 35.3722 68.7694 35.4094C68.5439 35.4291 68.3206 35.4532 68.0973 35.4794C66.8035 35.3525 65.5163 35.6524 64.4174 36.3857C64.3561 36.4098 64.297 36.4295 64.2357 36.4536C63.9336 36.574 63.7366 36.7841 63.6228 37.0249C63.5855 37.06 63.5461 37.0928 63.5111 37.13C63.4389 37.2023 63.382 37.2789 63.336 37.3555C63.3207 37.3555 63.3075 37.3555 63.2922 37.3555C62.9792 37.3774 62.6683 37.3993 62.3553 37.4234C60.9433 37.5241 60.952 39.4943 62.3553 39.6125C63.0405 39.6716 63.7235 39.7285 64.4086 39.7876C64.2751 40.348 64.5247 40.9916 65.1551 41.1339L66.519 41.4448C66.3854 41.5061 66.2541 41.5717 66.1249 41.6527C65.2843 42.1759 65.512 43.334 66.3854 43.6536L67.307 43.9907C66.6569 44.1089 66.0045 44.2271 65.3543 44.3453C64.4152 44.5161 64.3911 45.615 64.9275 46.1798C64.737 46.263 64.5487 46.3571 64.3627 46.4732C63.7957 46.8278 63.5987 47.7056 64.1416 48.1916C64.3758 48.4018 64.6144 48.601 64.8574 48.798C64.505 48.9403 64.1503 49.0826 63.7979 49.2249C62.7997 49.6277 62.7252 50.9565 63.7979 51.3352C65.0238 51.7686 66.2497 52.2043 67.4734 52.6377C68.8044 53.1084 69.3757 50.9937 68.0557 50.5274L67.1647 50.2122C67.2392 50.1815 67.3114 50.1531 67.3858 50.1224C68.2462 49.7765 68.4957 48.6623 67.6463 48.1216C67.4887 48.023 67.3355 47.9202 67.1844 47.8151C68.3403 47.6772 69.5947 47.8063 70.6892 47.5261C71.8691 47.2262 71.6065 45.777 70.6608 45.4399C71.0876 45.2057 71.4116 44.8532 71.5955 44.2994C71.7925 43.7061 71.3635 43.1479 70.8315 42.9531L70.7593 42.9268C71.2715 42.8327 71.7619 42.686 72.2588 42.4518C73.1104 42.0511 72.8761 40.6523 71.9983 40.4509V40.4553Z\",\n    fill: \"#6F4631\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.65,\n    d: \"M59.3584 34.5773C59.2621 34.5335 59.2162 34.4481 59.2052 34.4065C59.0388 33.879 61.935 32.4122 64.6867 31.8299C69.3408 30.8448 73.5176 32.4101 75.5579 33.1763C78.4803 34.2708 80.2973 35.6346 80.1857 35.8076C80.155 35.8535 79.877 35.9761 79.877 35.9783C74.6012 33.1587 72.318 32.583 72.318 32.583C71.1008 32.2765 68.0383 31.5016 65.0151 32.2853C62.9486 32.8216 61.9153 33.0887 61.0047 33.7717C60.6522 34.0344 59.7656 34.7677 59.3584 34.5773Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80.0133 44.3694L69.215 43.707L68.2812 58.93L79.0795 59.5923L80.0133 44.3694Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.4624 54.5498H65.6763V61.96H77.4624V54.5498Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.3736 46.2524H61.7769V54.2646H65.3736V46.2524Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.65,\n    d: \"M80.7086 36.3968C80.5838 36.4909 80.8268 37.0338 81.0523 37.3666C81.2165 37.6117 81.5449 38.0036 81.6806 37.9379C81.7988 37.8788 81.7484 37.487 81.6237 37.1958C81.396 36.6682 80.84 36.2983 80.7108 36.3968H80.7086Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.0647 36.3607C57.7845 35.8616 57.0577 35.6514 56.5674 35.9689C56.5433 35.9842 56.5258 36.0017 56.5039 36.0192C56.3288 35.947 56.1383 35.9076 55.9501 35.9119C55.3656 35.9229 55.0131 36.2994 54.8051 36.8029C54.7044 37.0459 54.7482 37.3239 54.873 37.5647C54.8402 37.6413 54.8139 37.7267 54.7986 37.823C54.5249 39.4014 53.4764 40.5572 52.419 41.6934C51.4317 42.7529 52.8831 44.0883 53.9667 43.2411C54.7504 42.6303 55.4422 41.9451 56.0617 41.1702C56.3091 40.8593 56.3616 40.5113 56.2894 40.1982C56.4382 39.9093 56.5674 39.6094 56.6747 39.3007C56.8016 39.3576 56.9417 39.3904 57.1015 39.3904C57.4912 39.3904 57.848 39.1803 58.0472 38.8475C58.5047 38.0835 58.5004 37.1357 58.0669 36.3629L58.0647 36.3607Z\",\n    fill: \"#75777A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.6337 29.8381C72.4804 29.7461 72.2943 29.6914 72.0711 29.6914C71.7777 29.6914 71.5457 29.7877 71.3749 29.9388C71.0925 30.1424 70.9502 30.4839 70.9459 30.8254C70.9108 31.3967 71.2633 31.9943 72.001 31.9943C72.0601 31.9943 72.117 31.99 72.1696 31.9812C72.2112 31.9878 72.2528 31.9922 72.2987 31.9922C72.3797 32.0097 72.4651 32.0206 72.557 32.0206C73.9384 32.0206 73.9668 29.9147 72.6337 29.8359V29.8381Z\",\n    fill: \"#75777A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.5224 28.9045C69.3801 28.8147 69.2115 28.7534 69.0123 28.7359C68.6052 28.6987 68.2024 28.6877 67.7996 28.6987C67.6179 28.6768 67.434 28.668 67.2545 28.6899C67.1691 28.7009 67.0859 28.7184 67.0049 28.7425C66.8429 28.7556 66.6809 28.7731 66.5189 28.7906C65.9695 28.7994 65.4266 28.8388 64.9012 28.9439C64.7698 28.9701 64.6582 29.0139 64.5597 29.0686C64.54 29.0686 64.5203 29.0643 64.5006 29.0643C63.8832 29.0643 63.2878 29.1256 62.7515 29.362C62.6398 29.3226 62.515 29.3007 62.3771 29.3007C61.2563 29.3007 61.0265 30.6864 61.6898 31.2512C61.7686 31.3453 61.8649 31.4241 61.9809 31.4832C62.1517 31.6255 62.3771 31.7175 62.6617 31.7175C62.7843 31.7175 62.8938 31.6978 62.9945 31.6671C63.0098 31.6649 63.0251 31.6584 63.0404 31.654C63.0492 31.6518 63.0579 31.6496 63.0667 31.6452C63.1214 31.6299 63.1762 31.6102 63.2309 31.5883C64.5553 31.4241 65.814 31.0892 67.1166 30.9491C67.5106 30.96 67.9046 30.9819 68.2921 31.0016C68.5855 31.0345 68.8766 31.0432 69.1765 31.0345C69.7676 31.0191 70.2711 30.5419 70.2711 29.9399C70.2711 29.4758 69.9515 29.0446 69.5202 28.8979L69.5224 28.9045Z\",\n    fill: \"#6E4730\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.4498 35.0944C67.1079 35.1973 65.871 35.3352 64.6386 35.8431C63.3382 35.9525 63.3711 38.0278 64.7458 38.0278C64.8706 38.0278 64.9866 38.0103 65.0895 37.9775C65.1924 37.9599 65.2975 37.9293 65.4048 37.8789C66.3745 37.4214 67.3969 37.3645 68.4498 37.2857C69.8465 37.1784 69.8574 34.9893 68.4498 35.0966V35.0944Z\",\n    fill: \"#6E4730\"\n  }))), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.6246 39.4555C12.4938 45.5018 6.014 50.3879 4.72024 58.0432C7.29025 52.2771 13.3081 44.4663 18.3715 40.8762C16.9377 39.6591 17.6491 39.0592 16.6246 39.4555ZM16.6246 39.4555C17.2069 38.3259 17.7892 37.1963 18.3715 36.0667C19.1027 34.8649 20.8474 33.8535 20.5563 32.3496C20.46 31.8483 17.3711 28.7507 17.9359 22.7285C11.7626 20.8633 17.752 16.3647 20.3396 13.9808C20.0484 12.0478 20.5388 9.80831 21.4319 8.07673C21.3662 5.66214 20.0331 -0.176226 22.4148 2.06324C22.938 0.738822 23.7874 2.79002 24.3807 2.71997C24.7659 2.674 25.0374 0.333837 31.5894 2.50106C37.4978 -2.4135 38.704 7.90817 40.8734 11.5771C39.9321 16.5376 46.379 18.0678 45.024 20.9794C44.0279 23.1181 40.6764 22.1352 40.4378 22.5095C40.2911 23.8208 40.1466 25.1343 40 26.4456C41.5214 30.2087 43.3712 37.4371 36.8323 33.9892C35.4247 37.0146 36.0421 38.6105 32.3534 39.346C35.0745 43.0784 34.7811 48.8117 36.285 50.7163C37.1585 51.4452 38.032 52.1742 38.9054 52.9032C40.348 54.6764 40.6742 58.2993 44.2578 56.7298C44.3672 56.8392 44.4767 56.9487 44.5862 57.0581C43.8484 57.6404 45.0897 59.2538 45.3502 59.3545C51.3571 57.8593 57.364 56.3664 63.3709 54.8712C62.3267 49.8669 64.6012 50.3419 64.6822 50.0595C64.3911 49.6217 64.0999 49.1839 63.8088 48.7482C63.2264 46.1016 65.2076 46.5438 65.3368 46.3424C64.9361 42.9537 64.5355 39.5627 64.1349 36.174C58.1959 37.8136 53.3426 43.2908 50.8098 48.6388C49.4175 42.4086 56.6241 33.3632 62.6047 31.5812C63.7869 27.1855 67.9593 26.5879 69.1568 30.9245C78.7144 32.7984 83.4582 34.9459 85.4306 45.0289C84.9293 45.7667 83.4035 42.6756 80.9517 40.7646C78.1124 38.5514 72.1449 35.7011 68.5 35.2983C67.9462 38.987 68.6401 42.6625 69.0451 46.3424C72.771 44.1533 72.6637 46.9597 72.8673 47.1086C73.3401 47.2181 73.813 47.3275 74.288 47.437C74.4697 47.9842 74.6514 48.5293 74.8331 49.0766C75.3366 49.394 76.7771 48.028 76.0349 51.5919C79.6535 52.2355 77.1908 54.8471 77.1273 55.0901C76.2976 58.2556 76.6632 60.6132 70.4658 62.4149C71.0854 69.8863 71.7027 77.3578 72.3222 84.8292C73.9597 93.8286 74.8463 103.016 75.816 112.165V116.538C76.4706 121.131 77.1273 125.722 77.7819 130.315C78.1453 134.907 78.5108 139.498 78.8742 144.091C79.0209 144.31 79.1654 144.528 79.312 144.747C76.0546 148.309 76.7048 145.03 75.5993 141.904C73.3949 126.948 71.8713 111.941 70.7942 96.8562C69.5048 90.1575 68.8984 83.3318 68.3906 76.5193C66.9348 71.9528 66.9852 67.0339 66.2058 62.3054C57.1757 65.079 53.2594 73.2094 42.397 76.3004C43.8068 78.8332 46.1776 82.5022 43.9251 85.0481C43.7215 87.2876 45.267 90.3042 43.2705 91.39C42.7429 97.4144 45.6523 93.3886 47.0927 98.9336C51.0834 98.9533 54.6189 98.3448 57.0313 102.103C57.3706 106.545 57.2327 111.077 55.5033 115.225C55.477 120.788 53.6863 126.177 53.0996 131.626C52.9529 131.773 52.8085 131.917 52.6618 132.064C53.2441 134.397 53.8264 136.729 54.4087 139.062C54.759 141.799 53.7476 148.386 56.484 148.138C58.3119 147.972 59.3036 141.129 65.6586 142.453C67.8411 142.909 67.5368 146.245 68.0622 146.389C68.4847 146.505 69.0407 145.36 69.0451 147.155C69.0517 149.373 67.4164 148.591 67.2982 149.123C67.2544 149.318 69.1677 151.488 66.2058 151.748C65.6739 154.296 65.05 152.379 64.1306 152.733C63.3293 153.534 62.5281 154.338 61.7269 155.139C59.5334 156.472 55.2603 156.446 56.1578 160.06C49.2774 165.48 51.0572 162.621 49.932 161.919C49.7875 161.829 48.5003 162 46.8738 160.608C42.5984 156.945 46.6811 152.591 44.3629 148.033C45.0524 142.915 41.1646 133.616 43.9251 133.6C43.2683 128.706 44.9102 123.894 44.3629 118.949C44.5621 116.887 47.0423 109.522 45.3458 110.092C44.9999 110.208 44.6584 113.285 41.0858 115.886C39.7329 118.907 38.958 124.08 35.1883 124.415C34.6585 130.573 30.0702 139.377 29.5097 145.19C29.4375 150.001 29.3631 154.811 29.2908 159.622C29.4375 159.914 29.582 160.205 29.7287 160.498C27.6468 163.401 24.477 167.308 27.8723 170.229C28.8837 167.05 31.8915 165.697 34.8621 167.385C37.986 169.16 35.6349 172.753 35.845 173.398C35.9567 173.744 36.9462 173.744 36.7185 174.491C36.5762 174.957 29.3784 178.771 28.7457 180.067C28.4546 179.92 28.1634 179.775 27.8723 179.629C21.9573 179.802 24.7222 179.011 22.5199 175.802C21.3903 174.891 20.2629 173.981 19.1333 173.068C18.0848 172.926 17.6842 174.791 17.3864 174.817C15.6746 173.687 13.9649 172.558 12.253 171.428C13.2337 167.444 9.70922 161.882 16.8392 161.807C17.7126 159.692 18.5861 157.58 19.4595 155.465C19.3282 147.061 19.7945 138.528 21.8632 130.317C22.5177 128.277 23.1745 126.234 23.829 124.194C16.9026 122.418 20.5847 117.773 18.4766 115.993C17.4193 115.1 10.6484 114.428 8.10023 109.104C4.74213 102.086 7.00129 93.3908 4.71367 94.562C3.6016 95.1312 3.51404 97.8478 3.07621 91.6089C5.44921 91.6133 2.67123 87.9377 2.20276 86.1427C1.76493 82.9356 1.3293 79.7286 0.891479 76.5215C1.3293 72.2943 1.76493 68.0672 2.20276 63.8378C3.95843 58.3672 5.56523 52.8069 8.97368 48.0937C11.5218 45.215 14.0699 42.3363 16.6181 39.4555H16.6246ZM21.5392 2.06105C20.5672 2.3719 22.4433 4.46907 22.3032 4.79525L21.3203 4.46688C20.3023 5.03605 22.6928 6.62097 22.741 6.76326C22.949 7.38934 20.5869 7.04565 23.1788 8.07454C23.065 9.1275 25.6766 12.0062 26.3465 10.5898C26.5479 11.5793 27.0163 11.7282 26.8916 10.9182C25.5803 8.87794 24.2712 6.8355 22.9599 4.79525C22.8833 4.65295 22.3907 1.7896 21.5392 2.06105ZM22.8483 2.06105C23.0322 5.51765 25.2432 6.78953 25.797 7.63671C26.3136 8.42698 27.3907 12.363 28.7457 11.4633C28.4174 9.67697 28.0912 7.89065 27.7628 6.10653C26.8412 5.51328 26.9156 7.08506 26.561 7.09163C25.9371 7.10257 26.5304 2.58862 25.4686 6.21598C24.8666 6.19409 25.2913 4.12976 25.1403 3.70069C24.5339 1.97348 24.6236 5.11486 24.3763 5.12142C23.7458 4.4625 24.3872 2.66962 22.8483 2.06105ZM26.7821 16.9317C25.5759 17.2141 27.2944 18.0503 27.3272 18.1335C27.3513 18.1948 26.9244 19.3353 27.4367 19.3353C27.6271 19.3353 27.684 17.6607 28.529 19.9921C29.1661 18.3415 30.5167 20.4058 30.6043 20.7583C30.9918 22.3169 29.6214 24.7797 29.4025 24.8037C29.293 24.8147 28.9231 23.9325 28.0912 24.147C25.9765 28.3961 27.9927 22.8532 26.1254 22.3979C25.6876 22.4701 25.2519 22.5446 24.8141 22.6168C22.4455 24.0572 26.0269 28.7879 24.4857 27.5379C24.35 27.4285 23.8334 25.1255 22.8483 25.2416C22.3382 25.9705 21.8281 26.6995 21.3203 27.4285C21.1167 27.4285 20.2082 24.4973 20.3374 28.1947C17.5769 27.1045 21.4363 32.5729 21.4297 33.0063C21.4232 33.4945 19.2669 33.6893 21.4297 36.9424C24.0151 39.311 26.5982 41.6796 29.1836 44.0482C29.4375 42.4808 29.6936 40.9134 29.9476 39.346C29.1464 38.3981 28.3451 37.4502 27.5439 36.5024C29.0719 36.5221 29.0347 39.3241 32.6774 38.7987C34.3849 38.5535 35.057 37.5575 35.6261 36.0645C35.6086 35.4319 32.6402 34.9087 31.1472 31.5812C29.8841 34.0374 30.6109 30.5151 31.2567 30.1605C32.4169 29.5213 30.5977 31.1412 33.2225 33.6587C36.5981 36.8986 36.2084 33.1815 36.8258 33.1114C41.8432 37.019 41.8498 31.3142 39.3367 26.4412C40.1269 23.3064 39.6519 21.5792 39.1178 18.5691C38.6602 17.7592 30.6634 17.9168 29.3981 17.803C28.5246 17.5118 27.6512 17.2206 26.7777 16.9273L26.7821 16.9317ZM19.7923 34.8627C15.5826 40.318 18.5292 39.4817 19.6828 42.1875C20.2192 43.444 21.2152 49.5648 22.9599 52.4654H23.3977C28.0649 41.0272 31.4799 52.8463 32.2439 52.3559C31.4033 47.6406 28.4261 43.895 25.0352 40.5478C23.4218 38.9542 21.7143 38.9279 19.7923 34.8627ZM30.9305 39.2366C30.7488 39.346 30.5671 39.4555 30.3854 39.5649C30.5671 42.1612 28.3276 45.3639 31.0399 46.7802C31.0859 46.1344 31.5193 41.1148 32.4607 41.6424C32.2067 42.772 31.9506 43.9016 31.6967 45.0311C33.8464 46.2767 34.9935 49.4356 34.7549 46.9991C34.6279 45.6988 32.6971 38.7922 30.9327 39.2366H30.9305ZM19.1355 43.1726C5.33757 55.5695 1.30303 68.0496 3.2995 86.5805C5.10114 89.1811 8.56213 92.583 11.7101 93.2507C16.5568 94.2796 12.5354 91.5191 12.4741 90.5165C12.3734 88.8878 14.221 92.8632 15.6417 93.9053C16.7735 94.7349 21.1276 96.3505 22.4126 96.0922C24.1968 94.5248 25.9809 92.9574 27.765 91.39C28.7851 87.3817 29.8031 83.3712 30.8232 79.363C30.74 78.958 26.2852 75.7225 31.0421 76.7382C30.6634 73.842 32.8262 71.642 32.789 68.8662C34.1725 68.2839 35.5561 67.6994 36.9396 67.1171C33.3341 60.4994 33.4501 64.9915 31.9156 66.4604C31.6967 66.5326 31.4778 66.607 31.261 66.6793C35.4729 59.2779 31.758 64.8141 29.1858 67.0076C26.8916 68.6473 24.5996 70.2869 22.3054 71.9288C20.7949 74.293 23.8509 75.4007 25.0352 75.0986C25.8495 74.8906 28.1481 69.3347 28.4218 71.0531C28.4896 71.4866 25.0615 75.7947 26.1276 76.191C29.1113 77.3008 29.9541 71.9003 30.7138 72.2549C30.3613 74.7812 27.0251 79.028 25.2519 75.5342C23.2117 75.7137 20.8781 74.7396 21.4297 72.3644C21.699 71.1998 29.1048 66.5851 30.7138 65.0396C33.1678 62.6819 31.9506 60.7577 36.0661 64.4923C38.1064 69.0698 37.9181 65.9262 36.285 63.6167C34.0762 60.4972 31.7996 62.0121 31.0421 60.992C30.4992 59.7989 25.6087 50.9658 25.0352 50.8235C23.9866 50.563 23.7918 54.2626 22.9599 53.5577C22.0142 51.1519 21.0663 48.7461 20.1206 46.3424C19.882 45.6222 19.9061 43.1419 19.1377 43.1726H19.1355ZM71.3415 46.0162C69.0998 45.8805 67.9309 50.7907 68.7211 51.0468C69.0473 51.1519 73.8852 46.1717 71.3415 46.0162ZM64.5706 46.8897C63.1739 47.3122 65.2054 50.0639 65.1157 50.2784C61.3526 51.8152 64.9734 56.0993 65.1157 56.6203C65.8906 59.4355 62.7864 58.8641 60.6367 59.5734C56.2454 61.0204 51.8847 62.6097 47.3116 63.5094C40.8997 67.0755 33.9383 66.0094 35.5167 72.476C34.2601 70.6065 36.458 67.0448 33.9887 68.54C33.1305 69.0588 33.4589 70.6306 33.2247 71.2742C32.7868 72.2221 32.3512 73.17 31.9134 74.1179C30.7816 80.5889 37.6204 78.6471 40.7596 75.9764C51.4162 74.1004 56.6482 65.0987 65.2229 61.9814C65.2952 61.8348 65.3696 61.6903 65.4418 61.5436C72.2784 63.7218 67.9155 60.6417 67.736 59.4661C67.8455 58.6277 67.9549 57.7893 68.0644 56.9508C68.8678 56.3707 68.2154 58.6934 68.3928 59.4661C69.0845 60.3046 69.7763 61.143 70.468 61.9814C71.4728 62.1741 77.1164 59.1903 76.475 55.5301C70.2929 57.8681 72.0858 56.5327 71.1226 55.6396C71 55.5257 68.6554 55.3594 70.1397 53.3432C68.9313 53.295 68.3752 51.1256 68.0644 51.0468C67.215 50.8323 68.9138 54.0153 65.5535 50.7184C65.8008 49.8297 65.884 46.4935 64.5706 46.8919V46.8897ZM72.8695 47.5464C72.1142 47.7106 67.0092 53.8839 70.6848 52.577C71.8143 51.5197 72.9417 50.4623 74.0713 49.4072C74.3909 48.5184 73.8174 47.3428 72.8695 47.5486V47.5464ZM34.4265 48.4199C33.7873 48.8227 35.3985 51.0643 35.6283 51.5897C36.5018 53.7044 37.3752 55.8169 38.2487 57.9316C39.711 62.0887 39.3235 66.977 42.2898 65.2563C43.5923 64.5011 45.302 57.2902 43.9272 59.0239C43.3581 59.7442 42.3204 64.1377 41.7425 63.1789C41.3857 62.5856 46.1952 55.5082 42.0709 57.6032C41.4886 58.5511 40.9063 59.499 40.324 60.4469C39.6782 60.0528 41.4711 58.0257 41.3069 57.277C41.2193 56.8764 37.2767 51.165 36.0639 51.1541C35.7159 50.0333 35.289 49.2101 34.4265 48.4199ZM75.492 49.5144C74.2486 49.6436 70.1397 53.4154 70.1397 54.2166C70.1397 54.7245 71.0197 55.4119 71.7771 54.9828C72.0814 54.8099 77.02 50.4733 75.4899 49.5166L75.492 49.5144ZM75.9277 52.1392C74.1961 52.3296 68.3096 59.0809 75.4899 55.1996C78.8501 53.3848 77.1536 52.0035 75.9277 52.1392ZM32.8963 54.1072C32.9335 54.6545 32.9685 55.1996 33.0058 55.7468C32.9576 55.8979 30.0373 57.1895 33.1152 56.7319C33.194 59.8492 34.0697 57.01 34.2076 56.9508C34.2798 56.9202 35.44 57.5901 35.6283 56.8414C35.7597 56.3204 34.2426 56.7363 34.8643 54.545C33.6275 55.1076 33.3735 53.7591 32.8985 54.1072H32.8963ZM63.0404 55.1996C57.1429 56.7297 51.2454 58.2599 45.348 59.7923C44.7197 60.1645 42.9947 64.7266 44.0367 64.604C45.2013 64.0939 46.3659 63.5839 47.5305 63.0738C53.0646 61.5436 58.5987 60.0134 64.1306 58.481C65.617 57.9797 64.286 55.1317 63.0382 55.2017L63.0404 55.1996ZM42.0709 76.6288C41.1624 78.5705 43.3734 81.7863 43.8178 84.2819C45.4136 81.5784 43.2355 79.0631 42.0709 76.6288ZM39.4505 77.5044C34.884 79.028 38.6799 82.6795 37.7036 88.6558C39.3104 88.4412 40.3896 87.3751 41.7447 86.5783C41.6812 85.4224 39.9168 77.5723 39.4505 77.5022V77.5044ZM36.3923 78.8157C34.8446 78.8179 33.7501 79.4812 32.3512 80.0175C32.9335 83.6339 33.1196 87.2 33.1152 90.8427C40.1707 91.1229 36.0836 82.8831 36.9374 78.9252C36.7557 78.8879 36.574 78.8529 36.3923 78.8157ZM41.852 87.1256C40.0941 88.6032 38.1896 88.9206 37.4825 89.3125C37.0447 89.8226 36.609 90.3326 36.1712 90.8427C35.3569 91.2805 32.3096 91.2039 32.5679 92.0445C35.5079 94.2358 38.9492 94.6058 42.5065 94.9976C42.7867 93.9118 42.8393 87.3204 41.852 87.1256ZM5.15587 89.5314C5.70096 91.7555 6.24824 93.9775 6.79333 96.2016C5.96584 100.685 7.27055 104.971 8.75915 109.104C12.358 115.672 27.082 117.561 34.0981 117.414C33.3429 115.367 32.6292 113.213 32.8963 110.963C30.5737 111.188 20.0068 109.419 18.6977 108.995C13.8532 107.419 11.4233 98.2112 11.3795 93.5791C7.04507 92.2547 5.51926 89.3979 5.15368 89.5336L5.15587 89.5314ZM27.4367 92.3751C25.9087 93.7608 24.3785 95.1443 22.8505 96.53C20.3965 97.2612 15.4031 94.1132 14.9872 94.1242C13.503 94.1636 17.0187 98.5527 17.6075 99.1547C22.5812 104.218 27.1214 104.144 33.7719 103.748C35.2189 100.521 38.0539 98.0098 39.9978 95.3282C39.8621 94.956 33.9142 94.3321 32.6796 92.594C32.4826 94.1876 30.937 95.8689 29.4025 96.0922C25.7598 96.6263 28.7457 92.3181 27.4367 92.3751ZM29.6214 92.8107C27.9336 93.0427 26.7186 96.3549 29.8403 95.4354C31.9659 94.8094 32.0404 92.478 29.6214 92.8107ZM41.1974 97.6224C39.109 100.475 36.8104 103.237 35.845 106.698C37.4431 107.729 40.7399 108.712 42.7254 109.214C42.9246 109.264 46.2608 109.222 46.5476 110.199C45.8931 113.478 45.2363 116.76 44.5818 120.039C45.5056 122.71 43.4369 131.899 44.144 133.16C44.3979 133.123 44.654 133.088 44.908 133.051C45.3129 133.268 44.6518 134.102 46.2192 133.051C48.2201 134.089 52.2918 133.625 52.8807 130.536C54.4919 124.275 54.3146 117.605 56.3745 111.51C58.8023 96.6394 52.1933 100.166 47.0905 99.3737C45.1247 98.7914 43.1589 98.2069 41.193 97.6246L41.1974 97.6224ZM19.963 104.082C19.8645 104.325 19.7682 104.571 19.6697 104.814C17.52 104.42 19.2559 105.381 19.3041 105.473L19.523 106.569C19.6697 106.374 19.8164 106.18 19.9608 105.985C20.0769 105.994 20.6767 107.388 20.5453 105.691C22.6119 106.541 20.5607 105.481 20.9109 104.595C19.639 105.247 20.6132 103.894 19.9608 104.082H19.963ZM19.1355 116.21C19.442 119.632 22.1259 117.13 20.8825 116.648C20.3001 116.501 19.7178 116.357 19.1355 116.21ZM40.324 116.21C33.2115 120.133 29.3127 115.847 39.0127 120.146C39.2272 119.146 41.042 116.169 40.324 116.21ZM24.8163 119.708C25.5015 123.793 23.9385 124.586 23.1788 127.252C21.3071 133.819 19.6565 141.433 20.1206 148.246C21.9617 150.82 21.3903 149.454 21.977 149.666C22.1237 149.885 22.2682 150.104 22.4148 150.323C22.614 150.4 23.3255 149.502 23.9428 150.98C24.5251 150.908 25.1074 150.833 25.6897 150.761C26.7821 151.052 27.8745 151.343 28.9668 151.637C29.0041 149.778 29.0391 147.919 29.0763 146.061C29.6849 139.581 32.9598 133.058 34.1003 128.568C34.7527 125.995 35.2518 122.351 33.5552 120.367C30.6437 120.148 27.73 119.929 24.8185 119.711L24.8163 119.708ZM52.3378 132.83C52.1649 133.504 52.502 135.623 51.7927 134.47C51.2542 133.596 51.5979 131.545 51.0287 135.236C50.5208 135.244 50.5734 131.996 49.7174 135.017C49.4263 134.653 49.1351 134.288 48.844 133.924C47.4583 137.922 48.4434 131.656 46.6592 135.236C45.5253 130.86 46.7227 138.587 44.9123 133.924C44.6212 134.362 44.33 134.8 44.0389 135.236C43.8616 135.247 42.9093 132.243 43.2749 136.438C43.4938 137.458 43.7127 138.478 43.9294 139.498C46.7643 138.379 50.2844 137.096 53.2135 136.983C53.4061 136.886 52.8238 133.228 52.34 132.828L52.3378 132.83ZM51.9 137.639C50.372 138.003 48.8418 138.368 47.3138 138.732C43.2158 140.03 43.9557 140.496 44.9102 144.636C46.4053 144.511 53.6381 141.921 53.9753 140.809C54.2883 139.774 54.0256 137.469 51.9 137.639ZM20.2279 149.012C20.0812 150.47 19.9368 151.928 19.7901 153.386C22.7147 154.763 25.8474 155.892 29.0741 156.12C29.2865 154.025 28.6976 149.69 27.4367 153.605C26.6311 153.611 27.6337 151.074 26.6727 151.527C26.6267 154.163 26.5107 153.46 25.9087 151.418C25.2716 151.376 24.9236 155.321 24.5974 151.418C24.234 151.855 23.8684 152.293 23.505 152.729C22.984 147.359 22.7169 154.953 21.7581 150.323C20.3549 152.924 20.8759 150.065 20.2301 149.012H20.2279ZM19.7923 153.821C18.5007 156.963 26.5216 160.776 28.3101 160.163C29.096 159.894 29.0106 156.75 28.7479 156.665C25.97 156.481 22.0952 155.389 19.7923 153.821Z\",\n    stroke: \"black\",\n    strokeWidth: 1.34,\n    strokeMiterlimit: 10\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.5394 2.0609C22.3909 1.78726 22.8813 4.65062 22.9601 4.7951C24.2714 6.83535 25.5805 8.8778 26.8917 10.918C27.0165 11.728 26.5459 11.5792 26.3466 10.5897C25.6768 12.006 23.0652 9.12954 23.179 8.07439C20.5871 7.04551 22.9513 7.3892 22.7412 6.76311C22.693 6.62082 20.3025 5.0359 21.3204 4.46673L22.3034 4.7951C22.4435 4.46892 20.5674 2.37394 21.5394 2.0609Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.8485 2.06006C24.3896 2.67082 23.746 4.4637 24.3765 5.12044C24.6239 5.11168 24.5341 1.97249 25.1405 3.6997C25.2916 4.12658 24.8647 6.1931 25.4689 6.21499C26.5306 2.58763 25.9373 7.09939 26.5612 7.09064C26.9137 7.08407 26.8415 5.51229 27.7631 6.10554C28.0914 7.89185 28.4176 9.67817 28.746 11.4623C27.3887 12.362 26.3139 8.426 25.7972 7.63573C25.2434 6.78635 23.0324 5.51448 22.8485 2.06006Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.1357 116.21C19.718 116.357 20.3003 116.502 20.8827 116.648C22.1261 117.13 19.4422 119.632 19.1357 116.21Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.3239 116.211C41.0442 116.169 39.2272 119.146 39.0127 120.147C29.3127 115.847 33.2115 120.134 40.3239 116.211Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.7825 16.9307C27.656 17.2218 28.5294 17.513 29.4029 17.8063C30.6704 17.9201 38.665 17.7603 39.1225 18.5725C39.6567 21.5825 40.1295 23.3097 39.3415 26.4445C41.8546 31.3175 41.8458 37.0223 36.8305 33.1148C36.2132 33.1848 36.6007 36.9019 33.2273 33.662C30.6025 31.1424 32.4217 29.5246 31.2614 30.1638C30.6156 30.5185 29.8889 34.0408 31.152 31.5846C32.645 34.912 35.6134 35.433 35.6309 36.0679C35.0617 37.5587 34.3897 38.5547 32.6822 38.8021C29.0395 39.3275 29.0767 36.5276 27.5487 36.5057C28.3499 37.4536 29.1511 38.4015 29.9523 39.3494C29.6984 40.9168 29.4423 42.4842 29.1883 44.0516C26.603 41.683 24.0199 39.3143 21.4345 36.9457C19.2717 33.6927 21.4279 33.4979 21.4345 33.0097C21.4411 32.5762 17.5817 27.1078 20.3421 28.198C20.213 24.5028 21.1215 27.4318 21.3251 27.4318C21.8351 26.7029 22.3452 25.9739 22.8531 25.2449C23.8382 25.1289 24.357 27.4318 24.4905 27.5413C26.0295 28.7913 22.4503 24.0606 24.8189 22.6202C25.2567 22.5479 25.6923 22.4735 26.1302 22.4013C27.9975 22.8588 25.9813 28.3994 28.096 24.1504C28.9257 23.9336 29.2956 24.818 29.4073 24.8071C29.6262 24.783 30.9966 22.3203 30.6091 20.7616C30.5215 20.4092 29.1708 18.3448 28.5338 19.9954C27.6888 17.664 27.6319 19.3387 27.4414 19.3387C26.9292 19.3387 27.3561 18.1982 27.332 18.1369C27.2991 18.0537 25.5785 17.2174 26.7869 16.935L26.7825 16.9307ZM35.7382 19.991C35.0464 20.8295 34.3547 21.6679 33.6629 22.5063C32.4129 28.001 39.1444 28.8394 38.0324 22.7252C40.6199 20.4639 33.8249 24.494 34.1007 22.5063C34.2649 21.3286 36.465 19.4832 37.8134 20.5383C38.0127 19.9757 36.1038 19.8838 35.7382 19.991ZM25.2523 23.7103C25.0838 24.945 25.2304 27.9747 26.0163 25.35C25.7624 24.8027 25.5063 24.2576 25.2523 23.7103Z\",\n    fill: \"#FAAD81\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.7382 19.9915C36.1038 19.8843 38.0127 19.974 37.8134 20.5388C36.465 19.4836 34.2627 21.3291 34.1007 22.5068C33.8249 24.4945 40.6199 20.4644 38.0324 22.7257C39.1466 28.8399 32.4151 28.0015 33.6629 22.5068C34.3547 21.6684 35.0464 20.83 35.7382 19.9915ZM36.8283 23.0541C36.2088 23.227 36.5065 25.1272 34.3174 25.5694C37.0779 28.9165 39.2517 22.3777 36.8283 23.0541Z\",\n    fill: \"black\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.8278 23.0544C39.2512 22.3779 37.0752 28.9168 34.3169 25.5697C36.506 25.1275 36.2083 23.2273 36.8278 23.0544Z\",\n    fill: \"white\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.2519 23.7104C25.5058 24.2577 25.7619 24.8028 26.0159 25.3501C25.23 27.9748 25.0833 24.9451 25.2519 23.7104Z\",\n    fill: \"#AD8671\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.3417 46.0145C73.8855 46.1699 69.0476 51.1501 68.7214 51.0451C67.9311 50.7889 69.1001 45.8788 71.3417 46.0145Z\",\n    fill: \"#FAAD81\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.5709 46.889C65.8844 46.4928 65.8012 49.8268 65.5539 50.7156C68.9163 54.0102 67.2176 50.8294 68.0648 51.0439C68.3756 51.1227 68.9317 53.2922 70.14 53.3403C68.6558 55.3543 71.0004 55.5229 71.123 55.6367C72.0862 56.5299 70.2933 57.8652 76.4753 55.5272C77.1167 59.1852 71.4732 62.1712 70.4684 61.9786C69.7767 61.1401 69.0849 60.3017 68.3931 59.4633C68.218 58.6927 68.8704 56.3701 68.0648 56.948C67.9553 57.7864 67.8459 58.6248 67.7364 59.4633C67.9159 60.6388 72.2788 63.7189 65.4422 61.5407C65.37 61.6874 65.2955 61.8319 65.2233 61.9786C56.6485 65.0958 51.4144 74.0975 40.76 75.9735C37.6208 78.6443 30.782 80.586 31.9138 74.115C32.3516 73.1671 32.7872 72.2192 33.225 71.2713C33.4593 70.6277 33.1309 69.0581 33.989 68.5371C36.4584 67.042 34.2627 70.6037 35.517 72.4732C33.9387 66.0065 40.9001 67.0748 47.312 63.5066C51.885 62.6068 56.2457 61.0175 60.6371 59.5705C62.7868 58.8634 65.891 59.4348 65.116 56.6174C64.9737 56.0964 61.3529 51.8123 65.116 50.2756C65.2058 50.0588 63.1743 47.3071 64.5709 46.8868V46.889Z\",\n    fill: \"#FAAD81\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.8696 47.5448C73.8175 47.3412 74.391 48.5146 74.0714 49.4033C72.9418 50.4607 71.8145 51.518 70.6849 52.5732C67.0094 53.8801 72.1122 47.7068 72.8696 47.5426V47.5448Z\",\n    fill: \"#FAAD81\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.4922 49.5139C77.0223 50.4706 72.0837 54.8072 71.7794 54.9801C71.022 55.4114 70.142 54.7218 70.142 54.2139C70.142 53.4127 74.2509 49.6409 75.4944 49.5117L75.4922 49.5139Z\",\n    fill: \"#FAAD81\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.9279 52.1381C77.156 52.0024 78.8503 53.3837 75.49 55.1985C68.3098 59.0798 74.1963 52.3286 75.9279 52.1381Z\",\n    fill: \"#FAAD81\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.0404 55.199C64.2882 55.1289 65.6192 57.9791 64.1328 58.4783C58.5987 60.0084 53.0647 61.5386 47.5328 63.071C46.3682 63.5811 45.2036 64.0911 44.0389 64.6012C42.9969 64.726 44.7219 60.1617 45.3502 59.7895C51.2477 58.2593 57.1452 56.7292 63.0426 55.1968L63.0404 55.199Z\",\n    fill: \"#FAAD81\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.1975 97.6213C43.1633 98.2036 45.1291 98.7881 47.095 99.3704C52.1978 100.163 58.8045 96.6362 56.379 111.507C54.3168 117.601 54.4942 124.269 52.8852 130.532C52.2963 133.621 48.2245 134.085 46.2237 133.048C44.6563 134.099 45.3174 133.264 44.9124 133.048C44.6585 133.085 44.4024 133.12 44.1484 133.157C43.4391 131.896 45.51 122.706 44.5862 120.036C45.2408 116.756 45.8975 113.475 46.5521 110.196C46.2653 109.221 42.9291 109.261 42.7299 109.21C40.7443 108.709 37.4475 107.726 35.8495 106.695C36.8127 103.236 39.1135 100.474 41.2019 97.6191L41.1975 97.6213Z\",\n    fill: \"#FAAD81\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.8164 119.707C27.7279 119.926 30.6416 120.145 33.5531 120.364C35.2497 122.347 34.7527 125.992 34.0982 128.564C32.9577 133.056 29.6828 139.58 29.0742 146.057C29.037 147.916 29.0019 149.774 28.9647 151.633C27.8724 151.342 26.78 151.05 25.6876 150.757C25.1053 150.829 24.523 150.904 23.9407 150.976C23.3212 149.498 22.6119 150.396 22.4127 150.319C22.266 150.1 22.1216 149.882 21.9749 149.663C21.386 149.45 21.9596 150.816 20.1185 148.242C19.6544 141.432 21.305 133.816 23.1767 127.248C23.9363 124.582 25.4994 123.787 24.8142 119.705L24.8164 119.707Z\",\n    fill: \"#FAAD81\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.3384 132.83C52.8222 133.231 53.4045 136.889 53.2118 136.985C50.2828 137.099 46.7627 138.382 43.9278 139.5C43.7089 138.48 43.49 137.46 43.2733 136.44C42.9077 132.243 43.86 135.247 44.0373 135.238C44.3284 134.8 44.6196 134.362 44.9107 133.927C46.7211 138.592 45.5237 130.864 46.6576 135.238C48.4418 131.659 47.4567 137.924 48.8424 133.927C49.1335 134.29 49.4247 134.656 49.7158 135.019C50.5718 131.998 50.5192 135.247 51.0271 135.238C51.5963 131.549 51.2526 133.598 51.7911 134.472C52.5026 135.626 52.1633 133.507 52.3362 132.832L52.3384 132.83Z\",\n    fill: \"white\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M51.9005 137.639C54.0262 137.469 54.2889 139.776 53.9758 140.809C53.6387 141.921 46.4059 144.513 44.9107 144.636C43.9563 140.496 43.2163 140.03 47.3144 138.732C48.8424 138.368 50.3725 138.003 51.9005 137.639Z\",\n    fill: \"white\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.2283 149.011C20.8763 150.064 20.3553 152.925 21.7563 150.322C22.7174 154.952 22.9822 147.358 23.5033 152.728C23.8666 152.29 24.2322 151.852 24.5956 151.417C24.9196 155.32 25.2699 151.375 25.9069 151.417C26.5089 153.459 26.6271 154.162 26.6709 151.526C27.6319 151.073 26.6315 153.61 27.4349 153.604C28.6958 149.689 29.2847 154.024 29.0724 156.119C25.8456 155.891 22.713 154.764 19.7883 153.385C19.935 151.927 20.0795 150.469 20.2262 149.011H20.2283Z\",\n    fill: \"white\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.7928 153.822C22.0957 155.39 25.9705 156.482 28.7484 156.666C29.0133 156.751 29.0965 159.895 28.3106 160.164C26.5199 160.777 18.5012 156.964 19.7928 153.822Z\",\n    fill: \"white\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.7927 34.8599C21.7148 38.925 23.4223 38.9513 25.0357 40.545C28.4244 43.8943 31.4038 47.6399 32.2444 52.3531C31.4804 52.8434 28.0654 41.0244 23.3982 52.4625H22.9604C21.2157 49.5619 20.2196 43.4412 19.6833 42.1846C18.5274 39.4789 15.5831 40.3129 19.7927 34.8599Z\",\n    fill: \"#AFAFAF\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.6255 39.4523C17.65 39.0583 16.9385 39.6581 18.3724 40.8731C13.309 44.4632 7.29109 52.274 4.72107 58.0401C6.01483 50.3848 12.4946 45.4987 16.6255 39.4523Z\",\n    fill: \"#ADAFAD\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.931 39.2339C32.6955 38.7895 34.6263 45.6962 34.7532 46.9965C34.994 49.433 33.8448 46.2741 31.695 45.0285C31.949 43.8989 32.2051 42.7693 32.459 41.6397C31.5199 41.1143 31.0865 46.134 31.0383 46.7776C28.326 45.359 30.5633 42.1586 30.3838 39.5623C30.5655 39.4528 30.7472 39.3434 30.9289 39.2339H30.931Z\",\n    fill: \"#AEAEAE\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.136 43.1702C19.9044 43.1396 19.8803 45.6198 20.1189 46.34C21.0646 48.7459 22.0125 51.1517 22.9582 53.5553C23.7901 54.2624 23.9849 50.5606 25.0335 50.8212C25.607 50.9634 30.4975 59.7965 31.0404 60.9896C31.7979 62.0097 34.0745 60.4927 36.2833 63.6143C37.9164 65.9216 38.1047 69.0652 36.0644 64.49C31.9489 60.7553 33.1682 62.6774 30.7121 65.0372C29.1031 66.5828 21.6995 71.1974 21.428 72.362C20.8764 74.7372 23.21 75.7114 25.2502 75.5319C27.0212 79.0257 30.3574 74.7766 30.7121 72.2526C29.9502 71.8979 29.1074 77.2985 26.1259 76.1886C25.0576 75.7924 28.4879 71.4842 28.4201 71.0507C28.1486 69.3323 25.8479 74.8882 25.0335 75.0962C23.847 75.3983 20.7932 74.2884 22.3037 71.9264C24.5979 70.2867 26.8899 68.6471 29.1841 67.0053C31.7563 64.8118 35.469 59.2755 31.2593 66.6769C31.4782 66.6047 31.6972 66.5302 31.9139 66.458C33.4484 64.9869 33.3302 60.497 36.9379 67.1147C35.5544 67.697 34.1709 68.2815 32.7873 68.8638C32.8246 71.6396 30.6595 73.8419 31.0404 76.7359C26.2857 75.7179 30.7405 78.9556 30.8215 79.3606C29.8014 83.3689 28.7835 87.3793 27.7633 91.3876C25.9792 92.955 24.1951 94.5224 22.4109 96.0898C21.1237 96.3481 16.7718 94.7326 15.64 93.9029C14.2193 92.8609 12.3717 88.8854 12.4724 90.5141C12.5337 91.5168 16.5551 94.2772 11.7084 93.2483C8.56262 92.5807 5.09944 89.1788 3.2978 86.5781C1.30352 68.0495 5.33586 55.5693 19.1338 43.1702H19.136ZM15.8611 56.2896C15.8983 57.7847 15.9334 59.2777 15.9706 60.7729C12.0805 58.7851 13.8296 60.6962 16.1895 61.6485C17.4001 65.1073 20.3072 67.824 21.9775 71.1602C22.4547 71.1733 21.7673 69.8708 21.2135 68.8638C19.7577 66.8236 18.302 64.7811 16.844 62.7409C16.5157 60.5912 16.1895 58.4393 15.8611 56.2896Z\",\n    fill: \"#AFAFAF\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.4267 48.4165C35.2914 49.2046 35.7161 50.0299 36.0642 51.1507C37.2748 51.1617 41.2196 56.873 41.3071 57.2737C41.4713 58.0245 39.6784 60.0516 40.3242 60.4435C40.9065 59.4956 41.4888 58.5477 42.0711 57.5998C46.1954 55.5048 41.3859 62.5844 41.7428 63.1755C42.3207 64.1343 43.3561 59.7408 43.9275 59.0206C45.3001 57.2868 43.5926 64.4977 42.29 65.253C39.3238 66.9736 39.7113 62.0853 38.2489 57.9282C37.3755 55.8135 36.502 53.701 35.6286 51.5863C35.3987 51.061 33.7897 48.8193 34.4267 48.4165Z\",\n    fill: \"#ABAFAD\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.8963 54.1033C33.3713 53.7552 33.6253 55.1015 34.8621 54.5411C34.2404 56.7324 35.7575 56.3165 35.6261 56.8375C35.4379 57.5862 34.2798 56.9163 34.2054 56.9469C34.0675 57.006 33.1918 59.8453 33.113 56.728C30.0351 57.1855 32.9554 55.894 33.0036 55.7429C32.9664 55.1956 32.9313 54.6506 32.8941 54.1033H32.8963Z\",\n    fill: \"#AA993E\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.8608 56.2896C16.1892 58.4393 16.5154 60.5912 16.8437 62.7409C18.2995 64.7811 19.7553 66.8236 21.2132 68.8638C21.7692 69.8708 22.4544 71.1711 21.9772 71.1602C20.3069 67.8218 17.3998 65.1073 16.1892 61.6485C13.8293 60.6984 12.0802 58.7851 15.9703 60.7728C15.9331 59.2777 15.898 57.7847 15.8608 56.2896Z\",\n    fill: \"black\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.0712 76.626C43.238 79.0625 45.4139 81.5756 43.8181 84.2791C43.3737 81.7835 41.1627 78.5677 42.0712 76.626Z\",\n    fill: \"#AFAFAF\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.451 77.5015C39.9173 77.5693 41.6817 85.4195 41.7452 86.5775C40.3901 87.3744 39.3131 88.4405 37.7041 88.655C38.6804 82.6765 34.8867 79.0251 39.451 77.5036V77.5015Z\",\n    fill: \"#AFAFAF\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.3932 78.812C36.5748 78.8492 36.7565 78.8843 36.9382 78.9215C36.0845 82.8794 40.1716 91.1192 33.1161 90.839C33.1204 87.1963 32.9322 83.6324 32.3521 80.0138C33.7509 79.4753 34.8455 78.8142 36.3932 78.812Z\",\n    fill: \"#AFAFAF\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.8518 87.1221C42.8412 87.3169 42.7865 93.9083 42.5063 94.9941C38.949 94.6023 35.5077 94.2345 32.5677 92.041C32.3116 91.2004 35.3588 91.2748 36.171 90.8392C36.6088 90.3291 37.0445 89.8191 37.4823 89.309C38.1872 88.9171 40.0939 88.6019 41.8518 87.1221Z\",\n    fill: \"#777777\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.15649 89.5291C5.51989 89.3934 7.04789 92.2501 11.3823 93.5746C11.4261 98.2067 13.856 107.416 18.7005 108.99C20.0074 109.415 30.5743 111.184 32.8991 110.958C32.6299 113.209 33.3457 115.363 34.1009 117.41C27.087 117.558 12.3631 115.667 8.76196 109.1C7.27337 104.967 5.96865 100.68 6.79614 96.1971C6.25105 93.973 5.70377 91.751 5.15868 89.5269L5.15649 89.5291Z\",\n    fill: \"#777777\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.437 92.3731C28.7461 92.3162 25.7601 96.6244 29.4028 96.0902C30.9352 95.8648 32.4829 94.1857 32.6799 92.592C33.9124 94.3302 39.8624 94.9519 39.9981 95.3262C38.0542 98.0079 35.2193 100.519 33.7723 103.746C27.1218 104.142 22.5815 104.216 17.6079 99.1528C17.0168 98.5508 13.5011 94.1616 14.9875 94.1222C15.4034 94.1113 20.3968 97.2592 22.8508 96.5281C24.3788 95.1423 25.909 93.7588 27.437 92.3731Z\",\n    fill: \"#777777\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.622 92.8072C32.041 92.4745 31.9665 94.8059 29.8409 95.432C26.7192 96.3514 27.9342 93.0415 29.622 92.8072Z\",\n    fill: \"white\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.9743 104.281C20.5193 104.123 19.705 105.255 20.7689 104.71C20.4777 105.454 22.194 106.339 20.4624 105.629C20.5719 107.048 20.0706 105.881 19.9743 105.875C19.8517 106.039 19.7291 106.201 19.6065 106.365L19.4226 105.445C19.3832 105.369 17.9296 104.563 19.7291 104.894C19.8101 104.69 19.8911 104.487 19.9743 104.281Z\",\n    fill: \"white\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.9109 166.48L44.3606 158.988L37.6474 162.345L43.9109 166.48Z\",\n    fill: \"#E80A0D\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgYodelyGuy);\nexport default __webpack_public_path__ + \"static/media/YodelyGuy.521eb98a43ac1cc1bdba2c5a56ed5131.svg\";\nexport { ForwardRef as ReactComponent };","export const START_POSITION_X = 0;\r\nexport const START_POSITION_Y = 0;\r\nexport const MAX_MOVES = 25;\r\n\r\nexport const stepXCoefficient: Record<number, { x: number, y: number }> = {\r\n  1000: { x: 0.775, y: 0.212 },\r\n  1200: { x: 0.885, y: 0.2415 },\r\n  1300: { x: 0.940, y: 0.2565 },\r\n  1400: { x: 0.995, y: 0.271 },\r\n  1500: { x: 1.1, y: 0.30 },\r\n  1600: { x: 1.14, y: 0.3115 },\r\n  1700: { x: 1.23, y: 0.336 },\r\n  1800: { x: 1.28, y: 0.349 },\r\n  1900: { x: 1.38, y: 0.377 },\r\n  2000: { x: 1.42, y: 0.3875 },\r\n  2100: { x: 1.52, y: 0.4148 },\r\n  2200: { x: 1.59, y: 0.4335 },\r\n  2300: { x: 1.65, y: 0.45 },\r\n  2400: { x: 1.70, y: 0.463 },\r\n  2500: { x: 1.77, y: 0.482 },\r\n  2600: { x: 1.81, y: 0.493 },\r\n  2700: { x: 1.85, y: 0.505 },\r\n  2800: { x: 1.92, y: 0.5235 },\r\n  2900: { x: 1.99, y: 0.543 },\r\n  3000: { x: 2.10, y: 0.573 },\r\n  3100: { x: 2.14, y: 0.584 },\r\n  3200: { x: 2.21, y: 0.602 },\r\n  3300: { x: 2.29, y: 0.626 },\r\n  3400: { x: 2.35, y: 0.641 },\r\n  3500: { x: 2.41, y: 0.658 },\r\n  3600: { x: 2.47, y: 0.675 },\r\n}\r\n\r\nexport const getStepXCoefficient = (width: number): { x: number, y: number } => {\r\n  const keys = Object.keys(stepXCoefficient).map(Number);\r\n  const validKeys = keys.filter(key => key <= width);\r\n\r\n  if (validKeys.length === 0) {\r\n    return { x: 2, y: 0.94 };\r\n  }\r\n\r\n  const closestKey = Math.max(...validKeys);\r\n  return stepXCoefficient[closestKey];\r\n};","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport {\r\n  MAX_MOVES,\r\n  START_POSITION_X,\r\n  START_POSITION_Y,\r\n} from '../components/GameScreen/constants';\r\n\r\ninterface GameContextProps {\r\n  remainingMoves: number;\r\n  setRemainingMoves: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  positionX: number;\r\n  setPositionX: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  positionY: number;\r\n  setPositionY: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  savedPositionX: number | null;\r\n  setSavesPositionX: React.Dispatch<React.SetStateAction<number | null>>;\r\n\r\n  savedPositionY: number | null;\r\n  setSavesPositionY: React.Dispatch<React.SetStateAction<number | null>>;\r\n\r\n  startPoint: number | null;\r\n  setStartPoint: React.Dispatch<React.SetStateAction<number | null>>;\r\n\r\n  startPositionY: number;\r\n  setStartPositionY: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  startPositionX: number;\r\n  setStartPositionX: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  leftLimit: number;\r\n  setLeftLimit: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  resetGame: () => void;\r\n}\r\n\r\nconst GameContext = createContext<GameContextProps | undefined>(undefined);\r\n\r\nexport const GameProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [remainingMoves, setRemainingMoves] = useState<number>(MAX_MOVES);\r\n  const [positionX, setPositionX] = useState<number>(START_POSITION_X);\r\n  const [positionY, setPositionY] = useState<number>(START_POSITION_Y);\r\n\r\n  const [savedPositionX, setSavesPositionX] = useState<number | null>(null);\r\n  const [savedPositionY, setSavesPositionY] = useState<number | null>(null);\r\n\r\n  const [startPoint, setStartPoint] = useState<number | null>(null);\r\n  const [startPositionY, setStartPositionY] = useState<number>(0);\r\n  const [startPositionX, setStartPositionX] = useState<number>(0);\r\n  const [leftLimit, setLeftLimit] = useState<number>(0);\r\n\r\n  const resetGame = () => {\r\n    setRemainingMoves(MAX_MOVES);\r\n    setPositionX(START_POSITION_X);\r\n    setPositionY(START_POSITION_Y);\r\n\r\n    setStartPositionY(START_POSITION_X);\r\n    setStartPositionX(START_POSITION_Y);\r\n    setLeftLimit(0);\r\n\r\n    setSavesPositionX(null);\r\n    setSavesPositionY(null);\r\n\r\n    setStartPoint(null);\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        remainingMoves,\r\n        setRemainingMoves,\r\n        positionX,\r\n        setPositionX,\r\n        positionY,\r\n        setPositionY,\r\n        savedPositionX,\r\n        setSavesPositionX,\r\n        savedPositionY,\r\n        setSavesPositionY,\r\n        startPoint,\r\n        setStartPoint,\r\n        resetGame,\r\n        startPositionY,\r\n        setStartPositionY,\r\n        startPositionX,\r\n        setStartPositionX,\r\n        leftLimit,\r\n        setLeftLimit,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGame = (): GameContextProps => {\r\n  const context = useContext(GameContext);\r\n  if (context === undefined) {\r\n    throw new Error('useGame must be used within a GameProvider');\r\n  }\r\n  return context;\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nimport OuterRocks1366 from '../../assets/OuterRocks1366.png';\r\nimport OuterRocks1920 from '../../assets/OuterRocks1920.png';\r\nimport OuterRocks2560 from '../../assets/OuterRocks2560.png';\r\nimport Header1366 from '../../assets/Header1366.png';\r\nimport Header1920 from '../../assets/Header1920.png';\r\nimport Header2560 from '../../assets/Header2560.png';\r\nimport GameBackground1366 from '../../assets/GameBackground1366.svg';\r\nimport GameBackground1920 from '../../assets/GameBackground1920.svg';\r\nimport GameBackground2560 from '../../assets/GameBackground2560.svg';\r\nimport YellowRulerRotate from '../../assets/YellowRulerRotate.svg';\r\nimport YodelyGuy from '../../assets/YodelyGuy.svg';\r\n\r\nimport ScreamCrash from '../../assets/audio/ScreamCrash.mp3';\r\nimport SingleDing from '../../assets/audio/SingleDing.mp3';\r\nimport ThePriceIsRightYodelling from '../../assets/audio/ThePriceIsRightYodelling.mp3';\r\nimport WinningDingX10 from '../../assets/audio/WinningDingX10.mp3';\r\n\r\nimport { useGame } from '../../context/GameContext';\r\nimport { getStepXCoefficient } from './constants';\r\n\r\nconst GameScreen = () => {\r\n  const yodelAudioRef = useRef<any>(null);\r\n  const climberStopsMovingAudioRef = useRef<any>(null);\r\n  const winningAudioRef = useRef<any>(null);\r\n  const fallAudioRef = useRef<any>(null);\r\n\r\n  const {\r\n    remainingMoves,\r\n    setRemainingMoves,\r\n    positionX,\r\n    setPositionX,\r\n    positionY,\r\n    setPositionY,\r\n    savedPositionX,\r\n    setSavesPositionX,\r\n    savedPositionY,\r\n    setSavesPositionY,\r\n    startPoint: startPointContext,\r\n    setStartPoint: setStartPointContext,\r\n    startPositionY,\r\n    setStartPositionY,\r\n    startPositionX,\r\n    setStartPositionX,\r\n    leftLimit,\r\n    setLeftLimit,\r\n  } = useGame();\r\n\r\n  const MAX_MOVES = 25;\r\n\r\n  const [isStartPositionSet, setStartPositionSet] = useState<boolean>(false);\r\n  const [falling, setFalling] = useState<boolean>(false);\r\n  const [isYodeling, setIsYodeling] = useState<boolean>(false);\r\n  const [outerRocksSize, setOuterRocksSize] = useState<null | {\r\n    width: number;\r\n    height: number;\r\n  }>(null);\r\n  const [headerHeight, setHeaderHeight] = useState<null | number>(null);\r\n  const [isGameStarted, setIsGmeStarted] = useState<boolean>(false);\r\n  const [rightLimit, setRightLimit] = useState<number>(0);\r\n  const [points, setPoints] = useState<{ [key: number]: number }>({});\r\n\r\n  const [isRendered, setIsRendered] = useState<boolean>(false);\r\n  const [isMainBgLoaded, setMainBgLoaded] = useState<boolean>(false);\r\n  const [isGameContainerLoaded, setGameContainerLoaded] =\r\n    useState<boolean>(false);\r\n\r\n  const [gameBackgroundElement, setGameBackgroundElement] = useState<any>(null);\r\n  const [yodelyGuyElement, setYodelyGuyElement] = useState<any>(null);\r\n  const [rulerElement, setRulerElement] = useState<any>(null);\r\n  const [gameMarginBottom, setGameMarginBottom] = useState<number | null>(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handlePlayYodelAudioRef = () => {\r\n    climberStopsMovingAudioRef.current.pause();\r\n    winningAudioRef.current.pause();\r\n    fallAudioRef.current.pause();\r\n    yodelAudioRef.current.pause();\r\n    yodelAudioRef.current.currentTime = 0;\r\n    yodelAudioRef.current.play();\r\n  };\r\n\r\n  const handlePlayClimberStopsAudioRef = () => {\r\n    yodelAudioRef.current.pause();\r\n    winningAudioRef.current.pause();\r\n    fallAudioRef.current.pause();\r\n    climberStopsMovingAudioRef.current.pause();\r\n    climberStopsMovingAudioRef.current.currentTime = 0;\r\n    climberStopsMovingAudioRef.current.play();\r\n  };\r\n\r\n  const handlePlayWinningAudioRef = () => {\r\n    yodelAudioRef.current.pause();\r\n    climberStopsMovingAudioRef.current.pause();\r\n    fallAudioRef.current.pause();\r\n    winningAudioRef.current.pause();\r\n    winningAudioRef.current.currentTime = 0;\r\n    winningAudioRef.current.play();\r\n  };\r\n\r\n  const handlePlayFallAudioRef = () => {\r\n    yodelAudioRef.current.pause();\r\n    climberStopsMovingAudioRef.current.pause();\r\n    winningAudioRef.current.pause();\r\n    fallAudioRef.current.pause();\r\n    fallAudioRef.current.currentTime = 0;\r\n    fallAudioRef.current.play();\r\n  };\r\n\r\n  const getClosestPointKey = (x: number) => {\r\n    let closestKey = null;\r\n    for (const [key, value] of Object.entries(points)) {\r\n      if (value <= x) {\r\n        closestKey = key;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return closestKey;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { x: xCoefficient, y: yCoefficient } = getStepXCoefficient(\r\n      window.innerWidth,\r\n    );\r\n\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === ' ') {\r\n        handlePlayWinningAudioRef();\r\n      }\r\n\r\n      if (\r\n        event.key === 'ArrowLeft' &&\r\n        positionX < rightLimit &&\r\n        positionX > leftLimit\r\n      ) {\r\n        setIsYodeling(true);\r\n        setIsGmeStarted(true);\r\n        setPositionX((prevPositionX) =>\r\n          Math.max(prevPositionX - xCoefficient, -window.innerWidth),\r\n        );\r\n        setPositionY((prevPositionY) =>\r\n          Math.max(prevPositionY - yCoefficient, 0),\r\n        );\r\n      }\r\n\r\n      if (event.key === 'ArrowLeft' && positionX === leftLimit) {\r\n        yodelAudioRef.current.pause();\r\n      }\r\n\r\n      if (event.key === 'ArrowRight') {\r\n        positionX < rightLimit && setIsYodeling(true);\r\n        setIsGmeStarted(true);\r\n\r\n        setPositionX((prevPositionX) => {\r\n          const newPositionX = Math.min(\r\n            prevPositionX + xCoefficient,\r\n            rightLimit,\r\n          );\r\n          return newPositionX;\r\n        });\r\n        setPositionY((prevPositionY) =>\r\n          positionX < rightLimit\r\n            ? Math.min(prevPositionY + yCoefficient, window.innerHeight)\r\n            : startPositionY,\r\n        );\r\n      }\r\n    };\r\n\r\n    const handleKeyUp = (event: KeyboardEvent) => {\r\n      if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\r\n        setIsYodeling(false);\r\n        yodelAudioRef.current.pause();\r\n        positionX < rightLimit && handlePlayClimberStopsAudioRef();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n    };\r\n  }, [positionX, positionY, isRendered]);\r\n\r\n  useEffect(() => {\r\n    if (positionX === rightLimit) {\r\n      positionY !== startPositionY && setFalling(true);\r\n      positionY !== startPositionY && !falling && handlePlayFallAudioRef();\r\n      setPositionY(startPositionY);\r\n    }\r\n  }, [positionX, rightLimit, positionY, startPositionY, falling]);\r\n\r\n  useEffect(() => {\r\n    const centerPosition = yodelyGuyElement ? yodelyGuyElement.width / 2 : 0;\r\n    const closestKey = getClosestPointKey(positionX + centerPosition);\r\n    if (closestKey !== null) {\r\n      setRemainingMoves(MAX_MOVES - +closestKey);\r\n    }\r\n  }, [positionX, yodelyGuyElement]);\r\n\r\n  useEffect(() => {\r\n    if (falling) {\r\n      const timer = setTimeout(() => {\r\n        setFalling(false);\r\n      }, 1500);\r\n      const play = setTimeout(() => {\r\n        handlePlayFallAudioRef();\r\n      }, 0);\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n        clearTimeout(play);\r\n      };\r\n    }\r\n  }, [falling]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setIsRendered(true);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isYodeling) {\r\n      handlePlayYodelAudioRef();\r\n    }\r\n  }, [isYodeling]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      if (yodelyGuyElement && gameBackgroundElement) {\r\n        const yodelyGuyRect = yodelyGuyElement.getBoundingClientRect();\r\n        const gameBackgroundRect =\r\n          gameBackgroundElement.getBoundingClientRect();\r\n\r\n        const relativeX = yodelyGuyRect.left - gameBackgroundRect.left;\r\n        const relativeY = gameBackgroundRect.bottom - yodelyGuyRect.bottom;\r\n\r\n        if (\r\n          (!savedPositionX || savedPositionX <= startPositionX) &&\r\n          (!savedPositionY || savedPositionY <= startPositionY) &&\r\n          !isStartPositionSet\r\n        ) {\r\n          setPositionX(relativeX);\r\n          setPositionY(relativeY);\r\n          setStartPositionX(relativeX);\r\n          setStartPositionY(relativeY);\r\n          setStartPositionSet(true);\r\n        } else if (savedPositionX && savedPositionY) {\r\n          setPositionX(savedPositionX);\r\n          setPositionY(savedPositionY);\r\n        }\r\n      }\r\n    }, 50);\r\n  }, [\r\n    isStartPositionSet,\r\n    yodelyGuyElement,\r\n    gameBackgroundElement,\r\n    isRendered,\r\n    isMainBgLoaded,\r\n    isGameContainerLoaded,\r\n    savedPositionX,\r\n    savedPositionY,\r\n    startPositionX,\r\n    startPositionY,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (rulerElement && gameBackgroundElement && yodelyGuyElement) {\r\n      const rulerRect = rulerElement.getBoundingClientRect();\r\n      const gameBackgroundRect = gameBackgroundElement.getBoundingClientRect();\r\n      const yodelyGuyRect = yodelyGuyElement.getBoundingClientRect();\r\n\r\n      const rulerRight = rulerRect.right;\r\n      const gameBackgroundLeft = gameBackgroundRect.left;\r\n\r\n      const distanceFromLeft = rulerRight - gameBackgroundLeft;\r\n\r\n      const yodelyGuyWidth = yodelyGuyRect.width / 1.3;\r\n      const adjustedDistance = distanceFromLeft - yodelyGuyWidth;\r\n      const reightLimit =\r\n        outerRocksSize && outerRocksSize.width > 2000\r\n          ? adjustedDistance + 9\r\n          : outerRocksSize && outerRocksSize.width > 1900\r\n          ? adjustedDistance + 8\r\n          : outerRocksSize && outerRocksSize.width > 1800\r\n          ? adjustedDistance + 7\r\n          : outerRocksSize && outerRocksSize.width > 1700\r\n          ? adjustedDistance + 6\r\n          : outerRocksSize && outerRocksSize.width > 1600\r\n          ? adjustedDistance + 5\r\n          : outerRocksSize && outerRocksSize.width > 1500\r\n          ? adjustedDistance + 5\r\n          : outerRocksSize && outerRocksSize.width > 1400\r\n          ? adjustedDistance + 4\r\n          : outerRocksSize && outerRocksSize.width > 1300\r\n          ? adjustedDistance + 3\r\n          : outerRocksSize && outerRocksSize.width > 1200\r\n          ? adjustedDistance + 3\r\n          : outerRocksSize && outerRocksSize.width > 1100\r\n          ? adjustedDistance + 4\r\n          : outerRocksSize && outerRocksSize.width > 1000\r\n          ? adjustedDistance + 2\r\n          : adjustedDistance + 3;\r\n\r\n      setRightLimit(reightLimit);\r\n\r\n      const distanceFromLeftLimit =\r\n        yodelyGuyRect.left - gameBackgroundRect.left;\r\n\r\n      if (leftLimit === 0 || !leftLimit) setLeftLimit(distanceFromLeftLimit);\r\n\r\n      const koeficient = !outerRocksSize\r\n        ? 0.97\r\n        : outerRocksSize.width > 0 && outerRocksSize.width <= 700\r\n        ? 0.98\r\n        : outerRocksSize.width > 700 && outerRocksSize.width <= 800\r\n        ? 0.99\r\n        : outerRocksSize.width > 800 && outerRocksSize.width <= 1080\r\n        ? 1\r\n        : outerRocksSize.width > 1080 && outerRocksSize.width <= 1320\r\n        ? 1.007\r\n        : outerRocksSize.width > 1320 && outerRocksSize.width <= 1324\r\n        ? 1.014\r\n        : outerRocksSize.width > 1324 && outerRocksSize.width <= 1500\r\n        ? 1.01\r\n        : outerRocksSize.width > 1500 && outerRocksSize.width <= 1600\r\n        ? 1.012\r\n        : outerRocksSize.width > 1600 && outerRocksSize.width <= 1820\r\n        ? 1.015\r\n        : outerRocksSize.width > 1820 && outerRocksSize.width <= 1900\r\n        ? 1.017\r\n        : outerRocksSize.width > 1900 && outerRocksSize.width <= 2000\r\n        ? 1.0171\r\n        : outerRocksSize.width > 2000 && outerRocksSize.width <= 2400\r\n        ? 1.0175\r\n        : outerRocksSize.width > 2400 && outerRocksSize.width <= 2560\r\n        ? 1.018\r\n        : outerRocksSize.width > 2560 && outerRocksSize.width <= 2800\r\n        ? 1.024\r\n        : outerRocksSize.width > 2800 && outerRocksSize.width <= 3000\r\n        ? 1.025\r\n        : outerRocksSize.width > 3000 && outerRocksSize.width <= 3200\r\n        ? 1.026\r\n        : outerRocksSize.width > 3200 && outerRocksSize.width <= 4000\r\n        ? 1.028\r\n        : 1.03;\r\n\r\n      const moveForBigScreen = !outerRocksSize ? 0 : 3;\r\n\r\n      const numberOfPoints = 25;\r\n\r\n      const startPoint = startPointContext\r\n        ? startPointContext\r\n        : yodelyGuyRect.left +\r\n          yodelyGuyRect.width / 2 -\r\n          gameBackgroundRect.left -\r\n          moveForBigScreen;\r\n\r\n      !startPointContext && setStartPointContext(startPoint);\r\n\r\n      const pointDistance =\r\n        ((adjustedDistance - startPoint) / numberOfPoints) * koeficient;\r\n      const pointsObject: { [key: number]: number } = {};\r\n\r\n      for (let i = 0; i <= numberOfPoints; i++) {\r\n        pointsObject[i] = startPoint + i * pointDistance + i;\r\n      }\r\n\r\n      setPoints({\r\n        ...pointsObject,\r\n        25:\r\n          outerRocksSize && outerRocksSize.width > 2800\r\n            ? pointsObject[25] - 6\r\n            : outerRocksSize && outerRocksSize.width > 2000\r\n            ? pointsObject[25] - 8\r\n            : outerRocksSize && outerRocksSize.width > 1600\r\n            ? pointsObject[25] - 3\r\n            : pointsObject[25] - 2.5,\r\n      });\r\n    }\r\n  }, [\r\n    rulerElement,\r\n    gameBackgroundElement,\r\n    yodelyGuyElement,\r\n    isRendered,\r\n    isMainBgLoaded,\r\n    isGameContainerLoaded,\r\n    outerRocksSize,\r\n    startPointContext,\r\n    leftLimit,\r\n  ]);\r\n\r\n  const updateDimensions = () => {\r\n    const element = document.getElementById('outer-rocks');\r\n    if (element) {\r\n      const { offsetWidth, offsetHeight } = element;\r\n      setOuterRocksSize({\r\n        width: offsetWidth,\r\n        height: offsetHeight,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateDimensionsBackground = () => {\r\n    const element = document.getElementById('game-background');\r\n    if (element) {\r\n      setGameBackgroundElement(element);\r\n    }\r\n  };\r\n\r\n  const updateDimensionsHeader = () => {\r\n    const element = document.getElementById('heaeder');\r\n    if (element) {\r\n      const { offsetHeight } = element;\r\n      setHeaderHeight(offsetHeight);\r\n    }\r\n  };\r\n\r\n  const updateDimensionsYodelyGuy = () => {\r\n    const element = document.getElementById('yodely-guy');\r\n    if (element) {\r\n      setYodelyGuyElement(element);\r\n    }\r\n  };\r\n\r\n  const updateDimensionsRuler = () => {\r\n    const element = document.getElementById('ruler');\r\n    if (element) {\r\n      setRulerElement(element);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    updateDimensionsBackground();\r\n    updateDimensionsHeader();\r\n    updateDimensionsYodelyGuy();\r\n    updateDimensionsRuler();\r\n\r\n    window.addEventListener('resize', () => {\r\n      updateDimensions();\r\n      updateDimensionsBackground();\r\n      updateDimensionsHeader();\r\n      updateDimensionsYodelyGuy();\r\n      updateDimensionsRuler();\r\n    });\r\n\r\n    const rerender1 = setTimeout(() => {\r\n      updateDimensions();\r\n      updateDimensionsBackground();\r\n      updateDimensionsHeader();\r\n      updateDimensionsYodelyGuy();\r\n      updateDimensionsRuler();\r\n    }, 100);\r\n\r\n    const rerender2 = setTimeout(() => {\r\n      updateDimensions();\r\n      updateDimensionsBackground();\r\n      updateDimensionsHeader();\r\n      updateDimensionsYodelyGuy();\r\n      updateDimensionsRuler();\r\n    }, 500);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', () => {\r\n        updateDimensions();\r\n        updateDimensionsBackground();\r\n        updateDimensionsHeader();\r\n        updateDimensionsYodelyGuy();\r\n        updateDimensionsRuler();\r\n      });\r\n      clearTimeout(rerender1);\r\n      clearTimeout(rerender2);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      outerRocksSize &&\r\n      gameBackgroundElement &&\r\n      rulerElement &&\r\n      rulerElement.y < 0\r\n    ) {\r\n      setGameMarginBottom(Math.abs(rulerElement.y));\r\n    }\r\n\r\n    if (\r\n      outerRocksSize &&\r\n      gameBackgroundElement &&\r\n      rulerElement &&\r\n      rulerElement.y > 0\r\n    ) {\r\n      setGameMarginBottom(null);\r\n    }\r\n  }, [rulerElement, gameBackgroundElement, outerRocksSize]);\r\n\r\n  const fallAnimation = falling\r\n    ? {\r\n        animation: `fall ${\r\n          Math.abs(positionY - startPositionY) / 100\r\n        }s ease-out, rotate 1.5s linear`,\r\n        transition: 'bottom 1.5s ease-out',\r\n        bottom: `${startPositionY}px`,\r\n        transform: 'rotate(360deg)',\r\n      }\r\n    : {};\r\n\r\n  return (\r\n    <div className='relative m-auto w-screen h-screen transition-opacity duration-500 animate-fadeIn'>\r\n      <audio\r\n        ref={yodelAudioRef}\r\n        src={ThePriceIsRightYodelling}\r\n        preload='auto'\r\n      />\r\n      <audio ref={climberStopsMovingAudioRef} src={SingleDing} preload='auto' />\r\n      <audio ref={winningAudioRef} src={WinningDingX10} preload='auto' />\r\n      <audio ref={fallAudioRef} src={ScreamCrash} preload='auto' />\r\n\r\n      <img\r\n        src={\r\n          outerRocksSize && outerRocksSize.width >= 2560\r\n            ? OuterRocks2560\r\n            : outerRocksSize && outerRocksSize.width >= 1920\r\n            ? OuterRocks1920\r\n            : OuterRocks1366\r\n        }\r\n        alt='OuterRocks'\r\n        className='w-full absolute bottom-0 left-0 right-0 m-auto z-[42] max-w-screen max-h-[101vh]'\r\n        onLoad={() => setMainBgLoaded(true)}\r\n        id='outer-rocks'\r\n      />\r\n      <img\r\n        src={\r\n          outerRocksSize && outerRocksSize.width >= 2100\r\n            ? Header2560\r\n            : outerRocksSize && outerRocksSize.width >= 1700\r\n            ? Header1920\r\n            : Header1366\r\n        }\r\n        style={\r\n          outerRocksSize\r\n            ? {\r\n                maxWidth:\r\n                  outerRocksSize && outerRocksSize.width >= 2100\r\n                    ? 1896\r\n                    : outerRocksSize && outerRocksSize.width >= 1700\r\n                    ? 1487\r\n                    : 1067,\r\n                bottom:\r\n                  outerRocksSize.height <= 0 ||\r\n                  outerRocksSize.height === undefined ||\r\n                  !headerHeight\r\n                    ? 'auto'\r\n                    : outerRocksSize.height - headerHeight,\r\n                opacity:\r\n                  outerRocksSize.height === undefined || !isMainBgLoaded\r\n                    ? '0'\r\n                    : '1',\r\n              }\r\n            : {}\r\n        }\r\n        alt='Header'\r\n        className='w-full h-auto absolute left-0 right-[20px] m-auto z-50 bottom-[365px] max-w-[1400px] animate-fadeIn'\r\n        id='heaeder'\r\n      />\r\n      <img\r\n        src={\r\n          outerRocksSize && outerRocksSize.width >= 2560\r\n            ? GameBackground2560\r\n            : outerRocksSize && outerRocksSize.width >= 1920\r\n            ? GameBackground1920\r\n            : GameBackground1366\r\n        }\r\n        style={{\r\n          transform: gameMarginBottom\r\n            ? `translateY(${gameMarginBottom}px)`\r\n            : `translateY(0)`,\r\n        }}\r\n        alt='GameBackground'\r\n        id='game-background'\r\n        className='w-[96%] min-[1920px]:w-[96%] min-[2560px]:w-[93%] absolute bottom-0 left-0 right-0 m-auto z-0'\r\n        onLoad={() => setIsRendered(true)}\r\n      />\r\n      <div\r\n        className={`absolute bottom-0 left-0 right-0 m-auto w-full h-full z-50 ${\r\n          !falling && positionY === startPositionY ? '!z-0' : ''\r\n        }`}\r\n        style={{\r\n          maxWidth: !!gameBackgroundElement?.offsetWidth\r\n            ? gameBackgroundElement.offsetWidth\r\n            : 'auto',\r\n          maxHeight: !!gameBackgroundElement?.offsetHeight\r\n            ? gameBackgroundElement.offsetHeight\r\n            : 'auto',\r\n          transform: gameMarginBottom\r\n            ? `translateY(${gameMarginBottom}px)`\r\n            : `translateY(0)`,\r\n          zIndex: falling ? 0 : 50,\r\n        }}\r\n        onLoad={() => setGameContainerLoaded(true)}\r\n      >\r\n        <img\r\n          src={YellowRulerRotate}\r\n          id='ruler'\r\n          alt='Ruler'\r\n          style={{\r\n            opacity: isGameContainerLoaded && isMainBgLoaded ? '1' : '0',\r\n          }}\r\n          className={`h-full absolute ${\r\n            outerRocksSize && outerRocksSize.width >= 2560\r\n              ? ' w-[65%] bottom-[14.1%] left-[17.5%]'\r\n              : outerRocksSize && outerRocksSize.width >= 1920\r\n              ? ' w-[65%] bottom-[14%] left-[17.4%]'\r\n              : ' w-[65%] bottom-[13.7%] left-[17.3%]'\r\n          } m-auto z-30 object-contain`}\r\n        />\r\n        <img\r\n          src={YodelyGuy}\r\n          alt='YodelyGuy'\r\n          id='yodely-guy'\r\n          className={`absolute yodely-guy z-[100] ${\r\n            falling ? 'fall rotate' : ''\r\n          }\r\n          ${\r\n            outerRocksSize && outerRocksSize.width >= 2560\r\n              ? 'w-[4.8%] left-[17.4%] bottom-[44.8%]'\r\n              : outerRocksSize && outerRocksSize.width >= 1920\r\n              ? 'w-[4.3%] left-[17.5%] bottom-[44.9%]'\r\n              : 'w-[4.7%] left-[17.3%] bottom-[44.3%]'\r\n          }`}\r\n          style={\r\n            (isGameStarted && positionX !== 0 && positionY !== 0) ||\r\n            (savedPositionX && savedPositionY)\r\n              ? {\r\n                  opacity: isGameContainerLoaded && isMainBgLoaded ? '1' : '0',\r\n                  left: `${positionX}px`,\r\n                  bottom: `${positionY}px`,\r\n                  ...fallAnimation,\r\n                }\r\n              : {}\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <div className='absolute bottom-[27px] min-[2560px]:bottom-[24px] left-[50px] w-[70px] min-[2560px]:w-[140px] h-[40px] min-[2560px]:h-[80px] text-[32px] min-[2560px]:text-[64px] bg-[#e3e3e3] text-[#333] font-bold rounded-[5px] flex items-center justify-center z-[9999]'>\r\n        {remainingMoves}\r\n      </div>\r\n      <div className='absolute bottom-[27px] min-[2560px]:bottom-[24px] right-[50px] flex items-center justify-center z-[9999]'>\r\n        <button\r\n          className='w-fit h-[43px] min-[2560px]:h-[86px] text-[28px] min-[2560px]:text-[56px] px-1 min-[800px]:px-[8px] min-[1200px]:px-[12px] bg-[#56639d] hover:bg-[#56639d]/70 active:bg-[#56639d]/50 text-[#fff] font-bold rounded-[5px] uppercase transition'\r\n          onClick={() => {\r\n            setSavesPositionX(positionX);\r\n            setSavesPositionY(positionY);\r\n            navigate('/products');\r\n          }}\r\n        >\r\n          products\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameScreen;\r\n","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\nexport interface ProductType {\r\n  imgSrc: string;\r\n  productPrice: string;\r\n  productName: string;\r\n  priceOpened: boolean;\r\n  nameOpened: boolean;\r\n}\r\n\r\nexport interface ProductsState {\r\n  product1: ProductType;\r\n  product2: ProductType;\r\n  product3: ProductType;\r\n}\r\n\r\ninterface ProductsContextProps {\r\n  products: ProductsState;\r\n  setProduct: (key: keyof ProductsState, value: ProductType) => void;\r\n  resetProducts: () => void;\r\n}\r\n\r\nconst initialProductsValues: ProductsState = {\r\n  product1: {\r\n    imgSrc: '',\r\n    productPrice: '',\r\n    productName: '',\r\n    priceOpened: false,\r\n    nameOpened: false,\r\n  },\r\n  product2: {\r\n    imgSrc: '',\r\n    productPrice: '',\r\n    productName: '',\r\n    priceOpened: false,\r\n    nameOpened: false,\r\n  },\r\n  product3: {\r\n    imgSrc: '',\r\n    productPrice: '',\r\n    productName: '',\r\n    priceOpened: false,\r\n    nameOpened: false,\r\n  },\r\n};\r\n\r\nconst ProductsContext = createContext<ProductsContextProps | undefined>(\r\n  undefined,\r\n);\r\n\r\nexport const ProductsProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [products, setProducts] = useState<ProductsState>(\r\n    initialProductsValues,\r\n  );\r\n\r\n  const setProduct = (key: keyof ProductsState, value: ProductType) => {\r\n    setProducts((prev) => ({\r\n      ...prev,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const resetProducts = () => {\r\n    setProducts((prev) => ({\r\n      ...prev,\r\n      product1: { ...prev.product1, nameOpened: false, priceOpened: false },\r\n      product2: { ...prev.product2, nameOpened: false, priceOpened: false },\r\n      product3: { ...prev.product3, nameOpened: false, priceOpened: false },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <ProductsContext.Provider value={{ products, setProduct, resetProducts }}>\r\n      {children}\r\n    </ProductsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProducts = (): ProductsContextProps => {\r\n  const context = useContext(ProductsContext);\r\n  if (context === undefined) {\r\n    throw new Error('useProducts must be used within a ProductsProvider');\r\n  }\r\n  return context;\r\n};\r\n","var _path, _path2, _g, _path3, _path4, _g2, _path5, _path6, _g3, _path7, _path8, _g4, _g5, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgProductItem(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 315,\n    height: 454,\n    viewBox: \"0 0 315 454\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_d_42_3399)\"\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.7746 25.5613L16.4636 415.67C16.732 417.441 18.8583 429.361 31.9877 435.658C38.0364 438.56 44.0024 439.118 47.4293 439.2C119.579 440.659 191.709 442.119 263.859 443.578C267.905 442.693 273.479 441.004 279.032 437.675C291.707 430.099 295.443 419.343 296.496 415.67C292.553 286.77 288.59 157.871 284.647 28.972L34.7746 25.5449V25.5613Z\",\n    fill: \"#4C4030\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_42_3399\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 16,\n    y: 25,\n    width: 281,\n    height: 419\n  }, _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.7749 25.5613L16.4639 415.67C16.7322 417.441 18.8585 429.361 31.988 435.658C38.0366 438.56 44.0027 439.118 47.4295 439.2C119.579 440.659 191.709 442.119 263.859 443.578C267.905 442.693 273.479 441.004 279.032 437.675C291.707 430.099 295.444 419.343 296.497 415.67C292.554 286.77 288.59 157.871 284.647 28.972L34.7749 25.5449V25.5613Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M230.799 19.3613H196.323V452.25H230.799V19.3613Z\",\n    fill: \"#6B594A\",\n    fillOpacity: 0.5\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.79,\n    filter: \"url(#filter1_d_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.288 13.8262L193.047 448.962\",\n    stroke: \"black\",\n    strokeWidth: 0.1,\n    strokeMiterlimit: 10\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.34\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.566 297.084C233.566 297.084 233.566 297.166 233.566 297.215C233.608 297.314 233.649 297.413 233.669 297.511L233.566 297.084Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.154 320.055C233.154 320.055 233.154 320.153 233.154 320.203C233.174 320.203 233.194 320.203 233.154 320.055Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.434 112.238C234.434 112.238 234.434 112.304 234.434 112.337C234.434 112.255 234.434 112.172 234.454 112.09V112.238H234.434Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.495 112.712C234.454 113.221 234.433 112.565 234.433 112.352C234.371 112.909 234.371 113.467 234.392 114.04C234.454 114.04 234.454 112.975 234.495 112.712Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.661 47.9591L234.764 48.0911C234.723 47.9756 234.702 47.9426 234.661 47.9591Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.669 297.51L233.71 297.674C233.71 297.674 233.689 297.559 233.669 297.51Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.926 341.256C232.926 341.256 232.864 341.305 232.843 341.371C232.843 341.404 232.843 341.421 232.843 341.437L232.926 341.272V341.256Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.266 370.364C232.266 370.364 232.287 370.462 232.307 370.462C232.349 369.97 232.37 368.658 232.37 366.969L232.245 366.871V370.364H232.266Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.148 402.174L229.416 399.075C229.458 409.028 229.169 413.684 229.313 422.195L229.272 421.719C229.21 422.965 229.767 423.67 228.983 437.362H228.962C228.962 437.838 229.004 437.838 228.942 438.789L229.107 436.428C229.169 437.854 229.272 439.084 229.272 440.986C229.251 441.38 229.189 441.527 229.148 441.56V446.2L228.983 447.627C229.066 449.053 229.396 448.398 229.189 452.202C229.437 450.775 229.313 454.087 229.437 453.612C229.416 453.809 229.355 454.235 229.313 454.596C229.313 456.859 229.355 461.106 229.478 462.155C229.478 462.155 230.036 453.333 230.304 450.956C230.222 454.137 230.325 451.792 230.407 451.169L230.345 450.956C230.407 449.053 230.573 449.054 230.614 448.102C230.614 448.102 230.593 448.135 230.573 448.152V448.266C230.573 448.348 230.552 448.299 230.531 448.201C230.49 448.217 230.469 448.135 230.49 447.611V447.709C230.49 446.922 230.531 445.544 230.531 444.938H230.655C230.428 443.511 231.089 435.444 231.109 433.542C231.274 431.64 231.109 429.278 231.192 426.901C231.254 423.113 231.378 425.015 231.501 423.113C231.605 420.735 231.357 423.588 231.357 422.637L231.543 419.801C231.543 421.457 231.625 420.555 231.687 420.26C231.729 417.8 231.976 413.93 231.749 413.16C231.894 409.848 231.997 409.831 232.018 408.405C231.976 408.88 231.914 409.831 231.873 409.831C231.997 408.503 231.852 409.192 231.832 409.733C231.749 407.699 232.369 399.222 232.1 398.796H232.141C231.935 398.32 231.749 399.074 231.646 397.664L231.749 396.713L231.667 395.287C231.749 394.336 231.79 394.795 231.811 394.795C231.729 392.483 231.873 389.252 231.914 386.432L231.336 389.4C231.481 387.039 231.77 382.759 231.605 382.284L231.811 380.857C232.203 376.118 231.687 377.545 231.811 375.643L232.038 373.265V375.643C232.141 373.265 232.203 372.314 232.348 370.428V370.412C232.348 370.543 232.348 370.625 232.307 370.642V370.314C232.203 370.018 232.141 368.789 232.162 367.116C232.203 364.739 232.079 362.886 232.307 359.098L232.1 358.147L232.245 355.294H232.41C232.389 358.081 232.41 363.328 232.389 366.919L232.472 366.985C232.472 364.853 232.43 362.443 232.472 361.033C232.513 360.344 232.699 358.59 232.802 359.869L232.658 358.557C232.699 351.457 232.678 351.424 232.926 344.012L232.843 344.652C232.802 343.176 232.761 341.717 232.905 341.307C232.967 336.863 233.112 332.255 233.339 329.37L233.153 328.73C233.153 327.795 233.483 326.385 233.215 325.926L233.153 323.926C233.174 322.647 233.07 321.86 233.194 320.4C233.194 320.318 233.194 320.22 233.215 320.121C233.318 317.219 233.05 320.154 233.174 316.826C233.318 315.76 232.947 315.645 232.988 314.022L233.277 312.398C233.463 309.463 233.174 308.955 233.215 304.708C233.339 302.658 233.566 301.674 233.772 303.035C233.525 301.166 233.607 302.183 233.504 299.723C233.607 299.346 233.628 299.608 233.731 300.149C233.876 297.952 233.648 298.805 233.669 297.149C233.483 296.673 233.174 296.116 233.153 295.575L233.091 296.214C233.008 294.46 232.967 292.558 233.091 290.524L233.194 290.606L233.153 288.442L233.277 288.311V285.212L233.215 285.638C233.215 284.916 233.174 282.522 233.256 281.161L233.318 281.211C233.566 277.374 233.318 274.193 233.318 269.7L233.463 270.29C233.607 268.749 233.236 269.864 233.339 268.044L233.525 267.945C233.297 266.338 233.587 265.863 233.69 264.764L233.463 265.289L233.525 263.206C233.628 260.911 233.834 261.796 233.937 262.141L233.772 260.566L233.979 260.255C233.752 259.107 234.02 259.107 233.917 257.107C233.999 256.943 234.041 257.451 234.082 256.762L233.814 253.45L233.917 255.45L233.628 255.204C233.421 253.122 233.69 252.384 233.628 250.908L233.71 251.925C233.648 249.498 233.793 249.367 233.855 248.006C233.793 248.432 233.71 249.072 233.669 248.104C233.669 247.383 233.772 247.711 233.814 247.039C233.607 246.875 233.525 245.137 233.628 243.562C233.648 243.579 233.69 243.612 233.71 243.726C233.69 243.316 233.628 243.12 233.69 242.415L233.917 242.825L233.71 241.48C233.772 240.578 233.628 239.266 233.772 239.397L233.814 239.906L233.917 233.101L234.103 233.003C233.855 232.33 234.226 229.297 233.917 229.526C234.082 228.247 233.834 224.476 234.165 225.23C234.226 220.77 233.917 218.343 234.123 212.916C234.433 210.981 234.371 205.685 234.433 202.192C234.371 195.371 234.288 190.976 234.247 184.007C234.681 179.826 234.185 173.562 234.454 169.053L234.309 167.823C234.598 164.822 234.309 160.248 234.598 156.05C234.536 155.017 234.515 154.476 234.515 154.246C234.515 154.443 234.474 154.722 234.371 154.82C234.454 153.623 234.371 151.196 234.577 151.36V151.672C234.804 151.852 234.536 148.032 234.722 146.687L234.495 147.425L234.557 145.146L234.598 145.752C234.185 135.881 234.908 131.421 234.536 122.14C234.763 123.37 234.433 120.304 234.681 120.189C235.032 117.844 234.639 115.86 234.577 113.942C234.577 113.942 234.557 113.925 234.536 113.81L234.598 110.465C234.908 112.466 234.35 108.055 234.598 109.891C234.908 101.152 234.743 89.7556 234.928 79.6385L234.846 80.0812C234.887 77.5232 234.804 74.3257 234.949 72.3744C235.093 70.4232 234.763 68.1112 234.763 67.3569C234.639 65.2252 234.928 63.2903 234.908 64.1922C234.887 61.913 234.598 59.7649 234.743 56.6002C235.032 55.518 234.536 47.9589 234.846 47.8769V47.8441C235.073 43.7939 234.722 39.957 234.949 35.5953C234.949 35.5953 234.97 35.6773 234.99 35.8248L234.103 26.9375L233.029 29.4627L232.121 37.153V58.0268L231.687 74.6865L231.501 115.237L231.708 118.139C231.233 126.108 231.646 136.324 231.274 144.9L231.481 145.08C231.481 147.507 231.357 147.343 231.316 147.933C231.192 170.447 231.316 193.616 230.882 213.867C230.738 215.818 230.758 221.754 230.614 223.295C230.82 229.871 230.758 236.839 230.696 243.431V243.185V246.284C230.696 246.416 230.655 246.432 230.634 246.334C230.8 249.826 230.573 255.352 230.469 259.632V259.386C230.222 284.392 230.428 307.594 229.974 332.387C229.561 343.914 229.912 357.327 229.54 370.543C229.313 372.97 229.272 399.73 229.355 402.092L229.148 402.174Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.127 441.56V441.461C229.127 441.461 229.067 441.626 229.127 441.56Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.893 386.3C231.893 386.3 231.893 386.415 231.893 386.48L232.018 385.824L231.893 386.3Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.708 421.702C231.748 420.112 231.708 420.03 231.708 420.259C231.708 420.833 231.708 421.341 231.708 421.702Z\",\n    fill: \"#202020\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.8576 401.473C36.9608 401.965 36.3002 402.375 36.0112 402.178C36.7544 403.195 35.8667 403.195 37.3531 403.359C38.0756 404.015 37.0228 404.671 36.4241 403.933L37.2705 405.786L37.5595 404.687C38.7981 405.015 37.1053 406.442 38.5504 406.802L38.5091 404.818L38.922 404.917C38.4885 404.457 38.7156 403.588 38.922 403.277C39.1284 403.326 39.4587 403.31 39.4794 403.654C39.6652 401.26 37.3118 402.965 36.9815 400.965C37.0021 401.096 36.9815 401.244 36.8576 401.457V401.473Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.997 399.506L38.4694 398.62L38.9235 397.226C38.3868 397.193 37.9946 396.16 37.4785 396.833C37.561 396.964 37.7055 397.243 37.6436 397.456C36.4876 397.259 37.1275 395.57 35.9302 395.947C36.1985 397.079 35.9302 397.243 36.8591 397.948C36.7146 398.964 36.405 399.702 35.9715 400.161C36.1366 400.473 36.8591 400.522 36.983 400.916C36.983 400.834 36.9624 400.752 36.9417 400.653H38.6964C38.3455 400.325 38.5313 400.03 38.5106 399.67L40.4924 401.358C42.1646 400.867 41.2563 399.243 41.9788 398.62C40.4718 399.374 41.2769 397.964 39.997 399.489V399.506Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.6386 276.804C42.6386 276.443 42.267 276.312 42.0605 276.247L41.5444 280.198C42.0192 280.116 42.7418 279.034 42.9276 279.821C43.4849 279.526 43.1959 278.46 42.5973 278.247L43.2579 278.591C42.494 277.607 44.3313 277.132 44.7855 277.771V277.689L41.6889 274.869C41.3586 275.771 42.7831 275.689 42.6592 276.804H42.6386Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.9368 195.752C49.1226 196.26 49.3084 196.309 49.4735 196.244C49.329 196.064 49.1845 195.9 48.9368 195.752Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.9466 274.212L39.9763 273.326C40.224 273.671 40.575 273.982 40.9466 274.212Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.6353 281.135C56.6353 281.135 56.7386 281.152 56.8211 281.135L56.3257 280.725C56.4289 280.873 56.5321 281.004 56.6353 281.119V281.135Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.0664 256.062C39.0664 255.98 39.0256 255.897 39.0256 255.799C39.0256 255.897 39.046 255.98 39.0664 256.062Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.2174 292.498L60.4536 290.628C60.9077 290.907 60.8871 290.038 61.4032 290.464C61.3412 290.317 61.238 289.677 60.9697 289.825V290.186C59.6485 289.12 59.0085 289.628 58.1621 287.988C57.1712 288.874 57.8731 289.366 58.4511 289.923C58.5337 290.104 58.5543 290.251 58.575 290.399L60.3503 292.055L61.2174 292.481V292.498Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.1839 220.447L57.7297 220.365C57.9568 220.464 58.1633 220.842 58.1839 220.447Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.8347 274.574C41.5663 274.525 41.2567 274.394 40.947 274.197L41.6696 274.853C41.6902 274.771 41.7728 274.673 41.8347 274.558V274.574Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.7659 276.18V277.673L45.4265 278.279C45.22 277.689 45.1168 277.017 44.7659 276.164V276.18Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.973 258.324C38.1175 255.274 39.5832 259.193 40.1612 257.815C40.0786 256.963 39.2942 256.602 39.0877 256.061C39.5213 258.52 36.4866 255.552 36.6311 258.012C35.2274 257.569 35.2686 256.159 35.7228 255.356C37.2092 254.519 36.6724 256.241 38.0143 256.536C37.8904 255.552 37.6014 255.7 36.8582 255.241C37.333 253.732 35.4338 251.978 37.4775 251.191C37.2711 250.059 36.5898 250.092 35.9292 249.42C34.4429 249.207 34.9796 251.01 33.7616 251.338C33.9062 251.256 34.1745 251.109 34.381 251.174L33.9681 252.109C34.5874 251.24 35.4544 252.322 35.5164 252.83C35.5164 253.191 35.5164 253.88 35.1035 253.765L34.8351 253.208C34.2984 253.863 35.7847 254.798 34.8971 255.454C34.5667 255.454 34.4222 255.192 34.2158 255.126C35.1654 256.012 35.0209 256.782 35.5989 258.045L34.1952 257.241C35.7228 258.324 35.0003 260.472 33.9474 261.915C34.2158 261.767 34.4429 261.472 34.6906 261.685C34.9383 262.603 33.8442 263.194 33.101 262.718C34.2365 263.685 31.656 265.932 33.1217 267.244C35.4338 269.261 37.7046 271.277 39.9548 273.327C39.7896 273.114 39.6658 272.868 39.6451 272.638C41.0076 272.245 40.9044 271.966 41.9985 272.95C41.4205 272.032 40.3264 272.278 40.4709 270.982C41.0489 271.54 42.5352 271.802 42.8655 270.572C41.9366 267.375 38.4684 265.046 36.9201 262.046C37.9317 262.013 37.9317 259.75 38.3033 258.668C39.3355 259.16 39.5419 259.996 39.6658 260.849C39.7896 260.324 39.9341 259.422 40.058 258.75L37.973 258.324Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.4922 265.704C40.4922 265.704 40.658 265.555 40.6995 265.473C40.6166 265.506 40.5336 265.572 40.4922 265.704Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.5833 261.114C39.5833 261.114 39.645 261.115 39.6862 261.131L39.645 260.852C39.6244 260.934 39.6038 261.049 39.5833 261.098V261.114Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.188 274.049C44.4564 274.262 44.5183 274.393 44.766 274.606C44.6834 274.492 44.6215 274.344 44.5596 274.196C44.4357 274.049 44.3119 273.983 44.188 274.049Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.3489 274.508L41.9566 274.377C41.9566 274.377 41.8741 274.508 41.8328 274.574C42.0598 274.607 42.2456 274.607 42.3489 274.508Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.2339 247.24L48.0481 246.928C48.0481 247.109 48.1307 247.191 48.2339 247.24Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.037 255.061C40.037 256.127 41.5233 255.291 41.3788 256.783L41.5233 256.357C42.0601 257.472 41.5233 259.358 41.4201 260.637C40.8421 260.456 40.5944 261.358 39.686 261.145C39.7893 262.03 39.8925 262.916 40.8008 263.44C40.4292 263.965 41.1724 264.851 40.6769 265.507C41.2756 265.261 42.4523 266.638 41.9775 264.9C42.0394 265.047 42.1839 264.965 42.2459 265.113C43.1542 264.096 41.8743 263.555 41.9775 262.621C42.5968 262.112 42.762 263.604 43.051 263.096C42.6794 261.899 44.1657 259.489 42.0601 259.423C42.0188 258.57 42.4936 258.489 42.9065 258.259C40.8627 256.767 44.3515 253.356 41.5233 253.176C41.5853 253.668 41.4408 254.455 41.9981 255.225L40.037 255.094V255.061Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.2903 272.246C44.2903 272.246 44.3104 272.098 44.3505 272.049C44.3304 272.115 44.3104 272.18 44.2903 272.246Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.1955 284.921L32.4201 284.298C32.3582 281.74 32.9775 280.871 33.2252 278.674C33.4936 278.526 33.6174 278.805 33.6794 278.952C33.6794 277.378 34.4019 275.099 33.6794 273.902C33.7619 273.41 34.5258 272.164 35.0006 272.705C34.8767 272.459 34.7528 272.164 34.8561 271.885C35.5373 271.869 34.9593 272.525 35.496 272.574C35.5786 272.361 35.7025 272.279 35.496 272.213C36.0121 272.623 37.8081 272.016 37.5191 273.738C35.8676 274.263 37.5191 272.525 35.7231 272.771C35.6405 273.344 36.3011 273.328 36.5076 273.394C36.3631 274.115 35.9295 274.066 35.558 273.984C36.0534 274.312 35.1864 275.148 35.9295 275.607C35.8676 277.034 34.6496 275.41 34.5464 276.345L36.2186 277.034L35.6818 278.542C35.9915 280.822 38.7371 278.493 39.3564 281.117C38.4894 280.707 36.8379 281.576 36.3011 282.724C36.3424 282.002 35.3928 280.608 36.0328 279.739C34.4845 280.904 36.1153 277.952 34.4638 278.477C35.1038 279.182 35.0625 280.248 34.5464 281.035L34.4225 280.756C34.1129 281.609 35.847 282.445 34.9799 283.593C34.9386 284.199 34.4638 284.035 34.0716 283.904C34.2574 284.445 34.5258 284.921 34.1335 284.888L34.1955 284.921ZM34.0303 283.576L34.3193 282.789C34.0097 282.953 33.9684 283.248 34.0303 283.576Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.41 388.24C40.41 388.24 40.3063 388.405 40.2441 388.488C40.3271 388.438 40.3685 388.339 40.41 388.24Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.3195 316.584L50.1948 317.043C50.2779 316.863 50.3195 316.715 50.3195 316.584Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.3845 327.668L54.6942 328.389C54.6942 328.111 54.591 327.898 54.3845 327.668Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.9467 382.665C40.9467 382.665 40.8847 382.566 40.864 382.533L40.926 382.665H40.9467Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.1808 348.328C47.0157 348.427 46.8712 348.525 46.7473 348.673C46.9125 348.673 47.057 348.542 47.1808 348.328Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.3446 327.537C54.3446 327.537 54.3239 327.57 54.3032 327.57L54.4066 327.669L54.3446 327.537Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.1203 312.453C56.0787 312.338 56.0579 312.256 55.9956 312.141C55.9956 312.289 56.0579 312.387 56.1203 312.453Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M51.1039 312.617C51.0831 312.502 51.0416 312.387 50.9792 312.305L51.1039 312.617Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.0292 296.662L56.8838 296.006C56.8838 296.317 56.9253 296.514 57.0292 296.662Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.5076 311.059C52.5076 311.059 52.3625 310.976 52.2795 310.943C52.321 311.042 52.4246 311.092 52.5076 311.059Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.8992 392.029V391.996H34.6919L34.8992 392.029Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.3535 393.67C37.3951 393.85 37.4366 394.047 37.4782 394.227C37.4782 394.031 37.4574 393.817 37.3535 393.67Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.1355 357.234C42.8671 357.382 42.5162 357.743 42.2478 357.546C42.5781 357.89 43.4451 357.939 43.1355 357.234Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.2041 388.455C24.4312 388.57 24.5963 388.701 24.7821 388.833C24.555 388.586 24.3486 388.356 24.2041 388.455Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.761 388.846C24.8848 388.977 25.0087 389.109 25.1326 389.207C25.0294 389.076 24.9055 388.961 24.761 388.846Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.2404 351.758C29.3647 351.725 29.4684 351.675 29.5098 351.576C29.2611 351.576 29.1989 351.642 29.2404 351.758Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.1681 394.651C37.581 394.765 38.3861 397.209 38.6751 395.192C39.9757 395.307 39.2118 396.504 39.5215 397.061C39.8518 396.684 40.3472 397.274 40.822 397.176C40.6775 396.897 40.306 396.569 40.4298 396.143C41.0285 395.962 41.4001 396.635 41.173 397.159C41.8749 396.536 42.1639 398.012 42.7213 397.11C42.3497 395.159 41.8955 393.765 40.1202 392.322C40.3266 393.454 40.6982 394.7 40.1202 395.602L39.0054 395.175C40.0376 394.175 39.3151 393.519 39.5008 392.503C39.2325 393.257 39.0054 394.011 38.7783 394.765C37.8081 395.798 37.6223 395.077 37.4365 394.224C37.4158 394.438 37.3333 394.618 37.1475 394.667L37.1681 394.651Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.4029 392.75L27.3616 392.783C27.3616 392.783 27.4236 392.865 27.4649 392.882L27.4029 392.75Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.4633 294.578L34.071 294.348C34.2362 294.528 34.3601 294.594 34.4633 294.578Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.6173 299.467C33.6173 299.467 33.5553 299.45 33.5347 299.434C33.576 299.45 33.5967 299.45 33.6173 299.467Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.4399 303.139C57.4399 303.139 57.5436 303.139 57.6058 303.123C57.5643 303.007 57.5021 303.057 57.4399 303.139Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.72 299.465C33.72 299.465 33.658 299.465 33.6167 299.465C33.658 299.465 33.6787 299.481 33.72 299.465Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.0308 323.669C34.0308 323.669 34.2372 323.62 34.4436 323.505C34.3404 323.456 34.2166 323.489 34.0308 323.669Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.4243 319.142C36.4243 319.142 36.5078 319.109 36.5704 319.076L36.4243 319.142Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.3153 356.544C48.3559 356.314 48.3559 356.134 48.3153 355.986C48.2747 356.15 48.2544 356.331 48.3153 356.544Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.5343 299.416C33.4311 299.35 33.3072 299.268 33.1833 299.137C33.3279 299.285 33.4311 299.367 33.5343 299.416Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.5516 331.407L38.4479 331.242L38.3857 331.325L38.5516 331.407Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.3541 333.767C37.2303 333.669 37.1064 333.619 37.0032 333.57C37.3335 334.489 36.5903 336.046 37.7464 336.358C37.7464 336.063 38.696 334.587 39.3566 334.915C39.1501 334.275 40.1204 333.456 39.9759 333.111C39.1708 334.046 38.9643 333.111 38.6547 332.406C39.0882 331.832 39.5836 332.619 39.8933 332.111L39.9759 330.668L39.6249 331.898L38.5515 331.406C38.5515 331.406 38.6134 331.488 38.634 331.537C38.8405 333.685 36.9412 331.537 37.3541 333.767Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.0037 333.572C36.9624 333.441 36.8798 333.31 36.7766 333.211C36.7766 333.408 36.8592 333.507 37.0037 333.572Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.844 341.982C33.8648 342.097 33.9063 342.213 33.9687 342.377C33.9479 342.295 33.8856 342.13 33.844 341.982Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.1154 279.33C44.7645 279.33 43.9181 280.494 44.7851 280.56C44.9296 280.199 45.0741 279.855 45.2186 279.494L45.1154 279.346V279.33Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.8271 365.808C35.8684 365.677 35.889 365.546 35.9096 365.398C35.8684 365.366 35.8271 365.333 35.7858 365.316C35.6413 365.382 35.7858 365.677 35.8477 365.808H35.8271Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.7074 335.327C39.6042 335.097 39.4803 334.982 39.3564 334.916C39.3977 335.064 39.501 335.212 39.7074 335.327Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.7207 365.725C33.4524 365.872 33.0395 366.102 32.6886 366.118C32.6473 366.479 33.0808 366.758 33.2046 367.135C33.1221 366.708 33.2459 366.249 33.7001 365.725H33.7207Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.5712 278.64C45.5093 278.526 45.468 278.411 45.4267 278.296L45.6331 278.493L46.0253 277.673C45.9841 277.575 45.9428 277.46 45.9428 277.312C45.9634 277.361 46.046 277.427 46.1492 277.46L46.2937 277.197C45.468 276.443 45.0551 274.721 44.5803 274.197C44.2706 273.524 44.1674 272.737 44.3119 272.245C44.2293 272.688 44.3119 273.311 44.8486 273.18C45.4886 272.311 47.0782 271.983 45.9841 270.294L45.8808 271.229L44.188 268.982C45.0964 268.31 45.0344 270.097 45.695 270.458C44.9312 268.753 47.6562 267.605 46.0666 266.72C47.0782 266.687 48.771 266.654 48.8123 265.572C47.5736 266.26 48.1517 264.867 46.8511 265.408C46.3144 264.998 47.3672 264.244 46.6034 264.129L47.0162 264.26C48.8329 262.555 46.4176 261.768 45.6744 260.931C45.5093 258.718 46.3144 257.767 46.3144 255.979C46.9956 255.963 48.8948 255.602 48.8948 254.881C48.0071 254.487 47.7594 252.847 46.6034 252.618C45.9841 253.864 47.4704 253.716 47.6768 254.504C46.3969 255.061 46.4589 254.487 45.6538 255.307C46.1905 254.635 45.3235 252.11 46.5414 251.404L46.6859 251.683C47.5117 250.503 50.4018 250.437 48.8535 248.289L48.2342 247.272C48.3374 247.322 48.482 247.338 48.5852 247.371C48.8535 245.78 50.1541 246.288 49.2664 244.468C49.3283 244.616 49.4729 244.534 49.5348 244.665C50.2986 243.698 49.0187 242.615 48.8123 241.828C49.8238 241.418 49.7619 241.992 50.4431 242.304C50.9386 240.549 49.3903 238.549 48.2755 237.418L48.9155 236.303C49.2664 236.991 50.2367 237.86 50.856 237.68C50.7115 237.04 50.2367 237.139 50.4844 236.27C51.1037 236.45 51.6611 236.844 52.4043 237.286C53.5603 235.483 50.216 236.778 52.2185 235.581C52.2598 235.007 51.3721 234.63 50.6289 234.548L51.6817 233.531C50.7321 233.384 50.7528 232.088 50.6702 231.236C50.2573 231.121 49.5967 231.875 49.9477 232.22C49.2045 232.138 48.8948 231.219 48.9568 230.645C51.0005 230.498 48.7916 226.858 51.145 227.596C50.567 224.972 50.4844 221.315 49.6999 219.594C50.278 219.036 50.3399 217.888 51.2689 218.577C51.3721 216.478 49.2251 215.396 49.7825 213.33C50.0302 213.166 49.8032 214.265 50.4844 214.199C49.6586 212.838 51.3101 211.723 50.7528 209.624C50.7941 209.985 51.2069 210.083 51.4134 210.132C51.0831 210.165 50.7115 209.28 50.3812 208.739C50.5463 208.427 50.6289 209.149 50.8766 208.968C51.3514 206.935 50.8766 205.131 50.3193 203.36C49.6587 201.589 48.8948 199.835 48.8329 197.818C48.8742 198.966 50.2367 199.359 50.7734 199.359L50.7321 198.228C50.0509 197.818 49.9889 196.965 49.4522 196.277C49.6999 196.178 49.9477 195.818 50.278 196.162C51.4959 193.866 47.6356 192.784 48.1723 190.029L51.0418 193.21L51.9295 192.341L53.23 193.751C53.9113 192.833 52.1772 192.161 53.1681 192.013C53.4571 192.177 53.3952 192.636 53.9525 192.62C54.3035 191.751 53.5397 191.735 53.3126 191.112C55.4595 192.686 55.6247 195.965 56.2234 197.72C56.4092 197.998 55.7073 197.49 55.5008 197.457C55.6041 198.179 54.9847 198.621 55.3976 199.523C56.3059 200.064 56.0169 199.081 56.0789 198.621C56.8427 198.654 56.8014 198.884 56.9459 199.376C55.955 199.507 56.7395 202.131 55.5628 202.803C55.955 205.459 58.1845 202.327 57.7923 204.934L56.6569 205.738C57.5652 207.23 58.3703 209.181 58.1432 210.903L58.102 210.542C57.6065 210.313 57.2968 210.706 57.0491 210.887C56.5743 212.182 57.9781 213.346 56.8427 214.133C58.102 215.609 59.0103 218.085 59.547 219.774C57.9987 220.217 58.329 217.56 57.4001 216.855L57.3588 218.397C57.3588 217.446 56.822 217.068 55.9343 216.495C55.6453 217.839 56.9459 218.282 57.2968 219.561C56.884 219.462 56.6362 219.626 56.595 220.217L57.6065 220.397C57.6065 220.397 57.4413 220.463 57.3794 220.659L57.9162 222.939C58.3703 222.463 59.2374 222.463 59.2786 221.873C58.68 222.07 58.5768 221.578 58.618 220.987C59.258 221.512 59.1961 220.43 59.7328 220.446C59.6709 221.627 59.7534 223.086 60.0012 223.857L59.0722 224.086C58.8038 225.202 59.2786 226.399 58.9896 227.153L58.4942 226.907C58.1639 228.251 58.7213 229.596 57.7717 230.76C58.7626 231.99 59.5264 233.531 60.5792 234.548C61.7352 235.122 58.8451 238.008 60.4347 239.434C60.2902 239.516 59.5883 238.467 59.1754 237.975C58.9277 238.86 60.3728 239.648 59.0929 239.877C59.6502 237.877 58.0813 239.943 57.7923 239.008C57.751 239.959 57.9162 240.959 58.329 241.451C58.4322 239.926 60.0425 242.074 59.5883 240.5C60.5586 241.746 60.8889 243.419 60.3728 244.829C59.836 244.78 59.5677 244.944 59.2786 245.469L60.0218 245.944C59.8154 246.6 59.2167 244.6 58.8038 245.944C60.0218 247.403 57.6271 250.06 60.0631 250.814C58.969 251.814 59.258 248.748 57.8955 250.273C57.0904 249.289 58.2465 248.076 57.0285 247.715C57.2968 248.633 55.9344 247.977 55.8724 248.568L56.533 249.617L56.595 249.404C57.6065 251.158 56.7807 253.815 56.7807 255.979C57.8749 257.898 59.5264 259.275 59.1135 261.472C58.4529 260.767 58.1845 263.243 57.0078 261.768C56.244 262.735 56.884 263.784 57.4207 263.85C57.7097 262.965 57.6271 263.555 57.9987 262.817C58.5974 263.374 58.4322 264.539 57.9368 264.998C58.0194 264.785 57.8749 264.85 57.6684 264.785C57.0904 265.818 58.2671 265.342 58.4323 266.129C57.4826 266.31 57.9781 267.818 57.4207 268.474L58.618 269.605C57.8129 268.982 58.1845 270.556 57.3794 270.655C57.8955 271.442 58.8864 272.147 58.4942 273.229C58.1019 272.737 57.7097 274.18 56.822 274.131C55.7279 275.951 58.7626 277.493 57.2556 279.181C57.0491 279.099 56.533 278.69 56.244 279.198C56.4298 279.641 56.244 280.346 56.244 280.805C56.244 281.034 56.3472 281.166 56.5537 281.198C57.2968 282.035 58.1226 282.51 58.6387 284.068C59.6502 284.051 59.4438 282.756 59.1961 282.166L58.2671 281.608C59.836 281.297 58.1845 280.231 58.7419 279.936C60.3934 280.985 59.5883 283.543 60.4553 285.199C61.983 284.379 62.4784 282.33 62.561 280.526L61.8591 281.264L61.9623 280.313L60.765 281.133C61.0746 280.264 60.9095 279.46 61.0747 278.657C60.9714 279.608 59.5264 279.854 59.8154 279.329C60.9508 278.362 59.3199 278.181 59.5057 277.378C59.3612 277.82 59.258 278.394 58.7419 277.968C60.1663 276.492 59.4438 276 60.9301 274.672C59.2374 274.705 61.0127 272.869 59.6709 272.524L59.4438 273.18L58.618 271.688C60.1457 270.491 59.8567 272.967 61.0747 271.048C61.4669 269.212 59.7122 269.13 59.7535 267.671C60.6824 268.228 61.405 269.441 61.2192 270.606L61.7765 269.933C62.2926 270.36 62.0036 271.967 61.8178 272.77C60.8682 271.344 61.3843 273.36 60.4141 273.885C61.3637 274.082 61.3224 273.213 61.9623 274.279C62.0656 273.328 62.0243 273.196 62.5404 272.016C61.7559 274.574 65.5337 274.623 64.4189 276.837C64.1299 275.754 62.9945 277.083 62.4991 277.165C62.5404 277.673 62.6436 278.69 62.8087 279.116L64.2331 278.87C64.646 280.247 61.6527 280.444 62.8707 282.1C63.6758 282.379 63.3455 280.788 63.4693 281.067C64.0474 283.232 61.7146 283.789 60.4141 285.544C60.8063 285.691 61.694 285.74 62.3339 286.462C61.5288 286.183 61.0334 286.626 60.5379 285.839C60.1044 286.429 60.5998 287.216 60.8269 287.79C61.5082 286.56 61.9417 288.43 62.3959 288.708C62.1481 289.364 61.5907 288.43 61.4256 288.003C61.1159 288.512 59.8154 289.036 60.9921 289.463C60.125 289.397 58.9277 287.757 58.8451 286.741L58.5974 287.397C58.2258 286.888 58.3703 286.823 58.5974 286.167C57.8129 286.757 57.0904 286.609 56.4917 286.413C56.6362 286.347 56.6982 286.478 56.822 286.413C57.1317 285.904 56.9459 285.478 56.4711 285.56C55.377 284.97 55.6247 286.232 54.9847 286.527C55.026 286.806 55.0673 287.085 55.088 287.364L58.4323 290.479C58.68 291.709 57.7097 292.152 57.0078 292.988L57.9781 293.332C57.7097 294.349 57.2556 295.284 56.0789 294.513C56.4298 294.513 56.3679 294.365 56.4504 294.152C56.3266 294.103 56.2234 294.054 56.1614 293.972L55.9963 293.906C56.1614 295.038 56.2647 295.743 56.2853 295.808C55.1086 293.791 54.4686 295.546 52.7346 295.054L53.0236 296.989C53.7668 295.907 53.8906 297.055 54.0764 297.481C53.0649 297.481 53.8493 299.006 53.6016 299.645L53.3952 299.58C52.941 300.154 52.8791 301.236 53.0236 302.023C53.3745 302.023 54.8609 303.154 55.7692 303.728C56.3472 302.466 56.6362 303.269 57.2762 303.236C57.1936 303.368 57.1523 303.613 57.2762 303.646C57.5239 303.859 57.6891 303.433 58.04 303.433C57.7923 301.99 57.8955 300.564 56.5743 299.858C55.8724 300.219 57.0698 300.646 56.5743 301.088C55.7486 300.301 56.0789 299.432 56.2646 298.284L57.173 297.989L56.884 296.776C57.2556 297.301 58.1845 297.104 58.1639 298.334C58.9896 298.252 58.1639 297.104 58.5561 296.382L57.5033 295.89C58.1019 296.104 58.4735 294.513 59.1341 295.726L59.7741 297.678L60.6205 297.235V298.825L60.0838 298.399C60.476 300.99 57.751 298.924 58.68 301.58C59.898 302.498 59.9186 303.368 59.3406 304.876C59.2167 303.728 58.4116 304.663 57.6891 304.171C56.9459 305.253 57.9987 305.745 58.4323 306.401C57.6684 306.614 57.0491 306.762 57.3175 305.762C55.8518 305.483 57.3588 307.122 55.8105 307.073C55.315 310.451 60.3521 310.287 57.7923 314.026L57.1936 313.813C57.5652 316.387 56.595 317.748 56.7188 320.109L54.8402 321.765C54.6544 321.339 53.6635 320.126 52.8171 320.552C54.5512 319.83 54.1383 318.83 55.1499 317.961C54.7577 317.83 54.3861 318.174 54.0971 318.322C54.2003 317.748 54.9641 317.535 54.7989 316.748C54.4686 316.748 53.9319 317.535 53.8493 316.895L55.0054 315.961C54.7577 314.534 52.7552 315.042 53.4777 313.468C54.3035 313.862 55.4802 314.6 55.5834 315.256C55.8931 314.534 55.955 316.305 56.595 315.682C55.4596 314.485 56.595 314.075 55.9963 312.566C56.1408 312.747 56.3885 312.829 56.4298 313.19L57.2968 311.173C56.4504 311.615 56.7395 309.369 55.5834 309.451C54.7577 311.615 55.5421 311.041 54.5099 313.485C54.3654 312.747 53.3745 311.714 52.3836 311.173C52.4249 311.156 52.4662 311.123 52.5075 311.041C51.4547 310.55 51.0831 310.91 49.1426 310.697C50.3399 311.993 49.0806 312.632 49.6587 314.075C50.6908 314.436 51.145 313.435 50.9799 312.73L51.4959 313.993L51.0418 313.714L50.1954 316.699C50.2367 316.125 49.638 315.862 49.2251 315.518C49.1219 315.911 48.771 316.256 48.3994 316.649C49.4316 316.649 50.1541 316.797 50.0715 317.174C49.5141 319.093 48.4407 320.076 47.1607 320.683C47.1607 320.765 47.1814 320.847 47.202 320.913C48.2962 320.683 48.8535 322.487 49.8444 323.192C48.771 323.061 49.0393 324.127 48.3994 324.635C49.5967 325.061 51.3721 324.832 52.4868 324.241C51.5579 322.815 51.4547 323.389 49.9477 322.602L49.2045 320.388L50.1128 320.962C50.7115 319.945 49.5761 318.814 50.856 319.011C51.6198 319.65 50.9592 320.519 51.723 321.159L52.3011 320.503C53.3745 321.864 50.9798 321.011 51.6198 322.585C52.7965 322.142 51.6817 322.733 52.3011 323.438C53.1474 322.995 52.4043 320.781 54.2003 321.421C54.8815 322.274 51.5992 323.799 53.292 325.012L53.0855 324.946C52.6107 326.439 53.581 327.062 54.159 327.701C53.4571 328.275 54.159 329.242 54.1383 329.948L53.6016 329.882L53.6842 330.882C52.7759 330.325 53.8906 329.734 53.87 328.882H52.8584C54.2003 328.029 52.4868 327.209 51.7437 326.373C52.4456 327.554 51.0211 329.439 52.941 329.898L51.8262 330.472L52.1359 330.833C51.2895 331.259 50.1747 330.636 50.1128 329.636C50.4018 329.488 50.5257 329.423 50.7321 329.488C50.3605 328.997 49.638 328.505 50.0302 327.422L50.4638 328.062C50.7528 326.701 50.5463 325.422 49.638 324.848C48.8948 326.783 48.5232 328.718 48.2755 330.587C50.4638 331.358 51.6405 332.128 53.7048 332.62C53.9113 333.899 53.9319 335.621 53.0029 336.621L52.6107 336.49C52.3217 336.998 52.3423 337.49 52.5281 337.917C51.8882 338.425 51.4753 337.425 51.1037 337.785L51.5372 339.638C50.5876 339.442 50.8147 337.933 50.8766 337.212C50.9386 337.359 51.0624 337.638 51.1863 337.572C51.7024 336.785 50.3193 335.08 51.7643 334.85C51.5785 334.424 52.652 335.769 52.941 334.408C53.6016 333.539 52.4043 333.129 52.012 332.997C51.4753 332.932 51.0418 334.358 50.4638 333.801C50.4225 334.522 51.0831 334.867 50.4225 335.736C50.4638 335.031 49.5141 333.965 50.4225 333.67C49.638 332.178 47.0575 332.128 46.8098 332.768C47.6356 332.686 47.4085 335.408 48.7297 333.686C49.638 334.604 49.4109 336.113 49.8857 337.244L49.6793 337.179L49.7206 338.54C49.4729 338.327 49.2871 337.9 48.7503 337.835L49.927 339.819C49.1013 338.687 49.1426 340.393 48.6471 340.835C49.4522 341.114 49.9477 341.885 50.5257 341.245C51.2482 340.524 50.1335 340.753 50.1747 340.032L51.3308 341.163L51.1863 341.229L52.1772 341.934C51.9088 343.295 49.7825 341.114 50.567 342.951L52.0533 342.852C51.5579 344.853 49.5348 347.296 50.0096 348.788C49.2458 348.329 47.9246 348.034 47.0575 348.493C47.3878 347.903 47.5117 346.656 47.5117 345.755C47.8007 345.607 49.0806 347.017 48.6265 347.952C51.0831 347.706 47.5323 345.41 49.9683 345.509C51.1656 343.147 47.9039 343.475 49.6174 341.524C48.5439 341.393 49.1632 340.885 48.2342 340.688C46.3763 341.131 47.9039 343.475 47.0782 344.771C47.0162 344.64 46.8924 344.344 46.7066 344.279C46.2524 345.213 46.4382 345.64 46.7479 346.345L46.8924 346.279C47.7801 347.558 45.9841 346.935 45.406 347.591C45.5299 347.87 45.0757 348.804 45.9015 348.722L44.7041 349.887L45.9221 349.936C45.9015 350.657 45.0757 350.739 45.7157 351.444L46.7892 351.576L47.4085 349.854C47.6356 350.772 48.3994 350.198 48.5026 351.198C47.4704 350.001 47.8007 351.92 46.7685 351.936L47.2846 352.707L47.0162 352.494C46.3763 353.019 47.3259 353.199 47.0988 353.855C47.8007 353.133 48.6471 352.691 48.0071 351.625C48.5026 352.395 48.9774 353.888 48.9774 354.232C49.3283 355.019 48.4407 355.478 48.2342 356.183C47.9659 354.789 44.8899 356.38 46.0253 353.724C46.2318 353.789 46.1492 354.002 46.0253 354.084C47.4498 353.838 46.1699 352.445 45.7157 351.805C44.8899 351.887 44.7867 351.248 44.2087 352.264C44.7661 351.969 45.8396 353.297 45.0757 354.248L43.4036 353.92L43.0114 355.363L42.9494 355.216C41.7934 355.675 42.9494 356.79 42.1856 357.725C42.7017 358.495 41.876 361.234 43.7958 360.184C42.6191 361.004 43.8784 361.89 43.9816 362.89L44.828 361.726C45.8602 363.267 45.1377 362.791 46.9337 364.087C46.4589 364.169 46.046 364.398 45.5712 364.12C45.2202 366.054 44.4358 368.776 45.7363 370.006C45.5299 371.367 43.4862 371.433 44.0848 373.4C44.2913 373.81 45.7157 373.187 45.0964 374.417C44.9519 374.499 43.961 373.122 43.9403 374.532C45.1583 375.614 42.9701 376.844 43.9816 378.221C43.4449 378.877 43.4862 380.091 42.4746 379.779C42.8256 378.697 42.7636 377.139 42.2888 376.877C42.9081 377.073 42.9701 376.139 43.3829 376.975C44.3326 375.368 42.8462 375.86 43.5481 374.417C43.1352 374.286 42.3301 375.106 42.6604 375.45C41.236 375.368 42.2682 372.482 40.4309 373.696C40.1419 375.286 43.0526 375.926 41.4218 377.221C40.6167 376.614 41.4218 375.794 40.018 375.007L39.3368 376.106L40.2864 376.991L40.0799 376.926C38.5729 378.844 41.3392 378.861 41.8966 380.681C42.9701 379.697 44.3326 381.058 45.0138 380.32C45.0964 381.517 44.8487 382.37 43.4242 382.304C42.4333 380.009 41.9172 382.091 40.6786 379.959C40.1419 380.271 38.6349 379.353 38.3871 380.566C39.2955 382.009 39.6051 380.222 39.9561 381.632C39.8322 381.714 39.6877 381.779 39.4813 381.73C40.1625 382.403 39.151 382.452 39.9148 383.272L39.6464 383.075C38.7175 383.977 40.5547 384.157 39.5432 384.928C40.6167 384.649 40.369 385.518 40.9883 386.059C41.4424 385.256 42.9907 384.879 43.032 383.255C42.2062 383.009 41.7314 383.108 41.3805 382.419V383.485C41.2773 383.255 41.0708 383.058 40.9263 382.845L41.4424 381.845C41.9379 383.173 42.8875 382.632 43.6926 383.222C43.2384 384.387 43.8577 384.206 43.5274 384.928C42.3095 384.797 41.2773 387.092 40.369 388.42C40.4309 388.207 40.4309 387.928 40.4722 387.797C39.7703 386.764 39.3987 388.437 39.0684 388.453L39.6258 389.207C39.5432 389.076 39.2748 388.863 39.089 389.175C39.2335 390.158 40.4515 390.158 40.6167 391.142C39.9354 391.192 38.9858 390.322 38.5729 390.913C37.9743 391.093 36.3641 391.7 36.8595 393.028C37.1072 393.126 37.2311 393.471 37.3343 393.864C37.293 393.815 37.2724 393.733 37.2311 393.717L36.4673 394.553C35.3319 393.766 37.0866 393.077 35.9925 392.29L34.8984 392.192C34.9396 391.618 34.5268 390.814 33.99 390.421C33.7423 391.29 34.0107 391.487 34.1552 392.487C33.4533 392.602 32.9991 391.88 32.9166 391.782L33.5359 391.946C34.5268 390.814 32.6275 390.142 32.9372 388.683C32.9991 388.47 33.0611 388.601 33.2675 388.666C32.2972 387.437 33.8455 386.338 32.5243 385.108L33.0817 385.518C32.6688 384.715 31.7192 383.124 30.7902 381.517L30.3567 381.484C30.0884 381.648 30.1503 381.058 30.3567 380.763C29.8819 379.959 29.469 379.189 29.18 378.566C28.891 378.746 28.6433 378.976 28.5607 379.254C29.0355 379.517 28.5194 380.927 29.6755 380.796C28.953 381.419 29.8406 382.517 29.3865 382.976C30.1916 382.14 30.4187 383.649 31.0173 383.829C30.2741 384.091 30.976 385.125 30.0264 384.961C29.7581 385.125 30.7077 384.567 30.1503 384.157C29.3245 383.19 29.242 385.797 28.4781 384.616C29.0355 386.108 28.602 388.01 29.3865 389.552L29.8406 388.732C29.6548 389.388 29.7374 390.978 29.2626 391.077C29.18 390.585 29.2626 389.995 29.0975 389.355C28.0033 389.273 28.9942 390.88 28.313 390.929L29.9645 392.848L30.0884 392.044C30.687 392.569 29.82 394.225 29.6135 395.471C28.1685 394.701 29.6135 393.586 29.1387 392.241C28.6433 391.257 27.6524 392.782 27.3634 391.864C26.9918 392.077 26.9918 392.684 27.3634 392.979L27.0744 393.323C25.7738 392.471 26.2073 390.667 25.1339 389.404C25.2784 389.519 25.4229 389.617 25.5674 389.65C26.166 388.748 26.2073 387.797 25.9183 386.863C25.4642 387.322 25.7325 387.535 25.8564 387.814C25.5261 387.83 25.4435 386.961 25.0926 386.633C24.6384 387.453 24.2875 386.748 24.0191 387.273C23.7301 386.699 23.8746 386.256 24.0604 385.6C24.5971 385.272 24.7416 385.928 25.4229 385.879C25.0719 385.174 26.7028 384.928 26.0009 383.878C25.6087 385.207 24.5765 383.452 24.1636 382.96L24.1017 383.19C23.3585 382.714 23.3378 382.353 24.1017 382.091C24.3907 382.665 24.1017 383.19 24.9274 383.075C24.9274 382.714 24.9274 382.337 24.7003 381.911L25.2577 382.321V380.5C24.5352 380.173 23.5856 379.648 22.574 379.336C23.2346 378.943 22.7805 378.303 22.574 377.877L22.8424 378.09C23.5236 377.336 23.214 375.532 22.5947 375.335C23.214 374.811 26.1454 379.599 25.9802 375.548C26.1248 374.024 24.1017 374.466 23.503 373.564C23.503 373.564 23.7094 373.63 23.8333 373.564C24.0397 372.909 23.2966 372.794 23.0282 372.22C22.6772 372.597 22.6153 373.187 22.8837 373.384C22.0786 373.122 23.1108 371.99 22.4915 371.433C23.7094 372.187 23.1108 370.17 23.7094 370.728C24.6797 369.449 23.8127 367.957 22.925 367.186C24.6384 366.399 22.863 365.579 23.792 364.169C23.7094 364.398 23.8952 364.808 23.6888 365.12C24.5971 366.022 24.4113 363.644 25.1751 364.989C25.0513 364.71 24.6384 364.923 24.7623 365.218C24.8242 365.726 25.2164 366.218 25.6912 366.12L26.7234 364.989L26.9092 365.415L28.3749 363.71C28.1685 363.644 27.9001 363.792 27.7556 363.874C28.5607 361.824 28.1685 359.381 28.5814 357.561C25.7532 356.987 27.9208 352.953 26.3518 351.313C27.1157 351.772 28.5401 352.117 29.18 351.92C29.2626 352.264 30.3361 353.035 30.0058 353.756C29.531 353.838 28.891 354.724 28.4369 354.084C28.4988 356.183 29.7374 353.904 30.7283 354.609C30.7283 352.297 29.242 350.821 28.7878 349.313H29.1387L28.6639 348.165C28.3543 349.034 26.7234 348.854 27.4666 347.755L27.5285 347.903C28.313 347.312 27.6937 345.869 27.9414 344.869L27.095 344.098C27.3427 343.082 29.0975 343.197 30.1916 342.967C30.5425 341.376 29.242 340.311 28.5607 339.097C29.3865 338.655 29.9439 336.277 30.6664 337.622C30.2122 336.113 26.0835 336.015 28.7259 333.752L29.3658 334.457C29.5723 332.079 28.6433 328.554 29.5723 327.537C32.0702 328.669 32.7101 324.848 35.3732 324.684C34.7538 324.75 34.7126 323.831 34.4029 323.667C34.7332 323.503 35.0842 323.208 34.6093 322.815C33.9487 323.684 32.0289 321.896 32.7927 323.766C31.1618 322.7 29.9645 321.421 30.3567 319.47L31.4302 319.601L30.8522 321.109C31.6779 321.027 31.4921 321.814 31.8018 322.175C32.8753 319.371 34.279 322.798 34.5887 319.863C33.9281 319.502 34.1965 319.716 34.0313 318.929C34.0107 319.289 34.7538 319.437 34.8571 318.847L34.0932 318.207C36.0544 317.371 35.0016 320.027 36.4053 319.273C37.0659 320.486 37.2105 322.503 38.6555 322.274C39.44 320.47 36.3434 320.355 37.2724 318.486L37.8917 318.338C37.6027 317.617 36.6737 317.42 36.1576 316.977C36.4879 316.977 36.7769 316.83 36.9421 316.403C35.7448 315.108 35.5796 314.321 34.2378 313.108C34.919 316.043 32.7927 315.42 33.3501 318.42C32.9785 317.912 32.9785 315.829 31.4921 315.567L32.5656 315.698C32.1527 314.698 31.7399 313.698 32.2972 312.534L32.7927 313.321C32.2972 311.665 34.8571 310.861 33.2469 309.451C33.0817 309.877 33.0611 310.238 33.1849 310.533C32.834 309.68 33.1023 308.664 33.4326 307.811L31.9463 305.811C32.483 305.876 32.6895 304.728 33.4533 305.368C34.4855 304.138 32.9785 303.368 32.8133 302.58C34.1758 301.351 33.1436 303.794 34.6093 304.073C35.3938 302.269 35.2699 300.268 34.4648 299.137C34.1965 299.498 33.9694 299.662 33.7217 299.613C34.0726 299.596 34.0933 298.842 34.1758 298.416L33.5152 298.055C34.0933 297.415 34.5061 297.546 34.9396 298.186C35.1874 297.53 33.9487 296.612 35.0635 296.038C35.7448 297.251 34.7745 298.612 35.208 299.252C34.8984 296.825 37.7059 297.087 37.2724 294.021C37.6233 294.021 38.1807 294.579 38.2839 294.021C38.222 292.66 36.8802 293.529 36.1783 293.037C36.4673 294.103 35.9512 294.546 34.9809 295.054L34.4442 294.726C34.7538 294.726 34.8571 294.07 35.1667 293.906L34.0313 293.628C35.3112 293.824 36.4466 292.89 36.075 292.037C35.0222 292.758 35.1048 292.545 33.5978 292.627C32.3798 291.348 35.1461 291.479 33.8868 290.053C34.279 290.184 34.4236 291.332 34.8777 290.397C35.0635 289.61 34.0313 289.61 33.8042 289.053C34.7745 289.758 35.6002 289.676 36.7769 290.446C36.6944 291.873 36.6737 291.02 36.9421 292.447L38.0156 291.365C38.0156 292.578 39.1097 292.349 39.5019 292.496C40.9057 290.545 38.1188 290.791 38.5936 289.495C37.9536 288.79 38.2426 290.709 37.6233 289.643C37.9743 288.43 36.9627 289.299 36.715 287.872L37.1692 288.151C37.8711 287.79 37.1692 287.298 37.1072 286.79C36.8595 286.216 33.2881 287.052 33.5565 284.839C33.8455 284.97 34.0313 285.035 34.1552 285.035L42.8256 288.036C43.1559 285.79 43.7752 283.215 44.7454 280.674C46.5827 280.215 45.9428 282.658 46.7479 282.576L46.2318 283.74C45.4886 283.609 46.3556 281.231 44.8693 282.182C45.117 284.33 44.1261 285.199 45.3441 287.331C47.202 286.872 45.4473 284.675 46.975 283.51C46.7892 284.051 46.913 284.527 47.0988 284.986C47.4911 283.789 47.9246 282.51 48.3787 281.149L47.9865 280.805C47.6562 281.723 47.4085 282.363 47.3465 282.428C47.6768 281.198 46.8511 280.067 45.5712 279.87L45.4886 280.083L45.1583 279.608L45.5299 278.755L45.5712 278.64ZM50.7941 198.228C50.9179 198.294 51.0624 198.359 51.2482 198.392C51.0624 198.359 50.9386 198.392 50.7941 198.228ZM46.2731 303.286C46.7272 301.662 47.3465 300.022 47.7388 298.448C44.7454 301.055 42.4953 302.876 43.3004 298.104L43.1559 297.776C42.743 298.366 42.5365 299.449 42.5572 300.465C43.321 301.367 46.2318 304.351 46.5208 304.351C47.2846 304.138 46.5621 303.63 46.8717 303.122L46.2524 303.269L46.2731 303.286ZM41.814 304.023C41.3805 304.925 41.9792 304.778 42.4746 304.974C42.4746 304.646 42.454 304.302 42.4333 303.974C42.2888 304.089 42.103 304.122 41.814 304.023ZM42.9907 304.974C43.0114 304.876 43.0526 304.778 43.1352 304.745L42.9907 304.974ZM46.4382 286.839C46.4382 286.839 46.4382 286.905 46.4382 286.937C46.5208 286.724 46.5827 286.495 46.6653 286.282C46.5621 286.364 46.4795 286.527 46.4176 286.839H46.4382ZM44.8899 288.626L45.7983 288.938C45.8602 288.741 45.9221 288.528 46.0047 288.315C45.5712 288.348 45.1996 288.38 44.9106 288.626H44.8899ZM40.9057 294.431C41.9585 294.923 41.814 296.218 43.0939 296.415C43.4036 296.53 43.5894 296.267 43.7339 295.972C43.8165 295.644 43.899 295.284 44.0023 294.89C43.8165 294.857 43.6513 294.759 43.5068 294.628C43.2797 294.988 42.9288 295.218 42.165 294.988C44.0435 294.185 41.0708 294.005 41.6695 292.988C40.8025 292.562 40.596 294.07 40.9057 294.431ZM32.6895 375.876C32.5656 375.893 32.2766 375.991 31.905 376.106L31.3476 375.319C31.7605 374.007 33.7423 373.056 32.256 371.761C32.7101 371.22 33.5978 370.99 34.3203 370.744C34.2378 371.023 34.1552 371.269 34.0107 371.466C36.0131 374.975 31.3683 373.056 32.6895 375.876ZM36.6737 360.774C36.7357 360.922 36.9421 360.988 36.9421 360.988C34.9396 357.839 34.5681 355.331 34.8571 353.74C33.8868 353.97 32.9785 355.347 32.5037 356.003L31.5128 355.314L32.4005 355.003L31.5541 353.871C30.7902 354.101 30.8315 354.97 30.2122 355.495C30.4187 355.56 31.4302 357.479 32.0289 358.036L32.9578 356.642C32.6069 357.003 32.6069 358.954 32.7927 359.741C33.3294 359.791 34.3203 358.544 33.1849 358.299C34.0107 358.2 33.8249 359.725 34.7951 358.84C35.497 360.037 34.5681 361.791 34.0726 362.595L32.7101 362.627C32.0702 363.513 34.2378 363.365 33.3294 364.398C33.2469 363.037 31.8224 364.513 31.8637 363.447C31.3063 363.759 30.4393 363.349 30.4187 364.431C32.0908 365.448 29.1594 365.481 30.6457 366.448C30.0264 366.973 29.6342 365.759 29.2832 366.858C30.0884 368.202 30.7696 368.17 32.0495 368.35C32.5243 367.186 30.5012 366.891 30.9141 365.94L32.9166 368.039C33.2675 367.711 33.3294 367.448 33.2675 367.219C33.3501 367.612 33.6391 367.973 34.0726 368.284C34.2997 368.465 34.5061 368.629 34.6919 368.776C34.8158 367.678 34.9396 366.71 35.5177 366.579L36.137 366.776C36.7563 366.432 36.3641 365.776 35.9512 365.448C36.0131 364.464 35.2493 363.414 36.0957 363.267L36.6118 363.677C36.5911 362.463 36.5292 362.316 36.6944 360.807L36.6737 360.774ZM43.7958 321.536C41.4011 322.028 39.2335 322.634 39.1097 326.078L38.9858 325.799C37.293 327.373 40.369 329.324 38.4491 331.243C37.7472 330.144 37.8091 330.21 36.0131 328.898L36.4879 330.046C35.2906 329.62 35.7654 330.767 35.5796 331.555L34.1965 330.702C34.6919 330.259 35.0429 329.046 34.6919 329.046C34.8158 329.341 36.8182 327.586 36.5499 326.521C35.5383 326.521 35.6002 328.751 34.1139 327.619C34.6713 328.554 33.6597 328.554 33.8662 329.488C33.3088 328.554 32.5243 329.144 31.905 328.423L32.0082 329.931C31.6779 329.931 31.5954 327.701 30.1709 328.8C30.6044 329.439 29.6961 330.964 30.7696 331.095H30.4393C30.0264 332.178 31.8844 331.735 31.0586 333.03C31.5954 333.096 32.0082 332.883 31.9876 332.374C31.8018 331.932 31.0793 331.8 31.0586 330.948C31.9669 330.653 30.7902 331.964 32.3179 331.505C33.0817 331.276 32.0495 329.21 33.5565 329.98L33.1436 331.063C34.2171 331.194 34.0313 331.997 34.919 332.046C35.208 332.768 33.8868 333.276 34.7332 334.063C35.3938 334.424 36.7769 334.047 36.0338 335.129C34.2997 335.867 34.1965 338.523 34.2997 339.54L34.8571 340.475C35.5383 340.475 35.0016 338.818 35.786 339.458L35.848 340.819L35.4557 340.671C35.2906 341.114 35.6828 341.606 35.8686 342.032C35.1461 341.54 35.6002 340.606 34.4442 340.688C34.1345 341.294 33.701 341.36 33.8249 341.95C33.7629 341.819 33.6597 341.704 33.5152 341.704C32.8546 342.934 34.6093 343.049 34.919 343.41C36.1989 344.82 36.4673 342.246 37.6027 342.508L37.6853 346.312C37.355 345.968 37.0453 345.607 36.5705 345.689C35.9099 346.558 35.6828 345.623 35.559 346.919C37.1072 346.968 36.2815 348.624 37.0453 349.624C36.3434 350.001 36.2196 350.067 36.3228 349.132C35.3112 349.149 35.5177 350.428 35.3525 350.871C35.559 351.149 35.6415 351.608 35.8273 351.904C36.3847 351.576 36.9834 351.789 37.293 352.625L37.4995 352.691C37.9536 351.395 39.3574 349.428 38.4491 348.509L38.9032 348.788C39.9974 347.345 37.582 345.295 39.5639 344.771C40.307 344.902 39.7703 344.476 40.8644 344.607L40.1832 343.41L40.6373 343.689V341.754L40.8644 341.819C39.9974 340.835 39.2955 340.032 38.7381 339.392C38.2633 339.343 38.1188 339.392 37.8091 339.048C37.6233 338.72 37.6233 338.491 37.7059 338.294C37.9123 337.835 38.6349 337.589 39.0065 337.031L38.8413 338.818C39.6258 339.032 40.4722 338.966 41.1741 338.146C41.1534 338.507 41.7521 338.72 41.9172 338.277C41.7108 338.212 41.5869 337.064 40.8851 337.425C40.8438 335.703 43.3829 333.178 42.2475 330.456C42.8875 332.391 43.5481 329.078 43.5687 331.161C45.0757 329.866 42.4953 329.816 42.9288 328.373C43.4036 328.291 42.743 329.16 43.61 329.587C44.4977 327.226 42.165 325.291 42.9288 322.995H43.9403C43.8784 322.536 43.8165 322.028 43.7545 321.503L43.7958 321.536ZM43.2797 316.781C43.2384 316.321 43.1971 315.846 43.1559 315.37C43.1559 315.42 43.1146 315.452 43.1146 315.502L42.5365 314.059C42.0205 314.846 40.8231 315.288 40.5135 314.059C40.9057 314.19 41.4631 313.911 41.6489 314.337C42.3714 313.616 43.2178 311.96 41.6489 312.255C42.8256 313.895 39.6671 312.419 40.5341 313.698C39.6464 312.96 40.2038 312.386 39.8529 311.747C40.5754 312.452 41.7314 311.796 42.2888 310.894C42.103 310.468 42.5159 309.385 42.2269 308.664C41.2566 308.811 40.8231 308.172 40.4309 309.254C40.2451 308.828 40.1625 308.188 40.7405 307.532C40.8644 307.828 40.885 308.32 41.236 308.32C42.165 307.959 42.2063 307.418 42.6191 307.155C42.6191 306.909 42.5985 306.68 42.5778 306.45C42.4953 306.516 42.3714 306.565 42.2269 306.581L41.5457 305.729C41.814 306.811 41.0502 306.155 40.5135 306.089C41.5869 306.221 40.7612 305.434 40.7818 305.089L39.5226 305.745C39.0065 305.319 40.5547 304.515 39.3987 304.597C38.6968 306.171 38.7794 306.827 38.8826 308.32L39.8529 307.811C40.2244 309.533 38.1807 308.68 37.9123 310.55C38.5936 311.402 37.5201 313.353 39.1303 313.55C38.6762 313.272 37.4995 314.567 38.1394 315.272C39.5019 316.125 39.3781 318.273 40.1419 317.699C40.2451 317.125 39.5639 316.272 40.596 315.895L40.7199 317.043L41.6489 316.387C41.2979 316.731 42.103 316.781 43.3004 316.731L43.2797 316.781ZM56.3059 292.611V292.562C56.3059 292.562 56.3059 292.594 56.3059 292.611Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.7104 392.685C35.0407 393.029 34.9582 393.816 35.7633 393.685C34.8756 393.685 35.722 392.259 34.7104 392.685Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.7836 393.603C33.99 393.668 34.3203 393.636 34.341 393.996L34.1552 392.996L33.7629 393.586L33.7836 393.603Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.7552 394.387C28.3952 394.929 28.7461 395.256 28.6636 396.06C26.5166 396.29 28.1268 394.715 26.1244 394.289C25.856 395.765 27.7139 396.273 27.8378 397.503C28.7668 396.929 29.3654 394.486 27.7552 394.387Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.0713 393.637L25.5048 394.489L25.6493 394.407L25.1951 393.555L25.0713 393.637Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.0537 376.942C45.7349 376.91 45.1156 376.369 44.9918 376.09C44.9298 376.303 44.7234 376.598 45.0537 376.942Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.12 216.625L64.3975 210.246C64.5833 212.083 64.6865 213.772 65.12 216.625Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.0308 356.249C43.4436 357.955 44.5171 358.774 44.5997 360.48C46.2306 358.381 42.8656 357.381 44.4758 355.643L43.0308 356.249Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.2952 357.265C46.9947 357.429 46.974 355.872 46.0244 356.036C46.1896 357.167 47.1598 356.659 46.9121 357.643L48.2746 357.265H48.2952Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.5587 363.151L25.9807 362.594L26.1665 363.02L26.5587 363.151Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.1917 349.657L48.4394 349.87L48.9555 349.066L48.1917 349.657Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.9354 362.299L23.5845 363.037L24.1006 363.447L23.9354 362.299Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.5325 356.168L31.8421 356.873C31.7802 356.741 32.4202 355.856 31.5325 356.168Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.4322 344.655L49.0813 343.803L48.9368 343.868L49.3084 344.721L49.4322 344.655Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.7455 350.592C27.7133 350.969 28.6835 349.231 27.6926 350.116C27.7133 350.985 28.2706 350.673 28.7455 350.592Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.7142 341.312C36.7142 341.197 36.7142 341.082 36.6113 340.967C36.6319 341.098 36.6731 341.213 36.7142 341.312Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.715 341.312C36.6737 341.673 36.2402 341.985 36.4879 342.264C36.9833 341.854 36.8388 341.69 36.715 341.312Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.0855 337.228L36.9617 337.539C36.5282 337.162 36.5901 337.326 36.9204 337.654C36.9204 337.999 37.2094 338.015 37.4158 338.064C37.5191 338.146 37.6429 338.228 37.7668 338.31C37.6636 338.195 37.5603 338.08 37.4571 337.999C37.5397 337.474 37.5397 337.146 37.0855 337.211V337.228Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.6651 323.732C55.1077 324.88 54.9013 325.175 54.1581 325.028C53.7452 326.126 55.0458 326.077 55.2522 326.799C55.3141 325.503 55.7064 325.29 55.6651 323.732Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.2307 326.799C55.2307 326.947 55.2307 327.078 55.2307 327.243C55.2705 327.062 55.2705 326.914 55.2307 326.799Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.2079 341.23L27.155 340.377L27.2789 340.656L28.2079 341.23Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.3046 322.013C56.222 322.226 56.2014 322.587 55.9124 322.734C56.6555 322.865 56.3872 321.799 56.3046 322.013Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.9257 325.127C40.4509 325.209 40.5954 325.996 40.3889 326.275C40.5541 325.832 41.9785 325.619 40.9257 325.127Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.7665 318.305C53.6839 318.518 53.1265 318.813 52.5278 318.6C52.8375 318.961 54.0968 319.518 53.7665 318.305Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.4003 322.979L41.1113 323.126L41.4829 323.979L41.4003 322.979Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.9016 324.782C30.6448 325.782 32.2756 323.536 32.7917 325.192C34.051 323.257 31.5118 325.225 31.8834 323.732C31.4499 324.585 30.2526 324.897 29.9016 324.782Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.8835 323.733C31.9459 323.602 32.0082 323.47 32.029 323.322C31.9667 323.487 31.9251 323.618 31.8835 323.733Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.5833 311.436C39.6658 311.583 39.7484 311.682 39.831 311.781C39.769 311.666 39.7071 311.567 39.5833 311.436Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.9038 318.881L33.0186 320.39C32.2754 319.389 32.6883 317.094 31.3464 317.094C30.9542 317.815 31.1606 318.75 31.6767 319.176L31.9038 318.881Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.596 305.563L59.0296 306.202L59.2979 305.481C59.0709 305.678 58.1419 305.186 58.596 305.563Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.3599 305.334L59.3196 305.482C59.3196 305.482 59.38 305.416 59.3599 305.334Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.8097 314.092C39.6445 314.518 39.6239 314.879 39.8097 315.305C40.0987 315.158 40.4909 314.092 39.8097 314.092Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.3176 301.189L57.4007 302.189L57.4631 301.123L57.3176 301.189Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.2904 296.824L60.5794 296.693L60.2078 295.824L59.9395 295.972L60.2904 296.824Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.1023 300.221C32.8546 300.86 33.9693 301.5 34.2583 301.352L34.4028 300.057C33.3087 300.286 34.3822 300.417 33.99 301.139L33.1023 300.221Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.0557 262.421C63.7163 262.766 63.1383 264.16 62.457 264.192C62.1887 263.979 62.0029 263.192 61.5281 263.635L63.1176 264.897C61.8584 266.324 60.9913 263.586 60.4752 262.799C60.0624 264.307 61.1565 264.848 60.95 266.472C61.1565 266.012 61.6313 265.734 62.0235 265.504C63.2415 265.537 62.519 267.013 62.4777 268.111C63.097 267.455 63.4892 267.898 63.9021 268.439C63.9227 268.538 63.9847 268.603 64.0673 268.652L64.2118 268.833V268.702C64.3563 268.718 64.5214 268.702 64.7691 268.636C64.5214 267.701 65.6155 267.078 65.7188 266.488C63.675 266.914 65.5123 264.455 64.9756 263.668L64.893 262.799L64.9343 262.487C65.1614 262.438 65.4297 262.553 65.76 263.061C65.4091 262.618 65.7187 261.29 65.0788 261.356L65.4091 258.257C65.4917 258.158 65.6155 258.076 65.76 258.011C65.6568 257.896 65.5536 257.863 65.4504 257.879L66.6271 244.352C66.4413 245.024 65.9045 245.565 65.6362 246.237C64.4182 245.139 65.2852 247.352 64.0673 246.975C63.6544 246.483 63.8608 245.811 64.2118 245.434C63.5924 245.253 62.9938 245.795 62.2506 245.696C61.301 247.352 64.2737 247.779 63.6544 249.418C62.9112 249.304 62.2919 248.762 62.2919 249.845L62.1474 249.566C62.8286 251.353 60.3101 250.812 62.2712 252.042L61.1978 251.944C61.9409 252.78 61.7964 254.321 61.8584 255.19L61.6519 255.125C62.6428 257.633 61.7964 256.502 62.0235 259.257L60.9088 257.912C60.2894 258.814 61.6313 259.126 61.4042 259.781C61.1978 259.716 60.3927 259.814 60.2688 259.175L61.7964 262.602C62.519 263.454 62.6222 262.503 63.097 262.405L63.0557 262.421Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.9306 266.473C60.8475 266.637 60.8059 266.833 60.8059 267.079C60.8682 266.85 60.889 266.669 60.9306 266.473Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.6472 243.402L66.5854 244.353C66.6678 244.058 66.7089 243.747 66.6472 243.402Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.7258 271.394C63.3451 270.869 63.4484 271.886 63.8612 272.017L64.0883 269.967C63.6754 269.935 63.2213 269.705 62.8497 269.705L62.7258 271.394Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.9548 269.422C64.6658 269.324 64.4387 269.094 64.2323 268.832L64.1084 269.963C64.4181 269.98 64.7277 269.881 64.9754 269.439L64.9548 269.422Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.6603 267.867V267.507L42.4126 266.949L42.6603 267.867Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.1788 262.441C44.4975 262.819 44.8691 263.655 45.0136 263.95C45.0962 263.015 45.3026 263.442 45.1788 262.441Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.2424 263.078L37.9947 262.16L37.8708 262.226L38.2424 263.078Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.8476 236.17C62.8476 236.022 62.8273 235.875 62.8069 235.711C62.8069 235.924 62.8069 236.055 62.8476 236.17Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.3446 244.109C64.7071 241.977 64.2736 245.601 65.8632 244.994L65.4297 243.764L65.8425 243.895L65.8012 242.42C65.0581 242.682 64.9961 242.912 64.253 242.797C64.6865 240.862 65.1819 242.223 66.2348 240.846V238.665L66.4618 238.845C66.4618 238.665 66.3586 238.583 66.2554 238.501V231.138C65.7393 229.777 64.8929 231.827 63.8194 230.81C63.7162 232.352 62.7666 234.615 64.253 234.811C64.0465 234.746 63.6336 234.631 63.4479 234.942L64.6245 235.877L65.0787 235.041C66.2554 235.992 65.7806 238.894 64.9755 239.386C64.6658 237.714 63.1175 238.484 64.0878 236.221C63.6956 236.303 62.9937 236.697 62.8285 236.172C63.0763 238.878 62.2299 241.255 63.3446 244.109Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.9431 217.036H64.0892C64.0892 217.036 63.964 216.986 63.9431 217.036Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.7365 217.937L65.1609 219.265L65.099 217.199L64.0668 217.035C64.3145 217.216 64.8306 217.937 64.4177 218.216L63.7158 217.921L63.7365 217.937Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.0081 220.808C65.5952 219.742 64.3772 219.775 63.7992 220.349C63.2625 219.365 65.1204 219.857 63.8611 219.168C62.9735 219.168 63.4689 220.381 63.6134 220.66L66.0081 220.808Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.1207 228.644L64.6252 228.332L64.4807 229.07L65.1207 228.644Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.6252 228.335L64.7903 227.613C64.4188 227.646 64.0472 227.695 63.7788 227.81L64.6252 228.351V228.335Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.2021 225.693C65.3054 225.381 65.3879 225.037 65.4292 224.627L65.2021 225.693Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.873 226.53H65.0382L65.224 225.693C65.1208 225.989 65.0175 226.251 64.8937 226.53H64.873Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.7888 227.613C65.6559 227.515 66.5435 227.4 66.3371 226.334L65.0159 226.514L64.7888 227.613Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.3058 256.686L39.9135 255.85L39.769 255.915L40.1613 256.751L40.3058 256.686Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.5452 252.094C41.4213 251.881 41.2768 251.717 41.1323 251.586C41.2149 251.799 41.3388 251.979 41.5452 252.094Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.0531 248.287C37.0027 247.402 37.0647 249.648 37.6014 247.927C38.4065 247.812 39.3561 248.697 38.8813 249.501C38.1381 249.386 38.4684 248.665 37.6633 249.124C38.4684 249.714 37.8698 249.894 39.0052 249.78C39.6245 250.747 40.4089 250.895 41.0902 251.567C40.698 250.419 42.0811 248.14 40.7805 246.648C39.5006 245.795 37.6014 246.156 35.6402 246.041C35.1654 246.139 34.7526 248.123 36.0531 248.271V248.287Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.968 249.65C33.8235 250.077 33.8854 250.224 34.0299 250.487C34.7112 250.454 33.968 249.995 33.968 249.65Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.6163 240.37C49.3479 240.272 49.0589 239.452 48.5635 239.6L48.8318 240.83C48.8938 240.551 49.2447 240.469 49.6163 240.37Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.9354 241.385L48.8108 240.844C48.7692 240.975 48.8107 241.139 48.9354 241.385Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.7828 240.322L49.5962 240.372C49.5962 240.372 49.7206 240.388 49.7828 240.322Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.7806 222.677C66.3173 222.71 66.0077 222.136 65.8632 221.857C65.8012 222.087 65.6154 222.399 65.7806 222.677Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.6135 201.721L64.0058 201.213C63.758 201.393 63.6342 201.492 63.6135 201.721Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.4406 194.735C48.337 194.735 48.254 194.702 48.1504 194.652C48.2126 194.702 48.3162 194.718 48.4406 194.735Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.1715 194.653C47.6967 194.341 48.3367 193.308 47.6348 192.981L47.8412 193.013L47.4077 192.357C47.5109 192.981 47.4903 194.309 48.1715 194.637V194.653Z\",\n    fill: \"#5C4F47\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.2\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M209.277 202.229C209.339 202.803 210.536 203.033 211.156 203.131L211.465 196.654C210.082 196.802 208.286 198.606 207.543 197.31C205.995 197.802 207.171 199.557 209.009 199.868L206.965 199.311C209.525 200.918 204.24 201.721 202.733 200.672V200.803L212.725 205.345C213.426 203.853 209.277 204.033 209.277 202.197V202.229Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M186.464 335.77C186.299 334.835 185.866 334.622 185.35 334.605C185.618 334.983 185.928 335.36 186.464 335.77Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M215.078 206.426L218.195 207.852C217.369 207.295 216.234 206.803 215.078 206.426Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.935 195.489C166.77 195.489 166.626 195.456 166.378 195.489L167.988 196.145C167.637 195.916 167.286 195.702 166.935 195.522V195.489Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.234 236.287C225.317 236.435 225.337 236.55 225.441 236.714C225.441 236.567 225.358 236.419 225.234 236.287Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M149.74 177.207L152.63 180.208C151.206 179.765 151.536 181.175 149.884 180.503C150.112 180.732 150.607 181.782 151.391 181.536L151.33 180.946C155.479 182.635 157.172 181.782 160.248 184.438C162.869 182.979 160.599 182.208 158.72 181.29C158.452 180.995 158.328 180.749 158.183 180.519L152.403 177.879L149.74 177.223V177.207Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M172.428 292.923L172.098 292.857C172.201 292.89 172.325 292.907 172.428 292.923Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.776 292.611L172.118 292.873C171.478 292.66 170.9 292.021 170.776 292.611Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M212.351 205.851C213.136 205.916 214.085 206.129 215.076 206.441L212.744 205.375C212.682 205.506 212.516 205.687 212.351 205.851Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.229 203.279L202.774 200.835L200.627 199.852C201.391 200.819 201.907 201.918 203.229 203.279Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.98 232.565C228.31 237.615 223.066 231.122 221.704 233.385C222.199 234.795 224.553 235.385 225.234 236.287C223.459 232.22 233.017 237.139 232.026 233.073C236.278 233.811 236.526 236.156 235.267 237.484C231.035 238.861 232.315 236.008 228.289 235.5C228.867 237.139 229.631 236.894 231.902 237.664C230.787 240.157 236.65 243.108 230.808 244.387C231.592 246.273 233.595 246.224 235.7 247.371C240.118 247.765 238.198 244.731 241.728 244.19C241.336 244.322 240.572 244.567 239.953 244.453L240.985 242.895C239.334 244.338 236.567 242.501 236.278 241.682C236.216 241.091 236.093 239.927 237.311 240.14L238.198 241.058C239.664 239.976 235.122 238.418 237.6 237.303C238.59 237.287 239.045 237.763 239.643 237.845C236.712 236.369 236.96 235.073 234.957 232.991L239.272 234.319C234.503 232.532 236.134 228.974 238.859 226.563C238.095 226.809 237.538 227.285 236.712 226.957C235.762 225.448 238.838 224.448 241.109 225.235C237.558 223.644 244.536 219.89 239.912 217.725L218.153 207.805C218.69 208.165 219.123 208.543 219.289 208.92C215.387 209.576 215.82 210.035 212.27 208.461C214.21 209.953 217.348 209.543 217.369 211.658C215.469 210.756 211.072 210.363 210.474 212.363C214.004 217.594 224.759 221.398 230.044 226.35C227.071 226.399 227.649 230.154 226.844 231.925C223.706 231.105 222.881 229.728 222.323 228.318C222.075 229.187 221.89 230.679 221.663 231.794L227.897 232.499L227.98 232.565Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M218.733 220.398C218.464 220.513 218.299 220.645 218.155 220.776C218.403 220.711 218.609 220.612 218.733 220.398Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M222.509 227.957C222.406 227.94 222.303 227.94 222.179 227.924L222.385 228.368C222.427 228.22 222.468 228.055 222.509 227.94V227.957Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.582 206.753C204.756 206.425 204.529 206.18 203.682 205.852C203.951 206.048 204.178 206.294 204.405 206.524C204.797 206.753 205.189 206.868 205.561 206.753H205.582Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M210.866 205.967L212.084 206.181C212.228 206.05 212.269 205.967 212.373 205.852C211.712 205.787 211.155 205.803 210.886 205.967H210.866Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199.842 250.666L200.461 251.174C200.441 250.879 200.172 250.748 199.842 250.666Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M222.571 237.959C222.406 236.205 218.154 237.566 218.277 235.106L217.968 235.828C216.192 233.975 217.266 230.892 217.245 228.793C219 229.105 219.475 227.596 222.2 227.957C221.642 226.498 221.126 225.038 218.339 224.186C219.33 223.333 216.915 221.874 218.154 220.791C216.461 221.201 212.642 218.955 214.5 221.792C214.293 221.562 213.901 221.677 213.674 221.447C211.259 223.136 215.119 224.005 215.078 225.53C213.385 226.383 212.538 223.923 211.816 224.759C213.22 226.727 209.463 230.679 215.635 230.81C215.986 232.22 214.603 232.351 213.447 232.729C219.867 235.205 210.102 240.78 218.504 241.108C218.215 240.288 218.504 238.992 216.77 237.73L222.551 237.976L222.571 237.959Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.808 209.705C205.767 209.804 205.787 209.952 205.705 210.05C205.746 209.952 205.787 209.82 205.808 209.705Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.572 188.67L237.022 189.621C238.054 193.835 236.423 195.278 236.403 198.918C235.639 199.164 235.185 198.705 234.958 198.475C235.433 201.05 234.029 204.837 236.423 206.805C236.32 207.625 234.442 209.675 232.893 208.806C233.348 209.216 233.802 209.691 233.595 210.134C231.614 210.167 233.1 209.101 231.49 209.002C231.324 209.363 230.932 209.478 231.552 209.593C229.9 208.92 224.822 209.953 225.131 207.117C229.817 206.215 225.544 209.101 230.664 208.658C230.767 207.723 228.785 207.756 228.166 207.641C228.352 206.444 229.632 206.526 230.788 206.641C229.239 206.116 231.531 204.706 229.178 203.968C228.93 201.624 232.997 204.247 233.038 202.722L227.939 201.64L229.074 199.148C227.505 195.409 220.136 199.312 217.493 195.015C220.156 195.671 224.78 194.179 225.978 192.277C226.102 193.458 229.301 195.737 227.691 197.18C231.861 195.229 227.98 200.115 232.666 199.197C230.54 198.065 230.375 196.294 231.634 194.983L232.088 195.442C232.728 194.015 227.423 192.703 229.59 190.785C229.487 189.785 230.932 190.031 232.13 190.26C231.407 189.391 230.457 188.588 231.593 188.637L231.572 188.67ZM232.501 190.867L231.903 192.179C232.77 191.9 232.77 191.408 232.501 190.867Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.171 137.573L173.398 136.803C173.212 137.098 173.171 137.344 173.171 137.573Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.275 119.62L156.14 118.439C156.181 118.882 156.635 119.259 157.275 119.62Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.799 28.8926L181.758 28.9256C181.758 28.9256 181.944 29.0411 182.027 29.1236L181.799 28.8926Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M171.56 85.4626C172.014 85.315 172.406 85.1346 172.736 84.8887C172.22 84.8887 171.849 85.1182 171.56 85.4626Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.482 119.836C157.482 119.836 157.544 119.786 157.585 119.77C157.482 119.72 157.378 119.671 157.274 119.621L157.482 119.836Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.668 144.574C157.833 144.738 157.936 144.902 158.143 145.083C158.06 144.853 157.874 144.689 157.668 144.574Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M172.324 144.086C172.448 144.266 172.593 144.447 172.799 144.578L172.324 144.086Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M160.598 170.287L161.28 171.353C161.238 170.845 160.97 170.533 160.598 170.287Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.772 146.693C169 146.758 169.227 146.824 169.454 146.89C169.309 146.742 169 146.66 168.772 146.693Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M180.809 70.7368C181.573 70.4909 182.502 69.8842 183.328 70.2285C182.296 69.6546 179.674 69.589 180.809 70.7368Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.107 79.4629C222.756 79.5122 222.446 79.6108 222.343 79.7587C223.045 79.7587 223.21 79.6437 223.107 79.4629Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.504 172.828L228.742 173.206C228.206 172.91 227.813 172.811 227.504 172.828Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M228.29 164.812C228.29 164.812 228.455 164.846 228.58 164.862C228.476 164.829 228.372 164.829 228.29 164.812Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.151 159.777C157.006 159.777 156.862 159.777 156.697 159.81C156.862 159.991 157.027 159.909 157.151 159.777Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.979 164.792C227.979 164.792 228.187 164.792 228.29 164.808C228.187 164.808 228.083 164.775 227.979 164.792Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M218.361 125.309C218.361 125.309 217.782 125.407 217.225 125.588C217.535 125.67 217.886 125.621 218.361 125.309Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M212.971 132.801C212.847 132.85 212.744 132.867 212.599 132.932L212.971 132.801Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.801 71.9707C165.718 72.3478 165.801 72.643 165.924 72.8889C166.028 72.6102 166.028 72.315 165.801 71.9707Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M228.557 164.875C228.908 164.974 229.259 165.105 229.693 165.302C229.238 165.072 228.867 164.957 228.557 164.875Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M202.403 112.896C202.527 112.979 202.63 113.061 202.754 113.143C202.816 113.094 202.857 113.044 202.94 113.012L202.424 112.896H202.403Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.107 108.977C205.478 109.125 205.85 109.207 206.201 109.305C204.921 107.813 206.573 105.238 203.084 104.779C203.146 105.271 200.916 107.714 198.872 107.19C199.698 108.223 197.118 109.6 197.675 110.158C199.698 108.6 200.648 110.108 201.763 111.256C200.668 112.224 198.955 110.945 198.232 111.797L198.48 114.142L199.079 112.125L202.423 112.88C202.32 112.798 202.237 112.748 202.114 112.666C200.772 109.174 207.089 112.568 205.107 108.961V108.977Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M206.18 109.305C206.386 109.534 206.634 109.731 206.985 109.895C206.944 109.567 206.613 109.436 206.18 109.305Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M212.661 95.4981C212.558 95.3177 212.414 95.121 212.166 94.875C212.29 94.9898 212.434 95.2685 212.661 95.4981Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M201.287 198.147C202.278 198.131 204.466 196.212 201.865 196.146C201.555 196.737 201.245 197.311 200.936 197.901L201.287 198.147Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200.028 56.6543C199.925 56.8675 199.883 57.097 199.925 57.3266C200.049 57.3758 200.193 57.425 200.317 57.4742C200.709 57.3594 200.255 56.9003 200.028 56.6543Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.674 106.533C198.046 106.91 198.459 107.091 198.851 107.205C198.665 106.96 198.335 106.73 197.674 106.533Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M206.221 56.7683C206.984 56.5223 208.14 56.1452 209.131 56.1288C209.193 55.5549 207.851 55.0794 207.397 54.4727C207.728 55.1613 207.418 55.9156 206.2 56.7683H206.221Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M207.357 54.4238C207.357 54.4238 207.397 54.456 207.397 54.472C207.397 54.456 207.377 54.4399 207.357 54.4238Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200.111 199.293C200.297 199.474 200.462 199.654 200.627 199.851L199.946 199.539L199.058 200.884C199.223 201.064 199.368 201.245 199.429 201.474C199.347 201.376 199.079 201.294 198.79 201.245L198.459 201.671C201.081 202.884 202.877 205.688 204.405 206.541C205.499 207.623 206.056 208.935 205.808 209.722C205.912 208.984 205.437 207.984 203.93 208.214C202.278 209.657 197.778 210.198 201.432 212.952L201.473 211.427L207.026 215.084C204.549 216.183 204.26 213.264 202.196 212.69C204.879 215.461 197.117 217.38 202.051 218.806C199.079 218.855 194.103 218.954 194.289 220.708C197.757 219.593 196.395 221.84 200.09 220.954C201.742 221.627 198.893 222.856 201.102 223.053L199.884 222.84C194.991 225.628 202.299 226.907 204.632 228.284C205.602 231.908 203.579 233.465 203.889 236.401C201.886 236.433 196.374 237.007 196.498 238.188C199.161 238.844 200.235 241.533 203.661 241.943C205.23 239.91 200.875 240.123 200.152 238.827C203.827 237.926 203.723 238.877 205.974 237.548C204.487 238.647 207.522 242.812 204.054 243.927L203.6 243.468C201.411 245.403 192.865 245.419 197.799 248.994L199.801 250.683C199.471 250.584 199.058 250.568 198.748 250.519C198.211 253.126 194.351 252.24 197.241 255.258C197.014 255.028 196.622 255.143 196.415 254.913C194.372 256.471 198.129 258.307 198.851 259.603C195.92 260.226 196.044 259.291 194 258.717C192.7 261.554 197.344 264.932 200.689 266.932L198.831 268.72C197.757 267.539 194.826 266.014 193.071 266.26C193.567 267.31 194.95 267.195 194.248 268.621C192.431 268.277 190.78 267.572 188.53 266.768C185.206 269.589 194.97 267.801 189.149 269.572C189.025 270.507 191.667 271.212 193.856 271.442L190.8 272.983C193.608 273.344 193.546 275.475 193.835 276.886C195.032 277.132 196.952 275.967 195.92 275.361C198.129 275.607 199.017 277.164 198.872 278.115C192.947 278.05 199.017 284.428 192.184 282.789C193.608 287.199 193.36 293.234 195.342 296.316C193.567 297.087 193.174 298.973 190.594 297.546C190.016 300.94 195.652 303.433 193.422 306.679C192.638 306.876 193.67 305.122 191.688 305.007C193.629 307.549 188.364 308.729 189.211 312.386C189.211 311.795 188.055 311.451 187.477 311.287C188.468 311.369 189.19 312.976 189.892 314.009C189.273 314.435 189.355 313.238 188.55 313.402C186.341 316.501 186.899 319.601 187.642 322.798C188.468 325.996 189.376 329.291 188.199 332.587C188.881 330.702 185.288 329.226 183.74 328.898L183.1 330.702C184.793 331.8 184.277 333.161 185.309 334.621C184.545 334.621 183.575 334.998 182.894 334.227C177.857 336.916 187.724 341.458 183.988 345.459C182.192 343 180.375 340.606 178.517 338.244L175.359 338.884L172.799 335.801C170.198 336.637 174.533 338.966 171.622 338.441C170.92 337.966 171.457 337.342 169.93 336.949C168.319 337.949 170.404 338.572 170.569 339.671C165.863 335.686 167.679 330.849 167.143 327.898C166.812 327.389 168.443 328.553 169.001 328.75C169.166 327.619 171.189 327.34 170.611 325.75C168.402 324.405 168.588 326.045 168.113 326.651C165.987 326.127 166.214 325.815 166.131 324.995C169.062 325.405 168.443 321.109 172.221 320.748C172.427 316.518 164.542 320.06 166.874 316.37L170.528 315.747C168.484 313.009 166.998 309.762 168.237 307.253V307.811C169.579 308.368 170.59 307.893 171.375 307.729C173.233 305.925 169.558 303.63 173.129 302.843C169.991 300.121 168.051 296.07 166.585 293.316C171.127 293.07 169.826 297.087 172.386 298.464L172.778 296.087C172.613 297.563 174.182 298.317 176.536 299.497C177.774 297.497 173.955 296.366 173.15 294.283C174.327 294.562 175.132 294.365 175.297 293.463L172.386 292.906C172.634 292.906 172.861 292.84 173.109 292.578L171.829 288.888C170.446 289.528 167.886 289.315 167.721 290.217C169.475 290.053 169.723 290.856 169.537 291.758C167.741 290.79 167.762 292.479 166.172 292.299C166.565 290.528 166.441 288.249 165.821 287.003L168.608 286.855C169.558 285.183 168.257 283.231 169.186 282.116L170.59 282.608C171.684 280.575 170.177 278.394 173.026 276.705C170.095 274.606 167.762 272.098 164.624 270.359C161.177 269.343 169.558 265.112 164.748 262.702C165.14 262.571 167.287 264.292 168.567 265.096C169.228 263.702 164.934 262.358 168.691 262.095C167.184 265.211 171.664 262.079 172.613 263.571C172.675 262.062 172.138 260.455 170.859 259.668C170.693 262.095 165.801 258.57 167.205 261.079C164.232 259.045 163.158 256.389 164.542 254.175C166.152 254.274 166.916 254.028 167.638 253.208L165.367 252.421C165.863 251.371 167.989 254.602 168.959 252.486C165.14 250.109 171.664 245.911 164.376 244.632C167.39 243.058 167.101 247.977 170.838 245.567C173.398 247.174 170.219 249.076 173.852 249.732C172.902 248.239 176.99 249.338 177.093 248.403L174.925 246.682L174.76 247.042C171.478 244.173 173.418 239.91 173.047 236.384C169.537 233.269 164.314 231.022 164.954 227.48C167.06 228.612 167.225 224.611 171.065 227.021C173.088 225.464 170.92 223.742 169.331 223.643C168.691 225.07 168.773 224.135 167.906 225.316C166.007 224.414 166.214 222.528 167.535 221.791C167.37 222.151 167.762 222.02 168.361 222.135C169.785 220.462 166.482 221.233 165.739 219.954C168.484 219.675 166.647 217.232 168.134 216.15L164.356 214.346C166.854 215.363 165.388 212.805 167.762 212.641C166.049 211.378 162.952 210.263 163.736 208.492C165.016 209.296 165.759 206.918 168.361 207C171.044 204.016 161.631 201.589 165.532 198.818C166.131 198.933 167.803 199.589 168.505 198.769C167.824 198.064 168.195 196.899 167.968 196.162L168.03 196.194C168.03 196.194 167.989 196.162 167.968 196.162C167.845 195.801 167.535 195.571 166.916 195.538C164.459 194.21 161.899 193.456 159.917 190.947C156.945 190.996 157.956 193.095 158.864 194.03L161.734 194.915C157.213 195.473 162.374 197.129 160.826 197.637C155.685 195.965 157.234 191.833 154.178 189.176C149.946 190.537 149.079 193.85 149.41 196.785L151.268 195.571L151.226 197.096L154.467 195.752C153.827 197.178 154.55 198.457 154.282 199.753C154.323 198.228 158.452 197.801 157.75 198.638C154.736 200.228 159.525 200.49 159.277 201.786C159.587 201.064 159.711 200.13 161.362 200.802C157.646 203.229 159.917 204.016 155.954 206.18C160.929 206.098 156.263 209.115 160.289 209.624L160.764 208.558L163.613 210.968C159.442 212.92 159.628 208.919 156.573 212.034C155.892 214.986 161.073 215.117 161.321 217.478C158.452 216.593 156.057 214.625 156.263 212.756L154.777 213.838C153.126 213.166 153.642 210.575 153.91 209.279C157.13 211.575 155.004 208.312 157.708 207.443C154.88 207.148 155.231 208.542 153.064 206.82C153.022 208.345 153.249 208.591 152.052 210.493C153.6 206.344 142.453 206.312 145.074 202.737C146.251 204.475 149.203 202.311 150.586 202.163C150.297 201.36 149.719 199.703 149.059 199.015L144.93 199.457C143.299 197.244 152.011 196.85 147.944 194.227C145.508 193.8 146.974 196.358 146.54 195.899C144.187 192.423 150.855 191.472 154.137 188.602C152.919 188.389 150.318 188.307 148.233 187.176C150.669 187.602 151.969 186.881 153.704 188.127C154.798 187.159 153.084 185.913 152.176 184.979C150.607 187.012 148.708 183.978 147.263 183.536C147.758 182.47 149.699 183.962 150.359 184.651C151.082 183.814 154.756 182.929 151.102 182.289C153.683 182.355 157.75 184.995 158.328 186.635L158.823 185.569C160.103 186.372 159.711 186.487 159.236 187.553C161.3 186.586 163.509 186.782 165.347 187.094C164.954 187.225 164.748 186.995 164.356 187.094C163.633 187.93 164.314 188.635 165.698 188.488C169.124 189.406 167.948 187.373 169.723 186.864C169.517 186.405 169.31 185.962 169.104 185.52L158.225 180.568C157.048 178.584 159.773 177.829 161.548 176.452L158.596 175.927C159.009 174.271 160.062 172.73 163.778 173.943C162.766 173.96 162.993 174.189 162.828 174.55C163.22 174.616 163.509 174.714 163.736 174.829C163.922 174.861 164.087 174.894 164.253 174.927C163.406 173.091 162.849 171.943 162.746 171.844C166.874 175.058 168.154 172.222 173.418 172.943L171.891 169.795C170.095 171.582 169.31 169.729 168.629 169.04C171.622 168.975 168.753 166.564 169.248 165.499L169.847 165.597C170.941 164.646 170.776 162.875 170.033 161.596C169.021 161.596 164.273 159.825 161.383 158.923C160.124 161.006 159.009 159.694 157.151 159.792C157.337 159.579 157.399 159.186 157.027 159.12C156.201 158.776 155.871 159.497 154.88 159.514C156.119 161.842 156.367 164.187 160.454 165.285C162.374 164.662 158.741 164.023 160.041 163.301C162.766 164.548 162.126 165.974 161.92 167.843L159.381 168.368L160.619 170.319C159.36 169.467 156.718 169.844 156.346 167.827C153.972 167.991 156.759 169.827 155.892 171.008L159.153 171.762C157.316 171.451 156.8 174.042 154.405 172.09L151.887 168.958L149.575 169.713L149.1 167.138L150.772 167.811C148.749 163.613 157.44 166.876 153.786 162.58C149.864 161.121 149.513 159.727 150.669 157.234C151.453 159.104 153.476 157.53 155.747 158.317C157.543 156.513 154.282 155.759 152.775 154.726C154.922 154.332 156.676 154.07 156.263 155.726C160.681 156.119 155.644 153.496 160.206 153.529C160.433 148.003 145.756 148.511 151.866 142.28L153.683 142.592C151.66 138.394 154.013 136.131 152.795 132.278L157.667 129.474C158.348 130.179 161.734 132.114 164.025 131.359C159.195 132.622 160.743 134.229 158.121 135.688C159.339 135.901 160.268 135.295 161.053 135.049C160.949 136 158.803 136.377 159.546 137.656C160.516 137.64 161.796 136.328 162.291 137.377L159.257 138.951C160.495 141.28 166.152 140.362 164.645 142.969C162.085 142.362 158.369 141.198 157.812 140.148C157.172 141.345 156.346 138.459 154.715 139.509C158.452 141.427 155.355 142.149 157.605 144.576C157.089 144.28 156.346 144.182 156.14 143.592L154.302 146.92C156.614 146.166 156.594 149.823 159.959 149.642C161.569 146.084 159.484 147.068 161.651 143.034C162.333 144.231 165.636 145.871 168.732 146.707C168.588 146.74 168.484 146.789 168.423 146.92C171.684 147.691 172.634 147.084 178.414 147.33C174.409 145.281 177.877 144.166 175.669 141.854C172.531 141.313 171.54 142.969 172.283 144.117L170.301 142.083L171.726 142.526L173.109 137.607C173.212 138.558 175.029 138.951 176.391 139.492C176.556 138.853 177.444 138.263 178.393 137.623C175.359 137.64 173.233 137.459 173.315 136.836C174.244 133.671 177.072 132.015 180.602 130.982C180.54 130.851 180.478 130.72 180.417 130.605C177.279 131.015 174.987 128.113 171.891 126.998C175.09 127.178 173.914 125.44 175.627 124.587C171.973 123.948 166.854 124.391 163.778 125.391C166.998 127.686 167.081 126.735 171.808 127.949L174.76 131.54L171.87 130.654C170.466 132.327 174.223 134.147 170.425 133.868C167.948 132.852 169.579 131.409 167.081 130.408L165.615 131.491C161.982 129.326 169.29 130.605 166.833 128.064C163.53 128.834 166.606 127.834 164.5 126.703C162.188 127.457 165.161 131.031 159.69 130.08C157.357 128.719 166.441 126.079 161.053 124.177L161.672 124.292C162.539 121.849 159.443 120.849 157.523 119.832C159.381 118.848 156.965 117.29 156.821 116.143L158.431 116.241L157.853 114.601C160.722 115.487 157.646 116.487 157.997 117.881L160.991 117.832C157.357 119.291 162.663 120.57 165.14 121.915C162.684 120.012 166.193 116.864 160.392 116.192L163.468 115.208L162.415 114.634C164.727 113.896 168.216 114.88 168.794 116.52C168.03 116.766 167.638 116.897 167.019 116.782C168.299 117.586 170.569 118.356 169.764 120.144L168.237 119.111C167.886 121.357 168.897 123.439 171.787 124.341C173.233 121.144 173.707 117.963 173.769 114.896C167.081 113.716 163.385 112.502 157.151 111.781C156.119 109.682 155.438 106.878 157.853 105.189L159.071 105.402C159.773 104.566 159.484 103.746 158.823 103.058C160.516 102.205 162.085 103.812 163.014 103.222L161.094 100.204C163.922 100.5 163.778 102.976 163.902 104.14C163.674 103.91 163.241 103.451 162.849 103.566C161.589 104.878 166.255 107.616 162.126 108.042C162.787 108.731 159.195 106.567 158.823 108.813C157.192 110.256 160.826 110.896 162.044 111.109C163.654 111.207 164.397 108.829 166.276 109.748C166.152 108.567 164.108 108.01 165.759 106.583C165.883 107.747 169.042 109.469 166.503 109.977C169.352 112.388 176.907 112.371 177.403 111.305C175.029 111.469 174.76 106.993 171.478 109.879C168.526 108.403 168.67 105.927 166.874 104.091L167.473 104.189L166.854 101.959C167.679 102.303 168.34 102.992 169.95 103.09L165.842 99.8765C168.629 101.713 167.927 98.8927 169.248 98.1712C166.812 97.7449 165.099 96.4823 163.613 97.5645C161.755 98.7779 164.892 98.368 165.016 99.5322L161.239 97.7285L161.631 97.5973L158.514 96.4823C158.885 94.2359 165.821 97.7613 162.911 94.7606L158.575 94.9574C159.422 91.6451 164.562 87.5622 162.725 85.119C165.14 85.8732 169.083 86.316 171.478 85.5125C170.673 86.4963 170.693 88.546 171.003 90.0218C170.219 90.2677 166.007 87.9885 167.039 86.4471C159.917 86.9227 171.065 90.5957 163.881 90.4973C161.115 94.4326 170.59 93.7931 166.172 97.0398C169.372 97.2202 167.679 98.0728 170.487 98.368C175.772 97.5645 170.611 93.7768 172.572 91.6451C172.799 91.8747 173.233 92.3338 173.852 92.4322C174.905 90.8744 174.223 90.2021 173.109 89.0379L172.716 89.1691C169.723 87.103 175.194 88.0705 176.659 86.9883C176.205 86.5291 177.237 84.9714 174.863 85.1354L178.043 83.2005L174.451 83.1513C174.327 81.9707 176.701 81.8231 174.595 80.6753L171.395 80.4949L170.095 83.3481C169.145 81.8395 167.06 82.8069 166.482 81.1836C169.868 83.1185 168.34 79.9866 171.313 79.921L169.579 78.6584L170.404 79.0028C172.118 78.1337 169.29 77.8386 169.764 76.7727C167.906 77.9861 165.594 78.724 167.762 80.4457C166.049 79.1831 164.191 76.7399 164.129 76.166C162.869 74.8706 165.367 74.1 165.801 72.9358C166.936 75.2314 175.565 72.5422 172.964 76.9367C172.365 76.8219 172.51 76.4776 172.902 76.3464C168.773 76.7727 172.985 79.052 174.492 80.085C176.866 79.9374 177.382 80.9704 178.786 79.2979C177.237 79.8062 173.625 77.6254 175.669 76.0677L180.685 76.5596L181.428 74.1983L181.655 74.4279C184.958 73.6572 181.201 71.8535 183.203 70.2794C181.49 69.0168 183.203 64.5239 177.815 66.2621C181.057 64.9175 177.134 63.4581 176.556 61.8184L174.368 63.7369C170.92 61.2117 173.191 61.9988 167.597 59.8671C168.98 59.7359 170.136 59.3588 171.581 59.8015C172.056 56.6204 173.769 52.1276 169.764 50.0779C170.136 47.8315 176.081 47.7331 173.955 44.47C173.294 43.7813 169.207 44.798 170.797 42.7647C171.189 42.6335 174.409 44.9292 174.162 42.5843C170.384 40.7642 176.556 38.7802 173.336 36.4845C174.801 35.4023 174.409 33.4018 177.444 33.943C176.639 35.7139 177.093 38.2882 178.559 38.7474C176.721 38.4194 176.68 39.9608 175.338 38.567C172.84 41.1906 177.134 40.4199 175.379 42.7975C176.597 43.0107 178.848 41.6825 177.795 41.1086C181.985 41.2725 179.508 46.0114 184.669 44.0437C185.206 41.4529 176.515 40.3215 181.077 38.2227C183.575 39.2393 181.325 40.5675 185.639 41.8956L187.435 40.1083L184.504 38.6326L185.123 38.731C189.17 35.5991 181.015 35.5171 179.095 32.4836C176.081 34.0741 171.849 31.7949 169.991 33.0083C169.579 31.0242 170.239 29.5977 174.43 29.7616C177.609 33.5822 178.848 30.1552 182.811 33.7298C184.339 33.2379 188.901 34.7956 189.479 32.7787C186.63 30.3683 185.949 33.3198 184.71 30.9914C185.103 30.8766 185.474 30.7455 186.094 30.8603C183.988 29.7288 186.961 29.6632 184.628 28.3023L185.454 28.6302C188.096 27.1709 182.687 26.8101 185.536 25.5639C182.398 25.9739 183.038 24.5637 181.16 23.6454C179.9 24.9572 175.379 25.5147 175.462 28.2203C177.898 28.6466 179.281 28.499 180.396 29.6633L180.21 27.9087C180.582 28.3023 181.201 28.6138 181.676 28.9746L180.293 30.5979C178.682 28.4007 175.978 29.2697 173.48 28.2531C174.678 26.351 172.902 26.6133 173.79 25.4163C177.382 25.6787 180.189 21.9073 182.667 19.7593C182.502 20.1036 182.564 20.5627 182.46 20.7923C184.628 22.514 185.536 19.7921 186.548 19.7757L184.814 18.5131C185.041 18.7426 185.867 19.087 186.403 18.6115C185.846 16.9717 182.254 16.9225 181.676 15.2992C183.678 15.2664 186.61 16.7422 187.704 15.7911C189.459 15.5124 194.145 14.6105 192.534 12.3969C191.791 12.2165 191.399 11.6426 191.11 10.9867C191.213 11.0851 191.275 11.1999 191.42 11.2491L193.67 9.92088C196.994 11.2655 191.915 12.2985 195.239 13.6431L198.459 13.8726C198.418 14.8237 199.718 16.1519 201.349 16.8078C201.989 15.3976 201.164 15.0532 200.606 13.4135C202.65 13.2659 204.095 14.4629 204.301 14.6433L202.485 14.3318C199.698 16.1355 205.396 17.3325 204.632 19.6937C204.467 20.0544 204.26 19.8249 203.641 19.7101C206.634 21.7761 202.237 23.4979 206.242 25.5475L204.59 24.8588C205.87 26.187 208.884 28.827 211.795 31.4506L213.054 31.5161C213.818 31.2702 213.715 32.2048 213.178 32.6968C214.623 34.0085 215.965 35.2711 216.956 36.3042C217.74 36.0254 218.422 35.6483 218.628 35.1891C217.183 34.73 218.525 32.4836 215.181 32.664C217.266 31.6801 214.479 29.86 215.8 29.1221C213.55 30.4503 212.703 28.0071 210.887 27.6792C213.034 27.2856 210.866 25.5639 213.694 25.8755C214.458 25.6295 211.774 26.4986 213.426 27.1709C215.986 28.7614 215.924 24.5473 218.319 26.4986C216.481 24.0554 217.534 20.9891 215.077 18.4475L213.839 19.7593C214.334 18.6934 213.839 16.1027 215.243 15.9715C215.532 16.7914 215.428 17.726 215.924 18.7754C219.124 18.9558 216.068 16.2994 218.05 16.2666L212.931 13.0692L212.662 14.3646C210.763 13.4627 213.302 10.8227 213.88 8.82227C218.195 10.1668 213.798 11.8886 215.428 14.0858C216.997 15.7091 219.722 13.2987 220.672 14.8073C221.725 14.4629 221.663 13.5119 220.589 12.9872L221.415 12.4461C225.317 13.9218 224.243 16.8078 227.546 18.9066C227.133 18.7098 226.679 18.5459 226.225 18.4803C224.574 19.9232 224.553 21.4482 225.503 22.9567C226.803 22.2353 225.977 21.8909 225.544 21.4318C226.535 21.4318 226.865 22.8092 227.918 23.3831C229.177 22.0713 230.292 23.2191 230.994 22.3828C231.881 23.3011 231.551 24.0226 231.076 25.0884C229.528 25.5803 229.033 24.5473 227.051 24.5801C228.166 25.7443 223.397 26.0558 225.585 27.7776C226.555 25.6459 229.838 28.5154 231.118 29.3189L231.283 28.9582C233.554 29.7452 233.616 30.3191 231.469 30.7127C230.581 29.7944 231.283 28.9582 228.929 29.1057C228.991 29.696 229.053 30.2863 229.714 30.975L228.062 30.3027L228.372 33.2379C230.416 33.779 233.306 34.6808 236.341 35.2055C234.421 35.8286 235.907 36.8617 236.588 37.5504L235.742 37.206C233.884 38.4194 235.184 41.3381 237.001 41.6497C235.308 42.5023 225.73 34.6808 227.01 41.2398C226.865 43.7157 232.769 43.0107 234.71 44.5028C234.71 44.5028 234.111 44.4044 233.719 44.5192C233.223 45.585 235.453 45.7818 236.341 46.7001C237.269 46.0934 237.373 45.1587 236.547 44.8144C238.983 45.2407 236.175 47.0608 238.075 47.9627C234.359 46.7329 236.506 49.9959 234.606 49.0777C232.026 51.1273 234.875 53.5377 237.6 54.7839C232.769 56.0465 238.075 57.3583 235.721 59.6375C235.886 59.2768 235.226 58.5881 235.763 58.0962C232.831 56.6204 234.028 60.4902 231.407 58.293C231.84 58.7521 232.996 58.3913 232.563 57.9158C232.274 57.1123 230.994 56.3089 229.611 56.4401L226.824 58.2602L226.143 57.5551L222.261 60.3262C222.86 60.4246 223.624 60.1787 224.016 60.0639C222.179 63.3925 223.975 67.3443 223.294 70.3122C231.758 71.214 226.452 77.773 231.51 80.3965C229.115 79.6587 224.842 79.1339 223.046 79.4455C222.716 78.888 219.371 77.6582 220.156 76.4776C221.539 76.3464 223.17 74.9034 224.677 75.9365C223.913 72.5422 220.92 76.2316 217.823 75.1166C218.401 78.8716 223.232 81.2492 225.09 83.676H224.078L225.854 85.5453C226.514 84.1187 231.324 84.3811 229.507 86.1848L229.28 85.9552C227.195 86.9391 229.425 89.2511 229.012 90.9072L231.716 92.1534C231.283 93.8095 226.101 93.662 222.963 94.0883C222.427 96.6791 226.576 98.368 228.991 100.319C226.679 101.074 225.895 104.96 223.273 102.779C225.11 105.222 237.249 105.238 230.292 108.993L228.186 107.862C228.393 111.748 232.377 117.422 229.962 119.111C222.22 117.372 221.683 123.603 213.963 123.981C215.738 123.866 216.213 125.342 217.142 125.588C216.213 125.866 215.305 126.358 216.853 126.981C218.484 125.538 224.759 128.359 221.849 125.358C227.01 127.031 231.014 129.08 230.54 132.261L227.34 132.081L228.475 129.588C226.101 129.752 226.349 128.457 225.296 127.883C223.19 132.507 217.844 126.965 217.947 131.786C219.991 132.327 219.165 131.999 219.908 133.278C219.846 132.688 217.637 132.491 217.534 133.442L220.032 134.458C214.582 135.918 216.729 131.54 212.889 132.819C210.495 130.867 209.359 127.588 205.23 128.031C203.558 130.999 212.703 131.064 210.66 134.163L208.905 134.426C210.02 135.59 212.827 135.885 214.479 136.557C213.488 136.557 212.724 136.82 212.394 137.525C216.399 139.574 217.121 140.853 221.498 142.772C218.422 138.017 224.883 138.951 222.179 134.065C223.459 134.868 224.223 138.263 228.62 138.64L225.42 138.459C226.989 140.083 228.537 141.69 227.361 143.592L225.626 142.329C227.691 145.002 220.486 146.412 225.688 148.675C226.019 147.97 225.957 147.38 225.503 146.92C226.844 148.314 226.411 149.954 225.771 151.381L230.87 154.578C229.28 154.48 229.053 156.382 226.576 155.365C223.996 157.415 228.702 158.628 229.425 159.891C225.874 161.957 228.042 157.923 223.624 157.529C221.952 160.497 223.087 163.777 225.854 165.597C226.535 165.007 227.113 164.728 227.897 164.794C226.886 164.843 227.071 166.073 226.989 166.761L229.033 167.319C227.546 168.401 226.328 168.188 224.821 167.155C224.347 168.221 228.269 169.68 225.193 170.68C222.798 168.729 225.152 166.45 223.645 165.433C225.441 169.385 217.059 169.073 219.371 174.091C218.38 174.107 216.481 173.205 216.399 174.14C217.018 176.354 220.651 174.894 222.922 175.665C221.745 173.927 223.067 173.189 225.75 172.32L227.422 172.845C226.535 172.877 226.432 173.927 225.564 174.206L228.991 174.615C225.193 174.337 222.179 175.911 223.521 177.305C226.37 176.075 226.204 176.436 230.56 176.239C234.565 178.272 226.39 178.19 230.602 180.469C229.384 180.256 228.599 178.387 227.546 179.945C227.299 181.24 230.271 181.191 231.159 182.109C228.042 180.994 225.668 181.142 221.972 179.928C221.725 177.583 222.076 178.994 220.837 176.665L218.03 178.485C217.637 176.485 214.479 176.911 213.281 176.698C209.834 179.928 217.947 179.436 216.977 181.568C219.082 182.699 217.575 179.551 219.743 181.289C219.144 183.29 221.787 181.83 223.025 184.159L221.601 183.716C219.66 184.339 221.952 185.11 222.22 185.93C223.129 186.848 233.327 185.372 233.306 189.029C232.439 188.816 231.881 188.734 231.51 188.717L205.065 184.077C204.9 187.766 203.868 191.98 201.824 196.178C196.539 196.965 197.716 192.964 195.363 193.128L196.56 191.226C198.769 191.423 196.973 195.325 200.998 193.735C199.636 190.226 202.278 188.783 197.922 185.323C192.638 186.126 198.583 189.652 194.392 191.62C194.785 190.734 194.269 189.963 193.567 189.209C192.762 191.177 191.874 193.276 190.966 195.506L192.204 196.063C192.885 194.555 193.401 193.522 193.608 193.39C193.03 195.391 195.796 197.227 199.615 197.506L199.78 197.145L200.916 197.932L200.09 199.326L200.111 199.293ZM183.018 330.603C182.708 330.406 182.316 330.226 181.82 330.046C182.336 330.226 182.708 330.226 183.018 330.603ZM189.851 159.087C189.108 161.76 187.91 164.449 187.27 167.024C195.136 162.645 201.06 159.579 200.4 167.401L200.916 167.942C201.907 166.958 202.134 165.203 201.7 163.515C199.099 162.072 189.541 157.333 188.674 157.349C186.527 157.743 188.798 158.53 188.096 159.366L189.851 159.104V159.087ZM202.629 157.677C203.579 156.185 201.865 156.464 200.379 156.169C200.544 156.71 200.689 157.267 200.854 157.808C201.246 157.628 201.783 157.546 202.629 157.693V157.677ZM198.872 156.201C198.831 156.365 198.748 156.513 198.542 156.578L198.872 156.201ZM195.032 185.913C195.032 185.913 194.97 185.815 194.95 185.749C194.805 186.11 194.681 186.471 194.516 186.832C194.764 186.7 194.97 186.422 195.032 185.897V185.913ZM198.934 182.945L196.188 182.47C196.065 182.798 195.941 183.142 195.796 183.486C197.055 183.421 198.15 183.339 198.913 182.945H198.934ZM208.657 173.32C205.396 172.549 205.375 170.434 201.556 170.155C200.586 169.975 200.173 170.401 199.842 170.893C199.698 171.451 199.553 172.041 199.409 172.664C199.966 172.713 200.482 172.861 200.957 173.091C201.473 172.484 202.443 172.107 204.776 172.451C199.553 173.845 208.327 174.025 206.903 175.698C209.566 176.354 209.689 173.878 208.657 173.32ZM207.253 40.2231C207.584 40.1903 208.451 40.0591 209.545 39.8624L211.362 41.1578C210.391 43.2894 204.776 44.8144 209.38 46.946C208.141 47.8151 205.602 48.1922 203.496 48.5858C203.682 48.143 203.909 47.7331 204.239 47.4051C197.675 41.6497 211.713 44.8472 207.253 40.2395V40.2231ZM198.893 64.9011C198.666 64.6715 198.046 64.5567 198.046 64.5567C204.756 69.6891 206.531 73.7556 206.077 76.3628C208.884 75.9693 211.196 73.7064 212.414 72.6406L215.511 73.7556L212.972 74.2639L215.738 76.1004C217.906 75.7069 217.555 74.3131 219.247 73.4441C218.649 73.3457 215.139 70.2302 213.24 69.3284L210.887 71.6076C211.816 71.0009 211.279 67.8362 210.556 66.5572C208.967 66.4752 206.386 68.5085 209.813 68.9184C207.439 69.0824 207.584 66.6064 204.941 68.0658C202.547 66.1145 204.838 63.245 206.097 61.9332L210.082 61.8676C211.713 60.4246 205.375 60.6542 207.77 58.9653C208.41 61.1953 212.146 58.7685 212.332 60.523C213.859 60.0311 216.523 60.687 216.337 58.9161C211.196 57.2435 219.743 57.2107 215.201 55.653C216.894 54.8003 218.298 56.768 219.103 54.9971C216.481 52.8163 214.499 52.8491 210.68 52.5703C209.483 54.456 215.511 54.9479 214.479 56.4893L208.141 53.0786C207.171 53.6197 207.047 54.0461 207.295 54.4232C206.964 53.7673 206.015 53.1934 204.714 52.6851C203.992 52.3899 203.352 52.1276 202.815 51.8816C202.671 53.6689 202.464 55.2431 200.833 55.4562L198.996 55.1283C197.262 55.6858 198.521 56.7844 199.842 57.3091C199.946 58.9161 202.423 60.6214 199.987 60.8673L198.335 60.1951C198.748 62.1791 198.955 62.4087 198.831 64.8847L198.893 64.9011ZM190.532 129.195C197.386 128.277 203.476 127.211 202.65 121.603L203.083 122.062C207.522 119.439 197.799 116.372 202.753 113.158C205.21 114.913 204.983 114.815 210.701 116.881L208.905 115.028C212.559 115.667 210.763 113.814 211.031 112.519L215.346 113.847C214.025 114.585 213.447 116.585 214.458 116.569C214.004 116.11 208.74 119.012 209.917 120.767C212.91 120.718 211.919 117.094 216.688 118.881C214.747 117.389 217.72 117.34 216.77 115.815C218.711 117.307 220.816 116.323 222.901 117.471L222.055 115.011C223.046 114.995 224.037 118.619 227.815 116.782C226.308 115.749 228.434 113.24 225.234 113.076H226.225C227.03 111.273 221.745 112.076 223.707 109.928C222.096 109.83 220.961 110.207 221.229 111.027C221.911 111.732 224.099 111.929 224.45 113.322C221.911 113.847 224.863 111.666 220.569 112.453C218.422 112.847 222.158 116.192 217.451 114.978L218.257 113.208C215.057 113.027 215.325 111.732 212.724 111.666C211.609 110.518 215.305 109.617 212.58 108.37C210.536 107.813 206.634 108.485 208.43 106.681C213.281 105.419 212.621 101.09 212.043 99.4502L210.082 97.9581C208.1 97.9909 210.185 100.664 207.687 99.647L207.047 97.417L208.265 97.6301C208.575 96.9086 207.315 96.1216 206.655 95.4165C208.926 96.1872 207.893 97.7449 211.258 97.5645C211.981 96.5643 213.24 96.4495 212.662 95.4821C212.889 95.6952 213.199 95.892 213.674 95.892C215.243 93.8587 210.061 93.7276 209.008 93.1537C204.797 90.8744 204.838 95.1049 201.411 94.695L199.966 88.4968C201.019 89.0707 202.072 89.6282 203.455 89.497C205.107 88.0541 206.056 89.5626 206.035 87.4474C201.453 87.4146 203.352 84.6762 200.813 83.0693C202.732 82.4462 203.104 82.315 203.063 83.84C206.035 83.7908 205.024 81.6919 205.354 80.9868C204.652 80.5441 204.26 79.8062 203.62 79.3143C202.093 79.8554 200.255 79.5275 199.079 78.1501L198.459 78.0517C197.51 80.1834 194.041 83.4136 196.994 84.8894L195.548 84.4467C192.823 86.8407 200.524 90.1201 194.847 91.0384C192.638 90.8416 194.31 91.5139 191.11 91.35L193.505 93.3012L192.08 92.8585L192.596 96.0232L191.998 95.9084C194.805 97.5153 197.097 98.7779 198.975 99.7946C200.379 99.8601 200.813 99.7782 201.804 100.319C202.464 100.844 202.547 101.221 202.34 101.565C201.886 102.32 199.842 102.746 198.955 103.664L198.79 100.729C196.436 100.401 193.959 100.549 192.204 101.91C192.142 101.32 190.305 101.008 189.995 101.713C190.615 101.811 191.378 103.681 193.319 103.058C194 105.862 187.477 110.092 191.729 114.487C189.211 111.355 188.385 116.782 187.642 113.388C183.699 115.569 191.255 115.552 190.511 117.914C189.128 118.061 190.78 116.618 188.117 115.962C186.341 119.865 193.814 122.915 192.411 126.703L189.438 126.752C189.768 127.49 190.14 128.326 190.511 129.179L190.532 129.195ZM193.732 136.934C194.021 137.689 194.31 138.443 194.599 139.23C194.64 139.165 194.661 139.083 194.702 139.017L196.952 141.329C198.191 140.017 201.514 139.246 202.898 141.214C201.68 141.001 200.152 141.493 199.471 140.804C197.613 142.018 195.714 144.756 200.235 144.198C196.168 141.575 205.974 143.854 202.96 141.804C205.808 142.952 204.425 143.936 205.664 144.969C203.29 143.854 200.111 144.969 198.851 146.461C199.533 147.15 198.728 148.937 199.842 150.085C202.609 149.806 204.116 150.823 204.921 149.052C205.602 149.741 206.097 150.79 204.611 151.889C204.178 151.413 203.889 150.61 202.898 150.626C200.338 151.266 200.379 152.135 199.285 152.578C199.409 152.971 199.533 153.365 199.657 153.742C199.904 153.643 200.214 153.561 200.606 153.496L202.939 154.857C201.762 153.119 204.26 154.119 205.85 154.217C202.65 154.037 205.354 155.283 205.437 155.873L208.905 154.758C210.556 155.431 206.325 156.808 209.689 156.628C211.196 154.02 210.701 152.971 209.834 150.511L207.15 151.381C205.457 148.577 211.774 149.888 211.836 146.822C209.524 145.461 211.96 142.231 207.15 141.968C208.595 142.411 211.547 140.247 209.442 139.115C205.127 137.787 204.756 134.262 202.671 135.246C202.547 136.18 204.9 137.558 201.969 138.197L201.164 136.328L198.686 137.426C199.595 136.836 197.241 136.803 193.691 136.951L193.732 136.934ZM164.108 176.846L164.046 176.911C164.046 176.911 164.046 176.862 164.046 176.829H164.087L164.108 176.846Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.632 38.2559C168.65 38.2887 170.529 39.2069 170.983 39.666C171.128 39.3053 171.685 38.8298 170.632 38.2559Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M149.822 296.301L149.905 300.974V305.614C149.946 302.942 150.235 300.515 149.822 296.301Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.367 72.3783C179.675 69.5907 176.351 68.2297 175.67 65.4258C171.458 68.902 181.574 70.4925 177.301 73.3785L181.367 72.3619V72.3783Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.677 70.7895C169.434 70.4943 169.889 73.0687 172.655 72.7736C171.87 70.9043 169.166 71.7733 169.6 70.1172L165.677 70.7731V70.7895Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.938 60.9648L229.816 61.8667L229.155 61.178L227.938 60.9648Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.196 83.317L167.37 82.9727L166.111 84.3008L168.196 83.317Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.844 62.3419L236.711 61.1449L235.06 60.4727L235.844 62.3419Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M215.201 72.347L214.086 71.1992C214.313 71.4288 212.682 72.8717 215.201 72.347Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.07 91.5796L167.411 92.9734L167.783 92.8422L166.441 91.4648L166.07 91.5796Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M224.903 81.3474C227.813 80.7079 225.543 83.5611 228.164 82.1181C227.813 80.7079 226.286 81.2163 224.903 81.3474Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.487 96.6621C204.487 96.8425 204.57 97.0392 204.879 97.236C204.776 97.0065 204.632 96.8261 204.487 96.6621Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.487 96.6644C204.528 96.0905 205.664 95.5494 204.858 95.123C203.517 95.7953 203.991 96.0741 204.487 96.6644Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.714 103.337L204.941 102.813C206.325 103.403 206.118 103.141 205.024 102.616C204.962 102.058 204.054 102.042 203.434 101.96C203.084 101.829 202.733 101.714 202.34 101.566C202.712 101.747 203.063 101.927 203.352 102.058C203.269 102.927 203.373 103.452 204.694 103.321L204.714 103.337Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.963 126.113C156.161 124.211 156.697 123.736 158.906 123.932C159.732 122.112 155.892 122.244 155.087 121.096C155.376 123.211 154.323 123.588 154.963 126.113Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M155.086 121.08C155.066 120.85 155.024 120.621 154.962 120.342C154.88 120.637 154.962 120.867 155.086 121.08Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.466 96.5469L232.789 97.8915L232.356 97.4323L229.466 96.5469Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.662 128.949C153.827 128.588 153.765 128.014 154.55 127.752C152.32 127.555 153.497 129.293 153.662 128.949Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.634 123.211C199.017 123.063 198.274 121.784 198.831 121.309C198.501 122.03 194.372 122.456 197.634 123.211Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.457 134.902C162.622 134.541 164.15 134.049 165.967 134.36C164.914 133.787 161.053 132.918 162.457 134.902Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.014 126.751L197.778 126.505L196.436 125.111L197.014 126.751Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M230.086 123.341C227.527 121.734 223.542 125.456 221.478 122.783C218.485 125.997 225.235 122.685 224.657 125.112C225.648 123.718 229.034 123.144 230.086 123.324V123.341Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M224.636 125.111C224.492 125.308 224.388 125.538 224.368 125.784C224.512 125.521 224.595 125.308 224.636 125.111Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M206.53 145.51C206.262 145.28 205.973 145.116 205.663 144.969C205.87 145.149 206.138 145.329 206.53 145.51Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M226.329 133.049L222.49 130.639C225.029 132.246 224.636 136.017 228.6 135.935C229.488 134.754 228.517 133.229 226.866 132.557L226.329 133.033V133.049Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.898 155.89L151.391 154.857L150.854 156.054C151.474 155.726 154.343 156.481 152.898 155.89Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.752 156.27L150.856 156.039C150.856 156.039 150.71 156.155 150.752 156.27Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.879 141.181C205.209 140.46 205.127 139.886 204.466 139.197C203.702 139.443 202.897 141.214 204.879 141.181Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M158.204 162.94L157.626 161.316L157.812 163.071L158.204 162.94Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.999 170.141L150.235 170.387L151.577 171.78L152.341 171.518L150.999 170.141Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.508 163.547C230.004 162.481 226.494 161.481 225.73 161.744V163.859C228.889 163.449 225.689 163.268 226.556 162.088L229.508 163.564V163.547Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.249 225.809C151.206 225.251 152.547 223.005 154.529 222.956C155.355 223.3 156.098 224.579 157.419 223.841L152.444 221.808C155.789 219.512 159.03 223.923 160.764 225.186C161.589 222.742 158.266 221.873 158.472 219.25C157.956 220.004 156.656 220.447 155.541 220.808C151.949 220.758 153.683 218.364 153.518 216.61C151.887 217.659 150.607 216.954 149.244 216.101C149.141 215.954 148.935 215.839 148.708 215.774C148.543 215.675 148.377 215.577 148.212 215.478V215.692C147.799 215.659 147.304 215.692 146.643 215.806C147.593 217.315 144.517 218.315 144.414 219.25C150.318 218.561 145.549 222.513 147.283 223.775L147.779 225.169V225.678C147.098 225.76 146.313 225.579 145.219 224.743C146.334 225.448 145.776 227.596 147.676 227.481L147.448 232.45C147.201 232.597 146.891 232.745 146.458 232.827C146.808 233.007 147.118 233.056 147.407 233.04L146.354 254.471C146.891 253.455 148.295 252.618 148.997 251.569C152.754 253.356 149.822 249.831 153.456 250.454C154.736 251.241 154.24 252.29 153.311 252.897C155.149 253.225 156.841 252.389 159.05 252.586C161.569 249.995 152.733 249.208 154.261 246.633C156.47 246.83 158.369 247.732 158.183 245.977L158.637 246.437C156.346 243.551 163.798 244.469 157.832 242.468L161.032 242.649C158.699 241.288 158.844 238.828 158.493 237.418L159.112 237.533C155.706 233.483 158.472 235.319 157.213 230.875L160.826 233.04C162.477 231.597 158.431 231.089 158.906 230.023C159.525 230.121 161.878 229.974 162.395 231.023L157.048 225.481C154.715 224.12 154.674 225.645 153.311 225.792L153.249 225.809Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M158.451 219.28C158.637 219.001 158.74 218.69 158.637 218.312C158.513 218.673 158.472 218.985 158.451 219.28Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.252 255.995L146.334 254.52C146.107 254.962 146.004 255.438 146.252 255.995Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.928 211.377C150.214 212.23 149.657 210.59 148.439 210.377L148.274 213.673C149.513 213.706 150.875 214.099 152.01 214.066L151.928 211.361V211.377Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M145.9 214.544C146.746 214.691 147.489 215.069 148.191 215.495L148.274 213.691C147.345 213.658 146.498 213.839 145.879 214.56L145.9 214.544Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M211.795 216.873L211.877 217.463L212.765 218.382L211.795 216.873Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.788 225.792C207.708 225.169 206.366 223.791 205.932 223.332C205.891 224.857 205.23 224.168 205.788 225.792Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.958 224.727L226.928 226.235L227.299 226.12L225.958 224.727Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.956 267.473C157.997 267.702 158.059 267.932 158.1 268.178C158.141 267.866 158.079 267.653 157.956 267.473Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M155.892 255.093C152.052 258.34 153.064 252.716 148.378 253.585L149.761 255.503L148.543 255.29L148.77 257.569C150.917 257.208 151.082 256.864 153.291 257.061C152.197 260.045 150.587 257.897 147.614 259.963L147.738 263.325L147.098 263.013C147.119 263.292 147.387 263.439 147.738 263.554C147.882 267.309 148.006 271.048 148.068 274.721C149.616 276.852 152.176 273.885 155.273 275.59C155.521 273.261 158.225 269.9 153.807 269.424C154.406 269.539 155.624 269.769 156.181 269.326L152.672 267.752L151.392 268.982C147.903 267.408 149.1 263.046 151.392 262.341C152.424 264.932 156.924 263.931 154.22 267.309C155.355 267.211 157.399 266.686 157.936 267.506C157.028 263.292 159.34 259.652 155.872 255.11L155.892 255.093Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.394 296.086L153.001 296.004C153.208 296.103 153.352 296.135 153.394 296.086Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.157 294.825L150.153 292.447L150.008 295.464L152.981 296.022C152.279 295.678 150.916 294.464 152.155 294.185L154.137 294.841L154.157 294.825Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M147.903 289.973C148.935 291.629 152.507 291.924 154.282 291.235C155.706 292.826 150.339 291.596 153.931 292.957C156.512 293.187 155.294 291.268 154.881 290.825L147.903 289.973Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.35 278.624L152.775 279.181L153.291 278.115L151.35 278.624Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.775 279.182L152.238 280.231C153.353 280.231 154.426 280.247 155.21 280.133L152.775 279.182Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.875 283.002C150.545 283.445 150.276 283.92 150.091 284.527L150.875 283.002Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.928 281.84H151.453L150.854 283.004C151.185 282.578 151.535 282.217 151.907 281.84H151.928Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.238 280.248C149.719 280.248 147.056 280.248 147.572 281.839H151.453L152.238 280.248Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M221.477 235.27L222.819 236.647L223.211 236.532L221.869 235.139L221.477 235.27Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M218.69 242.846C219.103 243.19 219.557 243.469 220.011 243.715C219.763 243.354 219.35 243.059 218.69 242.846Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.473 249.273C232.851 250.732 232.273 246.961 230.973 249.831C228.599 249.995 225.667 248.502 226.926 247.174C229.135 247.371 228.268 248.568 230.58 247.814C228.082 246.797 229.837 246.518 226.493 246.699C224.511 245.075 222.158 244.813 220.052 243.682C221.394 245.6 217.719 249.322 221.848 251.88C225.77 253.356 231.303 252.799 237.083 253.044C238.466 252.913 239.333 249.519 235.514 249.257L235.473 249.273Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.419 247.041C241.75 246.32 241.543 246.09 241.089 245.631C239.107 245.664 241.378 246.451 241.419 247.041Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.642 261.915C197.447 262.095 198.355 263.456 199.8 263.243L198.933 261.193C198.768 261.652 197.736 261.767 196.642 261.915Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M198.562 260.291L198.954 261.193C199.037 260.98 198.954 260.701 198.562 260.291Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.127 261.98C196.292 261.963 196.478 261.931 196.643 261.914C196.478 261.881 196.292 261.881 196.127 261.98Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M148.811 287.315C147.242 287.151 148.068 288.036 148.481 288.496C148.667 288.184 149.245 287.758 148.811 287.315Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M148.729 317.832L147.305 318.276C148.11 318.177 148.523 318.128 148.729 317.832Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.105 337.736C187.394 337.835 187.621 337.95 187.828 338.081C187.662 337.966 187.435 337.851 187.105 337.736Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.827 338.081C188.921 338.917 186.32 340.098 188.012 341.147L187.455 340.934L188.157 342.311C188.405 341.229 189.499 339.097 187.827 338.064V338.081Z\",\n    fill: \"#5C4F47\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M276.306 114.549C276.306 114.893 276.74 115.008 276.946 115.074L277.111 111.188C276.636 111.302 276.017 112.401 275.769 111.647C275.233 111.958 275.625 112.991 276.244 113.172L275.563 112.86C276.43 113.778 274.613 114.336 274.118 113.745V113.827L277.462 116.418C277.71 115.516 276.306 115.68 276.306 114.582V114.549Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.002 194.454C270.857 193.946 270.692 193.88 270.527 193.93C270.651 194.11 270.795 194.29 271.002 194.454Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.247 116.994L279.3 117.814C279.032 117.486 278.639 117.207 278.247 116.994Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.98 111.057C261.98 111.057 261.877 111.057 261.794 111.057L262.331 111.419C262.207 111.271 262.104 111.156 261.98 111.041V111.057Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.468 134.768C281.488 134.85 281.508 134.915 281.528 135.031C281.528 134.932 281.508 134.85 281.468 134.768Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.325 100.285L257.274 102.056C256.799 101.81 256.903 102.646 256.345 102.269C256.407 102.4 256.572 103.024 256.841 102.876V102.515C258.224 103.483 258.802 102.942 259.814 104.499C260.722 103.581 259.958 103.155 259.318 102.63C259.235 102.466 259.194 102.318 259.153 102.171L257.212 100.662L256.325 100.302V100.285Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.198 170.005L263.653 170.087C263.426 169.988 263.219 169.627 263.198 170.005Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M277.32 116.664C277.588 116.697 277.918 116.812 278.249 116.976L277.464 116.369C277.464 116.369 277.382 116.566 277.34 116.664H277.32Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.243 115.255L274.119 113.796L273.396 113.238C273.644 113.812 273.809 114.468 274.243 115.272V115.255Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.417 132.49C282.499 135.508 280.765 131.703 280.27 133.064C280.435 133.917 281.219 134.229 281.447 134.753C280.869 132.343 284.089 135.163 283.779 132.736C285.224 133.13 285.286 134.524 284.853 135.327C283.408 136.213 283.862 134.491 282.499 134.229C282.685 135.196 282.954 135.048 283.717 135.475C283.325 136.983 285.307 138.672 283.304 139.525C283.573 140.64 284.233 140.591 284.956 141.23C286.463 141.394 285.823 139.623 287.02 139.246C286.897 139.328 286.628 139.492 286.422 139.426L286.793 138.492C286.236 139.377 285.286 138.328 285.204 137.836C285.204 137.492 285.162 136.787 285.575 136.885L285.885 137.426C286.401 136.754 284.853 135.885 285.699 135.18C286.029 135.147 286.195 135.426 286.401 135.475C285.41 134.638 285.513 133.851 284.832 132.638L286.298 133.376C284.688 132.376 285.266 130.211 286.215 128.735C285.947 128.899 285.761 129.195 285.493 128.998C285.183 128.096 286.236 127.473 287 127.899C285.802 126.997 288.197 124.636 286.649 123.423L279.341 117.766C279.527 117.979 279.671 118.192 279.712 118.422C278.371 118.864 278.515 119.143 277.338 118.241C277.978 119.11 279.052 118.815 279.052 120.094C278.412 119.569 276.926 119.405 276.698 120.619C277.855 123.701 281.488 125.85 283.243 128.752C282.231 128.834 282.396 131.064 282.107 132.146C281.054 131.703 280.765 130.883 280.6 130.047C280.497 130.572 280.435 131.474 280.352 132.146L282.458 132.49H282.417Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M279.384 125.324C279.384 125.324 279.239 125.473 279.177 125.555C279.26 125.522 279.322 125.44 279.384 125.324Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.601 129.816C280.601 129.816 280.539 129.816 280.498 129.816L280.56 130.079C280.56 129.997 280.601 129.882 280.601 129.833V129.816Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.006 117.323C274.717 117.126 274.655 116.995 274.366 116.814C274.449 116.929 274.532 117.077 274.614 117.208C274.738 117.339 274.883 117.405 275.006 117.323Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M276.823 116.765L277.236 116.88C277.236 116.88 277.298 116.748 277.34 116.683C277.112 116.65 276.927 116.683 276.823 116.765Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M272.757 143.754L272.963 144.05C272.963 143.869 272.86 143.803 272.757 143.754Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.539 135.8C280.498 134.75 279.032 135.636 279.094 134.144L278.991 134.57C278.392 133.488 278.785 131.619 278.785 130.356C279.383 130.52 279.548 129.618 280.477 129.782C280.292 128.913 280.126 128.044 279.197 127.568C279.548 127.044 278.723 126.207 279.156 125.535C278.578 125.814 277.298 124.502 277.897 126.191C277.835 126.06 277.69 126.142 277.628 125.994C276.782 127.044 278.103 127.503 278.083 128.438C277.505 128.979 277.236 127.503 276.989 128.028C277.443 129.192 276.142 131.619 278.248 131.602C278.351 132.438 277.897 132.537 277.484 132.783C279.652 134.177 276.307 137.669 279.156 137.735C279.074 137.243 279.156 136.456 278.578 135.734L280.539 135.8Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.068 119.076C275.068 119.076 275.068 119.224 275.027 119.273C275.027 119.208 275.068 119.142 275.068 119.076Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.007 106.104L285.845 106.612C286.154 109.121 285.597 110.006 285.556 112.204C285.287 112.368 285.143 112.089 285.06 111.958C285.205 113.499 284.689 115.778 285.494 116.926C285.452 117.418 284.792 118.681 284.276 118.172C284.42 118.418 284.565 118.697 284.503 118.959C283.821 119.009 284.338 118.336 283.801 118.304C283.739 118.517 283.615 118.599 283.801 118.648C283.243 118.271 281.509 118.959 281.633 117.254C283.223 116.647 281.757 118.435 283.491 118.107C283.532 117.549 282.851 117.582 282.645 117.533C282.727 116.811 283.161 116.844 283.553 116.893C283.037 116.598 283.822 115.713 283.037 115.319C282.975 113.909 284.338 115.434 284.358 114.516L282.645 113.925L283.058 112.417C282.562 110.203 280.023 112.63 279.156 110.088C280.044 110.449 281.633 109.498 282.067 108.334C282.087 109.039 283.161 110.367 282.604 111.253C284.028 110.023 282.686 113.007 284.276 112.4C283.574 111.745 283.512 110.695 283.966 109.892L284.11 110.17C284.338 109.301 282.542 108.58 283.305 107.416C283.285 106.809 283.76 106.94 284.172 107.071C283.945 106.563 283.615 106.088 284.007 106.104ZM284.296 107.416L284.09 108.203C284.379 108.022 284.4 107.727 284.296 107.416Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M264.726 76.1642L264.808 75.7051C264.747 75.8854 264.726 76.033 264.726 76.1642Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.566 65.5383L259.195 64.8496C259.195 65.112 259.36 65.3251 259.566 65.5383Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M264.932 44.8303C265.077 44.7317 265.221 44.6167 265.345 44.4688C265.18 44.4688 265.035 44.6167 264.932 44.8303Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.628 65.6722C259.628 65.6722 259.648 65.6392 259.669 65.6392L259.566 65.5566L259.628 65.6887V65.6722Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.38 80.5586C259.421 80.6572 259.462 80.7558 259.545 80.8708C259.524 80.7229 259.462 80.6408 259.38 80.5586Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M264.355 80.084C264.396 80.199 264.437 80.2976 264.52 80.3798L264.355 80.084Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.081 95.9883L260.308 96.6278C260.308 96.3162 260.205 96.1359 260.081 95.9883Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.136 81.69C263.136 81.69 263.281 81.7725 263.364 81.789C263.323 81.7065 263.219 81.657 263.136 81.69Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.319 35.8936C268.588 35.746 268.918 35.3689 269.186 35.5493C268.835 35.2213 267.948 35.2049 268.319 35.8936Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.543 40.6641C282.419 40.6971 282.315 40.7631 282.274 40.8456C282.523 40.8456 282.564 40.7631 282.543 40.6641Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.789 96.645L283.202 96.8587C283.016 96.6943 282.892 96.6286 282.789 96.645Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M283.141 91.8398C283.141 91.8398 283.203 91.8564 283.244 91.8729C283.203 91.8564 283.182 91.8563 283.141 91.8398Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.009 89.709C259.009 89.709 258.905 89.709 258.863 89.742C258.926 89.841 258.968 89.7915 259.009 89.709Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.25 68.2441C280.25 68.2441 280.043 68.3099 279.858 68.4249C279.961 68.4742 280.085 68.4249 280.25 68.2441Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.331 72.8027C278.331 72.8027 278.247 72.8522 278.205 72.8852L278.331 72.8027Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.199 36.7793C263.158 37.0089 263.199 37.1892 263.219 37.3204C263.26 37.1564 263.26 36.9761 263.199 36.7793Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M283.222 91.8555C283.346 91.9048 283.449 91.9869 283.594 92.102C283.449 91.9705 283.325 91.9048 283.222 91.8555Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.006 60.9805L275.109 61.129L275.171 61.0465L275.006 60.9805Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.978 58.5861C276.101 58.6681 276.225 58.7173 276.349 58.7665C275.936 57.8811 276.535 56.3233 275.358 56.0938C275.358 56.3889 274.574 57.8811 273.893 57.5859C274.161 58.1926 273.273 59.0617 273.438 59.3896C274.14 58.4222 274.45 59.324 274.822 59.9963C274.429 60.5866 273.872 59.8487 273.624 60.357L273.665 61.7672L273.893 60.5538L275.028 60.9637C275.028 60.9637 274.966 60.8818 274.925 60.8326C274.512 58.7501 276.618 60.7178 275.998 58.5697L275.978 58.5861Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M276.348 58.7676C276.41 58.8991 276.493 59.0141 276.617 59.1127C276.617 58.9155 276.493 58.8333 276.348 58.7676Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.744 50.4053C278.702 50.2903 278.661 50.1753 278.579 50.0273C278.62 50.0931 278.682 50.2574 278.744 50.4053Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.623 112.188C273.953 112.155 274.717 110.975 273.83 110.975C273.726 111.335 273.602 111.68 273.499 112.04L273.623 112.188Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.089 27.2168C275.048 27.348 275.027 27.4792 275.048 27.6267C275.089 27.6595 275.131 27.6923 275.172 27.7087C275.317 27.6267 275.172 27.3644 275.089 27.2168Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.499 57.209C273.623 57.4391 273.747 57.5377 273.892 57.6034C273.83 57.4555 273.726 57.324 273.499 57.209Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M277.195 27.216C277.463 27.0521 277.855 26.8225 278.206 26.8061C278.227 26.4618 277.793 26.1994 277.649 25.8223C277.752 26.2322 277.649 26.6913 277.195 27.216Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.211 112.894C273.273 112.992 273.335 113.107 273.376 113.222L273.149 113.041L272.839 113.861C272.881 113.96 272.942 114.074 272.963 114.206C272.942 114.156 272.839 114.107 272.757 114.074L272.633 114.337C273.52 115.025 274.099 116.682 274.615 117.173C274.966 117.813 275.151 118.584 275.069 119.059C275.11 118.616 274.966 118.01 274.449 118.174C273.871 119.059 272.344 119.453 273.562 121.06V120.141L275.44 122.257C274.594 122.945 274.511 121.191 273.81 120.896C274.697 122.535 272.055 123.782 273.706 124.569C272.695 124.634 271.002 124.765 271.064 125.815C272.241 125.093 271.766 126.471 273.025 125.88C273.582 126.258 272.612 127.045 273.355 127.127L272.942 127.012C271.27 128.75 273.727 129.422 274.511 130.209C274.821 132.374 274.119 133.341 274.202 135.096C273.52 135.145 271.642 135.571 271.683 136.276C272.571 136.637 272.922 138.228 274.099 138.424C274.656 137.178 273.17 137.359 272.922 136.604C274.181 136.014 274.14 136.588 274.904 135.752C274.388 136.424 275.399 138.883 274.202 139.605L274.057 139.326C273.293 140.507 270.403 140.654 272.055 142.72L272.736 143.704C272.612 143.655 272.488 143.639 272.385 143.622C272.199 145.196 270.878 144.721 271.848 146.492C271.766 146.361 271.642 146.443 271.559 146.295C270.857 147.262 272.137 148.296 272.385 149.05C271.394 149.476 271.435 148.919 270.734 148.607C270.279 150.329 271.869 152.264 273.004 153.379L272.385 154.477C272.013 153.805 271.023 152.952 270.424 153.149C270.589 153.772 271.064 153.657 270.837 154.527C270.217 154.363 269.66 153.985 268.896 153.543C267.782 155.314 271.085 154.002 269.123 155.215C269.082 155.789 269.99 156.133 270.734 156.215L269.701 157.216C270.651 157.363 270.651 158.626 270.754 159.462C271.167 159.577 271.807 158.823 271.456 158.495C272.199 158.577 272.53 159.478 272.488 160.036C270.465 160.184 272.612 163.758 270.279 163.02C270.837 165.595 270.878 169.186 271.642 170.891C271.064 171.432 270.981 172.564 270.073 171.858C269.97 173.908 272.013 175.023 271.374 177.056C271.105 177.22 271.374 176.138 270.713 176.187C271.477 177.548 269.763 178.598 270.217 180.68C270.197 180.336 269.784 180.221 269.578 180.172C269.908 180.139 270.238 181.041 270.548 181.582C270.362 181.877 270.321 181.172 270.052 181.336C268.917 185.304 271.539 188.42 271.291 192.388C271.353 191.256 270.052 190.797 269.495 190.765L269.433 191.88C270.073 192.322 270.052 193.159 270.527 193.864C270.279 193.946 269.99 194.274 269.681 193.929C268.256 196.094 271.993 197.422 271.188 200.095L268.628 196.766L267.658 197.553L266.481 196.094C265.717 196.93 267.389 197.717 266.378 197.799C266.089 197.619 266.213 197.176 265.655 197.143C265.222 197.963 265.985 198.045 266.151 198.668C264.148 196.996 264.313 193.798 263.859 192.076C263.715 191.798 264.355 192.322 264.561 192.371C264.52 191.666 265.18 191.256 264.85 190.371C264.004 189.797 264.189 190.781 264.086 191.207C263.343 191.125 263.384 190.912 263.302 190.42C264.313 190.338 263.756 187.764 265.015 187.174C264.809 184.583 262.393 187.518 262.93 185.009L264.107 184.288C263.281 182.795 262.559 180.877 262.868 179.221V179.565C263.384 179.811 263.694 179.434 263.962 179.27C264.499 178.024 263.157 176.86 264.334 176.138C263.157 174.679 262.352 172.268 261.795 170.612C263.343 170.202 262.992 172.777 263.921 173.482L263.983 171.99C263.983 172.908 264.52 173.285 265.366 173.859C265.697 172.564 264.396 172.104 264.066 170.858C264.479 170.957 264.747 170.809 264.768 170.235L263.756 170.055C263.756 170.055 263.921 169.989 263.983 169.809L263.467 167.595C263.013 168.054 262.146 168.054 262.104 168.612C262.703 168.431 262.806 168.907 262.765 169.481C262.125 168.973 262.187 170.022 261.65 169.989C261.733 168.841 261.65 167.448 261.403 166.693L262.332 166.48C262.621 165.398 262.146 164.234 262.435 163.512L262.91 163.758C263.24 162.463 262.703 161.167 263.653 160.02C262.641 158.823 261.815 157.33 260.763 156.363C259.586 155.822 262.414 152.985 260.783 151.624C260.907 151.542 261.65 152.559 262.084 153.018C262.311 152.149 260.845 151.411 262.125 151.181C261.609 153.133 263.137 151.099 263.446 152.001C263.446 151.083 263.281 150.116 262.848 149.64C262.786 151.132 261.134 149.066 261.609 150.575C260.597 149.378 260.247 147.771 260.721 146.41C261.258 146.443 261.526 146.279 261.774 145.77L261.01 145.328C261.176 144.688 261.877 146.607 262.228 145.311C260.948 143.934 263.178 141.277 260.721 140.622C261.754 139.621 261.63 142.606 262.91 141.097C263.777 142.015 262.682 143.229 263.921 143.557C263.611 142.671 264.995 143.262 265.036 142.704L264.313 141.704L264.251 141.917C263.157 140.228 263.839 137.637 263.735 135.522C262.559 133.702 260.804 132.423 261.052 130.291C261.754 130.947 261.857 128.537 263.137 129.931C263.839 128.963 263.116 127.963 262.579 127.93C262.352 128.799 262.393 128.225 262.084 128.963C261.444 128.455 261.526 127.307 261.981 126.848C261.919 127.061 262.043 126.979 262.249 127.045C262.744 126.012 261.609 126.52 261.382 125.766C262.311 125.552 261.712 124.11 262.228 123.437L260.969 122.404C261.815 122.978 261.341 121.453 262.146 121.322C261.568 120.584 260.536 119.961 260.825 118.879C261.258 119.338 261.526 117.911 262.414 117.911C263.343 116.075 260.185 114.747 261.526 113.025C261.733 113.09 262.29 113.468 262.538 112.959C262.311 112.549 262.455 111.844 262.373 111.402C262.332 111.188 262.228 111.057 262.022 111.041C261.196 110.27 260.329 109.86 259.689 108.368C258.678 108.45 259.008 109.696 259.297 110.237L260.267 110.729C258.719 111.123 260.453 112.057 259.937 112.369C258.203 111.434 258.76 108.926 257.749 107.368C256.304 108.253 255.973 110.254 256.056 112.008L256.696 111.254V112.172L257.79 111.32C257.563 112.189 257.79 112.943 257.687 113.73C257.707 112.812 259.111 112.5 258.884 113.009C257.852 114.009 259.483 114.091 259.379 114.878C259.503 114.451 259.545 113.878 260.102 114.255C258.822 115.763 259.586 116.206 258.223 117.567C259.916 117.452 258.306 119.321 259.669 119.584L259.834 118.944L260.783 120.355C259.359 121.584 259.441 119.174 258.389 121.092C258.141 122.88 259.896 122.896 259.958 124.306C258.987 123.814 258.182 122.667 258.265 121.535L257.749 122.207C257.191 121.83 257.398 120.256 257.48 119.469C258.554 120.797 257.852 118.879 258.781 118.305C257.831 118.174 257.934 119.01 257.212 117.993C257.191 118.912 257.253 119.059 256.84 120.207C257.398 117.682 253.62 117.829 254.549 115.632C254.941 116.665 255.953 115.321 256.427 115.206C256.345 114.73 256.159 113.746 255.932 113.336L254.528 113.648C253.991 112.336 256.964 111.992 255.602 110.451C254.776 110.237 255.251 111.746 255.106 111.484C254.342 109.418 256.613 108.762 257.749 106.991C257.336 106.876 256.448 106.86 255.746 106.204C256.572 106.433 257.026 105.974 257.604 106.712C257.996 106.122 257.418 105.384 257.109 104.843C256.551 106.089 255.932 104.285 255.457 104.039C255.643 103.4 256.283 104.269 256.489 104.679C256.737 104.17 257.996 103.58 256.778 103.252C257.666 103.252 259.008 104.793 259.194 105.761L259.379 105.105C259.813 105.564 259.669 105.646 259.503 106.302C260.226 105.695 260.969 105.777 261.588 105.941C261.465 106.023 261.382 105.892 261.258 105.958C261.01 106.466 261.217 106.876 261.692 106.778C262.848 107.286 262.476 106.072 263.075 105.745C263.013 105.482 262.951 105.203 262.889 104.941L259.256 102.104C258.884 100.924 259.813 100.432 260.432 99.5955L259.441 99.3168C259.607 98.3165 259.978 97.3655 261.217 98.0542C260.886 98.087 260.948 98.2181 260.886 98.4313C261.031 98.4641 261.114 98.5133 261.196 98.5789L261.361 98.6281C261.093 97.5295 260.907 96.8572 260.886 96.7916C262.249 98.6773 262.724 96.9392 264.499 97.3163L264.004 95.447C263.364 96.5456 263.116 95.447 262.91 95.0371C263.921 94.9551 262.972 93.5449 263.157 92.9054L263.364 92.9546C263.756 92.3643 263.715 91.3149 263.467 90.5442C263.116 90.5606 261.526 89.544 260.556 89.052C260.102 90.331 259.751 89.544 259.111 89.626C259.173 89.4948 259.194 89.2488 259.07 89.216C258.801 89.0192 258.678 89.4456 258.327 89.4784C258.719 90.8557 258.781 92.2823 260.164 92.889C260.825 92.4955 259.586 92.1511 260.04 91.692C260.948 92.3971 260.721 93.2661 260.618 94.3976L259.751 94.7419L260.143 95.9061C259.73 95.4142 258.822 95.6766 258.719 94.4632C257.914 94.5943 258.843 95.6602 258.533 96.3816L259.627 96.7916C259.008 96.6276 258.801 98.2017 258.017 97.0539L257.191 95.201L256.407 95.6766L256.262 94.1352L256.82 94.5124C256.18 92.02 259.091 93.8565 257.914 91.3313C256.593 90.5114 256.489 89.6587 256.923 88.1502C257.171 89.2652 257.873 88.2978 258.636 88.7405C259.276 87.6419 258.162 87.2155 257.666 86.6088C258.409 86.3465 259.008 86.1661 258.843 87.1664C260.35 87.3467 258.657 85.8382 260.205 85.8054C260.35 82.4767 255.354 82.9686 257.501 79.1481L258.12 79.312C257.48 76.8196 258.306 75.4095 257.955 73.1139L259.648 71.3757C259.875 71.7857 260.99 72.9171 261.795 72.4416C260.143 73.2614 260.639 74.2125 259.73 75.1143C260.143 75.2291 260.474 74.852 260.742 74.688C260.701 75.2619 259.958 75.5243 260.185 76.2785C260.515 76.2457 260.969 75.4423 261.134 76.0818L260.081 77.0656C260.474 78.4594 262.414 77.8199 261.857 79.4104C260.99 79.0825 259.751 78.4266 259.565 77.7871C259.338 78.5086 259.09 76.7869 258.512 77.4427C259.751 78.5414 258.698 79.0169 259.441 80.4598C259.276 80.2959 259.008 80.2303 258.946 79.8859L258.285 81.9028C259.07 81.4273 259.029 83.6245 260.185 83.477C260.783 81.3125 260.061 81.9356 260.845 79.476C261.072 80.1811 262.166 81.1321 263.219 81.5913C263.178 81.6077 263.137 81.6405 263.116 81.7224C264.21 82.1488 264.54 81.7716 266.502 81.8372C265.16 80.6566 266.357 79.9351 265.635 78.5742C264.582 78.279 264.21 79.2956 264.458 79.9679L263.818 78.7709L264.293 79.0169L264.829 76.049C264.85 76.6229 265.469 76.836 265.924 77.1476C265.985 76.7705 266.295 76.3933 266.625 75.9998C265.593 76.049 264.871 75.967 264.912 75.5899C265.263 73.6714 266.254 72.6383 267.472 71.9824C267.472 71.9005 267.431 71.8185 267.41 71.7529C266.336 72.0316 265.593 70.3263 264.561 69.6868C265.655 69.7524 265.263 68.7194 265.862 68.1947C264.623 67.8503 262.889 68.1947 261.815 68.8178C262.889 70.1623 262.93 69.5884 264.499 70.2607L265.449 72.376L264.479 71.8677C263.983 72.8843 265.242 73.9337 263.942 73.8189C263.116 73.245 263.694 72.3432 262.848 71.7693L262.332 72.4416C261.134 71.179 263.591 71.8677 262.786 70.3591C261.65 70.851 262.724 70.2279 262.001 69.572C261.196 70.0476 262.166 72.1628 260.329 71.6545C259.545 70.8674 262.683 69.1621 260.866 68.0799L261.072 68.1455C261.403 66.6697 260.37 66.0958 259.73 65.5219C260.37 64.9152 259.565 63.9969 259.545 63.3083L260.081 63.3411L259.916 62.3572C260.887 62.8491 259.813 63.4886 259.916 64.3249L260.928 64.2593C259.669 65.1776 261.444 65.8826 262.29 66.6533C261.485 65.5383 262.724 63.6034 260.763 63.2755L261.815 62.636L261.465 62.308C262.27 61.8325 263.426 62.39 263.611 63.3739C263.343 63.5378 263.219 63.6198 263.013 63.5542C263.446 64.0133 264.189 64.4561 263.9 65.5383L263.405 64.9316C263.24 66.2762 263.57 67.5224 264.54 68.0307C265.077 66.0958 265.284 64.1773 265.346 62.3244C263.095 61.7013 261.857 61.0126 259.73 60.6519C259.421 59.4057 259.214 57.7168 260.061 56.6837L260.474 56.7985C260.721 56.2902 260.639 55.7983 260.412 55.3884C261.01 54.8637 261.506 55.8147 261.836 55.4376L261.237 53.6502C262.187 53.7978 262.104 55.29 262.125 55.9951C262.043 55.8639 261.898 55.5851 261.774 55.6671C261.32 56.4706 262.868 58.0611 261.465 58.3727C261.692 58.7826 260.494 57.52 260.329 58.8646C259.751 59.75 260.99 60.0944 261.403 60.2092C261.939 60.242 262.228 58.8154 262.868 59.3401C262.848 58.635 262.166 58.3235 262.744 57.438C262.765 58.1431 263.818 59.127 262.951 59.4713C263.88 60.8979 266.46 60.7831 266.625 60.1436C265.82 60.2748 265.8 57.5856 264.644 59.3565C263.653 58.5039 263.735 57.0117 263.157 55.9295L263.364 55.9787L263.178 54.6505C263.446 54.8472 263.673 55.2572 264.21 55.29L262.868 53.4043C263.797 54.4701 263.591 52.7976 264.045 52.3385C263.219 52.1089 262.662 51.371 262.146 52.0433C261.485 52.7976 262.559 52.5024 262.579 53.2075L261.32 52.1581L261.444 52.0761L260.412 51.4366C260.577 50.092 262.868 52.1253 261.939 50.3544L260.453 50.5184C260.804 48.5179 262.6 46.0091 262.022 44.5661C262.827 44.9925 264.169 45.222 264.995 44.7137C264.706 45.3204 264.685 46.5502 264.768 47.4357C264.499 47.5996 263.095 46.2715 263.488 45.3368C261.052 45.6975 264.788 47.7964 262.352 47.8128C261.341 50.2068 264.582 49.7149 263.033 51.7154C264.128 51.781 263.529 52.3221 264.479 52.4696C266.295 51.9285 264.582 49.7149 265.304 48.4031C265.366 48.5343 265.511 48.813 265.717 48.8622C266.089 47.9112 265.882 47.5177 265.511 46.829L265.387 46.911C264.396 45.6976 266.233 46.2223 266.77 45.55C266.625 45.2712 266.997 44.3366 266.192 44.4514L267.307 43.2544H266.089C266.068 42.5657 266.873 42.4345 266.171 41.7786L265.098 41.713L264.602 43.4347C264.293 42.5329 263.57 43.1396 263.405 42.1721C264.52 43.3035 264.045 41.4343 265.077 41.3687L264.52 40.6308L264.788 40.8275C265.387 40.2864 264.417 40.1389 264.602 39.4994C263.942 40.2536 263.157 40.7292 263.859 41.7294C263.302 40.9915 262.703 39.5486 262.703 39.1878C262.29 38.4171 263.157 37.9252 263.322 37.2365C263.673 38.5975 266.646 36.8922 265.696 39.565C265.49 39.4994 265.552 39.2862 265.696 39.2042C264.293 39.5158 265.697 40.8276 266.171 41.4343C266.976 41.3195 267.142 41.9426 267.637 40.9095C267.1 41.2375 265.903 39.9585 266.625 39.0075L268.318 39.2534L268.607 37.8268L268.669 37.958C269.805 37.4661 268.566 36.4167 269.268 35.4492C268.71 34.7114 269.371 31.9894 267.513 33.088C268.649 32.2354 267.327 31.3991 267.162 30.4317L266.378 31.6123C265.242 30.1365 266.006 30.5792 264.148 29.3494C264.623 29.251 265.015 29.0051 265.511 29.2674C265.717 27.349 266.398 24.627 265.077 23.4464C265.242 22.1018 267.265 21.9706 266.605 20.0358C266.398 19.6258 264.995 20.2817 265.552 19.0355C265.676 18.9535 266.729 20.2981 266.687 18.8879C265.449 17.8385 267.575 16.5759 266.522 15.2313C267.038 14.5591 266.935 13.3621 267.967 13.6572C267.658 14.7394 267.761 16.2808 268.256 16.5267C267.637 16.3464 267.596 17.281 267.162 16.4611C266.275 18.0681 267.74 17.5598 267.1 19.0027C267.513 19.1175 268.298 18.2976 267.947 17.9697C269.371 18.0189 268.442 20.9048 270.238 19.6586C270.465 18.0845 267.534 17.4942 269.123 16.1988C269.949 16.7891 269.165 17.609 270.61 18.3632L271.25 17.2646L270.279 16.412L270.486 16.4775C271.91 14.5591 269.144 14.5919 268.545 12.7881C267.493 13.772 266.089 12.4438 265.449 13.1981C265.346 12.0011 265.593 11.1484 267.018 11.1976C268.029 13.4604 268.504 11.3944 269.784 13.4932C270.321 13.1817 271.828 14.0671 272.075 12.8537C271.146 11.4436 270.857 13.2145 270.486 11.8207C270.61 11.7387 270.754 11.6731 270.961 11.7223C270.259 11.0664 271.27 11.0008 270.506 10.1974L270.775 10.3941C271.704 9.49229 269.867 9.32832 270.857 8.55764C269.784 8.8364 270.032 7.98374 269.412 7.44263C268.958 8.24609 267.41 8.62323 267.389 10.2466C268.215 10.4761 268.69 10.3777 269.041 11.0664V10.017C269.123 10.2466 269.33 10.4269 269.495 10.6401L268.999 11.6239C268.483 10.3122 267.554 10.8697 266.729 10.2794C267.183 9.11515 266.564 9.29552 266.894 8.57404C268.112 8.70522 269.144 6.40959 270.032 5.08141C269.97 5.29457 269.99 5.55693 269.949 5.70451C270.651 6.72114 271.023 5.08141 271.353 5.04861L270.795 4.31074C270.878 4.44192 271.146 4.65508 271.332 4.34353C271.167 3.35969 269.949 3.37609 269.784 2.39225C270.465 2.34306 271.435 3.21212 271.828 2.62181C272.426 2.44144 274.037 1.85114 273.541 0.539353C273.293 0.440969 273.17 0.0966281 273.087 -0.296907C273.128 -0.247715 273.149 -0.165729 273.19 -0.149331L273.995 -0.969197C275.089 -0.198523 273.355 0.473768 274.449 1.26084L275.544 1.37562C275.502 1.94953 275.936 2.73659 276.473 3.11373C276.72 2.26107 276.452 2.06431 276.287 1.08047C276.989 0.982083 277.443 1.68717 277.525 1.78555L276.906 1.62158C275.915 2.73659 277.835 3.39249 277.525 4.81905C277.463 5.03222 277.402 4.90104 277.195 4.83545C278.165 6.04885 276.638 7.13107 277.959 8.31168L277.401 7.91814C277.814 8.70521 278.785 10.263 279.714 11.8043L280.147 11.8371C280.415 11.6731 280.354 12.247 280.147 12.5422C280.622 13.3129 281.035 14.0671 281.365 14.6738C281.633 14.4935 281.881 14.2639 281.964 13.9851C281.489 13.7228 281.984 12.3618 280.849 12.5094C281.572 11.9027 280.663 10.8369 281.138 10.3777C280.354 11.1976 280.106 9.73824 279.487 9.55787C280.23 9.29552 279.528 8.29528 280.477 8.44286C280.746 8.27888 279.817 8.8364 280.354 9.22993C281.179 10.1646 281.262 7.62299 282.026 8.7708C281.448 7.32784 281.881 5.47494 281.076 3.96639L280.622 4.76986C280.808 4.13037 280.705 2.57262 281.179 2.49064C281.262 2.98256 281.2 3.54007 281.365 4.16316C282.459 4.24515 281.468 2.67101 282.129 2.63821L280.457 0.76892L280.333 1.55599C279.714 1.03128 280.622 -0.575661 280.87 -1.78906C282.315 -1.01839 280.766 0.0474334 281.283 1.35922C281.778 2.31026 282.769 0.850904 283.058 1.75276C283.429 1.53959 283.429 0.965686 283.058 0.670534L283.347 0.342587C284.647 1.19525 284.214 2.93337 285.308 4.16316C285.164 4.04838 285.019 3.95 284.875 3.9172C284.297 4.80266 284.255 5.7209 284.544 6.60636C284.998 6.16363 284.73 5.96687 284.586 5.68811C284.916 5.67172 284.998 6.50797 285.349 6.83592C285.804 6.03245 286.154 6.72114 286.423 6.21283C286.712 6.75394 286.588 7.18027 286.402 7.83616C285.865 8.14771 285.721 7.52461 285.04 7.5738C285.391 8.26249 283.78 8.49205 284.482 9.50868C284.854 8.2133 285.907 9.91862 286.34 10.3777L286.402 10.1646C287.166 10.6073 287.166 10.968 286.423 11.214C286.134 10.6729 286.402 10.1646 285.597 10.2794C285.597 10.6401 285.597 10.9844 285.824 11.3944L285.267 11.0008L285.308 12.7554C285.989 13.0669 286.96 13.5752 287.971 13.854C287.311 14.2475 287.806 14.8542 288.012 15.2641L287.723 15.0674C287.063 15.8216 287.455 17.5598 288.074 17.7237C287.476 18.2485 284.358 13.6572 284.689 17.5762C284.586 19.0519 286.609 18.5764 287.249 19.4619C287.249 19.4619 287.042 19.4127 286.918 19.4783C286.732 20.1177 287.476 20.2161 287.765 20.7572C288.095 20.3801 288.136 19.8226 287.868 19.6258C288.694 19.8554 287.703 20.9704 288.322 21.4951C287.083 20.79 287.744 22.7249 287.125 22.2002C286.216 23.4628 287.125 24.873 288.033 25.5944C286.361 26.3979 288.136 27.1358 287.311 28.5296C287.372 28.3164 287.166 27.9065 287.352 27.6113C286.382 26.7587 286.712 29.0543 285.865 27.7753C286.01 28.054 286.402 27.8081 286.258 27.5293C286.175 27.0538 285.762 26.5783 285.287 26.6767L284.317 27.7917L284.09 27.3818L282.728 29.0871C282.934 29.1363 283.202 28.9887 283.326 28.9067C282.645 30.9236 283.182 33.2848 282.913 35.0557C285.783 35.5148 283.863 39.4994 285.535 41.0079C284.73 40.5816 283.285 40.3192 282.666 40.5324C282.562 40.2045 281.448 39.4994 281.737 38.7779C282.212 38.6795 282.79 37.794 283.285 38.4007C283.079 36.3675 282.005 38.6303 280.973 37.9908C281.097 40.2372 282.707 41.6146 283.306 43.0576H282.955L283.533 44.1726C283.78 43.3035 285.411 43.4183 284.771 44.5169L284.709 44.3858C283.987 44.9925 284.709 46.3534 284.544 47.3537L285.453 48.0752C285.287 49.0754 283.512 49.0426 282.439 49.3378C282.211 50.8955 283.595 51.8629 284.379 53.0108C283.574 53.4863 283.264 55.8311 282.397 54.5521C282.996 55.9951 287.104 55.8639 284.689 58.2087L283.987 57.5528C283.987 59.8812 285.267 63.2427 284.42 64.2757C281.819 63.3247 281.53 67.0797 278.909 67.3912C279.507 67.2928 279.652 68.1783 279.961 68.3094C279.652 68.4898 279.321 68.8014 279.837 69.1621C280.416 68.2766 282.501 69.9 281.551 68.1291C283.285 69.0637 284.627 70.2443 284.42 72.1628L283.326 72.0972L283.739 70.5887C282.934 70.7198 283.037 69.9328 282.686 69.6048C281.902 72.4088 280.168 69.1457 280.147 72.0316C280.828 72.3432 280.56 72.1464 280.787 72.9007C280.787 72.54 280.023 72.458 279.982 73.0155L280.808 73.5894C278.929 74.524 279.734 71.8841 278.392 72.6875C277.608 71.5397 277.257 69.5884 275.853 69.9C275.255 71.7037 278.351 71.6381 277.608 73.5238L277.009 73.7042C277.381 74.3928 278.33 74.524 278.888 74.9176C278.558 74.934 278.289 75.0979 278.165 75.5243C279.507 76.7049 279.734 77.4591 281.2 78.5578C280.209 75.7374 282.397 76.2293 281.551 73.327C281.984 73.7861 282.191 75.8194 283.677 75.9998L282.583 75.9342C283.099 76.8852 283.595 77.8363 283.182 79.0005L282.604 78.2626C283.264 79.8368 280.808 80.7878 282.542 82.0668C282.666 81.6405 282.645 81.2797 282.501 81.0174C282.934 81.8372 282.769 82.8375 282.542 83.6901L284.235 85.543C283.698 85.5102 283.595 86.6416 282.769 86.0677C281.861 87.3303 283.45 88.0026 283.677 88.7569C282.459 90.0359 283.223 87.5927 281.737 87.4123C281.138 89.216 281.489 91.1673 282.397 92.2331C282.645 91.8724 282.831 91.692 283.099 91.7248C282.748 91.774 282.81 92.5119 282.769 92.9218L283.45 93.2334C282.934 93.9056 282.521 93.7909 282.026 93.1842C281.861 93.8237 283.161 94.6599 282.108 95.2994C281.324 94.1516 282.129 92.7578 281.633 92.1675C282.191 94.5124 279.363 94.4304 280.085 97.4147C279.755 97.4475 279.115 96.9228 279.074 97.4803C279.259 98.8084 280.519 97.8738 281.283 98.3165C280.89 97.2835 281.344 96.8244 282.273 96.2669L282.831 96.562C282.521 96.5948 282.48 97.2343 282.191 97.3983L283.347 97.595C282.067 97.4803 281.014 98.4641 281.448 99.284C282.439 98.5133 282.377 98.7265 283.863 98.5625C285.205 99.7267 282.418 99.7923 283.842 101.088C283.429 100.973 283.182 99.8743 282.81 100.809C282.707 101.596 283.719 101.53 284.028 102.055C282.975 101.432 282.17 101.547 280.932 100.858C280.87 99.4479 280.973 100.301 280.581 98.9068L279.61 100.038C279.507 98.8412 278.413 99.1364 278.021 99.0216C276.823 101.006 279.569 100.596 279.218 101.891C279.92 102.547 279.445 100.678 280.168 101.678C279.941 102.891 280.849 101.973 281.262 103.367L280.787 103.121C280.126 103.514 280.89 103.957 280.973 104.449C281.262 104.99 284.751 103.974 284.709 106.154C284.42 106.04 284.235 105.99 284.09 105.99L275.151 103.547C275.048 105.761 274.677 108.319 273.933 110.86C272.137 111.402 272.571 108.975 271.766 109.106L272.179 107.942C272.922 108.04 272.282 110.401 273.665 109.385C273.231 107.302 274.14 106.384 272.695 104.367C270.878 104.925 272.881 106.958 271.435 108.188C271.58 107.663 271.415 107.204 271.167 106.745C270.878 107.942 270.568 109.204 270.217 110.565L270.63 110.893C270.878 109.975 271.064 109.352 271.126 109.27C270.899 110.483 271.828 111.549 273.128 111.664L273.19 111.451L273.562 111.91L273.273 112.763L273.211 112.894ZM269.392 191.912C269.268 191.83 269.123 191.781 268.958 191.732C269.144 191.781 269.268 191.732 269.392 191.912ZM270.135 88.8881C269.846 90.5114 269.412 92.1347 269.165 93.6925C271.89 90.9541 273.933 89.052 273.624 93.7581L273.789 94.0696C274.14 93.4629 274.243 92.4135 274.099 91.3969C273.231 90.5606 270.032 87.8386 269.743 87.855C269 88.1174 269.763 88.5601 269.516 89.0684L270.114 88.8881H270.135ZM274.511 87.8714C274.842 86.9532 274.264 87.15 273.768 86.986C273.809 87.3139 273.871 87.6419 273.913 87.9534C274.057 87.8386 274.222 87.7894 274.511 87.855V87.8714ZM273.231 87.0352C273.231 87.1336 273.19 87.2319 273.108 87.2647L273.231 87.0352ZM271.621 104.925C271.621 104.925 271.621 104.859 271.601 104.826C271.559 105.039 271.497 105.253 271.435 105.482C271.518 105.4 271.601 105.236 271.621 104.925ZM272.963 103.105L272.034 102.859C271.993 103.055 271.952 103.269 271.89 103.482C272.323 103.432 272.695 103.367 272.963 103.121V103.105ZM276.369 97.2015C275.275 96.7916 275.275 95.5126 273.995 95.3978C273.665 95.2994 273.52 95.5618 273.397 95.8569C273.355 96.1849 273.293 96.5456 273.231 96.9227C273.417 96.9391 273.582 97.0211 273.748 97.1523C273.933 96.7916 274.264 96.5456 275.048 96.726C273.252 97.6278 276.245 97.6278 275.729 98.6445C276.617 99.0052 276.7 97.5131 276.349 97.1851L276.369 97.2015ZM277.856 17.281C277.98 17.2482 278.269 17.1662 278.64 17.0351L279.239 17.7893C278.867 19.0847 276.927 20.0522 278.454 21.282C278.021 21.8067 277.133 22.069 276.431 22.3314C276.493 22.069 276.576 21.8231 276.7 21.6099C274.573 18.2157 279.28 20.003 277.856 17.2646V17.281ZM274.573 32.1862C274.511 32.055 274.284 31.9894 274.284 31.9894C276.473 35.0065 277.009 37.4333 276.823 38.991C277.794 38.7287 278.599 37.3513 279.053 36.6954L280.085 37.3349L279.218 37.6629L280.126 38.7287C280.87 38.4663 280.766 37.6301 281.365 37.1054C281.159 37.0562 280.023 35.2197 279.404 34.695L278.558 36.0887C278.888 35.7116 278.764 33.8259 278.537 33.0552C278 33.0224 277.092 34.2686 278.248 34.4818C277.443 34.5966 277.525 33.1208 276.617 34.0227C275.833 32.8749 276.658 31.1367 277.112 30.3333L278.475 30.2513C279.053 29.3658 276.885 29.579 277.732 28.5296C277.918 29.8577 279.218 28.3656 279.259 29.415C279.796 29.1035 280.684 29.4642 280.643 28.4148C278.929 27.4637 281.819 27.349 280.312 26.4635C280.911 25.9388 281.344 27.103 281.654 26.0208C280.808 24.7418 280.126 24.7746 278.847 24.6434C278.413 25.7912 280.436 26.0208 280.065 26.9554L277.98 24.9713C277.649 25.3157 277.587 25.5617 277.67 25.7912C277.567 25.3977 277.257 25.0697 276.823 24.7746C276.576 24.6106 276.369 24.4466 276.204 24.3155C276.122 25.3813 276.018 26.3487 275.461 26.4799L274.842 26.2995C274.243 26.6603 274.656 27.2998 275.089 27.5949C275.089 28.5624 275.915 29.5626 275.089 29.7266L274.532 29.333C274.635 30.53 274.697 30.6612 274.615 32.1534L274.573 32.1862ZM270.734 70.9002C273.087 70.2607 275.151 69.5556 274.945 66.1942L275.089 66.4566C276.638 64.8332 273.376 63.0951 275.089 61.111C275.895 62.1441 275.812 62.0785 277.732 63.2591L277.154 62.1605C278.392 62.5048 277.814 61.4226 277.918 60.6355L279.363 61.3898C278.909 61.8489 278.681 63.0623 279.012 63.0295C278.867 62.7508 277.03 64.5709 277.401 65.6039C278.413 65.5383 278.145 63.3739 279.734 64.3905C279.094 63.5214 280.106 63.4558 279.796 62.554C280.436 63.423 281.159 62.8164 281.861 63.4722L281.613 62.0129C281.943 61.9801 282.232 64.1609 283.553 63.0131C283.058 62.4064 283.822 60.8815 282.728 60.8159H283.058C283.368 59.7173 281.551 60.2584 282.253 58.9466C281.716 58.9138 281.303 59.1433 281.406 59.6353C281.633 60.0452 282.377 60.1436 282.48 60.9798C281.613 61.3242 282.645 59.9796 281.179 60.5043C280.436 60.7667 281.675 62.718 280.085 62.0621L280.395 60.9798C279.301 60.9143 279.425 60.1272 278.537 60.1108C278.186 59.4385 279.445 58.8482 278.537 58.1431C277.856 57.8316 276.514 58.2743 277.154 57.1757C278.826 56.3558 278.661 53.765 278.496 52.7976L277.856 51.9285C277.174 51.9777 277.856 53.5519 277.009 52.978L276.823 51.6498L277.236 51.7646C277.36 51.3382 276.927 50.8627 276.72 50.4528C277.484 50.8955 277.112 51.8301 278.248 51.6826C278.516 51.0759 278.929 50.9939 278.764 50.42C278.847 50.5512 278.95 50.6659 279.094 50.6495C279.672 49.4197 277.897 49.3869 277.546 49.059C276.142 47.7308 276.101 50.2724 274.945 50.0756L274.553 46.3698C274.904 46.6978 275.255 47.0257 275.729 46.9273C276.307 46.0419 276.617 46.9273 276.638 45.6648C275.089 45.6975 275.771 44.025 274.924 43.0904C275.585 42.6968 275.709 42.6149 275.688 43.5331C276.7 43.4675 276.39 42.2213 276.514 41.795C276.287 41.5326 276.163 41.0899 275.956 40.8112C275.44 41.1555 274.821 40.9751 274.429 40.1717L274.222 40.1225C273.871 41.4179 272.633 43.3855 273.624 44.2546L273.149 44.0086C272.179 45.4844 274.759 47.3537 272.798 47.9768C272.055 47.8784 272.612 48.2719 271.518 48.2063L272.303 49.3542L271.828 49.1082L271.952 51.0103L271.745 50.9447C272.674 51.8793 273.438 52.6172 274.057 53.2075C274.532 53.2239 274.677 53.1747 275.007 53.4863C275.213 53.7978 275.255 54.0274 275.172 54.2241C275.007 54.6833 274.305 54.962 273.995 55.5195V53.765C273.19 53.5847 272.344 53.6994 271.724 54.5521C271.724 54.2078 271.105 54.0274 270.981 54.4537C271.188 54.5029 271.435 55.6179 272.096 55.2244C272.282 56.8969 270.011 59.5205 271.394 62.1113C270.589 60.2584 270.217 63.5214 270.011 61.4882C268.628 62.8491 271.208 62.7508 270.919 64.1773C270.445 64.2757 271.023 63.3902 270.135 63.0295C269.474 65.4071 271.972 67.1452 271.456 69.4409L270.445 69.5065C270.548 69.9492 270.651 70.4411 270.775 70.9494L270.734 70.9002ZM271.724 75.5243C271.807 75.967 271.91 76.4261 271.993 76.8852C271.993 76.8361 272.013 76.8033 272.034 76.7541L272.757 78.115C273.19 77.3116 274.326 76.8033 274.78 77.9675C274.367 77.8527 273.851 78.1806 273.624 77.7707C272.984 78.525 272.302 80.1811 273.83 79.804C272.488 78.279 275.791 79.5252 274.78 78.3282C275.729 78.9841 275.255 79.5908 275.667 80.1975C274.883 79.558 273.789 80.2795 273.335 81.1813C273.562 81.5913 273.252 82.6735 273.624 83.3458C274.573 83.149 275.069 83.7393 275.358 82.6571C275.585 83.067 275.729 83.6901 275.213 84.3624C275.069 84.0837 274.986 83.6081 274.635 83.6245C273.748 84.0345 273.768 84.5592 273.376 84.8379C273.417 85.0675 273.459 85.2971 273.479 85.5266C273.562 85.461 273.665 85.4118 273.81 85.3627L274.594 86.1497C274.222 85.1167 275.048 85.6906 275.585 85.7234C274.491 85.6578 275.399 86.3793 275.42 86.7236L276.617 86.0021C277.174 86.3957 275.709 87.2647 276.865 87.1172C277.402 85.5266 277.257 84.9035 276.989 83.4442L276.06 84.0017C275.523 82.3455 277.649 83.0506 277.711 81.2141C276.947 80.4271 277.814 78.4594 276.184 78.361C276.658 78.607 277.711 77.2788 276.989 76.6229C275.544 75.8686 275.461 73.7697 274.738 74.3764C274.697 74.9504 275.461 75.7374 274.47 76.1638L274.222 75.0487L273.376 75.7374C273.686 75.3767 272.901 75.3767 271.683 75.5079L271.724 75.5243ZM261.196 99.8907V99.9399C261.196 99.9399 261.196 99.9071 261.196 99.8907Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.2 173.582L256.613 179.698C256.509 177.944 256.489 176.32 256.2 173.582Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.482 36.8599C267.966 35.2037 266.851 34.4167 266.665 32.7441C265.179 34.8758 268.585 35.7285 267.078 37.5158L268.482 36.8599Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.177 36.0728C264.457 35.8597 264.581 37.401 265.51 37.2042C265.283 36.0892 264.334 36.6467 264.519 35.6465L263.177 36.0892V36.0728Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.502 29.5137L285.122 30.0384L284.915 29.6285L284.502 29.5137Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.817 43.5835L263.549 43.3867L263.095 44.1902L263.817 43.5835Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M287.166 30.2654L287.496 29.5275L286.939 29.1504L287.166 30.2654Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M279.981 36.4828L279.63 35.8105C279.692 35.9417 279.114 36.8272 279.981 36.4828Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.972 48.5675L263.405 49.4038L263.529 49.3218L263.096 48.502L262.972 48.5675Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M283.12 41.7793C284.111 41.3694 283.306 43.1075 284.214 42.2056C284.111 41.3694 283.595 41.6809 283.12 41.7793Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.956 51.207C275.956 51.3221 275.977 51.4371 276.081 51.5521C276.039 51.4207 275.998 51.3056 275.956 51.207Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.956 51.2061C275.977 50.8618 276.369 50.5174 276.101 50.2715C275.626 50.6978 275.791 50.8618 275.956 51.2061Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.937 55.208L276.019 54.8965C276.473 55.2408 276.412 55.0769 276.04 54.7817C276.04 54.4374 275.71 54.4538 275.503 54.4046C275.379 54.339 275.276 54.257 275.132 54.1914C275.255 54.2898 275.359 54.3882 275.462 54.4866C275.421 55.0113 275.462 55.3228 275.895 55.2244L275.937 55.208Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.699 69.4722C259.133 68.308 259.318 68.0128 260.062 68.1112C260.371 67.0126 259.05 67.1274 258.802 66.4551C258.864 67.7177 258.513 67.9636 258.699 69.4722Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.801 66.4574C258.801 66.3095 258.781 66.178 258.76 66.0137C258.72 66.1944 258.76 66.3259 258.801 66.4574Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.441 50.8457L285.556 51.6164L285.412 51.354L284.441 50.8457Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.203 71.1949C258.265 70.9817 258.244 70.6374 258.513 70.4734C257.77 70.375 258.141 71.4081 258.203 71.1949Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.231 67.2267C273.705 67.1283 273.458 66.374 273.664 66.0625C273.54 66.4888 272.137 66.8004 273.231 67.2267Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.113 74.6704C261.175 74.4573 261.691 74.1457 262.311 74.3097C261.96 73.9817 260.659 73.5062 261.113 74.6704Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M272.985 69.36L273.253 69.2124L272.799 68.3926L272.985 69.36Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.254 66.9171C283.408 65.9825 282.004 68.2617 281.343 66.6876C280.29 68.6553 282.623 66.5892 282.396 68.0486C282.747 67.1959 283.903 66.8188 284.275 66.9171H284.254Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.398 68.0469C282.336 68.1783 282.315 68.3098 282.295 68.4577C282.356 68.2934 282.377 68.1619 282.398 68.0469Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.977 80.5095C275.894 80.378 275.791 80.2794 275.688 80.1973C275.75 80.2959 275.853 80.4109 275.977 80.5095Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.851 72.7864L281.571 71.3926C282.418 72.3272 282.232 74.5901 283.574 74.4917C283.883 73.7702 283.574 72.8683 283.016 72.4912L282.831 72.7864H282.851Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.624 87.4133L257.129 86.8066L256.922 87.5281C257.129 87.3314 258.099 87.7413 257.624 87.4133Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.881 87.6752L256.922 87.5273C256.922 87.5273 256.881 87.593 256.881 87.6752Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.46 77.9353C275.584 77.509 275.564 77.1482 275.357 76.7383C275.089 76.8859 274.8 77.9681 275.46 77.9353Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.339 91.5944L259.174 90.627L259.215 91.6928L259.339 91.5944Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.82 96.0215L256.552 96.1855L256.985 96.9889L257.253 96.8414L256.82 96.0215Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M283.573 91.0522C283.759 90.4127 282.582 89.8552 282.314 90.0192V91.2818C283.367 91.003 282.293 90.9375 282.603 90.1996L283.594 91.0522H283.573Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.088 129.488C256.386 129.176 256.881 127.815 257.542 127.75C257.831 127.947 258.058 128.701 258.512 128.242L256.84 127.094C257.996 125.667 259.07 128.275 259.648 129.012C259.937 127.537 258.822 127.061 258.904 125.471C258.719 125.93 258.285 126.209 257.893 126.454C256.675 126.454 257.274 125.012 257.232 123.962C256.675 124.618 256.241 124.208 255.787 123.716C255.746 123.634 255.684 123.569 255.601 123.519L255.436 123.355V123.487C255.292 123.487 255.127 123.487 254.899 123.585C255.209 124.487 254.156 125.126 254.115 125.7C256.117 125.192 254.487 127.652 255.044 128.389L255.188 129.226V129.537C254.961 129.586 254.693 129.504 254.321 129.012C254.693 129.422 254.487 130.718 255.127 130.619L255.003 133.62C254.92 133.719 254.817 133.801 254.672 133.866C254.796 133.981 254.899 133.997 255.003 133.981L254.528 147.033C254.714 146.394 255.188 145.853 255.436 145.197C256.716 146.23 255.725 144.114 256.964 144.442C257.397 144.901 257.232 145.557 256.902 145.935C257.521 146.098 258.099 145.557 258.863 145.639C259.73 144.016 256.737 143.672 257.273 142.081C258.017 142.163 258.657 142.688 258.615 141.622L258.76 141.901C257.996 140.195 260.515 140.638 258.512 139.523L259.606 139.589C258.822 138.802 258.884 137.31 258.781 136.473L258.987 136.522C257.852 134.128 258.78 135.194 258.388 132.538L259.606 133.784C260.164 132.882 258.801 132.636 258.987 131.997C259.193 132.046 259.998 131.915 260.164 132.538L258.388 129.275C257.604 128.488 257.583 129.406 257.108 129.504L257.088 129.488Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.885 125.487C258.946 125.323 258.987 125.126 258.946 124.896C258.905 125.11 258.885 125.306 258.885 125.487Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.528 147.918L254.569 147C254.488 147.279 254.467 147.574 254.528 147.918Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.737 120.813C256.138 121.354 255.973 120.371 255.56 120.256L255.478 122.24C255.891 122.24 256.365 122.453 256.737 122.42V120.797V120.813Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.672 122.817C254.961 122.899 255.208 123.112 255.456 123.358L255.497 122.26C255.188 122.26 254.899 122.375 254.672 122.817Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M277.051 123.305L277.071 123.649L277.36 124.19L277.051 123.305Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.924 128.734C275.584 128.34 275.13 127.52 274.986 127.258C274.965 128.176 274.738 127.766 274.924 128.734Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.799 127.816L282.109 128.718L282.232 128.636L281.799 127.816Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.492 154.805C258.492 154.953 258.533 155.1 258.553 155.248C258.553 155.051 258.553 154.92 258.492 154.805Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.79 147.163C256.469 149.246 256.84 145.753 255.251 146.376L255.726 147.541L255.313 147.426L255.395 148.836C256.118 148.574 256.18 148.361 256.923 148.442C256.551 150.312 255.994 149 254.982 150.361L255.024 152.46L254.797 152.279C254.797 152.46 254.9 152.542 255.024 152.607L255.189 159.675C255.726 160.97 256.572 159.002 257.645 159.986C257.707 158.494 258.616 156.313 257.109 156.149C257.315 156.198 257.728 156.313 257.914 156.018L256.717 155.116L256.283 155.92C255.086 155.018 255.478 152.23 256.283 151.755C256.634 153.362 258.162 152.607 257.253 154.788C257.645 154.706 258.327 154.313 258.513 154.821C258.182 152.214 258.987 149.902 257.811 147.18L257.79 147.163Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.398 173.203H257.252C257.252 173.203 257.377 173.253 257.398 173.203Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.624 172.35L256.2 171.055L256.241 173.022L257.273 173.186C257.025 173.006 256.53 172.301 256.943 172.039L257.645 172.334L257.624 172.35Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M255.374 169.547C255.766 170.58 256.984 170.547 257.562 170.006C258.078 170.957 256.241 170.465 257.5 171.137C258.388 171.137 257.913 169.973 257.769 169.711L255.374 169.547Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.325 162.054L256.82 162.349L256.985 161.66L256.325 162.054Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.819 162.35L256.654 163.038C257.025 163.005 257.397 162.956 257.665 162.858L256.819 162.35Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.219 164.873C256.116 165.168 256.033 165.496 255.992 165.89L256.219 164.873Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.571 164.086H256.406L256.22 164.873C256.324 164.594 256.448 164.332 256.571 164.086Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.655 163.053C255.788 163.151 254.9 163.249 255.086 164.266L256.407 164.102L256.655 163.053Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.188 134.213L280.642 135.016L280.766 134.934L280.332 134.131L280.188 134.213Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M279.197 138.783C279.342 138.98 279.486 139.144 279.651 139.275C279.569 139.062 279.424 138.898 279.197 138.783Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.854 142.393C283.946 143.311 283.781 141.065 283.327 142.786C282.521 142.918 281.531 142.065 281.964 141.261C282.707 141.343 282.418 142.081 283.203 141.589C282.356 141.015 282.955 140.835 281.82 140.983C281.159 140.048 280.354 139.917 279.652 139.277C280.106 140.392 278.826 142.688 280.209 144.131C281.531 144.951 283.409 144.524 285.37 144.59C285.845 144.492 286.155 142.491 284.854 142.376V142.393Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M286.897 140.967C287.021 140.541 286.938 140.393 286.794 140.131C286.112 140.18 286.876 140.623 286.897 140.967Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.642 150.543C271.91 150.641 272.22 151.429 272.715 151.281L272.426 150.084C272.364 150.363 272.013 150.445 271.642 150.559V150.543Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M272.282 149.543L272.406 150.068C272.427 149.937 272.406 149.773 272.282 149.543Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.456 150.592L271.643 150.543C271.643 150.543 271.518 150.526 271.456 150.592Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M255.621 167.759C255.085 167.726 255.374 168.268 255.539 168.546C255.601 168.333 255.787 168.038 255.621 167.759Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.923 187.879L256.469 188.338C256.737 188.174 256.861 188.092 256.923 187.879Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.395 195.471C271.498 195.471 271.581 195.52 271.664 195.57C271.602 195.52 271.519 195.487 271.395 195.471Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.663 195.586C272.096 195.914 271.374 196.898 272.034 197.258L271.828 197.209L272.2 197.882C272.158 197.258 272.303 195.963 271.663 195.586Z\",\n    fill: \"#5C4F47\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.778 332.536C240.902 332.93 240.262 333.274 239.973 333.143C240.778 333.913 239.932 333.963 241.418 333.979C242.203 334.389 241.253 334.979 240.572 334.487C240.923 334.93 241.315 335.34 241.728 335.717C241.728 335.455 241.769 335.192 241.81 334.93C243.07 334.996 241.707 336.193 243.194 336.144C243.049 335.75 242.884 335.34 242.781 334.897H243.194C242.698 334.668 242.801 334.045 242.966 333.815C243.173 333.832 243.503 333.799 243.565 334.028C243.565 332.356 241.315 333.7 240.881 332.143C240.902 332.241 240.881 332.372 240.778 332.536Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.895 330.98L242.388 330.226L242.925 329.062C242.388 329.012 242.058 328.078 241.521 328.652C241.583 328.783 241.727 329.029 241.645 329.209C240.489 328.996 241.273 327.504 240.055 327.783C240.22 328.816 239.952 328.947 240.84 329.603C240.633 330.472 240.344 331.078 239.89 331.488C240.055 331.751 240.778 331.8 240.901 332.112C240.901 332.046 240.86 331.98 240.86 331.898H242.615C242.243 331.636 242.45 331.39 242.408 331.111C243.069 331.587 243.73 332.013 244.432 332.407C246.062 332.046 245.154 330.865 245.897 330.373C244.37 330.915 245.195 329.832 243.895 330.997V330.98Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.892 216.771C241.892 216.443 241.458 216.329 241.252 216.279L241.108 219.969C241.582 219.87 242.202 218.821 242.449 219.542C242.986 219.247 242.594 218.263 241.975 218.099L242.676 218.395C241.809 217.526 243.605 216.984 244.122 217.558V217.493L240.736 215.033C240.488 215.886 241.913 215.738 241.913 216.771H241.892Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.329 140.984C244.494 141.46 244.68 141.509 244.845 141.46C244.722 141.296 244.556 141.132 244.329 140.984Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.931 214.46L238.878 213.689C239.167 213.985 239.539 214.263 239.931 214.46Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.261 220.068C256.261 220.068 256.364 220.068 256.447 220.068L255.91 219.723C256.034 219.854 256.137 219.969 256.261 220.084V220.068Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M236.443 197.687C236.443 197.687 236.402 197.538 236.381 197.439C236.381 197.522 236.422 197.604 236.443 197.687Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.939 230.363L260.989 228.674C261.464 228.92 261.361 228.1 261.918 228.477C261.856 228.346 261.691 227.756 261.423 227.903V228.248C260.039 227.33 259.461 227.838 258.429 226.346C257.521 227.215 258.285 227.641 258.925 228.133C259.007 228.297 259.049 228.428 259.11 228.576L261.051 230.019L261.959 230.363H261.939Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.474 163.923L253.02 163.857C253.247 163.94 253.474 164.285 253.474 163.923Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.86 214.77C240.592 214.737 240.261 214.639 239.931 214.475L240.716 215.049C240.716 215.049 240.798 214.868 240.839 214.77H240.86Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.958 216.1L244.102 217.493L244.825 218.018C244.556 217.477 244.391 216.854 243.958 216.1Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.514 199.835C235.37 196.981 237.186 200.572 237.64 199.261C237.455 198.457 236.67 198.178 236.423 197.67C237.042 199.949 233.78 197.326 234.131 199.605C232.686 199.261 232.583 197.932 233.016 197.178C234.441 196.326 234.028 197.965 235.39 198.178C235.184 197.26 234.936 197.424 234.152 197.014C234.523 195.588 232.5 194.013 234.461 193.194C234.172 192.144 233.491 192.21 232.769 191.603C231.262 191.472 231.943 193.128 230.766 193.505C230.89 193.423 231.158 193.276 231.365 193.325L231.034 194.21C231.571 193.374 232.541 194.358 232.645 194.801C232.665 195.129 232.707 195.784 232.294 195.686L231.984 195.178C231.489 195.817 233.037 196.621 232.211 197.293C231.881 197.326 231.716 197.063 231.509 197.014C232.521 197.801 232.438 198.523 233.12 199.671L231.654 198.982C233.285 199.917 232.748 201.95 231.84 203.36C232.087 203.212 232.294 202.934 232.562 203.098C232.892 203.934 231.86 204.541 231.076 204.147C232.294 204.983 229.94 207.23 231.489 208.361L238.858 213.657C238.673 213.461 238.528 213.248 238.466 213.034C239.787 212.608 239.643 212.346 240.84 213.198C240.18 212.378 239.106 212.657 239.106 211.46C239.746 211.952 241.253 212.116 241.439 210.952C240.262 208.033 236.608 206.033 234.771 203.311C235.783 203.229 235.555 201.114 235.824 200.097C236.897 200.507 237.186 201.278 237.372 202.065C237.455 201.573 237.517 200.72 237.579 200.08L235.452 199.785L235.514 199.835Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.714 206.591C238.714 206.591 238.859 206.443 238.901 206.377C238.818 206.41 238.756 206.476 238.714 206.591Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.393 202.361C237.393 202.361 237.455 202.361 237.496 202.361L237.434 202.113C237.434 202.196 237.413 202.295 237.393 202.361Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.172 214.15C243.461 214.33 243.523 214.462 243.812 214.642C243.709 214.527 243.647 214.396 243.564 214.265C243.44 214.134 243.296 214.084 243.172 214.15Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.377 214.671L240.965 214.572C240.965 214.572 240.903 214.704 240.861 214.753C241.088 214.786 241.274 214.753 241.377 214.671Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.906 189.061L244.7 188.781C244.7 188.946 244.803 189.028 244.906 189.061Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.33 196.701C237.392 197.702 238.837 196.849 238.796 198.243L238.899 197.833C239.518 198.849 239.167 200.62 239.188 201.817C238.589 201.67 238.445 202.522 237.516 202.375C237.702 203.195 237.887 204.015 238.837 204.457C238.507 204.949 239.333 205.753 238.92 206.376C239.498 206.113 240.798 207.343 240.158 205.753C240.241 205.884 240.365 205.802 240.447 205.933C241.252 204.933 239.952 204.506 239.952 203.637C240.53 203.129 240.819 204.506 241.067 204.015C240.571 202.916 241.83 200.604 239.745 200.637C239.622 199.85 240.096 199.735 240.468 199.505C238.28 198.21 241.562 194.865 238.713 194.832C238.816 195.291 238.713 196.029 239.312 196.718L237.351 196.685L237.33 196.701Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.091 212.476C243.091 212.476 243.091 212.329 243.131 212.279C243.131 212.329 243.111 212.411 243.091 212.476Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.234 224.757L232.397 224.282C232.066 221.904 232.644 221.084 232.686 219.018C232.954 218.87 233.099 219.116 233.181 219.248C233.037 217.788 233.511 215.64 232.706 214.558C232.748 214.099 233.388 212.902 233.904 213.377C233.738 213.148 233.594 212.885 233.677 212.639C234.358 212.59 233.842 213.213 234.399 213.246C234.461 213.049 234.585 212.967 234.378 212.918C234.936 213.279 236.67 212.623 236.567 214.23C234.977 214.804 236.422 213.115 234.688 213.427C234.647 213.951 235.328 213.918 235.534 213.968C235.473 214.64 235.039 214.624 234.647 214.574C235.163 214.853 234.399 215.689 235.184 216.067C235.266 217.395 233.883 215.952 233.883 216.821L235.617 217.362L235.225 218.788C235.72 220.887 238.259 218.575 239.127 220.986C238.239 220.641 236.649 221.543 236.216 222.642C236.195 221.986 235.122 220.723 235.679 219.887C234.255 221.051 235.596 218.231 234.007 218.805C234.709 219.428 234.771 220.412 234.317 221.182L234.172 220.92C233.945 221.74 235.741 222.412 234.977 223.527C234.998 224.085 234.523 223.97 234.11 223.855C234.337 224.347 234.667 224.774 234.275 224.774L234.234 224.757ZM233.945 223.527L234.151 222.773C233.862 222.937 233.842 223.216 233.945 223.527Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.052 320.795C245.052 320.795 244.927 320.943 244.886 321.009C244.969 320.96 245.031 320.877 245.052 320.795Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.288 253.338L253.205 253.782C253.288 253.617 253.288 253.469 253.288 253.338Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.202 263.57L258.553 264.243C258.553 263.98 258.408 263.783 258.202 263.57Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.918 315.566C245.918 315.566 245.856 315.483 245.836 315.434L245.898 315.566H245.918Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M252.153 283.215C251.988 283.297 251.844 283.412 251.74 283.544C251.906 283.544 252.05 283.412 252.153 283.215Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.139 263.454C258.139 263.454 258.119 263.471 258.098 263.487L258.201 263.57L258.139 263.438V263.454Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.718 249.224C258.676 249.125 258.635 249.043 258.573 248.928C258.593 249.059 258.656 249.141 258.718 249.224Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.702 249.617C253.66 249.519 253.618 249.42 253.556 249.338L253.702 249.617Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.16 234.466L257.953 233.859C257.953 234.155 258.056 234.335 258.16 234.466Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.983 248.091C254.983 248.091 254.838 248.009 254.755 247.992C254.796 248.075 254.9 248.124 254.983 248.091Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.313 324.076V324.043L239.105 324.01L239.313 324.076Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.644 325.75L241.706 326.275C241.747 326.078 241.706 325.898 241.644 325.75Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.395 291.641C248.127 291.772 247.776 292.133 247.507 291.936C247.838 292.264 248.725 292.313 248.395 291.641Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M228.847 320.204C229.074 320.319 229.239 320.451 229.383 320.582C229.156 320.336 228.971 320.138 228.847 320.204Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.403 320.582C229.507 320.697 229.63 320.829 229.754 320.944C229.651 320.829 229.548 320.697 229.403 320.582Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.378 286.626C234.503 286.593 234.606 286.543 234.648 286.461C234.399 286.461 234.358 286.527 234.378 286.626Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.377 326.665C241.769 326.813 242.368 329.043 242.843 327.239C244.123 327.436 243.276 328.453 243.545 328.945C243.896 328.633 244.35 329.174 244.825 329.109C244.701 328.863 244.35 328.567 244.494 328.19C245.114 328.059 245.423 328.682 245.155 329.109C245.898 328.617 246.105 329.863 246.703 329.158C246.455 327.518 246.208 326.108 244.494 324.648C244.659 325.731 244.866 326.944 244.226 327.698L243.152 327.256C244.267 326.419 243.627 325.731 243.875 324.796L242.967 326.862C241.893 327.748 241.769 327.092 241.687 326.288C241.645 326.485 241.542 326.649 241.356 326.682L241.377 326.665Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.798 324.305L231.757 324.338C231.757 324.338 231.819 324.42 231.86 324.437L231.798 324.305Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.452 233.693L235.039 233.496C235.225 233.66 235.348 233.71 235.452 233.693Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.08 238.236C235.08 238.236 235.018 238.22 234.977 238.203C235.018 238.22 235.039 238.22 235.08 238.236Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.171 240.484C259.171 240.484 259.275 240.484 259.317 240.451C259.254 240.352 259.213 240.402 259.171 240.484Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.598 260.585C237.598 260.585 237.805 260.519 237.99 260.421C237.887 260.371 237.763 260.421 237.598 260.585Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.644 256.306C239.644 256.306 239.727 256.257 239.769 256.24L239.644 256.306Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.556 290.97C253.597 290.757 253.577 290.593 253.556 290.445C253.516 290.609 253.495 290.773 253.556 290.97Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.977 238.205C234.853 238.155 234.75 238.09 234.605 237.975C234.75 238.106 234.874 238.172 234.977 238.205Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.657 267.587L242.553 267.455L242.491 267.521L242.657 267.587Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.604 269.832C241.48 269.75 241.356 269.701 241.253 269.652C241.645 270.504 240.984 271.964 242.161 272.21C242.161 271.931 243.007 270.537 243.668 270.816C243.42 270.225 244.349 269.438 244.184 269.11C243.441 270.012 243.173 269.143 242.822 268.504C243.234 267.946 243.771 268.668 244.04 268.192V266.848L243.771 267.995L242.656 267.569C242.656 267.569 242.718 267.651 242.76 267.7C243.09 269.684 241.067 267.766 241.604 269.816V269.832Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.253 269.655C241.191 269.523 241.108 269.408 241.005 269.326C241.005 269.507 241.108 269.589 241.253 269.655Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.568 277.523C238.589 277.622 238.651 277.737 238.714 277.885C238.693 277.819 238.631 277.671 238.568 277.523Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.597 219.002C244.267 219.018 243.503 220.15 244.391 220.15C244.494 219.822 244.618 219.477 244.721 219.133L244.597 219.002Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.191 299.643C241.232 299.512 241.253 299.397 241.253 299.266L241.129 299.184C240.985 299.249 241.129 299.512 241.191 299.643Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.04 271.214C243.916 271 243.792 270.902 243.668 270.836C243.73 270.984 243.834 271.115 244.04 271.214Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.105 299.543C238.837 299.691 238.424 299.887 238.094 299.904C238.052 300.232 238.486 300.494 238.61 300.855C238.527 300.461 238.672 300.035 239.126 299.543H239.105Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.01 218.33C244.948 218.231 244.886 218.133 244.845 218.018L245.072 218.182L245.381 217.395C245.319 217.296 245.278 217.198 245.257 217.067C245.278 217.116 245.381 217.165 245.464 217.182L245.567 216.936C244.679 216.28 244.081 214.706 243.565 214.247C243.193 213.64 243.007 212.902 243.09 212.459C243.049 212.886 243.214 213.443 243.73 213.296C244.287 212.459 245.815 212.066 244.576 210.557V211.426L242.677 209.426C243.523 208.77 243.606 210.426 244.308 210.705C243.4 209.163 246.042 207.966 244.37 207.212C245.381 207.13 247.074 207.015 246.992 205.999C245.815 206.687 246.269 205.376 245.03 205.95C244.473 205.589 245.423 204.851 244.679 204.769L245.092 204.867C246.744 203.195 244.246 202.588 243.461 201.85C243.111 199.801 243.792 198.882 243.668 197.21C244.349 197.161 246.207 196.734 246.166 196.062C245.257 195.734 244.886 194.225 243.709 194.061C243.193 195.242 244.659 195.045 244.927 195.767C243.689 196.341 243.709 195.8 242.945 196.603C243.441 195.947 242.388 193.635 243.544 192.93L243.709 193.192C244.432 192.061 247.322 191.881 245.608 189.946L244.907 189.028C245.03 189.077 245.154 189.077 245.257 189.11C245.402 187.617 246.723 188.044 245.712 186.388C245.794 186.519 245.918 186.437 246.001 186.568C246.682 185.633 245.381 184.682 245.113 183.961C246.104 183.534 246.063 184.076 246.764 184.338C247.177 182.682 245.505 180.894 244.329 179.861L244.907 178.796C245.299 179.435 246.331 180.206 246.93 180.025C246.744 179.435 246.269 179.55 246.475 178.73C247.095 178.878 247.673 179.222 248.457 179.615C249.51 177.91 246.248 179.222 248.168 178.025C248.168 177.484 247.281 177.172 246.517 177.107L247.508 176.139C246.558 176.024 246.496 174.827 246.372 174.04C245.959 173.942 245.34 174.68 245.712 174.975C244.948 174.909 244.618 174.073 244.618 173.532C246.641 173.335 244.349 170.007 246.723 170.646C246.063 168.219 245.835 164.825 244.989 163.218C245.546 162.693 245.567 161.611 246.517 162.251C246.517 160.299 244.452 159.299 244.968 157.364C245.216 157.2 245.01 158.233 245.67 158.168C244.845 156.905 246.496 155.856 245.918 153.904C245.959 154.232 246.372 154.331 246.579 154.364C246.248 154.396 245.877 153.56 245.546 153.068C245.712 152.789 245.794 153.445 246.042 153.281C246.971 149.477 244.184 146.624 244.163 142.853C244.163 143.935 245.505 144.312 246.063 144.312V143.263C245.381 142.869 245.361 142.082 244.845 141.426C245.092 141.344 245.361 141.016 245.67 141.344C246.971 139.229 243.152 138.13 243.771 135.572L246.537 138.606L247.446 137.819L248.705 139.163C249.428 138.343 247.693 137.655 248.705 137.54C248.994 137.704 248.911 138.13 249.469 138.13C249.84 137.343 249.097 137.294 248.87 136.704C250.976 138.212 251.017 141.246 251.574 142.885C251.74 143.148 251.079 142.672 250.873 142.64C250.955 143.312 250.336 143.722 250.707 144.558C251.595 145.066 251.327 144.148 251.409 143.738C252.173 143.787 252.132 143.984 252.256 144.46C251.244 144.574 251.967 147.001 250.749 147.608C251.1 150.067 253.35 147.182 252.958 149.592L251.822 150.33C252.731 151.724 253.556 153.511 253.329 155.101L253.288 154.774C252.792 154.56 252.483 154.921 252.235 155.085C251.76 156.282 253.185 157.348 252.029 158.086C253.288 159.447 254.176 161.71 254.836 163.267C253.309 163.694 253.536 161.234 252.586 160.595V162.005C252.586 161.136 251.987 160.791 251.12 160.267C250.852 161.513 252.173 161.906 252.565 163.087C252.152 163.005 251.905 163.153 251.884 163.694L252.896 163.841C252.896 163.841 252.731 163.907 252.669 164.087L253.288 166.186C253.721 165.743 254.588 165.711 254.609 165.169C254.031 165.366 253.907 164.907 253.907 164.366C254.568 164.841 254.465 163.841 255.001 163.841C254.981 164.923 255.125 166.268 255.394 166.973L254.465 167.203C254.237 168.236 254.754 169.334 254.485 170.039L253.99 169.81C253.721 171.056 254.299 172.286 253.391 173.384C254.444 174.499 255.311 175.893 256.426 176.812C257.623 177.303 254.898 180.058 256.57 181.321C256.446 181.403 255.683 180.452 255.228 180.025C255.043 180.862 256.529 181.534 255.249 181.78C255.683 179.911 254.237 181.878 253.887 181.026C253.887 181.895 254.134 182.829 254.568 183.256C254.568 181.845 256.302 183.78 255.765 182.337C256.818 183.452 257.21 184.977 256.777 186.306C256.24 186.289 255.972 186.453 255.745 186.945L256.529 187.355C256.364 187.978 255.621 186.142 255.311 187.388C256.632 188.683 254.465 191.241 256.962 191.831C255.951 192.799 255.992 189.962 254.754 191.422C253.866 190.552 254.919 189.388 253.68 189.093C254.01 189.929 252.627 189.388 252.607 189.929L253.35 190.88L253.391 190.667C254.527 192.258 253.949 194.734 254.072 196.751C255.27 198.472 257.066 199.669 256.859 201.719C256.137 201.096 256.095 203.408 254.795 202.096C254.114 203.031 254.857 203.965 255.394 203.998C255.6 203.178 255.579 203.703 255.868 203.014C256.508 203.506 256.446 204.589 256.013 205.031C256.075 204.818 255.93 204.9 255.724 204.851C255.249 205.835 256.364 205.343 256.612 206.064C255.683 206.277 256.323 207.638 255.806 208.278L257.086 209.262C256.24 208.721 256.735 210.164 255.93 210.295C256.508 210.984 257.561 211.59 257.293 212.623C256.859 212.181 256.591 213.558 255.724 213.541C254.816 215.296 257.995 216.542 256.673 218.198C256.467 218.133 255.91 217.788 255.662 218.264C255.889 218.657 255.765 219.33 255.827 219.756C255.868 219.953 255.972 220.084 256.178 220.1C257.004 220.838 257.871 221.232 258.511 222.642C259.522 222.576 259.192 221.379 258.903 220.855L257.933 220.379C259.481 220.002 257.747 219.117 258.263 218.805C259.997 219.69 259.44 222.101 260.451 223.577C261.896 222.74 262.227 220.822 262.144 219.133L261.504 219.854V218.969L260.41 219.789C260.637 218.969 260.41 218.231 260.493 217.493C260.493 218.379 259.068 218.674 259.316 218.182C260.348 217.231 258.717 217.149 258.8 216.395C258.697 216.805 258.655 217.346 258.098 216.985C259.357 215.542 258.593 215.116 259.935 213.82C258.242 213.935 259.832 212.131 258.469 211.902L258.304 212.525L257.355 211.18C258.779 210 258.697 212.295 259.749 210.459C259.997 208.753 258.222 208.753 258.139 207.409C259.109 207.868 259.915 208.967 259.853 210.049L260.369 209.409C260.926 209.77 260.74 211.279 260.658 212.017C259.564 210.754 260.286 212.59 259.357 213.132C260.307 213.263 260.204 212.459 260.926 213.427C260.926 212.541 260.864 212.41 261.277 211.295C260.74 213.705 264.518 213.558 263.63 215.657C263.238 214.673 262.227 215.952 261.752 216.067C261.855 216.526 262.041 217.46 262.268 217.854L263.672 217.542C264.229 218.789 261.256 219.133 262.619 220.609C263.445 220.822 262.97 219.363 263.114 219.625C263.878 221.593 261.607 222.232 260.472 223.921C260.885 224.036 261.772 224.036 262.474 224.675C261.649 224.462 261.194 224.888 260.616 224.183C260.224 224.757 260.802 225.446 261.112 225.971C261.669 224.79 262.289 226.495 262.763 226.741C262.598 227.364 261.938 226.528 261.711 226.135C261.463 226.627 260.204 227.184 261.442 227.512C260.554 227.512 259.213 226.036 259.027 225.102L258.862 225.725C258.428 225.282 258.573 225.2 258.738 224.593C258.015 225.184 257.272 225.085 256.653 224.938C256.777 224.856 256.859 224.987 256.983 224.921C257.231 224.429 257.004 224.036 256.55 224.134C255.394 223.642 255.765 224.806 255.166 225.118C255.228 225.38 255.29 225.626 255.352 225.889L259.006 228.611C259.378 229.742 258.449 230.201 257.83 231.005L258.82 231.267C258.655 232.234 258.284 233.12 257.024 232.464C257.375 232.448 257.293 232.316 257.355 232.103C257.21 232.07 257.128 232.021 257.045 231.956L256.88 231.906C257.148 232.956 257.313 233.595 257.355 233.661C255.992 231.857 255.517 233.497 253.742 233.136L254.217 234.924C254.857 233.874 255.105 234.924 255.311 235.334C254.299 235.399 255.228 236.76 255.043 237.367L254.836 237.318C254.444 237.875 254.485 238.892 254.712 239.613C255.063 239.597 256.653 240.581 257.602 241.073C258.057 239.859 258.408 240.613 259.047 240.531C258.986 240.663 258.965 240.892 259.089 240.925C259.357 241.105 259.481 240.695 259.832 240.679C259.44 239.351 259.398 238.006 258.015 237.416C257.355 237.793 258.573 238.121 258.119 238.564C257.21 237.875 257.458 237.055 257.541 235.973L258.408 235.645L258.015 234.53C258.428 235.006 259.337 234.76 259.44 235.924C260.245 235.809 259.337 234.776 259.646 234.087L258.552 233.677C259.171 233.841 259.378 232.349 260.162 233.448L260.967 235.219L261.772 234.76L261.896 236.235L261.339 235.858C261.958 238.252 259.068 236.465 260.224 238.892C261.545 239.695 261.628 240.499 261.215 241.942C260.988 240.876 260.265 241.794 259.502 241.368C258.862 242.417 259.956 242.827 260.451 243.417C259.708 243.663 259.109 243.827 259.275 242.876C257.788 242.696 259.44 244.155 257.891 244.172C257.706 247.353 262.701 246.943 260.493 250.583L259.873 250.419C260.472 252.813 259.646 254.141 259.935 256.355L258.201 257.995C257.995 257.601 256.901 256.502 256.095 256.945C257.768 256.191 257.293 255.273 258.222 254.42C257.809 254.305 257.479 254.666 257.21 254.797C257.272 254.256 258.015 254.01 257.788 253.289C257.458 253.305 257.004 254.076 256.839 253.469L257.891 252.534C257.52 251.206 255.579 251.78 256.137 250.255C257.004 250.583 258.222 251.223 258.387 251.829C258.635 251.141 258.841 252.797 259.419 252.174C258.18 251.091 259.254 250.665 258.552 249.271C258.717 249.435 258.965 249.484 259.027 249.829L259.729 247.91C258.924 248.353 259.006 246.254 257.871 246.385C257.252 248.435 257.974 247.861 257.148 250.206C256.942 249.517 255.848 248.599 254.816 248.156C254.857 248.14 254.898 248.107 254.919 248.025C253.825 247.615 253.494 247.959 251.533 247.861C252.854 249.009 251.636 249.665 252.359 250.977C253.412 251.272 253.783 250.304 253.556 249.665L254.176 250.813L253.701 250.567L253.123 253.387C253.123 252.846 252.503 252.633 252.049 252.321C251.987 252.682 251.678 253.043 251.327 253.403C252.359 253.371 253.081 253.469 253.04 253.813C252.669 255.633 251.636 256.601 250.418 257.208C250.418 257.273 250.46 257.355 250.48 257.421C251.554 257.175 252.256 258.814 253.288 259.438C252.194 259.356 252.545 260.339 251.946 260.848C253.164 261.192 254.919 260.913 255.992 260.323C254.96 259.028 254.898 259.569 253.329 258.896L252.421 256.863L253.37 257.355C253.887 256.388 252.669 255.371 253.948 255.502C254.774 256.076 254.176 256.912 254.981 257.47L255.517 256.847C256.694 258.077 254.238 257.372 255.001 258.831C256.137 258.372 255.063 258.962 255.765 259.602C256.57 259.159 255.662 257.109 257.499 257.634C258.263 258.405 255.105 259.962 256.88 261.028L256.673 260.963C256.302 262.373 257.334 262.93 257.953 263.504C257.293 264.078 258.077 264.963 258.077 265.619L257.541 265.57L257.685 266.505C256.735 266.013 257.809 265.423 257.726 264.619L256.715 264.668C257.995 263.816 256.219 263.111 255.414 262.34C256.199 263.422 254.919 265.242 256.859 265.603L255.786 266.177L256.137 266.505C255.332 266.931 254.176 266.374 254.031 265.439C254.299 265.291 254.423 265.226 254.63 265.275C254.217 264.816 253.474 264.39 253.783 263.357L254.279 263.947C254.465 262.651 254.176 261.454 253.226 260.963C252.648 262.799 252.4 264.636 252.297 266.39C254.547 267.046 255.745 267.718 257.85 268.112C258.119 269.309 258.263 270.932 257.375 271.9L256.962 271.785C256.694 272.277 256.756 272.736 256.962 273.129C256.364 273.621 255.868 272.703 255.538 273.047L256.075 274.769C255.125 274.605 255.27 273.195 255.249 272.506C255.311 272.637 255.455 272.9 255.579 272.834C256.054 272.08 254.568 270.522 255.992 270.26C255.786 269.866 256.942 271.096 257.148 269.817C257.747 268.981 256.529 268.62 256.137 268.505C255.6 268.456 255.249 269.817 254.65 269.309C254.65 269.981 255.332 270.293 254.712 271.129C254.712 270.457 253.701 269.489 254.568 269.178C253.68 267.8 251.12 267.833 250.914 268.456C251.719 268.358 251.657 270.916 252.875 269.26C253.825 270.096 253.701 271.522 254.238 272.572L254.031 272.506L254.155 273.785C253.887 273.588 253.68 273.195 253.143 273.146L254.423 274.982C253.536 273.933 253.68 275.556 253.205 275.966C254.01 276.212 254.568 276.934 255.105 276.31C255.786 275.605 254.692 275.851 254.692 275.179L255.91 276.212L255.765 276.278L256.777 276.917C256.57 278.212 254.341 276.196 255.228 277.917L256.715 277.803C256.323 279.705 254.382 282.049 254.919 283.46C254.134 283.033 252.813 282.771 251.967 283.23C252.276 282.673 252.359 281.492 252.318 280.639C252.586 280.492 253.928 281.804 253.515 282.689C255.951 282.41 252.318 280.311 254.754 280.361C255.848 278.098 252.586 278.475 254.217 276.606C253.143 276.507 253.742 276.015 252.792 275.851C250.955 276.327 252.607 278.475 251.843 279.721C251.781 279.59 251.636 279.328 251.451 279.262C251.038 280.147 251.224 280.541 251.574 281.213L251.719 281.148C252.648 282.328 250.831 281.787 250.295 282.394C250.418 282.656 250.006 283.542 250.831 283.46L249.675 284.575L250.893 284.607C250.893 285.28 250.067 285.378 250.749 286.034L251.822 286.132L252.38 284.493C252.648 285.362 253.391 284.804 253.515 285.739C252.442 284.624 252.834 286.428 251.822 286.46L252.359 287.182L252.091 286.985C251.471 287.477 252.421 287.641 252.214 288.264C252.896 287.575 253.721 287.149 253.04 286.149C253.577 286.87 254.093 288.28 254.093 288.608C254.465 289.363 253.598 289.805 253.391 290.461C253.102 289.15 250.067 290.674 251.12 288.149C251.327 288.215 251.244 288.412 251.12 288.494C252.545 288.248 251.203 286.952 250.728 286.346C249.923 286.428 249.778 285.837 249.242 286.788C249.778 286.493 250.935 287.739 250.171 288.641L248.478 288.346L248.127 289.707L248.065 289.576C246.909 290.019 248.106 291.052 247.342 291.937C247.859 292.659 247.074 295.233 248.994 294.249C247.817 295.02 249.097 295.856 249.221 296.791L250.047 295.692C251.1 297.151 250.356 296.692 252.173 297.938C251.698 298.02 251.285 298.234 250.811 297.971C250.501 299.791 249.717 302.366 250.955 303.546C250.707 304.825 248.684 304.875 249.221 306.744C249.407 307.137 250.852 306.58 250.212 307.728C250.067 307.793 249.097 306.465 249.056 307.81C250.233 308.875 248.044 309.974 249.015 311.302C248.457 311.909 248.478 313.057 247.487 312.729C247.859 311.712 247.838 310.236 247.363 309.974C247.962 310.171 248.065 309.285 248.437 310.089C249.428 308.597 247.921 309.023 248.643 307.662C248.23 307.531 247.404 308.285 247.735 308.613C246.31 308.498 247.425 305.793 245.546 306.908C245.216 308.384 248.127 309.089 246.455 310.253C245.67 309.663 246.496 308.908 245.092 308.121L244.39 309.138L245.319 309.99L245.113 309.925C243.565 311.696 246.331 311.778 246.826 313.532C247.941 312.647 249.242 313.975 249.944 313.286C249.985 314.434 249.675 315.238 248.251 315.123C247.384 312.926 246.764 314.877 245.629 312.811C245.072 313.09 243.627 312.171 243.317 313.319C244.163 314.713 244.556 313.024 244.845 314.369C244.7 314.434 244.576 314.5 244.37 314.434C245.01 315.09 243.998 315.106 244.721 315.91L244.452 315.713C243.461 316.533 245.278 316.779 244.246 317.451C245.34 317.238 245.03 318.042 245.608 318.583C246.125 317.845 247.693 317.55 247.817 316.008C247.012 315.746 246.537 315.828 246.228 315.156L246.186 316.156C246.083 315.926 245.897 315.746 245.753 315.533L246.331 314.615C246.744 315.877 247.714 315.402 248.499 315.992C247.982 317.074 248.602 316.927 248.23 317.615C247.033 317.435 245.835 319.583 244.865 320.78C244.948 320.583 244.948 320.321 244.989 320.19C244.349 319.189 243.874 320.731 243.544 320.747L244.06 321.485C243.998 321.354 243.73 321.141 243.523 321.419C243.627 322.354 244.824 322.42 244.927 323.354C244.246 323.354 243.338 322.485 242.904 323.026C242.285 323.174 240.654 323.649 241.067 324.912C241.315 325.027 241.418 325.355 241.459 325.732C241.438 325.683 241.418 325.617 241.376 325.584L240.53 326.322C239.498 325.535 241.273 324.978 240.22 324.191L239.147 324.027C239.229 323.485 238.858 322.715 238.342 322.321C238.032 323.125 238.301 323.322 238.383 324.256C237.681 324.322 237.268 323.633 237.206 323.535L237.805 323.731C238.858 322.731 237 322.01 237.392 320.665C237.475 320.468 237.537 320.6 237.723 320.665C236.835 319.468 238.424 318.517 237.186 317.32L237.702 317.714C237.351 316.943 236.484 315.418 235.637 313.909L235.225 313.86C234.956 313.991 235.039 313.467 235.245 313.188C234.832 312.434 234.44 311.712 234.151 311.122C233.862 311.286 233.614 311.483 233.511 311.745C233.986 312.007 233.408 313.286 234.543 313.204C233.78 313.745 234.605 314.811 234.13 315.205C234.977 314.467 235.121 315.861 235.72 316.058C234.977 316.271 235.596 317.254 234.667 317.074C234.399 317.205 235.369 316.73 234.832 316.336C234.069 315.418 233.821 317.812 233.119 316.681C233.594 318.074 233.057 319.812 233.738 321.272L234.234 320.534C234.007 321.141 234.007 322.6 233.532 322.666C233.491 322.206 233.573 321.665 233.47 321.059C232.396 320.928 233.284 322.452 232.603 322.469L234.151 324.322L234.316 323.584C234.915 324.109 233.883 325.584 233.573 326.732C232.19 325.929 233.8 324.978 233.367 323.715C232.933 322.78 231.86 324.125 231.633 323.256C231.261 323.436 231.22 323.977 231.55 324.289L231.24 324.584C230.002 323.715 230.538 322.092 229.548 320.878C229.671 320.993 229.816 321.091 229.96 321.124C230.6 320.321 230.704 319.452 230.477 318.599C229.981 318.993 230.249 319.206 230.373 319.468C230.043 319.468 230.002 318.681 229.671 318.337C229.176 319.075 228.866 318.402 228.557 318.878C228.309 318.353 228.453 317.943 228.681 317.353C229.238 317.074 229.341 317.681 230.022 317.681C229.713 317.009 231.344 316.877 230.704 315.877C230.249 317.074 229.3 315.418 228.908 314.959L228.825 315.156C228.102 314.697 228.123 314.369 228.866 314.155C229.114 314.68 228.825 315.156 229.63 315.074C229.63 314.746 229.651 314.401 229.465 314.008L229.981 314.401L230.043 312.745C229.382 312.417 228.453 311.909 227.442 311.581C228.123 311.237 227.669 310.646 227.483 310.253L227.752 310.45C228.453 309.777 228.164 308.121 227.566 307.924C228.185 307.449 231.034 311.925 230.951 308.203C231.137 306.809 229.093 307.17 228.515 306.317C228.515 306.317 228.722 306.383 228.846 306.317C229.073 305.711 228.33 305.596 228.082 305.071C227.731 305.416 227.648 305.94 227.917 306.137C227.112 305.891 228.164 304.875 227.566 304.35C228.763 305.055 228.206 303.218 228.804 303.727C229.795 302.579 228.949 301.202 228.082 300.48C229.795 299.791 228.041 299.021 228.949 297.742C228.866 297.938 229.073 298.332 228.866 298.611C229.795 299.447 229.568 297.266 230.353 298.512C230.229 298.25 229.816 298.447 229.94 298.726C230.002 299.185 230.394 299.644 230.869 299.562L231.901 298.545L232.107 298.939L233.552 297.381C233.346 297.315 233.078 297.463 232.933 297.529C233.718 295.643 233.284 293.396 233.656 291.724C230.827 291.199 232.912 287.493 231.282 286.001C232.066 286.428 233.491 286.723 234.13 286.542C234.213 286.854 235.307 287.559 234.998 288.231C234.523 288.313 233.903 289.117 233.449 288.543C233.573 290.478 234.729 288.379 235.741 289.018C235.699 286.887 234.151 285.526 233.614 284.148H233.965L233.429 283.083C233.14 283.886 231.529 283.738 232.211 282.722L232.273 282.853C233.016 282.295 232.355 280.984 232.562 280.049L231.695 279.344C231.901 278.409 233.656 278.491 234.75 278.245C235.039 276.77 233.676 275.818 232.913 274.72C233.718 274.294 234.13 272.08 234.936 273.326C234.399 271.949 230.27 271.965 232.768 269.817L233.449 270.457C233.511 268.259 232.355 265.045 233.202 264.094C235.782 265.062 236.133 261.504 238.775 261.258C238.177 261.34 238.053 260.503 237.743 260.356C238.073 260.192 238.383 259.913 237.867 259.552C237.268 260.372 235.225 258.798 236.133 260.503C234.42 259.585 233.119 258.437 233.367 256.634L234.44 256.716L233.986 258.126C234.791 258.027 234.667 258.765 235.018 259.077C235.865 256.437 237.537 259.569 237.619 256.83C236.938 256.535 237.206 256.716 237 255.994C237 256.322 237.743 256.437 237.805 255.896L236.979 255.338C238.879 254.486 238.012 256.978 239.374 256.224C240.138 257.322 240.427 259.175 241.851 258.913C242.512 257.208 239.395 257.224 240.179 255.453L240.778 255.289C240.427 254.633 239.477 254.486 238.94 254.108C239.271 254.108 239.539 253.944 239.663 253.551C238.342 252.403 238.135 251.682 236.67 250.632C237.599 253.305 235.452 252.829 236.236 255.584C235.823 255.141 235.658 253.223 234.151 253.026L235.245 253.108C234.75 252.206 234.254 251.288 234.688 250.206L235.245 250.911C234.605 249.402 237.083 248.55 235.348 247.32C235.225 247.73 235.225 248.058 235.369 248.32C234.936 247.55 235.121 246.598 235.369 245.795L233.697 244.024C234.234 244.057 234.358 242.991 235.163 243.549C236.092 242.368 234.502 241.712 234.275 241.007C235.514 239.81 234.729 242.106 236.215 242.302C236.835 240.597 236.484 238.761 235.576 237.744C235.328 238.088 235.142 238.252 234.874 238.219C235.225 238.187 235.183 237.482 235.204 237.104L234.523 236.809C235.039 236.186 235.452 236.285 235.947 236.858C236.133 236.252 234.812 235.465 235.865 234.858C236.649 235.94 235.823 237.252 236.319 237.826C235.761 235.596 238.61 235.694 237.888 232.874C238.218 232.858 238.858 233.349 238.899 232.808C238.713 231.546 237.454 232.431 236.711 232.005C237.083 232.972 236.628 233.415 235.699 233.923L235.142 233.645C235.452 233.612 235.493 233.021 235.803 232.858L234.647 232.661C235.926 232.776 236.979 231.857 236.546 231.087C235.555 231.808 235.617 231.611 234.13 231.759C232.789 230.644 235.576 230.611 234.172 229.365C234.585 229.463 234.832 230.513 235.204 229.627C235.307 228.889 234.296 228.955 233.986 228.43C235.039 229.037 235.844 228.922 237.083 229.578C237.144 230.906 237.041 230.119 237.433 231.415L238.424 230.349C238.528 231.48 239.601 231.218 240.014 231.316C241.232 229.447 238.466 229.808 238.817 228.594C238.115 227.971 238.61 229.742 237.867 228.791C238.094 227.643 237.186 228.496 236.773 227.2L237.248 227.43C237.908 227.053 237.144 226.643 237.062 226.184C236.752 225.676 233.284 226.627 233.325 224.56C233.614 224.675 233.8 224.708 233.945 224.724L242.883 227.053C242.966 224.954 243.358 222.544 244.081 220.117C245.877 219.592 245.443 221.904 246.248 221.773L245.835 222.872C245.092 222.79 245.732 220.527 244.349 221.494C244.783 223.478 243.874 224.331 245.319 226.249C247.115 225.725 245.134 223.79 246.558 222.626C246.414 223.134 246.579 223.56 246.826 223.987C247.115 222.855 247.425 221.642 247.755 220.363L247.342 220.051C247.095 220.92 246.909 221.511 246.847 221.593C247.053 220.445 246.125 219.428 244.845 219.313L244.783 219.51L244.39 219.084L244.679 218.28L245.01 218.33ZM246.104 143.328C246.228 143.394 246.372 143.443 246.558 143.492C246.372 143.459 246.248 143.492 246.104 143.328ZM248.044 241.155C248.333 239.613 248.788 238.072 249.035 236.596C246.31 239.17 244.246 240.974 244.576 236.514L244.411 236.219C244.06 236.793 243.957 237.793 244.081 238.744C244.948 239.548 248.127 242.171 248.416 242.155C249.159 241.909 248.395 241.483 248.643 240.991L248.044 241.155ZM243.689 242.073C243.338 242.942 243.916 242.762 244.432 242.925C244.39 242.614 244.349 242.302 244.308 242.007C244.163 242.122 243.978 242.171 243.709 242.089L243.689 242.073ZM244.948 242.893C244.948 242.794 244.989 242.712 245.072 242.68L244.948 242.893ZM246.62 225.905C246.62 225.905 246.62 225.954 246.641 226.003C246.682 225.79 246.744 225.594 246.785 225.38C246.703 225.462 246.62 225.626 246.599 225.921L246.62 225.905ZM245.278 227.627L246.207 227.873C246.248 227.676 246.29 227.479 246.352 227.282C245.918 227.332 245.546 227.397 245.278 227.627ZM241.872 233.218C242.966 233.628 242.945 234.825 244.246 234.956C244.576 235.038 244.721 234.792 244.845 234.514C244.907 234.202 244.948 233.858 245.01 233.497C244.824 233.481 244.659 233.399 244.494 233.267C244.308 233.612 243.978 233.841 243.193 233.661C244.989 232.825 242.016 232.792 242.512 231.824C241.624 231.48 241.542 232.89 241.893 233.202L241.872 233.218ZM237.888 308.957C237.764 308.974 237.475 309.039 237.083 309.154L236.546 308.416C237 307.203 238.982 306.367 237.537 305.137C238.012 304.645 238.899 304.448 239.622 304.235C239.539 304.481 239.436 304.711 239.312 304.907C241.232 308.22 236.628 306.317 237.908 308.974L237.888 308.957ZM241.975 294.938C242.037 295.069 242.243 295.135 242.243 295.135C240.2 292.199 239.808 289.871 240.055 288.395C239.085 288.608 238.218 289.904 237.743 290.494L236.732 289.855L237.619 289.559L236.752 288.51C236.009 288.723 236.071 289.527 235.452 290.002C235.658 290.068 236.69 291.839 237.31 292.347L238.218 291.052C237.867 291.396 237.908 293.2 238.094 293.921C238.631 293.97 239.601 292.822 238.466 292.577C239.271 292.495 239.126 293.905 240.076 293.068C240.798 294.183 239.89 295.807 239.395 296.561L238.032 296.594C237.413 297.414 239.58 297.299 238.672 298.25C238.569 296.987 237.186 298.348 237.206 297.348C236.67 297.627 235.782 297.25 235.761 298.25C237.433 299.217 234.523 299.201 235.988 300.103C235.369 300.578 234.998 299.463 234.626 300.464C235.41 301.71 236.092 301.693 237.372 301.874C237.867 300.808 235.844 300.496 236.277 299.627L238.28 301.595C238.631 301.284 238.693 301.054 238.631 300.841C238.713 301.218 239.002 301.546 239.415 301.841C239.642 302.005 239.849 302.169 240.014 302.3C240.158 301.284 240.282 300.382 240.86 300.267L241.459 300.464C242.078 300.152 241.707 299.529 241.273 299.217C241.314 298.299 240.551 297.332 241.397 297.184L241.934 297.578C241.893 296.446 241.831 296.315 241.996 294.905L241.975 294.938ZM247.157 258.241C244.803 258.798 242.698 259.438 242.821 262.635L242.677 262.373C241.087 263.881 244.328 265.603 242.532 267.456C241.748 266.456 241.831 266.521 239.952 265.357L240.509 266.406C239.291 266.046 239.828 267.095 239.704 267.833L238.28 267.095C238.755 266.669 239.023 265.537 238.672 265.554C238.817 265.816 240.675 264.144 240.324 263.143C239.312 263.193 239.539 265.242 237.97 264.242C238.59 265.078 237.578 265.127 237.867 265.98C237.248 265.144 236.505 265.701 235.823 265.062L236.03 266.456C235.699 266.456 235.472 264.422 234.13 265.472C234.605 266.046 233.8 267.472 234.874 267.571H234.543C234.213 268.604 236.03 268.128 235.287 269.358C235.823 269.407 236.236 269.194 236.174 268.735C235.968 268.341 235.225 268.243 235.163 267.439C236.05 267.144 234.956 268.374 236.463 267.915C237.206 267.685 236.05 265.8 237.599 266.472L237.268 267.489C238.362 267.587 238.218 268.325 239.106 268.358C239.436 269.014 238.156 269.522 239.044 270.227C239.725 270.539 241.067 270.145 240.406 271.178C238.713 271.916 238.796 274.376 238.92 275.294L239.539 276.146C240.22 276.114 239.601 274.605 240.406 275.179L240.551 276.442L240.138 276.31C240.014 276.72 240.406 277.179 240.613 277.573C239.869 277.13 240.262 276.245 239.126 276.36C238.837 276.934 238.424 276.999 238.59 277.54C238.528 277.409 238.424 277.311 238.259 277.311C237.661 278.458 239.395 278.54 239.746 278.868C241.087 280.164 241.253 277.753 242.388 277.983L242.636 281.508C242.305 281.18 241.975 280.869 241.5 280.934C240.881 281.754 240.613 280.902 240.551 282.099C242.099 282.115 241.356 283.673 242.14 284.591C241.459 284.952 241.335 285.017 241.397 284.148C240.386 284.181 240.633 285.362 240.509 285.772C240.736 286.034 240.84 286.444 241.025 286.723C241.562 286.411 242.182 286.608 242.512 287.379L242.718 287.444C243.131 286.231 244.432 284.394 243.503 283.542L243.978 283.788C245.01 282.41 242.512 280.557 244.494 280.033C245.237 280.147 244.7 279.754 245.774 279.852L245.051 278.737L245.526 278.983L245.464 277.179L245.67 277.245C244.762 276.327 244.039 275.605 243.441 275.031C242.966 274.999 242.822 275.031 242.491 274.736C242.285 274.441 242.264 274.212 242.347 274.031C242.532 273.605 243.234 273.359 243.565 272.834L243.523 274.507C244.308 274.687 245.154 274.605 245.794 273.818C245.794 274.146 246.414 274.326 246.537 273.933C246.331 273.867 246.125 272.801 245.443 273.162C245.299 271.555 247.673 269.128 246.372 266.636C247.115 268.423 247.59 265.308 247.735 267.259C249.159 265.996 246.579 266.029 246.888 264.685C247.363 264.603 246.764 265.423 247.652 265.783C248.375 263.537 245.897 261.832 246.496 259.667L247.508 259.634C247.425 259.208 247.322 258.749 247.219 258.257L247.157 258.241ZM246.29 253.83C246.207 253.403 246.125 252.961 246.042 252.534C246.042 252.583 246.021 252.616 246.001 252.665L245.278 251.354C244.824 252.108 243.689 252.567 243.255 251.452C243.668 251.567 244.205 251.272 244.411 251.665C245.072 250.96 245.774 249.386 244.225 249.73C245.546 251.206 242.264 249.96 243.255 251.124C242.305 250.485 242.801 249.927 242.409 249.337C243.193 249.96 244.287 249.288 244.762 248.435C244.556 248.041 244.865 247.025 244.514 246.369C243.565 246.549 243.09 245.975 242.76 246.992C242.553 246.598 242.388 246.008 242.925 245.385C243.069 245.647 243.152 246.107 243.482 246.09C244.37 245.713 244.37 245.205 244.762 244.959C244.721 244.746 244.7 244.516 244.659 244.303C244.576 244.368 244.473 244.418 244.329 244.45L243.565 243.696C243.936 244.68 243.111 244.122 242.553 244.09C243.647 244.172 242.739 243.483 242.739 243.139L241.542 243.811C240.984 243.434 242.471 242.63 241.315 242.762C240.736 244.254 240.902 244.844 241.129 246.238L242.058 245.729C242.574 247.304 240.447 246.615 240.365 248.353C241.129 249.107 240.22 250.96 241.851 251.091C241.376 250.845 240.324 252.108 241.005 252.731C242.45 253.469 242.491 255.469 243.214 254.896C243.276 254.354 242.512 253.6 243.523 253.207L243.75 254.272L244.618 253.633C244.308 253.977 245.092 253.977 246.31 253.879L246.29 253.83ZM257.066 230.726V230.693C257.066 230.693 257.066 230.726 257.066 230.742V230.726Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.085 324.668C239.415 324.996 239.25 325.734 240.055 325.668C239.168 325.603 240.117 324.324 239.085 324.668Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.115 325.469C238.322 325.534 238.652 325.534 238.632 325.862L238.549 324.928L238.115 325.469Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.004 325.847C232.582 326.388 232.912 326.716 232.747 327.47C230.58 327.569 232.314 326.175 230.394 325.65C229.981 327.028 231.798 327.634 231.839 328.815C232.788 328.274 233.614 326.028 232.004 325.847Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.403 324.977L229.754 325.797L229.899 325.731L229.527 324.928L229.403 324.977Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M250.233 310.286C250.914 310.286 250.315 309.745 250.191 309.482C250.129 309.679 249.902 309.958 250.233 310.286Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.307 160.3L259.584 154.479C259.77 156.151 259.894 157.709 260.307 160.3Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.291 290.707C248.725 292.314 249.798 293.084 249.901 294.691C251.491 292.707 248.147 291.789 249.716 290.133L248.291 290.707Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.557 291.641C252.277 291.805 252.236 290.329 251.286 290.493C251.472 291.559 252.422 291.067 252.195 292.018L253.557 291.641Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.901 297.103L231.323 296.578L231.509 296.972L231.901 297.103Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.227 284.442L253.474 284.639L253.97 283.885L253.227 284.442Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.28 296.281L228.929 296.954L229.465 297.347L229.28 296.281Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M236.773 290.675L237.104 291.331C237.042 291.2 237.661 290.38 236.773 290.675Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.278 279.704L253.886 278.9L253.741 278.982L254.134 279.769L254.278 279.704Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.861 285.542C232.85 285.903 233.737 284.28 232.788 285.1C232.85 285.903 233.387 285.608 233.861 285.542Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.396 276.852C241.396 276.754 241.396 276.638 241.293 276.523C241.314 276.655 241.355 276.754 241.396 276.852Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.397 276.852C241.355 277.18 240.963 277.491 241.211 277.737C241.686 277.36 241.541 277.196 241.397 276.852Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.543 273.031L241.439 273.326C240.985 272.981 241.047 273.145 241.398 273.441C241.398 273.769 241.708 273.769 241.914 273.818C242.017 273.883 242.141 273.965 242.265 274.031C242.141 273.932 242.038 273.834 241.935 273.752C241.997 273.26 241.976 272.949 241.522 273.031H241.543Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.171 259.832C258.717 260.931 258.51 261.209 257.767 261.111C257.437 262.16 258.737 262.062 258.985 262.718C258.944 261.505 259.316 261.275 259.171 259.832Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.986 262.719C258.986 262.85 258.986 262.982 259.007 263.146C259.048 262.965 259.007 262.834 258.986 262.719Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.914 276.934L231.82 276.18L231.964 276.442L232.914 276.934Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.687 258.19C259.625 258.403 259.625 258.731 259.357 258.879C260.1 258.977 259.749 257.977 259.687 258.19Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.577 261.684C244.102 261.766 244.329 262.503 244.123 262.782C244.247 262.372 245.671 262.11 244.577 261.684Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.88 254.812C256.818 255.009 256.281 255.304 255.662 255.14C256.013 255.468 257.293 255.944 256.88 254.812Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.887 259.666L244.619 259.814L245.032 260.601L244.887 259.666Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.553 261.75C234.379 262.652 235.824 260.52 236.464 262.029C237.558 260.192 235.184 262.094 235.452 260.717C235.081 261.52 233.904 261.848 233.553 261.75Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.452 260.716C235.514 260.601 235.555 260.469 235.555 260.338C235.494 260.486 235.473 260.617 235.452 260.716Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.119 249.025C242.202 249.157 242.305 249.239 242.408 249.321C242.346 249.223 242.264 249.124 242.119 249.025Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.101 256.238L236.339 257.583C235.513 256.681 235.761 254.549 234.399 254.615C234.068 255.287 234.357 256.14 234.894 256.517L235.101 256.238Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.555 242.678L261.05 243.269L261.256 242.58C261.05 242.777 260.08 242.367 260.555 242.695V242.678Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.297 242.434L261.256 242.566C261.256 242.566 261.297 242.5 261.297 242.434Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.574 251.483C242.45 251.893 242.45 252.221 242.677 252.615C242.945 252.467 243.255 251.45 242.574 251.483Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.862 238.664L259.027 239.599L259.007 238.582L258.862 238.664Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.422 234.45L261.69 234.303L261.257 233.516L260.989 233.68L261.422 234.45Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.646 238.975C234.46 239.582 235.637 240.123 235.905 239.959V238.762C234.852 239.024 235.947 239.09 235.637 239.778L234.667 238.975H234.646Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.927 202.442C261.629 202.721 261.175 204.049 260.514 204.099C260.225 203.918 259.977 203.197 259.523 203.639L261.216 204.722C260.101 206.099 258.966 203.607 258.388 202.918C258.119 204.328 259.255 204.771 259.193 206.296C259.358 205.853 259.791 205.574 260.184 205.361C261.402 205.328 260.824 206.739 260.886 207.739C261.443 207.116 261.876 207.493 262.331 207.968C262.372 208.05 262.434 208.116 262.516 208.149L262.682 208.313V208.198C262.826 208.198 262.991 208.198 263.218 208.099C262.909 207.247 263.941 206.624 263.961 206.083C261.959 206.575 263.549 204.213 262.971 203.525L262.805 202.738V202.442C263.032 202.393 263.301 202.475 263.672 202.934C263.301 202.557 263.466 201.295 262.826 201.393L262.888 198.523C262.971 198.441 263.074 198.343 263.218 198.278C263.094 198.179 262.991 198.163 262.888 198.163C262.991 193.998 262.971 189.833 263.032 185.668C262.867 186.291 262.393 186.816 262.165 187.439C260.865 186.471 261.918 188.472 260.658 188.177C260.204 187.75 260.369 187.111 260.658 186.75C260.039 186.603 259.461 187.127 258.718 187.062C257.892 188.619 260.906 188.898 260.411 190.423C259.668 190.358 259.007 189.866 259.09 190.882L258.924 190.62C259.729 192.243 257.19 191.85 259.255 192.899L258.161 192.85C258.966 193.588 258.945 195.014 259.069 195.818L258.862 195.769C260.039 198.032 259.09 197.031 259.544 199.573L258.305 198.392C257.748 199.245 259.131 199.475 258.966 200.098C258.759 200.048 257.954 200.18 257.768 199.589L259.606 202.688C260.411 203.443 260.411 202.557 260.886 202.459L260.927 202.442Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.191 206.279C259.13 206.443 259.088 206.624 259.13 206.837C259.171 206.624 259.191 206.443 259.191 206.279Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.032 184.799V185.668C263.093 185.389 263.113 185.11 263.032 184.799Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.38 210.721C261.959 210.196 262.144 211.131 262.557 211.246L262.619 209.343C262.206 209.343 261.731 209.147 261.36 209.179V210.737L261.38 210.721Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.444 208.801C263.155 208.736 262.907 208.523 262.66 208.293L262.618 209.342C262.928 209.342 263.217 209.228 263.424 208.801H263.444Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.066 208.489L241.045 208.145L240.735 207.637L241.066 208.489Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.091 203.326C242.451 203.703 242.905 204.474 243.05 204.736C243.05 203.867 243.277 204.244 243.091 203.326Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M236.236 204.244L235.905 203.408L235.781 203.49L236.236 204.244Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.798 178.29C258.778 178.158 258.758 178.01 258.738 177.879C258.738 178.076 258.758 178.191 258.798 178.29Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.771 185.568C261.03 183.552 260.762 186.897 262.331 186.29L261.835 185.191L262.248 185.29L262.145 183.945C261.422 184.207 261.381 184.421 260.617 184.355C260.948 182.568 261.526 183.797 262.496 182.486L262.372 180.485L262.599 180.649C262.599 180.485 262.496 180.403 262.372 180.354L261.959 173.598C261.361 172.369 260.597 174.271 259.503 173.369C259.503 174.795 258.677 176.894 260.184 177.025C259.977 176.976 259.565 176.878 259.379 177.173L260.617 178.009L261.01 177.222C262.228 178.058 261.939 180.731 261.175 181.207C260.762 179.682 259.276 180.436 260.101 178.321C259.709 178.419 259.048 178.796 258.842 178.321C259.255 180.797 258.574 183.01 259.792 185.601L259.771 185.568Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.13 160.694H259.276C259.276 160.694 259.151 160.661 259.13 160.694Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.944 161.529L260.431 162.726L260.307 160.84L259.275 160.709C259.543 160.873 260.059 161.529 259.667 161.791L258.965 161.529H258.944Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.318 164.12C260.864 163.152 259.646 163.201 259.109 163.742C258.531 162.857 260.41 163.267 259.109 162.66C258.221 162.677 258.758 163.775 258.923 164.038L261.318 164.136V164.12Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.699 171.318L260.203 171.039L260.059 171.711L260.699 171.318Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.203 171.039L260.327 170.367C259.956 170.416 259.584 170.466 259.336 170.564L260.203 171.039Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.678 168.613C260.76 168.334 260.843 168.022 260.864 167.629L260.678 168.613Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.368 169.384H260.534L260.678 168.613C260.575 168.892 260.472 169.138 260.368 169.384Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.328 170.367C261.175 170.252 262.083 170.137 261.835 169.17L260.514 169.367L260.328 170.383V170.367Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.702 198.194L237.247 197.439L237.124 197.505L237.578 198.276L237.702 198.194Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.609 193.85C238.464 193.653 238.299 193.522 238.155 193.391C238.237 193.587 238.382 193.751 238.609 193.85Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.85 190.537C233.717 189.668 233.965 191.767 234.378 190.144C235.183 190.013 236.194 190.8 235.782 191.554C235.038 191.488 235.307 190.8 234.543 191.259C235.41 191.784 234.811 191.964 235.947 191.8C236.628 192.669 237.433 192.784 238.176 193.374C237.701 192.325 238.899 190.144 237.474 188.799C236.133 188.045 234.254 188.471 232.293 188.455C231.818 188.553 231.57 190.439 232.871 190.537H232.85Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M230.847 191.896C230.744 192.306 230.827 192.438 230.971 192.684C231.652 192.618 230.868 192.224 230.847 191.896Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.836 182.615C245.547 182.533 245.216 181.779 244.721 181.943L245.072 183.075C245.113 182.812 245.464 182.714 245.836 182.615Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.217 183.566L245.071 183.074C245.051 183.205 245.071 183.353 245.217 183.566Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.023 182.566L245.857 182.616C245.857 182.616 245.981 182.616 246.023 182.566Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.154 165.842C261.69 165.842 261.36 165.35 261.216 165.088C261.174 165.301 260.989 165.596 261.154 165.842Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.8 146.69L259.213 146.23C258.965 146.394 258.841 146.476 258.8 146.69Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.875 140.016C243.771 140.016 243.688 139.967 243.605 139.934C243.668 139.983 243.771 140 243.875 140.016Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.585 139.936C243.131 139.641 243.791 138.69 243.11 138.362L243.316 138.395L242.904 137.771C242.986 138.362 242.924 139.592 243.585 139.92V139.936Z\",\n    fill: \"#3F3834\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.9438 57.8655C45.7993 57.5212 46.4186 57.1769 46.7076 57.2916C45.8612 56.6193 46.7489 56.5538 45.2419 56.5374C44.4575 56.111 45.4484 55.5699 46.0883 56.0618L45.0561 54.7828L44.891 55.5863C43.6317 55.4387 45.1593 54.2909 43.673 54.127L43.9207 55.5535L43.5078 55.5043C43.9827 55.7995 43.8588 56.4554 43.6936 56.6849C43.4872 56.6685 43.1569 56.7013 43.095 56.4554C43.1569 58.1935 45.3245 56.7997 45.8612 58.2263C45.8199 58.1443 45.8406 58.0295 45.9438 57.8655Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.0329 59.5067L44.6431 60.0314L44.3334 61.0644C44.8702 61.048 45.3863 61.7531 45.7991 61.2284C45.7166 61.13 45.5308 60.9497 45.5721 60.7857C46.7488 60.8349 46.274 62.0975 47.43 61.7367C47.0584 60.9497 47.2855 60.8185 46.2946 60.3757C46.3359 59.6379 46.563 59.0804 46.9552 58.7196C46.7694 58.5065 46.0469 58.5229 45.8817 58.2441C45.9024 58.3097 45.923 58.3589 45.9437 58.4245L44.1889 58.5557C44.5812 58.7688 44.416 58.9984 44.4779 59.2443L42.331 58.1621C40.7208 58.6376 41.7943 59.7526 41.1543 60.261C42.5787 59.6051 41.9388 60.6873 43.0329 59.4903V59.5067Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.4979 145.377C69.6011 145.623 70.014 145.623 70.2411 145.623L69.4979 142.852C69.0644 143.016 68.7135 143.901 68.3006 143.409C67.8671 143.721 68.4657 144.393 69.1057 144.393L68.3625 144.295C69.4153 144.786 67.7845 145.508 67.1445 145.18V145.229L71.0256 146.459C71.0668 145.77 69.725 146.147 69.4773 145.36L69.4979 145.377Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.1984 204.145C77.0539 203.767 76.8888 203.718 76.7236 203.751C76.8475 203.882 76.992 204.014 77.1984 204.145Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.9548 146.756L73.1728 147.15C72.8219 146.97 72.3884 146.838 71.9548 146.756Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.7388 145.492C54.7388 145.492 54.6356 145.492 54.553 145.525L55.1516 145.689C55.0071 145.607 54.8626 145.541 54.7181 145.492H54.7388Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M79.1802 158.873C79.1802 158.873 79.2428 158.972 79.3054 159.055C79.2845 158.989 79.2428 158.923 79.1802 158.873Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.7285 138.77L48.0704 139.885C47.5336 139.787 47.8433 140.377 47.2033 140.197C47.3065 140.279 47.6162 140.705 47.8226 140.541L47.7194 140.279C49.309 140.722 49.7425 140.246 51.105 141.181C51.7862 140.361 50.9398 140.18 50.1967 139.918C50.0728 139.803 49.9902 139.721 49.9283 139.623L47.6781 138.869L46.7285 138.754V138.77Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.6601 186.783H68.1349C67.9078 186.75 67.6394 186.52 67.6601 186.783Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.9849 146.706C71.2532 146.673 71.5835 146.705 71.9551 146.755L71.0468 146.459C71.0468 146.459 71.0055 146.607 70.9849 146.689V146.706Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.6399 146.261L67.1651 145.245L66.3394 144.982C66.7109 145.343 67.0206 145.769 67.6399 146.261Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M79.5928 157.068C80.3567 159.233 77.7968 156.79 77.6317 157.855C77.9826 158.429 78.829 158.528 79.1593 158.872C78.0446 157.232 81.8224 158.708 80.976 157.019C82.4623 157.052 82.8545 158.036 82.6068 158.708C81.3888 159.61 81.4508 158.265 80.0676 158.331C80.4599 159.003 80.687 158.839 81.5334 159.02C81.4714 160.184 83.7835 161.086 82.0288 162.037C82.5242 162.807 83.1848 162.643 84.0106 163.004C85.5176 162.873 84.506 161.676 85.6002 161.201C85.4969 161.283 85.2699 161.446 85.0428 161.43L85.1873 160.676C84.8363 161.414 83.6803 160.807 83.4945 160.463C83.3913 160.2 83.2055 159.708 83.639 159.708L84.0519 160.053C84.4028 159.479 82.71 159.102 83.3913 158.446C83.7216 158.364 83.928 158.544 84.1345 158.544C82.9784 158.101 82.8958 157.528 81.9669 156.757L83.5564 157.036C81.7604 156.593 81.8224 154.937 82.4004 153.691C82.1733 153.855 82.0701 154.1 81.7398 154.019C81.2237 153.428 82.1114 152.789 82.9578 152.953C81.5746 152.526 83.3706 150.411 81.5746 149.804L73.152 147.115C73.3791 147.23 73.5648 147.361 73.6681 147.509C72.4707 148.066 72.6772 148.23 71.3147 147.804C72.1404 148.296 73.1313 147.902 73.3997 148.804C72.6565 148.558 71.1702 148.706 71.2321 149.591C73.0694 151.575 77.0949 152.444 79.4896 154.199C78.5194 154.428 79.2006 156.019 79.1593 156.839C78.0239 156.708 77.5697 156.167 77.1981 155.593C77.2188 155.986 77.3633 156.642 77.4252 157.134L79.5515 157.003L79.5928 157.068Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.9918 152.479C74.9918 152.479 74.8874 152.611 74.8457 152.677C74.9292 152.627 74.9709 152.578 74.9918 152.479Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.1988 155.462C77.1988 155.462 77.1362 155.462 77.0945 155.462L77.2197 155.643C77.2197 155.643 77.2197 155.495 77.2197 155.445L77.1988 155.462Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.8797 147.577C68.57 147.494 68.4668 147.412 68.1365 147.33C68.2603 147.396 68.3636 147.478 68.4668 147.56C68.6319 147.626 68.7764 147.659 68.8797 147.56V147.577Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.5098 146.853H70.9433C70.9433 146.853 70.9846 146.754 70.9846 146.705C70.7575 146.722 70.5717 146.771 70.5098 146.853Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.5945 166.809L72.864 166.99C72.8225 166.858 72.7189 166.825 72.5945 166.809Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.5197 159.775C78.2307 159.02 77.0127 159.906 76.7444 158.824V159.152C75.9186 158.479 75.8567 157.069 75.5883 156.167C76.2076 156.167 76.1664 155.495 77.116 155.462C76.7444 154.872 76.3934 154.282 75.3613 154.101C75.5677 153.658 74.5974 153.216 74.8658 152.658C74.3704 152.953 72.8221 152.265 73.7923 153.347C73.6891 153.265 73.5859 153.347 73.4827 153.265C72.9047 154.15 74.2878 154.249 74.4736 154.921C74.0194 155.413 73.4414 154.413 73.2969 154.823C74.0194 155.577 73.2969 157.528 75.32 157.151C75.609 157.741 75.1755 157.889 74.8452 158.135C77.2811 158.758 74.7626 161.841 77.5701 161.414C77.3843 161.07 77.3018 160.496 76.5792 160.07L78.5197 159.775Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.353 148.822C69.353 148.822 69.3698 148.937 69.353 148.97C69.353 148.921 69.353 148.872 69.353 148.822Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.0504 138.062L76.9497 138.095C77.8167 139.784 77.4864 140.522 77.9405 142.063C77.7135 142.227 77.507 142.063 77.4038 141.981C77.8993 143.031 77.9199 144.736 78.9727 145.408C79.0553 145.769 78.7044 146.769 78.0851 146.507C78.2915 146.655 78.4979 146.819 78.4979 147.032C77.858 147.196 78.1883 146.622 77.6515 146.704C77.6515 146.868 77.5277 146.95 77.7548 146.95C77.1148 146.786 75.5872 147.573 75.3188 146.36C76.7226 145.638 75.711 147.179 77.3419 146.622C77.2593 146.212 76.5987 146.376 76.3923 146.36C76.289 145.835 76.7226 145.786 77.1148 145.753C76.5368 145.638 77.1148 144.867 76.2271 144.736C75.8349 143.752 77.507 144.589 77.3212 143.933L75.5046 143.834L75.5459 142.703C74.555 141.227 72.6351 143.408 71.2107 141.768C72.1603 141.867 73.4815 140.899 73.626 140.014C73.8118 140.506 75.1743 141.244 74.8234 141.965C75.9381 140.85 75.2982 143.195 76.7226 142.473C75.8762 142.145 75.5872 141.408 75.8349 140.768L76.0413 140.932C76.062 140.293 74.1421 140.096 74.6169 139.128C74.4518 138.718 74.9679 138.718 75.3807 138.735C75.0298 138.423 74.6169 138.144 75.0091 138.095L75.0504 138.062ZM75.6285 138.932V139.522C75.8555 139.341 75.7936 139.128 75.6285 138.932Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.9812 67.6737C43.9812 67.6737 44.0647 67.5417 44.1064 67.4922C44.0229 67.5417 44.0021 67.6077 43.9812 67.6737Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.9063 119.849V119.504C49.8665 119.652 49.8864 119.75 49.9063 119.849Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.8674 112.781L42.3926 112.322C42.4545 112.519 42.6403 112.65 42.8674 112.781Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.2295 71.7227C44.2295 71.7227 44.3122 71.7887 44.3328 71.8052L44.2502 71.7227H44.2295Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.7249 96.988C44.8694 96.9059 44.9932 96.8073 45.0758 96.6758C44.9106 96.7086 44.7868 96.8237 44.7249 96.988Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.952 112.862C42.952 112.862 42.952 112.845 42.9729 112.829L42.8477 112.779L42.9311 112.862H42.952Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.4905 123.832C45.4905 123.832 45.6148 123.964 45.6978 124.03C45.6356 123.931 45.5734 123.882 45.4905 123.832Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.2993 122.75C50.2993 122.75 50.4237 122.899 50.5066 122.948L50.2993 122.75Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.4319 135L49.7828 135.427C49.7002 135.197 49.5764 135.082 49.4319 135Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.4106 124.111C49.4106 124.111 49.5765 124.144 49.6594 124.16C49.5972 124.111 49.4936 124.078 49.4106 124.111Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.9165 64.4727V64.5057H49.1238L48.9165 64.4727Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.2744 63.5077L46.0886 63.1133C46.0886 63.2612 46.1506 63.4091 46.2744 63.5077Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.7281 90.1185C46.9758 89.9706 47.2442 89.6748 47.5332 89.7899C47.1409 89.5762 46.2533 89.6584 46.7281 90.1185Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.0431 66.0652C59.7954 65.9995 59.6096 65.9337 59.4238 65.8516C59.6922 65.9995 59.9193 66.1474 60.0431 66.0652Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.4239 65.8512C59.3 65.769 59.1555 65.6868 59.011 65.6211C59.1348 65.7033 59.2794 65.769 59.4239 65.8512Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.5305 92.1035C61.4061 92.1365 61.3232 92.2025 61.3025 92.2685C61.5305 92.2355 61.5927 92.186 61.5305 92.1035Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.3562 62.7837C45.9433 62.7345 44.8698 61.0456 44.7873 62.5214C43.4867 62.5214 44.106 61.6195 43.7551 61.2424C43.4661 61.5375 42.9087 61.144 42.4545 61.2588C42.6197 61.4392 43.0119 61.6523 42.95 61.9803C42.3719 62.1606 41.9178 61.7015 42.1242 61.308C41.4843 61.8163 41.0507 60.7669 40.5759 61.4556C41.154 62.8493 41.7113 63.8168 43.6931 64.7022C43.3009 63.9152 42.8467 63.0297 43.3009 62.341L44.4363 62.5542C43.5073 63.3576 44.2918 63.784 44.2505 64.5219L44.7047 62.8329C45.5717 62.0131 45.8194 62.5214 46.0878 63.1117C46.0878 62.9641 46.1497 62.8165 46.3355 62.7673L46.3562 62.7837Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.2865 63.3432V63.3102C56.2865 63.3102 56.2452 63.2606 56.2039 63.2441L56.2865 63.3432Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.7688 131.685L72.223 131.768C72.0165 131.685 71.872 131.669 71.7688 131.685Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.0386 130.588C47.0386 130.588 46.9343 130.604 46.8926 130.637C46.976 130.703 47.0178 130.654 47.0386 130.588Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.7391 112.059C63.7391 112.059 63.5533 112.124 63.3882 112.239C63.4914 112.256 63.6153 112.223 63.7391 112.059Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.6641 115.568C62.6641 115.568 62.6021 115.618 62.5608 115.651L62.6641 115.568Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.7734 91.3008C41.7734 91.4651 41.8146 91.5966 41.8763 91.6952C41.8763 91.5637 41.8763 91.4323 41.7734 91.3008Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.2107 128.277C71.3346 128.294 71.4584 128.327 71.6236 128.392C71.4378 128.327 71.3139 128.294 71.2107 128.277Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.2976 107.533L57.4427 107.616L57.4842 107.55L57.2976 107.533Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8754 105.696C58.0199 105.746 58.1438 105.762 58.2677 105.778C57.7103 105.204 58.0406 104.007 56.8432 103.975C56.9052 104.188 56.3684 105.352 55.6459 105.221C55.9968 105.631 55.2743 106.352 55.5014 106.565C56.0381 105.778 56.4923 106.401 56.9671 106.844C56.6781 107.32 55.9968 106.844 55.8317 107.254L56.1207 108.254V107.352L57.318 107.516C57.2768 107.484 57.2355 107.467 57.1942 107.434C56.451 105.991 58.8457 107.156 57.8754 105.68V105.696Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.2676 105.777C58.3505 105.86 58.4541 105.942 58.5785 105.992C58.5371 105.843 58.4127 105.81 58.2676 105.777Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.281 99.4995C59.281 99.4995 59.1566 99.351 59.053 99.252C59.0944 99.3015 59.1774 99.417 59.281 99.4995Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.3398 144.198C66.6701 144.116 67.1243 143.149 66.2779 143.297L66.1953 144.116L66.3398 144.198Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.178 83.1523C52.178 83.2509 52.178 83.3496 52.178 83.4482L52.3225 83.4975C52.4463 83.4317 52.2606 83.2509 52.178 83.1523Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.1924 104.99C55.3575 105.138 55.502 105.204 55.6465 105.22C55.564 105.122 55.4401 105.04 55.1924 104.99Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.2627 82.9537C54.5104 82.8061 54.8614 82.6094 55.1917 82.5602C55.1917 82.2978 54.6962 82.1503 54.5104 81.9043C54.6756 82.1831 54.6136 82.5274 54.2627 82.9537Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.1128 144.771C66.1128 144.771 66.2779 144.902 66.3605 144.968L66.0921 144.886L65.9889 145.525C65.9889 145.525 66.1334 145.656 66.1954 145.755C66.1541 145.722 66.0509 145.706 65.9476 145.706L65.8857 145.919C66.8973 146.247 67.8675 147.313 68.4662 147.575C68.9616 147.968 69.3332 148.477 69.3332 148.837C69.2713 148.51 68.9823 148.116 68.5075 148.329C68.1565 149.067 66.7528 149.625 68.3217 150.526L68.1359 149.871L70.4273 151.035C69.7667 151.674 69.2713 150.444 68.5281 150.362C69.7667 151.363 67.4753 152.724 69.2713 152.986C68.301 153.216 66.6908 153.609 66.9798 154.347C67.9707 153.626 67.8262 154.691 68.9203 154.052C69.5603 154.216 68.7758 154.954 69.5397 154.872H69.1061C67.8675 156.413 70.4273 156.446 71.3563 156.872C72.1408 158.364 71.6866 159.168 72.1614 160.414C71.5008 160.562 69.7667 161.185 69.9525 161.677C70.9022 161.775 71.604 162.857 72.7807 162.808C73.0491 161.824 71.6453 162.201 71.2324 161.709C72.3266 161.07 72.4091 161.496 72.9872 160.758C72.6362 161.332 74.1639 162.923 73.1523 163.644L72.9459 163.48C72.4711 164.464 69.6635 165.038 71.7073 166.235L72.5743 166.825C72.4504 166.809 72.3266 166.825 72.2027 166.825C72.3266 167.99 70.9641 167.858 72.2646 168.957C72.1614 168.875 72.0582 168.957 71.955 168.859C71.4802 169.662 72.9252 170.203 73.2968 170.712C72.4091 171.171 72.3266 170.761 71.604 170.646C71.4802 171.958 73.4207 173.106 74.7625 173.745L74.3497 174.63C73.8748 174.188 72.7188 173.729 72.1614 173.942C72.4504 174.368 72.884 174.221 72.822 174.876C72.1821 174.844 71.5627 174.647 70.7163 174.45C69.9319 175.877 72.9665 174.483 71.2324 175.614C71.2944 176.024 72.244 176.155 72.9872 176.123L72.1408 176.975C73.111 176.942 73.3175 177.861 73.5858 178.451C74.0193 178.484 74.5148 177.861 74.1019 177.664C74.8657 177.631 75.3199 178.238 75.3818 178.648C73.4413 179.009 76.0837 181.353 73.6684 181.091C74.618 182.895 75.1754 185.502 76.125 186.682C75.6089 187.125 75.6915 187.961 74.6799 187.535C74.8657 189.027 76.9714 189.7 76.5379 191.241C76.2902 191.372 76.4553 190.552 75.7947 190.651C76.6824 191.602 75.0928 192.487 75.7328 193.979C75.6915 193.717 75.258 193.668 75.0515 193.635C75.3818 193.602 75.7741 194.242 76.1044 194.619C75.9392 194.848 75.8566 194.324 75.6089 194.471C75.1754 195.963 75.6709 197.242 76.2695 198.538C76.8063 199.833 77.4669 201.145 77.4049 202.637C77.4462 201.784 76.1044 201.456 75.5676 201.44L75.5263 202.26C76.1869 202.588 76.187 203.211 76.6618 203.736C76.414 203.801 76.125 204.047 75.8154 203.768C74.3703 205.343 78.1068 206.392 77.2811 208.393L74.7419 205.851L73.7716 206.408L72.6156 205.326C71.8311 205.917 73.5033 206.523 72.4917 206.556C72.2233 206.408 72.3266 206.097 71.7898 206.064C71.3563 206.638 72.0995 206.72 72.2853 207.179C70.2828 205.9 70.5099 203.654 69.9938 202.408C69.8287 202.211 70.4893 202.571 70.6957 202.621C70.6338 202.112 71.2737 201.817 70.9228 201.194C70.0557 200.801 70.2828 201.489 70.1796 201.801C69.4158 201.752 69.4777 201.588 69.3539 201.243C70.3654 201.178 69.7255 199.358 70.9641 198.899C70.6131 197.046 68.3836 199.226 68.7552 197.423L69.8906 196.865C68.941 195.832 68.1565 194.52 68.301 193.34L68.363 193.586C68.8584 193.733 69.1474 193.438 69.3951 193.307C69.808 192.389 68.363 191.651 69.4571 191.061C68.1772 190.11 67.1037 188.47 66.3192 187.371C67.8056 186.945 67.7849 188.781 68.7758 189.208L68.652 188.142C68.7552 188.798 69.3539 189.011 70.2622 189.355C70.448 188.404 69.0648 188.175 68.59 187.322C69.0029 187.355 69.2506 187.224 69.2094 186.814L68.1978 186.781C68.1978 186.781 68.3423 186.715 68.4043 186.584L67.5991 185.076C67.2069 185.436 66.3399 185.535 66.3605 185.928C66.9385 185.731 67.083 186.076 67.1243 186.469C66.4224 186.174 66.6082 186.912 66.0715 186.928C66.0096 186.125 65.7618 185.141 65.4109 184.649L66.3192 184.403C66.4431 183.616 65.8031 182.846 65.9889 182.304L66.505 182.419C66.6495 181.468 65.927 180.615 66.6908 179.697C65.4935 178.976 64.42 178.041 63.202 177.5C61.9634 177.287 64.2548 174.926 62.3969 174.204C62.5208 174.122 63.4085 174.729 63.9246 174.991C63.9865 174.352 62.4176 174.04 63.6149 173.696C63.4704 175.139 64.5851 173.499 65.0806 174.073C64.9154 173.417 64.5645 172.761 64.0484 172.499C64.2755 173.548 62.2524 172.351 63.0162 173.335C61.7982 172.646 61.1583 171.597 61.3441 170.564C61.8808 170.498 62.1079 170.351 62.2524 169.957L61.406 169.777C61.4473 169.301 62.5208 170.531 62.6034 169.58C61.0551 168.809 62.7272 166.612 60.1674 166.547C60.9725 165.678 61.4679 167.776 62.3969 166.514C63.4291 167.022 62.6034 168.055 63.8833 168.088C63.3878 167.514 64.8742 167.711 64.7916 167.301L63.8833 166.711V166.875C62.4588 165.874 62.5621 163.939 62.0047 162.464C60.477 161.381 58.4746 160.791 58.2269 159.25C59.0526 159.578 58.6191 157.872 60.1674 158.627C60.6216 157.823 59.6926 157.249 59.1558 157.315C59.1352 157.971 59.032 157.561 58.9081 158.118C58.1649 157.872 57.9998 157.053 58.3301 156.659C58.3301 156.823 58.4333 156.741 58.6397 156.741C58.8875 155.938 57.8966 156.495 57.5043 156.003C58.3714 155.692 57.4424 154.773 57.7934 154.216L56.3276 153.707C57.2773 153.953 56.4722 152.97 57.2153 152.74C56.4928 152.33 55.3161 152.068 55.3574 151.248C55.8735 151.494 55.8115 150.428 56.6786 150.28C57.1534 148.805 53.7678 148.46 54.6761 146.985C54.8826 146.985 55.5225 147.149 55.6464 146.755C55.3367 146.509 55.2955 145.968 55.1303 145.673C55.0477 145.525 54.9239 145.443 54.6968 145.476C53.7265 145.083 52.7769 144.935 51.8067 144C50.8364 144.23 51.4557 145.066 51.8686 145.394L52.9214 145.574C51.5176 146.132 53.4169 146.493 52.9834 146.804C51.0841 146.443 51.0428 144.558 49.701 143.623C48.5037 144.509 48.6482 146.001 49.1436 147.247L49.5978 146.591L49.7836 147.247L50.6712 146.443C50.6506 147.099 51.0428 147.608 51.1461 148.182C50.9603 147.526 52.2608 147.034 52.137 147.46C51.3525 148.362 52.9627 148.132 53.0453 148.706C53.0453 148.378 52.9627 147.968 53.6027 148.149C52.6943 149.444 53.5407 149.625 52.5498 150.838C54.16 150.444 53.0453 152.068 54.4284 152.002V151.51L55.6877 152.347C54.5729 153.478 54.1188 151.756 53.5201 153.298C53.6852 154.593 55.3987 154.281 55.7909 155.265C54.7381 155.085 53.6852 154.429 53.5201 153.609L53.1691 154.183C52.5292 154.019 52.364 152.871 52.2815 152.297C53.644 153.052 52.5085 151.805 53.2724 151.248C52.3021 151.33 52.6118 151.904 51.6621 151.313C51.8479 151.969 51.9512 152.051 51.8067 152.953C51.7654 151.068 48.1114 151.855 48.5037 150.133C49.123 150.789 49.8042 149.657 50.2377 149.493C50.0313 149.165 49.6391 148.51 49.3294 148.247L48.0288 148.723C47.2031 147.886 50.0107 147.099 48.3385 146.247C47.4921 146.247 48.2972 147.231 48.0908 147.067C46.8522 145.722 48.9165 144.853 49.6184 143.377C49.1849 143.377 48.3385 143.525 47.4921 143.164C48.3385 143.164 48.6894 142.77 49.412 143.197C49.6391 142.705 48.9165 142.279 48.5037 141.934C48.2559 142.934 47.2444 141.737 46.7076 141.655C46.7283 141.164 47.554 141.672 47.8637 141.934C47.9876 141.524 49.0817 140.885 47.8018 140.852C48.6688 140.704 50.341 141.573 50.7332 142.246V141.754C51.2699 142.016 51.1667 142.098 51.1461 142.59C51.7034 142.016 52.4466 141.951 53.0866 141.967C52.9834 142.049 52.8801 141.967 52.7563 142.049C52.6324 142.459 52.9421 142.721 53.3756 142.557C54.6142 142.721 53.9743 141.918 54.4904 141.573L54.1188 141.032L49.9074 139.639C49.2675 138.868 50.0726 138.343 50.4855 137.622L49.4533 137.589C49.3913 136.835 49.5358 136.08 50.8983 136.376C50.568 136.458 50.6712 136.54 50.6712 136.703C50.8158 136.703 50.919 136.72 51.0015 136.769H51.1873C50.6712 136.031 50.3616 135.572 50.2997 135.539C52.0544 136.671 52.1163 135.343 53.9536 135.31L53.0659 134.047C52.6943 134.949 52.1989 134.178 51.8892 133.932C52.8595 133.703 51.6209 132.85 51.6621 132.342H51.8686C52.1163 131.866 51.8686 131.096 51.4557 130.587C51.1254 130.653 49.3501 130.177 48.2972 129.964C48.1321 130.964 47.616 130.456 46.9967 130.62C47.0379 130.522 46.9967 130.341 46.8728 130.325C46.5631 130.227 46.5425 130.554 46.2122 130.636C46.8934 131.588 47.2444 132.621 48.7307 132.834C49.2881 132.44 48.0082 132.391 48.3591 131.981C49.412 132.358 49.3501 133.03 49.5152 133.867L48.7514 134.26L49.3913 135.031C48.8752 134.736 48.0495 135.08 47.6779 134.227C46.9141 134.457 48.0701 135.08 47.9256 135.654L49.1023 135.769C48.4624 135.752 48.6069 136.933 47.5747 136.228L46.3567 135.015L45.6961 135.49L45.2213 134.375L45.8613 134.555C44.6846 132.834 47.9463 133.703 46.2328 132.047C44.7671 131.653 44.4781 131.046 44.5607 129.866C45.0355 130.653 45.531 129.817 46.3773 130.03C46.7696 129.128 45.5929 128.98 44.9736 128.62C45.6342 128.308 46.1916 128.095 46.2328 128.849C47.7398 128.751 45.7787 127.898 47.2857 127.636C46.7489 125.193 41.9389 126.275 43.3014 123.143L43.9414 123.176C42.8266 121.438 43.3634 120.29 42.5789 118.634L43.9207 117.125C44.2097 117.404 45.531 118.076 46.2328 117.617C44.7465 118.437 45.4277 119.06 44.7052 119.863C45.1387 119.88 45.3864 119.568 45.6135 119.421C45.6755 119.847 44.9942 120.142 45.3864 120.667C45.7167 120.601 45.9851 119.945 46.2741 120.388L45.4277 121.257C46.0883 122.208 47.8637 121.487 47.6366 122.717C46.7283 122.602 45.3658 122.307 45.0768 121.864C44.9942 122.438 44.4162 121.192 43.9827 121.766C45.4277 122.405 44.4575 122.897 45.469 123.848C45.2626 123.75 45.0149 123.75 44.8704 123.504L44.6226 125.094C45.3039 124.619 45.6961 126.242 46.7902 125.963C46.9347 124.291 46.3361 124.848 46.6251 122.946C46.976 123.438 48.2559 123.963 49.3707 124.143C49.3294 124.16 49.3088 124.192 49.2881 124.258C50.4648 124.405 50.6919 124.078 52.6324 123.848C51.0841 123.192 52.1163 122.503 51.1461 121.618C50.0519 121.552 49.8868 122.356 50.2584 122.799L49.3913 122.011L49.9074 122.126L49.8661 119.896C49.99 120.306 50.6506 120.372 51.1461 120.536C51.1461 120.241 51.3731 119.929 51.6209 119.601C50.6093 119.781 49.8868 119.831 49.8661 119.552C49.8455 118.109 50.63 117.223 51.7034 116.584C51.6622 116.535 51.6415 116.469 51.6002 116.42C50.5887 116.764 49.5565 115.633 48.4004 115.305C49.4739 115.207 48.9165 114.502 49.412 114.042C48.1321 113.96 46.4806 114.42 45.5516 115.026C46.8522 115.862 46.7902 115.436 48.4624 115.715L49.8042 117.125L48.7514 116.896C48.4417 117.715 49.8661 118.306 48.5862 118.388C47.6573 118.076 48.0701 117.355 47.1412 117.043L46.7489 117.601C45.3245 116.846 47.8843 117.01 46.8109 116.026C45.7787 116.535 46.7077 115.944 45.9025 115.551C45.2007 116.01 46.5425 117.437 44.6226 117.305C43.7143 116.83 46.4806 115.174 44.4988 114.616H44.7052C44.7465 113.501 43.6317 113.223 42.9092 112.878C43.4459 112.353 42.4963 111.78 42.3312 111.271L42.8679 111.222L42.517 110.517C43.5491 110.763 42.6202 111.37 42.8679 111.96L43.8588 111.78C42.7853 112.616 44.6639 112.911 45.6135 113.37C44.6226 112.665 45.5103 111.091 43.5079 111.091L44.4368 110.501L44.024 110.304C44.7258 109.861 45.9851 110.123 46.3154 110.812C46.0883 110.96 45.9645 111.042 45.758 111.025C46.2535 111.32 47.0792 111.534 46.976 112.37L46.3773 111.993C46.4599 112.993 46.9967 113.862 48.0495 114.108C48.2146 112.632 48.1114 111.206 47.8431 109.861C45.5103 109.681 44.1685 109.336 42.0215 109.336C41.4848 108.467 41.0306 107.238 41.6706 106.385L42.1041 106.418C42.2692 106.008 42.1041 105.663 41.8151 105.385C42.3105 104.925 42.9711 105.565 43.2395 105.253L42.3312 104.007C43.3014 104.007 43.4666 105.106 43.6111 105.614C43.5079 105.516 43.3221 105.335 43.2188 105.417C42.9092 106.057 44.7052 107.041 43.3634 107.434C43.6524 107.713 42.2486 106.926 42.3312 107.943C41.9183 108.664 43.1776 108.762 43.6111 108.795C44.1478 108.746 44.2097 107.68 44.9116 107.975C44.7671 107.467 44.0446 107.319 44.4575 106.598C44.602 107.106 45.7993 107.713 44.9942 108.057C46.1503 108.976 48.6688 108.582 48.7514 108.09C47.9669 108.287 47.4921 106.336 46.6457 107.762C45.5309 107.254 45.3658 106.155 44.602 105.434H44.8084L44.4162 104.499C44.7258 104.614 45.0149 104.893 45.5516 104.843L43.9001 103.614C44.9736 104.286 44.5194 103.089 44.891 102.695C44.0446 102.63 43.3634 102.154 42.9505 102.695C42.4344 103.319 43.4459 102.991 43.5698 103.499L42.166 102.876L42.2899 102.794L41.1545 102.449C41.0925 101.433 43.6937 102.679 42.4757 101.482L41.0306 101.777C41.0306 100.269 42.4344 98.2354 41.6293 97.2351C42.4963 97.4647 43.8382 97.4811 44.5813 97.022C44.3955 97.4975 44.54 98.3994 44.7671 99.0225C44.5194 99.17 42.9298 98.3502 43.1569 97.6287C40.8035 98.1698 44.8291 99.2848 42.4137 99.5636C41.8151 101.433 44.9323 100.711 43.7143 102.351C44.8084 102.286 44.2923 102.745 45.2626 102.728C46.976 102.122 44.9323 100.711 45.4071 99.662C45.4897 99.7439 45.6961 99.9243 45.9025 99.9571C46.1296 99.2192 45.8406 98.9569 45.3864 98.4977L45.2626 98.5633C44.1065 97.7926 46.0058 97.973 46.4186 97.4155C46.2328 97.2351 46.4599 96.5137 45.6755 96.6776L46.5838 95.6774L45.3864 95.8086C45.2419 95.3003 46.0264 95.1199 45.2419 94.71L44.1478 94.7755L43.9414 96.0873C43.5079 95.4642 42.8885 95.9889 42.5582 95.2839C43.8382 95.9889 43.095 94.6772 44.0859 94.5132L43.4046 94.0377L43.7143 94.1525C44.2098 93.6933 43.2601 93.6933 43.3427 93.2014C42.806 93.8081 42.0834 94.2508 42.9505 94.9067C42.2692 94.4312 41.4641 93.431 41.4022 93.1686C40.8861 92.6439 41.6706 92.2012 41.7325 91.6765C42.2899 92.6439 44.9736 91.0861 44.4368 93.1358C44.2304 93.1194 44.251 92.9555 44.3749 92.8735C43.0124 93.2506 44.602 94.0541 45.18 94.4476C45.9645 94.2836 46.2122 94.71 46.5631 93.9065C46.0883 94.2016 44.7052 93.3982 45.2832 92.6275H46.9967L47.0792 91.5617L47.1618 91.6601C48.2146 91.1845 46.8109 90.545 47.3889 89.7744C46.7076 89.2988 46.976 87.2492 45.2832 88.233C46.2741 87.5115 44.8497 87.036 44.5401 86.3309L43.9414 87.2656C42.5995 86.2981 43.4253 86.5441 41.4022 85.839C41.8564 85.7242 42.228 85.5111 42.7234 85.6422C42.6615 84.2157 42.9298 82.1824 41.4435 81.4445C41.4228 80.4443 43.4046 80.1655 42.4757 78.821C42.2073 78.5422 40.9067 79.1489 41.299 78.1979C41.4228 78.1323 42.6408 79.0013 42.4137 77.9847C41.0306 77.3288 42.9711 76.2138 41.7325 75.3447C42.166 74.82 41.8977 73.951 42.9505 74.0657C42.7853 74.8692 43.1156 75.9842 43.6317 76.1318C42.9918 76.0662 43.0743 76.7385 42.5376 76.181C41.877 77.4272 43.2601 76.9189 42.8266 78.0339C43.2601 78.0831 43.9207 77.4108 43.5285 77.1976C44.9529 77.0992 44.4162 79.2801 46.0264 78.2143C46.0264 77.0501 43.0537 76.9025 44.4368 75.8039C45.3452 76.1482 44.6639 76.8205 46.2122 77.2304L46.7076 76.3778L45.6342 75.853H45.8406C46.9967 74.3445 44.251 74.6232 43.4046 73.377C42.4963 74.1805 40.9274 73.3443 40.37 73.951C40.1016 73.0983 40.2461 72.4424 41.6499 72.3604C42.9505 73.9182 43.1569 72.3604 44.7258 73.7706C45.2213 73.4918 46.8315 74.0001 46.9141 73.0983C45.7993 72.1473 45.758 73.4754 45.2007 72.4916C45.3245 72.426 45.4484 72.3604 45.6548 72.3768C44.8703 71.9669 45.8613 71.8193 44.9942 71.311L45.2832 71.4258C46.0883 70.6879 44.2304 70.7371 45.1181 70.0812C44.0859 70.3763 44.2098 69.7368 43.5285 69.4089C43.1776 70.032 41.7119 70.4419 41.8976 71.6225C42.744 71.7209 43.1982 71.6061 43.6524 72.0653L43.4872 71.2946C43.6317 71.4586 43.8588 71.5733 44.0446 71.7045L43.673 72.4752C42.9918 71.5733 42.1454 72.0489 41.237 71.7045C41.5261 70.8191 40.948 71.0158 41.1545 70.4583C42.3725 70.4419 43.095 68.671 43.7762 67.638C43.7349 67.802 43.7762 67.9823 43.7762 68.0971C44.6226 68.7694 44.7465 67.5396 45.0768 67.4904L44.4162 66.9985C44.4988 67.0969 44.8084 67.2117 44.9529 66.9821C44.6639 66.2934 43.4459 66.3918 43.1569 65.7031C43.8175 65.6047 44.9116 66.1458 45.2213 65.7031C45.7993 65.5227 47.3063 64.9488 46.6251 64.047C46.3567 63.9978 46.1916 63.7518 46.0677 63.4895C46.109 63.5223 46.1296 63.5715 46.1916 63.5879L46.8728 62.9156C48.0701 63.3747 46.4186 64.0142 47.6366 64.4897H48.7307C48.772 64.8832 49.2881 65.4243 49.8868 65.6539C50.0107 65.0144 49.7216 64.8996 49.4326 64.1946C50.1139 64.0634 50.6713 64.5225 50.7538 64.5881L50.1139 64.5225C49.2881 65.4244 51.2699 65.7195 51.1667 66.7853C51.1461 66.9493 51.0428 66.8509 50.8364 66.8345C51.9718 67.6216 50.5887 68.5398 52.075 69.2941L51.4764 69.0646C51.9924 69.6057 53.1691 70.6387 54.3046 71.6717H54.7381C54.9858 71.5242 55.0064 71.9341 54.8619 72.1636C55.44 72.6884 55.9561 73.1803 56.3689 73.5902C56.6167 73.4426 56.8231 73.2459 56.8644 73.0327C56.3483 72.8851 56.6579 71.8521 55.5432 72.0653C56.1831 71.557 55.1303 70.8683 55.5432 70.5075C54.8826 71.1798 54.4284 70.1304 53.7885 70.0648C54.4904 69.8188 53.644 69.1465 54.6142 69.1629C54.8619 69.0318 53.9949 69.5073 54.6142 69.7369C55.5638 70.3436 55.2955 68.4907 56.2244 69.2613C55.44 68.2611 55.6258 66.8837 54.6349 65.8671L54.3046 66.4902C54.4078 66.0147 54.0775 64.8996 54.5523 64.7849C54.6968 65.1292 54.7174 65.5391 54.9652 65.9819C56.0593 65.9491 54.8619 64.8996 55.5225 64.8177L53.6027 63.6042V64.1782C52.9008 63.8502 53.6027 62.604 53.6646 61.7186C55.1922 62.1449 53.8297 63.0631 54.511 63.965C55.1303 64.6209 55.9148 63.4567 56.3276 64.0798C56.6579 63.8994 56.5754 63.4731 56.1831 63.2927L56.4309 63.0303C57.8346 63.5223 57.6488 64.8341 58.8875 65.6211C58.743 65.5555 58.5778 65.4899 58.4127 65.4899C57.9585 66.1786 58.0204 66.8509 58.454 67.474C58.8462 67.1133 58.5572 66.9985 58.3714 66.8017C58.7017 66.7525 58.9081 67.3592 59.3003 67.556C59.6306 66.9329 60.0848 67.392 60.2706 67.0149C60.6215 67.392 60.5596 67.7036 60.4564 68.1791C59.9609 68.4579 59.7339 68.0151 59.0733 68.1135C59.5274 68.5726 57.9379 68.9006 58.7843 69.5565C58.97 68.589 60.2706 69.7205 60.7454 70.0156L60.7867 69.8516C61.5918 70.0976 61.6537 70.3599 60.9518 70.6059C60.6009 70.2288 60.7867 69.8516 60.0022 69.9992C60.0642 70.2616 60.1261 70.5075 60.3945 70.7863L59.7958 70.5567L60.0848 71.8193C60.8073 71.9833 61.8395 72.262 62.8924 72.3768C62.2731 72.7212 62.8511 73.1147 63.1194 73.3934L62.8098 73.2787C62.273 73.869 62.8924 75.0988 63.5117 75.1644C62.9956 75.6071 59.2797 72.5736 60.1261 75.3775C60.2293 76.4597 62.1698 75.9186 62.9337 76.4925C62.9337 76.4925 62.7272 76.4761 62.6034 76.5417C62.5001 77.0172 63.2639 77.0173 63.6149 77.3944C63.8833 77.0992 63.8626 76.6893 63.553 76.5745C64.3994 76.6565 63.5736 77.5584 64.2755 77.8699C62.9543 77.4764 63.8833 78.8046 63.1814 78.493C62.4588 79.4769 63.5736 80.4115 64.5645 80.8378C63.0162 81.5757 64.8948 81.9365 64.2549 83.0187C64.2755 82.8547 64.0071 82.5923 64.1723 82.3628C63.0988 81.8381 63.7594 83.4614 62.7272 82.6251C62.913 82.8055 63.264 82.6087 63.0782 82.412C62.9337 82.0676 62.4382 81.7725 61.984 81.8873L61.1789 82.7891L60.9106 82.5103L59.7958 83.8713C60.0022 83.8877 60.25 83.7565 60.3738 83.691C59.9816 85.1995 60.8693 86.8556 60.8486 88.151C63.7594 88.1838 62.4588 91.2501 64.3374 92.152C63.491 91.9388 62.0047 91.8896 61.4267 92.1192C61.2821 91.8896 60.0642 91.5125 60.25 90.955C60.7041 90.8402 61.1376 90.1515 61.7157 90.5286C61.2202 89.0857 60.477 90.8238 59.3623 90.4631C59.8371 92.07 61.6331 92.8899 62.4382 93.8573L62.1079 93.9065L62.8511 94.628C62.9543 93.9885 64.5852 93.8901 64.131 94.7428L64.0484 94.6444C63.4291 95.1527 64.3374 96.0545 64.3374 96.7924L65.349 97.2024C65.349 97.9238 63.5942 98.1042 62.5827 98.4322C62.6033 99.58 64.131 100.105 65.1012 100.826C64.3787 101.252 64.4406 102.958 63.3878 102.154C64.2136 103.122 68.2597 102.531 66.2573 104.483L65.4522 104.106C65.8444 105.762 67.6611 107.992 67.0211 108.828C64.2755 108.467 64.6677 111.173 62.1285 111.747C62.7066 111.599 62.9956 112.206 63.3465 112.271C63.0575 112.435 62.8098 112.698 63.3878 112.895C63.8007 112.189 66.1541 113.075 64.8948 111.944C66.7734 112.386 68.301 113.042 68.4455 114.42L67.3721 114.518L67.5166 113.403C66.7321 113.6 66.7115 113.026 66.2986 112.845C66.0302 114.928 63.7181 112.845 64.2136 114.911C64.9361 115.043 64.6264 114.944 64.998 115.453C64.9155 115.207 64.1723 115.239 64.2342 115.649L65.1632 115.944C63.491 116.863 63.78 114.879 62.624 115.633C61.6331 114.928 60.9518 113.583 59.61 113.977C59.3416 115.354 62.3969 114.879 62.0047 116.322L61.4473 116.535C61.9221 116.978 62.8924 116.945 63.5117 117.141C63.1814 117.207 62.9543 117.355 62.913 117.666C64.4406 118.322 64.8122 118.83 66.4637 119.388C64.9774 117.535 67.1863 117.568 65.8238 115.633C66.3192 115.912 66.9179 117.305 68.4249 117.223L67.3514 117.322C68.0327 117.929 68.7139 118.519 68.5075 119.388L67.8056 118.945C68.7552 119.962 66.505 120.978 68.4662 121.634C68.5075 121.323 68.4249 121.077 68.2185 120.896C68.8171 121.405 68.8378 122.126 68.7758 122.766L70.7989 123.815C70.2622 123.864 70.386 124.684 69.4571 124.405C68.8171 125.422 70.5099 125.652 70.8815 126.144C69.9525 127.226 70.2003 125.406 68.6933 125.504C68.4662 126.865 69.2094 128.177 70.3448 128.767C70.5099 128.472 70.6544 128.324 70.9228 128.292C70.5925 128.374 70.7989 128.882 70.8402 129.177L71.5834 129.275C71.2118 129.817 70.7989 129.817 70.1796 129.472C70.1383 129.948 71.604 130.309 70.7163 130.932C69.6842 130.259 70.2209 129.161 69.6016 128.816C70.6338 130.358 67.8262 130.768 69.2094 132.752C68.8791 132.834 68.1565 132.571 68.2391 132.965C68.7139 133.867 69.7254 132.998 70.5718 133.178C69.9732 132.522 70.3241 132.129 71.1086 131.588L71.7279 131.702C71.4389 131.768 71.5215 132.227 71.2737 132.407L72.4504 132.358C71.1705 132.489 70.3654 133.358 70.9641 133.85C71.7485 133.145 71.7485 133.309 73.1523 132.932C74.7006 133.522 72.0169 134.031 73.6684 134.703C73.2349 134.703 72.7601 133.965 72.5949 134.687C72.6775 135.244 73.6478 135.031 74.0606 135.359C72.9046 135.097 72.1408 135.326 70.7783 135.064C70.4067 134.096 70.6957 134.67 70.0145 133.768L69.3126 134.719C68.941 133.9 67.9501 134.293 67.5372 134.277C66.794 135.884 69.3952 135.113 69.3539 136.097C70.2003 136.441 69.2919 135.211 70.2209 135.785C70.2828 136.671 70.9641 135.884 71.666 136.785L71.1499 136.703C70.5925 137.097 71.4389 137.277 71.6247 137.605C72.0376 137.933 75.196 136.605 75.6502 138.146C75.3405 138.114 75.1341 138.114 75.0103 138.146L65.7412 137.999C66.1541 139.589 66.3605 141.442 66.2367 143.377C64.6058 144.082 64.4819 142.295 63.7181 142.525L63.8626 141.623C64.6058 141.557 64.5439 143.344 65.638 142.377C64.7297 140.983 65.4109 140.18 63.553 138.999C61.9221 139.704 64.3168 140.803 63.202 141.934C63.202 141.524 62.9543 141.229 62.624 140.967C62.624 141.869 62.6033 142.82 62.5827 143.836L63.0575 143.984C63.0782 143.295 63.1194 142.82 63.1607 142.738C63.2227 143.64 64.3787 144.213 65.6586 144.082V143.918L66.1334 144.164L66.0509 144.82L66.1128 144.771ZM75.547 202.26C75.4231 202.211 75.2786 202.162 75.0928 202.129C75.2786 202.162 75.4025 202.129 75.547 202.26ZM57.7521 128.226C57.814 129.423 57.7314 130.669 57.814 131.817C59.899 129.407 61.5092 127.734 62.1905 131.128L62.4176 131.325C62.624 130.833 62.5001 130.079 62.1698 129.374C61.1583 128.915 57.4424 127.472 57.1534 127.537C56.4928 127.833 57.3185 128.046 57.1947 128.439L57.7521 128.21V128.226ZM61.8189 126.832C61.9634 126.127 61.4267 126.357 60.9106 126.324L61.2409 126.996C61.3441 126.898 61.5092 126.832 61.8189 126.832ZM60.4151 126.422C60.4151 126.422 60.4151 126.57 60.3532 126.603L60.4151 126.422ZM62.7066 139.425C62.7066 139.425 62.6859 139.393 62.6653 139.36C62.6653 139.524 62.6653 139.688 62.6653 139.852C62.7272 139.77 62.7685 139.639 62.7066 139.425ZM63.6149 137.884H62.6446C62.6446 138.015 62.6446 138.179 62.6446 138.327C63.0575 138.212 63.4085 138.097 63.5943 137.884H63.6149ZM65.6173 133.129C64.4406 133.014 64.1929 132.112 62.8924 132.243C62.5414 132.243 62.4795 132.44 62.4176 132.67C62.4382 132.916 62.4588 133.178 62.5001 133.457C62.6859 133.44 62.8717 133.457 63.0575 133.539C63.1607 133.244 63.4291 133.03 64.2342 133.014C62.6859 133.949 65.5967 133.457 65.3283 134.26C66.2779 134.359 66.0302 133.309 65.6173 133.129ZM53.5201 75.7055C53.6233 75.6727 53.9123 75.5907 54.2633 75.4595L54.9652 75.9514C54.7794 76.9189 52.9834 77.8043 54.6761 78.5586C54.3252 78.9849 53.4788 79.2473 52.8182 79.5097C52.8595 79.3129 52.9008 79.1161 52.9834 78.9685C50.4029 76.7057 55.3367 77.5584 53.5201 75.7219V75.7055ZM52.364 86.8064C52.2815 86.7081 52.0544 86.6917 52.0544 86.6917C54.6555 88.6593 55.5638 90.3483 55.6051 91.4961C56.5134 91.2009 57.1328 90.1187 57.4631 89.6104L58.5778 89.9547L57.7727 90.2827L58.8255 90.955C59.5274 90.6926 59.3003 90.1023 59.8164 89.6596C59.61 89.6432 58.2062 88.4462 57.5043 88.1182L56.885 89.2005C57.1534 88.9053 56.7405 87.5443 56.4102 87.0196C55.8735 87.0524 55.151 88.0526 56.3276 88.0854C55.5432 88.2494 55.4193 87.1672 54.6349 87.9215C53.7059 87.1672 54.2633 85.8226 54.5936 85.1995L55.9148 85.0027C56.3689 84.3141 54.2426 84.6748 54.9445 83.8385C55.3161 84.7732 56.3896 83.5762 56.5754 84.3305C57.0502 84.0517 57.9998 84.2321 57.814 83.4778C55.9767 82.9695 58.8462 82.5923 57.2153 82.1004C57.7314 81.6577 58.3301 82.4612 58.4746 81.6577C57.4424 80.8214 56.7818 80.9034 55.4813 80.9362C55.2129 81.8053 57.2566 81.7725 57.0089 82.494L54.6555 81.2642C54.3665 81.5429 54.3458 81.7233 54.4697 81.8873C54.3046 81.6249 53.9536 81.4117 53.4788 81.2314C53.2104 81.133 52.9834 81.0346 52.7976 80.9526C52.8595 81.7397 52.9008 82.4284 52.364 82.5923L51.7241 82.5267C51.1873 82.8383 51.6828 83.2646 52.1576 83.445C52.3021 84.1501 53.2517 84.7896 52.4673 84.9863L51.8686 84.7568C52.137 85.6094 52.2402 85.6914 52.364 86.79V86.8064ZM54.8619 115.223C57.0708 114.452 58.97 113.665 58.1856 111.288L58.3714 111.468C59.61 110.107 56.1006 109.271 57.4631 107.631C58.4333 108.271 58.3507 108.238 60.4564 108.844L59.6926 108.139C60.9725 108.238 60.2087 107.533 60.188 106.959L61.7363 107.319C61.3647 107.697 61.3441 108.598 61.6744 108.533C61.4886 108.353 59.9816 109.877 60.539 110.566C61.5299 110.386 60.8693 108.877 62.624 109.402C61.8395 108.861 62.8304 108.68 62.3763 108.09C63.1607 108.631 63.7594 108.107 64.5645 108.484L64.0691 107.483C64.3994 107.418 65.06 108.926 66.1541 107.959C65.5554 107.598 66.0509 106.418 64.9567 106.5L65.287 106.45C65.4109 105.647 63.6975 106.254 64.1929 105.237C63.6562 105.27 63.3052 105.499 63.4497 105.827C63.7388 106.09 64.4819 106.073 64.7297 106.647C63.9246 106.992 64.7297 105.909 63.3672 106.467C62.6859 106.746 64.2342 107.992 62.5414 107.713L62.6446 106.91C61.5505 106.992 61.5299 106.418 60.6628 106.516C60.188 106.073 61.3441 105.499 60.3325 105.106C59.61 104.975 58.3507 105.45 58.8049 104.581C60.3119 103.794 59.7339 101.958 59.4036 101.285L58.6191 100.728C57.9585 100.843 58.8668 101.892 57.9585 101.58L57.5663 100.646L57.9998 100.679C58.0411 100.351 57.5663 100.072 57.2773 99.7931C58.103 100.023 57.8759 100.744 58.9907 100.515C59.1558 100.039 59.5687 99.9407 59.2797 99.5472C59.3623 99.6292 59.4861 99.6947 59.6513 99.6783C60.0229 98.7273 58.2682 98.9077 57.8759 98.7109C56.2864 97.9238 56.6373 99.7439 55.4606 99.7275L54.4904 97.104C54.8826 97.3007 55.2748 97.4975 55.729 97.3827C56.1625 96.6776 56.596 97.3007 56.4309 96.3825C54.9032 96.5793 55.3161 95.3003 54.3458 94.71C54.9445 94.3492 55.0684 94.2836 55.1716 94.9559C56.1625 94.8083 55.667 93.9393 55.729 93.6113C55.4606 93.4474 55.2748 93.1358 55.0271 92.9554C54.5523 93.267 53.9123 93.2014 53.4169 92.6439H53.2104C53.0453 93.5949 52.137 95.1527 53.2517 95.6774L52.7356 95.5462C52.0131 96.7104 54.8413 97.7926 53.004 98.4485C52.2402 98.4485 52.8595 98.6781 51.786 98.7601L52.7356 99.498L52.2195 99.3668L52.653 100.728H52.4466C53.5201 101.285 54.3871 101.728 55.089 102.072C55.5638 102.04 55.7083 101.974 56.0799 102.171C56.3483 102.368 56.4102 102.531 56.3689 102.679C56.2864 103.023 55.6258 103.319 55.4193 103.745L55.1097 102.482C54.3046 102.449 53.4788 102.63 53.004 103.302C52.9421 103.04 52.3021 102.991 52.2402 103.319C52.4466 103.319 52.8801 104.106 53.4582 103.745C53.933 104.925 52.0957 107.106 53.9123 108.812C52.7976 107.565 53.004 109.976 52.4466 108.533C51.3319 109.681 53.8504 109.304 53.8091 110.369C53.3549 110.501 53.7885 109.795 52.8388 109.648C52.6118 111.452 55.3574 112.386 55.2748 114.108L54.2839 114.288C54.4697 114.6 54.6761 114.928 54.8826 115.289L54.8619 115.223ZM56.6786 118.404C56.8437 118.716 57.0295 119.027 57.1947 119.355V119.257L58.1856 120.126C58.4746 119.486 59.4861 118.962 60.1467 119.732C59.7132 119.716 59.2591 120.011 58.97 119.749C58.4746 120.372 58.1237 121.667 59.5687 121.175C57.9585 120.273 61.4473 120.7 60.2293 119.978C61.2821 120.306 60.9312 120.814 61.4473 121.175C60.539 120.831 59.61 121.503 59.3416 122.208C59.6513 122.471 59.5687 123.274 60.0642 123.717C60.9518 123.438 61.5505 123.782 61.6331 122.979C61.9221 123.241 62.2111 123.651 61.8395 124.209C61.6331 124.028 61.4679 123.7 61.1376 123.766C60.3532 124.192 60.477 124.569 60.1467 124.815L60.3945 125.291C60.3945 125.291 60.5596 125.176 60.6835 125.127L61.6124 125.57C61.0344 124.897 61.9634 125.176 62.5001 125.111C61.4267 125.225 62.4588 125.602 62.5414 125.848L63.5736 125.16C64.1929 125.34 62.9337 126.193 64.0278 125.914C64.2549 124.701 63.9658 124.291 63.4291 123.29L62.624 123.815C61.757 122.717 63.9865 122.897 63.6768 121.602C62.7685 121.159 63.264 119.634 61.6331 119.798C62.1492 119.896 62.913 118.814 62.1079 118.437C60.539 118.109 60.0642 116.617 59.4655 117.141C59.5274 117.551 60.4358 118.011 59.5274 118.453L59.0733 117.699L58.3714 118.322C58.6191 118.011 57.8346 118.142 56.6579 118.388L56.6786 118.404Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.0195 63.9979C48.6272 63.7847 48.6479 63.2108 47.8428 63.3748C48.7098 63.3092 48.0699 64.3914 49.0195 63.9979Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.824 63.2608C49.6176 63.228 49.2873 63.2772 49.2253 63.0312L49.5144 63.7199L49.824 63.2608Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.749 62.2109C55.0677 61.883 54.6755 61.6698 54.6755 61.0959C56.8018 60.7679 55.3568 61.9977 57.3799 62.1453C57.4831 61.0795 55.5839 60.8663 55.3361 60.0137C54.4897 60.4892 54.1181 62.2601 55.749 62.2109Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.4943 62.5224L57.9576 61.9648L57.8337 62.0304L58.3705 62.5879L58.4943 62.5224Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.0718 76.2617C40.4112 76.3601 41.0925 76.6881 41.2783 76.8684C41.2989 76.7045 41.464 76.4749 41.0718 76.2617Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.1577 189.879L62.128 194.011C61.8596 192.814 61.6945 191.715 61.1577 189.879Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.0368 90.8254C46.273 89.6776 45.055 89.2185 44.6215 88.0215C43.4448 89.7268 46.9749 90.0056 45.7569 91.4485L47.0575 90.8254H47.0368Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.6492 90.7912C42.8878 90.496 43.2387 91.611 44.1264 91.3651C43.7342 90.578 42.8878 91.0699 42.9084 90.332L41.6492 90.7912Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.8389 83.9062L62.5408 84.2185L62.2724 83.9391L61.8389 83.9062Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.4252 96.2046L43.1362 96.0898L42.8059 96.7293L43.4252 96.2046Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.5854 84.1672L64.8124 83.626L64.1931 83.3965L64.5854 84.1672Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.3721 89.3646L57.918 88.9219C58.0005 89.0039 57.567 89.7089 58.3721 89.3646Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.3831 99.9406L43.9404 100.498L44.0437 100.433L43.4863 99.875L43.3831 99.9406Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.2727 92.8398C63.2017 92.4299 62.6443 93.7744 63.4288 93.0202C63.2017 92.4299 62.7269 92.7086 62.2727 92.8398Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.6372 100.385C56.6372 100.385 56.6994 100.55 56.803 100.616C56.7409 100.517 56.6787 100.451 56.6372 100.385Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.6367 100.384C56.5954 100.138 56.9463 99.8429 56.6367 99.6953C56.2444 100.056 56.4302 100.154 56.6367 100.384Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.2559 103.27L57.2972 103.041C57.8133 103.238 57.7307 103.123 57.2972 102.959C57.2352 102.713 56.9256 102.762 56.7191 102.746C56.5953 102.713 56.4714 102.664 56.3269 102.631C56.4714 102.696 56.5953 102.746 56.6985 102.795C56.7398 103.172 56.8224 103.402 57.2559 103.27Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.7225 115.781C42.9289 114.879 43.0734 114.633 43.8166 114.6C43.9198 113.748 42.6399 114.01 42.2683 113.551C42.5573 114.469 42.2683 114.699 42.7225 115.781Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.2684 113.551C42.2273 113.453 42.2067 113.354 42.1655 113.223C42.1655 113.354 42.2067 113.453 42.2684 113.551Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.9761 99.1875L66.2147 99.5984L66.0289 99.434L64.9761 99.1875Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.558 117.127C42.558 116.963 42.496 116.7 42.7438 116.553C41.9799 116.586 42.558 117.291 42.558 117.127Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.6578 112.257C57.1119 112.125 56.7404 111.601 56.8849 111.371C56.8436 111.699 55.5017 112.093 56.6578 112.257Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.088 119.275C46.088 119.111 46.5628 118.799 47.2027 118.848C46.7899 118.651 45.4274 118.487 46.088 119.275Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.7816 113.811L57.0087 113.663L56.4307 113.139L56.7816 113.811Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.4755 110.615C66.4846 110.058 65.4937 111.862 64.5441 110.829C63.8422 112.354 65.7827 110.583 65.8033 111.665C66.0098 111.009 67.0832 110.599 67.4548 110.615H67.4755Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.8228 111.648C65.7818 111.747 65.7818 111.846 65.8023 111.944C65.8228 111.829 65.8228 111.731 65.8228 111.648Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.7985 121.372C61.6952 121.29 61.5714 121.241 61.4475 121.191C61.5301 121.257 61.6333 121.323 61.7985 121.372Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.1234 114.943L65.6165 114.123C66.6074 114.664 66.8344 116.304 68.1556 116.042C68.3414 115.484 67.8666 114.894 67.2473 114.697L67.1234 114.927V114.943Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.1799 129.13L44.5606 128.77L44.5193 129.327C44.6844 129.147 45.7166 129.294 45.1799 129.13Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.5173 129.44V129.324C44.5173 129.324 44.5003 129.39 44.5173 129.44Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.807 119.618C60.8483 119.29 60.7657 119.044 60.4767 118.781C60.2496 118.929 60.167 119.749 60.807 119.618Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.761 131.915L47.3894 131.227L47.6578 131.997L47.761 131.915Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.2533 135.572L46.0469 135.72L46.6455 136.245L46.8726 136.081L46.2533 135.572Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.376 127.653C71.4173 127.177 70.158 126.981 69.9309 127.128L70.1786 128.014C71.1695 127.636 70.0961 127.768 70.2406 127.21L71.376 127.653Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.2004 159.38C53.4572 159.281 53.6224 158.248 54.2623 158.084C54.572 158.166 54.9849 158.658 55.3152 158.265L53.4159 157.757C54.221 156.543 55.8519 158.183 56.5744 158.609C56.5331 157.527 55.3358 157.379 55.0468 156.264C54.9849 156.625 54.6133 156.904 54.283 157.133C53.1063 157.363 53.354 156.232 53.065 155.494C52.6728 156.051 52.1567 155.854 51.5993 155.576C51.5374 155.526 51.4754 155.494 51.3722 155.477L51.1658 155.379V155.461C51.0626 155.461 50.8974 155.526 50.691 155.625C51.2071 156.199 50.3194 156.838 50.402 157.248C52.2392 156.543 51.2071 158.56 51.9296 158.954L52.2599 159.511L52.3218 159.724C52.1154 159.806 51.8264 159.79 51.3722 159.511C51.8264 159.724 51.9296 160.675 52.5283 160.495L53.0856 162.61C53.0856 162.61 52.9411 162.774 52.8173 162.84C52.9618 162.889 53.065 162.889 53.1476 162.872C53.932 165.922 54.6752 168.939 55.3771 171.957C55.439 171.481 55.79 171.038 55.8932 170.546C57.3383 171.055 55.9551 169.759 57.235 169.792C57.7511 170.038 57.7098 170.514 57.4828 170.842C58.1227 170.858 58.5975 170.399 59.3407 170.333C59.8568 169.071 56.8634 169.3 57.0492 168.12C57.7924 168.054 58.5356 168.316 58.2672 167.595L58.4737 167.759C57.3795 166.693 59.9394 166.595 57.7305 166.136L58.804 166.004C57.875 165.578 57.6066 164.529 57.3176 163.971H57.524C55.8932 162.495 57.0492 163.086 56.079 161.298L57.5447 161.971C57.8956 161.249 56.5125 161.315 56.5331 160.823C56.7396 160.823 57.5034 160.593 57.8131 161.003L55.3565 159.036C54.4068 158.626 54.5926 159.265 54.1591 159.429L54.2004 159.38Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.0658 156.252C55.0861 156.12 55.0658 155.972 55.0049 155.824C55.0049 155.989 55.0455 156.12 55.0658 156.252Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.5637 172.565L55.4182 171.926C55.3974 172.123 55.4182 172.336 55.5637 172.565Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M51.9103 153.362C51.4561 153.854 51.0639 153.198 50.6304 153.182L51.002 154.592C51.4148 154.526 51.9103 154.592 52.2819 154.493L51.9103 153.346V153.362Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.3401 155.134C50.6291 155.134 50.9388 155.249 51.2278 155.38L51.0213 154.609C50.7117 154.659 50.464 154.79 50.3607 155.15L50.3401 155.134Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.2434 151.463L72.3466 151.709L72.7595 152.037L72.2434 151.463Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.4388 155.708C71.9962 155.298 71.3768 154.807 71.1704 154.643C71.3562 155.298 71.0465 155.053 71.4388 155.708Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.9197 153.822L78.4358 154.413L78.539 154.331L77.9197 153.822Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.7246 176.73L60.8493 177.026C60.8285 176.895 60.7869 176.796 60.7246 176.73Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.6391 171.548C57.7308 173.188 57.4418 170.712 55.9761 171.384L56.6573 172.122H56.2238L56.5541 173.057C57.2147 172.762 57.2353 172.614 57.9992 172.549C57.9785 173.893 57.1941 173.073 56.4509 174.155L56.8844 175.582L56.6367 175.5C56.678 175.615 56.7812 175.664 56.905 175.697L58.2675 180.501C59.0314 181.321 59.5268 179.862 60.7448 180.403C60.559 179.37 61.0751 177.747 59.5681 177.829C59.7745 177.829 60.2081 177.861 60.3526 177.632L59.0107 177.173L58.7217 177.779C57.4005 177.32 57.3179 175.369 57.9785 174.91C58.6185 175.959 60.0016 175.238 59.4649 176.861C59.8365 176.746 60.4351 176.386 60.7035 176.713C59.9397 174.959 60.2493 173.237 58.6185 171.532L58.6391 171.548Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.3155 189.52H62.1694C62.1694 189.52 62.2946 189.553 62.3155 189.52Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.4168 188.913L60.8479 188.143L61.1163 189.487L62.1485 189.52C61.8801 189.422 61.3021 188.979 61.6737 188.766L62.3962 188.913H62.4168Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.8358 187.206C60.3519 187.862 61.5699 187.747 62.0654 187.321C62.7053 187.927 60.8061 187.747 62.1273 188.108C62.9943 188.026 62.3957 187.271 62.2099 187.107L59.8152 187.206H59.8358Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.7744 181.992L60.2905 182.139L60.3524 181.631L59.7744 181.992Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.2902 182.141L60.2283 182.633C60.5999 182.568 60.9508 182.502 61.1985 182.387L60.2902 182.125V182.141Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.0843 183.93C60.0225 184.143 59.9814 184.372 60.0019 184.651L60.0843 183.93Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.3118 183.354L60.1466 183.386L60.0847 183.927C60.1466 183.714 60.2292 183.534 60.3118 183.354Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.2281 182.632C59.4024 182.796 58.5147 182.976 58.8656 183.632L60.1455 183.37L60.2281 182.615V182.632Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.8174 158.693L78.4367 159.202L78.5399 159.12L77.9206 158.611L77.8174 158.693Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.8594 162.168C78.0452 162.283 78.231 162.382 78.3961 162.447C78.2723 162.316 78.1071 162.201 77.8594 162.168Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M84.1745 163.857C83.4933 164.677 82.8327 163.054 82.7501 164.399C81.9863 164.628 80.8509 164.169 81.0986 163.497C81.8418 163.431 81.6973 164.021 82.3785 163.529C81.4289 163.251 81.9863 163.021 80.8922 163.316C80.0458 162.742 79.22 162.792 78.3943 162.447C79.0755 163.185 78.3324 165.054 79.9839 165.891C81.4496 166.268 83.2043 165.678 85.1448 165.399C85.5783 165.251 85.4545 163.726 84.1745 163.841V163.857Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M85.8486 162.463C85.8486 162.135 85.7661 162.037 85.5596 161.873C84.9197 162.021 85.766 162.217 85.8486 162.463Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.8635 171.843C73.1525 171.876 73.6067 172.401 74.0609 172.22L73.5448 171.4C73.5448 171.614 73.2145 171.728 72.8635 171.86V171.843Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.3176 171.023L73.5447 171.385C73.5447 171.286 73.4828 171.171 73.3176 171.023Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.6985 171.91L72.8643 171.844C72.8643 171.844 72.7399 171.844 72.6985 171.91Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.8775 185.961C59.3407 185.994 59.6917 186.338 59.8775 186.502C59.8981 186.354 60.0633 186.125 59.8775 185.961Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.9758 199.555L62.5422 199.883C62.79 199.768 62.9345 199.719 62.9758 199.555Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.5908 204.918C77.6945 204.918 77.7774 204.967 77.8603 205C77.7981 204.967 77.7152 204.934 77.5908 204.918Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.8588 205.001C78.2923 205.263 77.5491 205.985 78.2097 206.263L78.0033 206.214L78.3749 206.722C78.3336 206.247 78.4781 205.263 77.8381 204.984L77.8588 205.001Z\",\n    fill: \"#3F3834\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M164.025 92.6925C163.983 93.0697 164.376 93.2336 164.582 93.3156L165.284 89.0195C164.809 89.1015 164.025 90.2821 163.88 89.4295C163.302 89.741 163.55 90.9052 164.149 91.1348L163.509 90.7413C164.231 91.8235 162.353 92.3154 161.94 91.6103V91.6923L164.912 94.8078C165.284 93.8239 163.86 93.9059 164.025 92.6925Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.044 180.565C146.002 179.991 145.837 179.909 145.651 179.942C145.734 180.155 145.858 180.368 146.044 180.565Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.614 95.543L166.543 96.5268C166.316 96.1497 165.965 95.8053 165.614 95.543Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.214 87.8374C150.214 87.8374 150.11 87.821 150.028 87.8374L150.523 88.2801C150.42 88.1161 150.317 87.9685 150.214 87.8374Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.254 115.482C166.254 115.581 166.254 115.663 166.274 115.778C166.274 115.68 166.274 115.581 166.254 115.482Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.024 75.5723L146.746 77.5891C146.292 77.2776 146.292 78.2122 145.776 77.7531C145.838 77.9007 145.92 78.6058 146.189 78.4418L146.23 78.0483C147.489 79.2125 148.15 78.655 148.955 80.4423C149.987 79.4912 149.285 78.9665 148.707 78.3434C148.645 78.1466 148.625 77.9827 148.583 77.8187L146.849 76.0314L146.003 75.5723H146.024Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M143.071 153.066L142.968 153.033C142.968 153.033 143.03 153.066 143.071 153.066Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M142.514 152.903L142.947 153.034C142.741 152.903 142.596 152.492 142.514 152.903Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M164.726 95.1338C164.994 95.183 165.283 95.3306 165.593 95.5438L164.891 94.8223C164.85 94.9043 164.788 95.019 164.726 95.1338Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M161.857 93.3288L161.919 91.7055L161.279 91.0332C161.444 91.6727 161.527 92.427 161.857 93.3288Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M167.534 113.041C167.163 116.402 165.986 112.04 165.325 113.516C165.367 114.467 166.11 114.877 166.254 115.484C166.048 112.762 168.835 116.14 168.876 113.418C170.259 113.959 170.115 115.517 169.557 116.386C167.988 117.255 168.69 115.369 167.369 114.992C167.41 116.091 167.699 115.927 168.381 116.468C167.761 118.107 169.475 120.141 167.348 120.928C167.431 122.174 168.112 122.174 168.731 122.961C170.197 123.273 169.846 121.239 171.085 120.928C170.94 121.01 170.651 121.157 170.466 121.092L170.961 120.075C170.259 121.01 169.495 119.764 169.475 119.222C169.516 118.829 169.578 118.058 169.97 118.206L170.177 118.829C170.775 118.124 169.392 117.042 170.342 116.336C170.693 116.336 170.796 116.648 170.982 116.714C170.115 115.697 170.342 114.844 169.846 113.434L171.188 114.369C169.743 113.123 170.631 110.778 171.787 109.204C171.498 109.368 171.271 109.679 171.023 109.45C170.837 108.433 171.993 107.81 172.674 108.351C171.622 107.252 174.347 104.826 172.984 103.35L166.502 96.5449C166.646 96.7909 166.77 97.0532 166.791 97.2992C165.408 97.7091 165.511 98.0043 164.438 96.9221C164.974 97.9387 166.068 97.6927 165.883 99.1029C165.325 98.4798 163.86 98.1846 163.467 99.5128C164.169 103.022 167.472 105.645 168.814 109.007C167.802 109.007 167.637 111.516 167.204 112.68C166.213 112.106 166.068 111.171 166.006 110.237C165.841 110.811 165.635 111.811 165.449 112.532L167.493 113.073L167.534 113.041Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.552 104.859C165.449 104.942 165.386 105.008 165.324 105.107C165.407 105.074 165.49 104.991 165.552 104.859Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.109 109.925C166.109 109.925 166.048 109.925 166.006 109.908V110.204C166.068 110.105 166.089 109.99 166.109 109.925Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.332 95.6739C162.084 95.4443 162.022 95.2803 161.774 95.0508C161.857 95.182 161.898 95.3459 161.96 95.5099C162.063 95.6739 162.187 95.7559 162.332 95.6739Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M164.209 95.183L164.602 95.3309C164.602 95.3309 164.684 95.1994 164.726 95.1172C164.498 95.0679 164.313 95.0679 164.209 95.183Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M156.22 124.748L156.385 125.093C156.385 124.896 156.323 124.814 156.22 124.748Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.18 116.565C165.283 115.401 163.714 116.253 164.003 114.613L163.818 115.089C163.384 113.843 164.045 111.81 164.23 110.399C164.788 110.629 165.097 109.629 166.006 109.891C165.965 108.907 165.923 107.94 165.056 107.349C165.469 106.792 164.788 105.808 165.325 105.087C164.705 105.349 163.632 103.808 163.983 105.71C163.941 105.546 163.797 105.628 163.735 105.48C162.744 106.579 163.983 107.185 163.818 108.218C163.157 108.76 163.095 107.12 162.785 107.677C163.074 109.006 161.423 111.58 163.508 111.728C163.508 112.662 163.012 112.744 162.579 112.974C164.54 114.679 160.659 118.286 163.487 118.598C163.487 118.057 163.694 117.188 163.219 116.335L165.159 116.565H165.18Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.144 97.627C162.144 97.627 162.104 97.792 162.083 97.858C162.104 97.792 162.124 97.7095 162.144 97.627Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M172.839 83.8848L174.614 84.5734C174.594 87.3774 173.892 88.3284 173.561 90.7552C173.272 90.9192 173.169 90.6077 173.107 90.4437C173.025 92.1654 172.199 94.6742 172.839 96.0024C172.736 96.5435 171.91 97.9045 171.456 97.2978C171.58 97.5765 171.683 97.9045 171.58 98.1996C170.898 98.1996 171.497 97.4945 170.96 97.4289C170.878 97.6585 170.733 97.7405 170.94 97.8225C170.444 97.3634 168.607 97.9865 168.978 96.1172C170.651 95.5597 168.937 97.4453 170.713 97.1994C170.836 96.5763 170.155 96.5763 169.949 96.4943C170.114 95.7072 170.547 95.7728 170.94 95.8548C170.465 95.4941 171.373 94.5758 170.63 94.0675C170.754 92.5098 171.91 94.2971 172.054 93.2804L170.423 92.5098L171.043 90.87C170.857 88.3776 167.988 90.9028 167.471 88.0169C168.318 88.476 170.031 87.525 170.609 86.2788C170.547 87.0658 171.435 88.6072 170.733 89.5582C172.323 88.2956 170.568 91.5095 172.24 90.952C171.621 90.1813 171.724 89.0007 172.281 88.1481L172.385 88.4596C172.736 87.525 171.043 86.5903 171.972 85.3441C172.034 84.6718 172.488 84.8522 172.88 85.0162C172.715 84.4259 172.447 83.9012 172.839 83.934V83.8848ZM172.963 85.3605L172.632 86.2296C172.963 86.0492 173.004 85.7213 172.963 85.3605Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.398 49.4849L157.543 48.9766C157.46 49.1733 157.419 49.3373 157.398 49.4849Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.475 37.4824L153.186 36.6953C153.186 36.9905 153.289 37.2364 153.475 37.4824Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.537 37.6134C153.537 37.6134 153.558 37.5804 153.578 37.5639L153.475 37.4648L153.537 37.6134Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.534 54.0254C151.576 54.1404 151.597 54.239 151.659 54.3705C151.659 54.2062 151.597 54.1076 151.534 54.0254Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M156.572 53.7969C156.593 53.9119 156.635 54.0434 156.697 54.1256L156.572 53.7969Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.317 71.0801L150.442 71.7852C150.463 71.4408 150.4 71.2277 150.317 71.0801Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M155.146 55.5027C155.146 55.5027 155.291 55.6017 155.374 55.6347C155.333 55.5357 155.25 55.4697 155.146 55.5027Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M172.88 73.3105L173.273 73.5735C173.107 73.3763 172.984 73.3105 172.88 73.3105Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.831 67.9805C173.831 67.9805 173.893 67.997 173.913 68.0135C173.893 67.997 173.851 67.9805 173.831 67.9805Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.05 64.0781C150.05 64.0781 149.946 64.0781 149.884 64.0946C149.926 64.2101 149.988 64.1606 150.05 64.0781Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.726 67.98C173.726 67.98 173.788 67.98 173.829 67.98C173.788 67.98 173.767 67.9635 173.726 67.98Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.81 41.6309C173.81 41.6309 173.603 41.6966 173.397 41.8116C173.5 41.8774 173.624 41.8281 173.81 41.6309Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M171.354 46.5801C171.354 46.5801 171.271 46.6296 171.208 46.6626L171.354 46.5801Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.933 68.0293C174.036 68.095 174.16 68.1772 174.284 68.3251C174.139 68.1772 174.036 68.0786 173.933 68.0293Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M169.391 33.2852L169.474 33.4502L169.557 33.3677L169.391 33.2852Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.61 30.6946C170.713 30.793 170.857 30.8585 170.961 30.9077C170.651 29.9075 171.415 28.2022 170.259 27.8906C170.238 28.2186 169.288 29.8255 168.628 29.4648C168.814 30.1535 167.843 31.0553 167.988 31.4324C168.814 30.3994 168.999 31.4161 169.288 32.1867C168.834 32.8262 168.359 31.9736 168.05 32.5147L167.947 34.0724L168.318 32.7442L169.392 33.2689C169.392 33.2689 169.33 33.187 169.309 33.1214C169.123 30.793 171.002 33.0886 170.63 30.6782L170.61 30.6946Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.961 30.9219C171.002 31.0698 171.085 31.2013 171.188 31.3163C171.188 31.1026 171.105 31.004 170.961 30.9219Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M161.67 89.9024C162.021 89.9024 162.929 88.6398 162.042 88.5742C161.877 88.9514 161.732 89.3449 161.567 89.7384L161.67 89.9024Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.277 29.0215C168.38 29.2844 168.504 29.3995 168.628 29.4652C168.586 29.3009 168.483 29.1365 168.277 29.0215Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M161.175 90.6584C161.216 90.7732 161.258 90.9043 161.299 91.0355L161.092 90.8224L160.68 91.7078C160.721 91.8226 160.742 91.9538 160.762 92.1013C160.762 92.0358 160.659 91.9865 160.576 91.9374L160.432 92.2161C161.216 93.036 161.567 94.9217 162.001 95.4956C162.269 96.2335 162.352 97.1025 162.187 97.6272C162.29 97.1353 162.228 96.463 161.691 96.6106C160.989 97.5452 159.42 97.8732 160.411 99.7425L160.576 98.7259L162.125 101.202C161.175 101.907 161.361 99.9556 160.7 99.5621C161.34 101.431 158.533 102.612 160.081 103.629C159.069 103.629 157.356 103.629 157.253 104.809C158.533 104.104 157.872 105.58 159.193 105.039C159.689 105.498 158.615 106.285 159.338 106.433L158.946 106.285C157.026 108.089 159.379 109.007 160.04 109.942C160.04 112.352 159.193 113.369 159.007 115.32C158.326 115.32 156.386 115.648 156.324 116.419C157.17 116.878 157.273 118.681 158.388 118.977C159.111 117.648 157.624 117.73 157.5 116.878C158.842 116.32 158.718 116.943 159.606 116.091C158.987 116.796 159.606 119.6 158.326 120.305L158.223 119.993C157.294 121.239 154.383 121.174 155.725 123.584L156.241 124.716C156.138 124.65 155.993 124.634 155.911 124.584C155.477 126.306 154.239 125.683 154.941 127.7C154.879 127.536 154.734 127.618 154.693 127.454C153.847 128.471 154.941 129.717 155.065 130.569C154.012 130.963 154.136 130.34 153.496 129.946C152.773 131.816 154.053 134.078 155.003 135.407L154.218 136.571C153.95 135.8 153.103 134.784 152.484 134.931C152.546 135.636 153.041 135.554 152.67 136.489C152.092 136.259 151.576 135.784 150.894 135.243C149.491 137.112 153 135.948 150.853 137.112C150.729 137.735 151.555 138.194 152.298 138.358L151.122 139.375C152.051 139.604 151.844 141.015 151.823 141.949C152.216 142.113 152.979 141.326 152.67 140.949C153.413 141.097 153.578 142.113 153.454 142.736C151.411 142.736 152.979 146.868 150.771 145.852C150.894 148.738 150.358 152.706 150.833 154.657C150.172 155.198 149.904 156.444 149.119 155.592C148.686 157.855 150.502 159.265 149.532 161.446C149.243 161.61 149.718 160.429 149.037 160.429C149.553 161.987 147.674 162.987 147.777 165.332C147.819 164.938 147.426 164.791 147.22 164.709C147.55 164.709 147.715 165.725 147.922 166.348C147.695 166.66 147.777 165.873 147.488 166.037C145.672 170.317 147.736 173.99 146.786 178.351C147.055 177.105 145.837 176.466 145.3 176.4L145.032 177.613C145.589 178.171 145.424 179.089 145.754 179.909C145.486 179.975 145.156 180.319 144.908 179.909C143.091 182.155 146.58 183.975 145.3 186.861L143.339 182.942L142.245 183.713L141.336 181.991C140.428 182.844 141.956 183.861 140.924 183.861C140.676 183.631 140.862 183.156 140.325 183.074C139.747 183.926 140.49 184.09 140.552 184.795C138.88 182.746 139.602 179.253 139.458 177.302C139.355 176.99 139.891 177.613 140.098 177.695C140.18 176.925 140.903 176.531 140.738 175.514C139.995 174.809 140.015 175.892 139.829 176.367C139.086 176.203 139.189 175.974 139.189 175.432C140.201 175.432 140.118 172.563 141.46 172.022C141.708 169.136 138.797 172.153 139.767 169.431L141.068 168.742C140.49 167.021 140.118 164.84 140.717 163.053L140.676 163.446C141.109 163.758 141.502 163.38 141.791 163.216C142.534 161.905 141.398 160.495 142.699 159.789C141.791 158.068 141.398 155.346 141.109 153.476C142.699 153.165 141.956 155.969 142.74 156.838L143.05 155.198C142.885 156.215 143.38 156.674 144.123 157.395C144.681 156.002 143.442 155.362 143.318 153.968C143.71 154.116 143.999 153.968 144.123 153.345L143.153 153.05C143.153 153.05 143.318 152.985 143.421 152.804L143.277 150.312C142.761 150.771 141.873 150.689 141.749 151.312C142.369 151.164 142.389 151.706 142.265 152.329C141.708 151.706 141.605 152.87 141.068 152.788C141.336 151.542 141.481 149.984 141.378 149.131L142.348 148.967C142.802 147.803 142.534 146.475 142.947 145.704L143.38 146.016C143.938 144.622 143.607 143.13 144.743 141.966C143.938 140.572 143.339 138.85 142.451 137.686C141.357 136.997 144.639 134.111 143.215 132.472C143.359 132.39 143.917 133.57 144.288 134.111C144.639 133.177 143.318 132.242 144.619 132.078C143.814 134.177 145.63 132.078 145.816 133.095C145.981 132.078 145.94 130.996 145.589 130.455C145.3 132.078 143.958 129.668 144.206 131.389C143.38 129.996 143.298 128.192 143.979 126.716C144.516 126.798 144.805 126.634 145.135 126.093L144.433 125.552C144.701 124.863 145.114 127.044 145.651 125.634C144.577 124.011 147.199 121.272 144.846 120.338C146.023 119.321 145.445 122.584 146.952 121.026C147.674 122.108 146.394 123.355 147.571 123.83C147.385 122.83 148.686 123.601 148.809 122.977L148.231 121.813L148.149 122.043C147.302 120.092 148.376 117.288 148.603 114.959C147.715 112.86 146.146 111.319 146.704 108.974C147.302 109.745 147.757 107.105 148.83 108.728C149.656 107.712 149.098 106.547 148.562 106.465C148.211 107.4 148.335 106.777 147.922 107.564C147.364 106.941 147.612 105.695 148.128 105.236C148.046 105.465 148.19 105.4 148.376 105.465C149.016 104.367 147.819 104.842 147.695 103.989C148.665 103.825 148.252 102.202 148.871 101.497L147.757 100.267C148.52 100.956 148.252 99.2506 149.078 99.1686C148.603 98.3159 147.674 97.5452 148.108 96.381C148.479 96.9222 148.933 95.3644 149.821 95.43C150.998 93.4787 148.025 91.7898 149.594 89.9861C149.78 90.0681 150.296 90.5272 150.605 89.9861C150.44 89.5106 150.667 88.7399 150.667 88.2644C150.667 88.0184 150.585 87.8708 150.358 87.838C149.635 86.9362 148.851 86.4115 148.397 84.7226C147.385 84.7226 147.53 86.1327 147.757 86.7558L148.665 87.3625C147.075 87.6905 148.665 88.8383 148.108 89.1498C146.497 88.002 147.426 85.2637 146.621 83.4928C145.052 84.3618 144.454 86.5427 144.309 88.4775L145.052 87.6905L144.908 88.7071L146.126 87.8544C145.775 88.7891 145.899 89.6417 145.692 90.4944C145.837 89.4778 147.282 89.2318 146.972 89.7893C145.795 90.8059 147.406 91.0355 147.199 91.8882C147.364 91.4126 147.488 90.7896 148.004 91.2651C146.518 92.8392 147.22 93.3803 145.672 94.7741C147.364 94.7741 145.506 96.7254 146.828 97.1025L147.096 96.3974L147.839 98.0208C146.229 99.267 146.683 96.627 145.341 98.6603C144.825 100.612 146.58 100.743 146.435 102.317C145.548 101.694 144.908 100.382 145.156 99.1358L144.557 99.8409C144.061 99.3817 144.474 97.66 144.681 96.8074C145.568 98.3487 145.135 96.1843 146.146 95.6268C145.217 95.3972 145.197 96.3318 144.619 95.1676C144.454 96.1843 144.516 96.3318 143.938 97.578C144.846 94.8397 141.047 94.7249 142.265 92.3801C142.513 93.5443 143.71 92.1341 144.185 92.0522C144.165 91.511 144.123 90.4288 143.958 89.9533L142.513 90.1992C142.162 88.7235 145.156 88.5431 144.02 86.7558C143.236 86.4607 143.504 88.166 143.38 87.8544C142.905 85.526 145.259 84.9685 146.621 83.0992C146.229 82.9352 145.341 82.8696 144.743 82.099C145.527 82.4105 146.043 81.935 146.518 82.7877C146.972 82.1646 146.518 81.3119 146.27 80.6888C145.548 82.017 145.176 80.0001 144.722 79.6886C144.99 78.9835 145.506 80.0001 145.672 80.4592C145.981 79.9017 147.323 79.3606 146.146 78.9015C147.013 78.9671 148.169 80.7544 148.211 81.8366L148.479 81.1315C148.851 81.6726 148.706 81.7546 148.438 82.4433C149.222 81.8202 149.965 81.9678 150.564 82.1974C150.42 82.2793 150.358 82.1318 150.234 82.1974C149.924 82.7549 150.089 83.214 150.564 83.132C151.638 83.7715 151.431 82.4105 152.071 82.0826C152.051 81.7874 152.009 81.4759 151.989 81.1807L148.727 77.8029C148.5 76.4911 149.491 75.9992 150.234 75.1137L149.264 74.753C149.553 73.6544 150.048 72.6377 151.204 73.4904C150.853 73.4904 150.915 73.6544 150.833 73.8839C150.956 73.9331 151.06 73.9987 151.122 74.0807L151.287 74.1463C151.163 72.9329 151.08 72.1622 151.039 72.0966C152.154 74.2611 152.856 72.3918 154.569 72.9165L154.321 70.8176C153.558 71.9982 153.454 70.752 153.269 70.2929C154.301 70.2765 153.537 68.6532 153.785 67.9481L153.991 68.0137C154.445 67.3906 154.528 66.2264 154.404 65.3737C154.053 65.3737 152.587 64.1439 151.7 63.5372C151.101 64.9146 150.833 64.0291 150.193 64.0783C150.275 63.9308 150.337 63.6684 150.193 63.6356C149.945 63.406 149.759 63.8652 149.429 63.8816C149.656 65.4393 149.532 66.997 150.833 67.7513C151.534 67.3578 150.358 66.8987 150.853 66.4231C151.679 67.2594 151.328 68.2104 151.101 69.4566L150.193 69.7846L150.44 71.0964C150.089 70.5225 149.16 70.752 149.202 69.4075C148.376 69.4894 149.16 70.7356 148.768 71.5063L149.821 72.031C149.222 71.8015 148.809 73.5232 148.169 72.2114L147.591 70.1125L146.745 70.5881L146.807 68.8827L147.323 69.3419C146.993 66.5543 149.676 68.768 148.809 65.8984C147.591 64.8982 147.612 63.9635 148.211 62.3238C148.314 63.57 149.14 62.5534 149.842 63.0781C150.605 61.8975 149.553 61.3728 149.14 60.6677C149.904 60.4217 150.523 60.2578 150.234 61.3564C151.7 61.6515 150.213 59.8806 151.762 59.9298C152.319 56.2732 147.282 56.4864 149.883 52.4198L150.482 52.6494C150.131 49.8619 151.122 48.3697 151.039 45.8117L152.938 43.9916C153.103 44.4507 154.094 45.7625 154.941 45.287C153.186 46.0905 153.578 47.1727 152.567 48.1238C152.959 48.2713 153.33 47.8778 153.619 47.7138C153.516 48.3369 152.732 48.5829 152.897 49.4355C153.227 49.4355 153.764 48.5665 153.867 49.2716L152.711 50.3046C152.938 51.8623 154.941 51.2884 154.218 53.0101C153.392 52.6002 152.236 51.7967 152.133 51.0917C151.823 51.8787 151.782 49.9603 151.142 50.6489C152.257 51.9443 151.142 52.4034 151.7 54.0268C151.555 53.83 151.307 53.748 151.287 53.3709L150.378 55.5517C151.225 55.0762 150.915 57.4866 152.071 57.4046C152.918 55.0598 152.133 55.6993 153.207 53.0265C153.33 53.83 154.321 54.9286 155.312 55.5025C155.271 55.5189 155.23 55.5517 155.188 55.6337C156.241 56.1584 156.613 55.7649 158.553 55.9781C157.377 54.5843 158.657 53.8792 158.078 52.3215C157.046 51.9443 156.571 53.0429 156.737 53.7972L156.241 52.4362L156.695 52.7478L157.583 49.5011C157.542 50.1242 158.12 50.403 158.553 50.7801C158.657 50.3538 159.007 49.9767 159.4 49.5503C158.368 49.5503 157.645 49.4027 157.748 48.9928C158.326 46.9103 159.42 45.8117 160.721 45.1558C160.721 45.0739 160.7 44.9755 160.68 44.9099C159.585 45.1558 159.028 43.2209 158.078 42.4667C159.152 42.6142 158.904 41.45 159.544 40.8925C158.347 40.4498 156.572 40.7122 155.436 41.3517C156.344 42.893 156.448 42.2699 157.955 43.1062L158.657 45.5002L157.748 44.8935C157.129 45.9921 158.264 47.2219 156.984 47.0087C156.221 46.32 156.902 45.369 156.138 44.6803L155.539 45.3854C154.486 43.926 156.861 44.8279 156.241 43.1226C155.044 43.6145 156.179 42.975 155.56 42.2043C154.714 42.6798 155.415 45.0738 153.64 44.418C152.959 43.4997 156.262 41.8108 154.59 40.5154L154.796 40.5974C155.292 38.974 154.321 38.3018 153.743 37.6131C154.445 36.9736 153.743 35.9241 153.805 35.1699L154.342 35.2355L154.28 34.1532C155.188 34.7599 154.053 35.3994 154.074 36.3341H155.106C153.743 37.2523 155.457 38.1378 156.2 39.0396C155.519 37.7606 156.964 35.6946 155.044 35.2191L156.179 34.5796L155.87 34.186C156.716 33.7105 157.831 34.3828 157.893 35.4814C157.604 35.6454 157.48 35.7274 157.273 35.6454C157.645 36.1865 158.347 36.7112 157.934 37.8918L157.5 37.2031C157.191 38.6953 157.377 40.0891 158.285 40.6958C159.049 38.5805 159.462 36.4653 159.73 34.4484C157.542 33.6285 156.386 32.7923 154.321 32.2839C154.136 30.8902 154.136 29.0209 155.085 27.9223L155.477 28.0698C155.787 27.5123 155.746 26.9712 155.581 26.5121C156.221 25.9546 156.633 27.0368 157.005 26.6433L156.592 24.6264C157.521 24.8396 157.273 26.4793 157.232 27.25C157.17 27.1024 157.067 26.7909 156.922 26.8728C156.386 27.7419 157.748 29.5784 156.324 29.8407C156.489 30.2999 155.436 28.8405 155.147 30.3327C154.466 31.2837 155.663 31.7264 156.055 31.874C156.592 31.9396 157.046 30.3819 157.604 30.9886C157.645 30.2015 157.005 29.8243 157.686 28.8897C157.624 29.6604 158.574 30.8246 157.686 31.1525C158.471 32.7759 161.031 32.8087 161.278 32.1036C160.453 32.202 160.721 29.234 159.379 31.1197C158.491 30.1195 158.739 28.4798 158.285 27.25L158.491 27.3156L158.45 25.8398C158.698 26.0694 158.884 26.5285 159.42 26.5941L158.285 24.446C159.09 25.6758 159.069 23.8065 159.586 23.331C158.78 23.0359 158.306 22.1832 157.707 22.9047C156.984 23.6918 158.079 23.4458 158.037 24.2165L156.902 23.0031L157.046 22.9211L156.076 22.1668C156.386 20.691 158.471 23.0523 157.707 21.0518L156.221 21.1666C156.757 18.9857 158.822 16.2966 158.388 14.6732C159.152 15.1816 160.453 15.4931 161.34 14.9848C160.989 15.6407 160.845 17.0017 160.824 17.9691C160.535 18.1331 159.276 16.5917 159.751 15.5751C157.294 15.8538 160.803 18.3462 158.368 18.2478C157.129 20.8386 160.391 20.4615 158.636 22.5931C159.709 22.7243 159.069 23.2818 159.998 23.495C161.856 22.9867 160.391 20.4615 161.237 19.0349C161.299 19.1825 161.402 19.494 161.609 19.576C162.083 18.5594 161.918 18.1003 161.609 17.3132L161.464 17.3952C160.597 16.0178 162.393 16.6737 162.971 15.9686C162.847 15.6571 163.322 14.6404 162.496 14.7388L163.735 13.4598L162.517 13.4106C162.558 12.6236 163.384 12.5416 162.765 11.7709L161.691 11.6397L161.031 13.5254C160.824 12.5252 160.04 13.1647 159.978 12.0661C160.989 13.3778 160.7 11.279 161.732 11.2462L161.237 10.4099L161.485 10.6395C162.125 10.082 161.196 9.86882 161.443 9.16374C160.721 9.95081 159.875 10.4427 160.473 11.5905C159.978 10.7379 159.544 9.11454 159.565 8.7374C159.235 7.86835 160.143 7.36003 160.37 6.60576C160.576 8.13071 163.714 6.39259 162.517 9.29491C162.31 9.22932 162.393 8.98337 162.538 8.90138C161.092 9.16374 162.352 10.6887 162.785 11.3938C163.611 11.2954 163.694 12.0005 164.313 10.8855C163.756 11.2134 162.682 9.75404 163.487 8.72101L165.159 9.06535L165.593 7.49121L165.655 7.63879C166.831 7.14687 165.696 5.93346 166.501 4.90043C166.006 4.04777 166.935 1.07986 164.974 2.21128C166.171 1.32582 164.953 0.341983 164.87 -0.740239L163.983 0.522354C162.992 -1.16657 163.714 -0.641855 161.96 -2.08482C162.434 -2.16681 162.868 -2.41277 163.322 -2.11761C163.714 -4.23287 164.643 -7.20078 163.425 -8.57815C163.714 -10.0703 165.737 -10.1195 165.263 -12.2839C165.077 -12.7431 163.632 -12.0872 164.313 -13.4318C164.457 -13.5137 165.386 -11.9888 165.469 -13.5465C164.313 -14.7599 166.563 -16.0717 165.634 -17.5967C166.212 -18.3182 166.212 -19.6299 167.224 -19.2692C166.811 -18.0886 166.79 -16.3833 167.244 -16.0717C166.646 -16.2849 166.522 -15.2683 166.171 -16.2029C165.139 -14.4648 166.646 -14.9731 165.882 -13.399C166.274 -13.2514 167.141 -14.1368 166.831 -14.514C168.256 -14.3992 167.059 -11.2509 168.958 -12.5463C169.329 -14.268 166.439 -15.0551 168.153 -16.4161C168.937 -15.7438 168.07 -14.8583 169.453 -13.9565L170.196 -15.1371L169.309 -16.1209L169.515 -16.0553C171.125 -18.1214 168.338 -18.2034 167.905 -20.2202C166.77 -19.1708 165.49 -20.6958 164.767 -19.8923C164.767 -21.2205 165.077 -22.1551 166.501 -22.0403C167.327 -19.4988 167.988 -21.778 169.082 -19.384C169.639 -19.7119 171.084 -18.6625 171.414 -19.9907C170.609 -21.5976 170.176 -19.6463 169.907 -21.1877C170.052 -21.2697 170.196 -21.3517 170.382 -21.2697C169.742 -22.024 170.754 -22.0567 170.052 -22.975L170.3 -22.7454C171.311 -23.7129 169.474 -23.9588 170.547 -24.7787C169.453 -24.5163 169.763 -25.451 169.185 -26.0577C168.669 -25.1886 167.079 -24.8279 166.935 -23.0406C167.74 -22.7454 168.215 -22.8438 168.524 -22.0731L168.586 -23.2373C168.689 -22.975 168.875 -22.7618 169.02 -22.5159L168.442 -21.4336C168.049 -22.893 167.059 -22.3355 166.295 -23.0078C166.831 -24.2704 166.212 -24.09 166.604 -24.8935C167.802 -24.7131 169.02 -27.2055 170.011 -28.6321C169.928 -28.4025 169.928 -28.1074 169.866 -27.9434C170.485 -26.7956 170.981 -28.5993 171.332 -28.6157L170.836 -29.4519C170.898 -29.288 171.146 -29.0584 171.373 -29.3863C171.291 -30.4686 170.073 -30.5178 169.99 -31.6C170.671 -31.6164 171.559 -30.6325 172.013 -31.272C172.632 -31.4524 174.284 -32.0427 173.892 -33.5185C173.644 -33.6332 173.561 -34.0268 173.499 -34.4531C173.52 -34.3875 173.541 -34.3219 173.582 -34.2891L174.428 -35.1746C175.461 -34.2727 173.665 -33.6005 174.717 -32.6986L175.791 -32.5346C175.708 -31.9115 176.059 -31.0097 176.575 -30.5669C176.885 -31.5016 176.637 -31.7312 176.555 -32.8298C177.257 -32.9282 177.669 -32.1247 177.731 -32.0099L177.133 -32.2231C176.059 -31.0261 177.917 -30.2226 177.484 -28.6485C177.401 -28.4189 177.339 -28.5665 177.153 -28.6485C178.041 -27.2711 176.41 -26.1397 177.628 -24.7623L177.112 -25.2214C177.463 -24.336 178.309 -22.5651 179.115 -20.8105L179.527 -20.7614C179.816 -20.9253 179.713 -20.3022 179.486 -19.9743C179.899 -19.0888 180.25 -18.2526 180.518 -17.5639C180.807 -17.7443 181.076 -18.0066 181.179 -18.3018C180.725 -18.6133 181.344 -20.1055 180.188 -19.9907C180.972 -20.6466 180.147 -21.86 180.642 -22.3519C179.796 -21.4664 179.672 -23.1062 179.073 -23.3193C179.837 -23.5817 179.218 -24.7295 180.147 -24.5163C180.415 -24.6803 179.445 -24.1064 179.961 -23.6473C180.725 -22.5815 180.993 -25.3854 181.674 -24.09C181.22 -25.7133 181.798 -27.763 181.138 -29.4519L180.622 -28.5829C180.869 -29.288 180.89 -31.0097 181.365 -31.1081C181.406 -30.5669 181.303 -29.9439 181.406 -29.2388C182.479 -29.1076 181.633 -30.8785 182.294 -30.8949L180.766 -33.0429L180.58 -32.1739C180.002 -32.7806 181.034 -34.5351 181.365 -35.8633C182.748 -34.9614 181.138 -33.83 181.53 -32.3543C181.943 -31.272 183.057 -32.8626 183.264 -31.8623C183.635 -32.0919 183.697 -32.7314 183.367 -33.0757L183.697 -33.4365C184.936 -32.4526 184.358 -30.5178 185.328 -29.124C185.204 -29.2552 185.06 -29.3699 184.915 -29.4191C184.255 -28.4681 184.131 -27.4515 184.358 -26.4348C184.853 -26.9103 184.585 -27.1399 184.482 -27.4515C184.812 -27.4515 184.833 -26.5332 185.163 -26.1397C185.679 -27.0087 185.989 -26.2381 186.278 -26.7956C186.526 -26.1725 186.36 -25.6969 186.113 -24.9919C185.555 -24.6639 185.452 -25.369 184.771 -25.3362C185.06 -24.5655 183.429 -24.3524 184.048 -23.2046C184.523 -24.6311 185.452 -22.6962 185.824 -22.1551L185.906 -22.4011C186.629 -21.8764 186.608 -21.4828 185.844 -21.2369C185.597 -21.86 185.906 -22.4011 185.081 -22.3027C185.081 -21.9092 185.039 -21.5156 185.225 -21.0565L184.709 -21.5156L184.606 -19.5644C185.266 -19.2036 186.175 -18.5969 187.186 -18.2362C186.484 -17.8262 186.918 -17.1375 187.104 -16.662L186.835 -16.8916C186.113 -16.0881 186.34 -14.1368 186.938 -13.9237C186.299 -13.3662 183.594 -18.5969 183.574 -14.2188C183.346 -12.5791 185.411 -13.0218 185.968 -12.0216C185.968 -12.0216 185.782 -12.0872 185.638 -12.0216C185.39 -11.3165 186.133 -11.1689 186.36 -10.5622C186.711 -10.9722 186.815 -11.5953 186.567 -11.8248C187.372 -11.5297 186.278 -10.3327 186.856 -9.72597C185.679 -10.5622 186.175 -8.38138 185.597 -8.98809C184.564 -7.62711 185.37 -6.00377 186.195 -5.16751C184.461 -4.34765 186.175 -3.4458 185.204 -1.93724C185.287 -2.1832 185.101 -2.64233 185.328 -2.95388C184.441 -3.93772 184.564 -1.36334 183.821 -2.83909C183.945 -2.52754 184.358 -2.77351 184.234 -3.08506C184.193 -3.62617 183.821 -4.16728 183.346 -4.06889L182.273 -2.87189L182.087 -3.34741L180.56 -1.51092C180.745 -1.44533 181.034 -1.5929 181.179 -1.67489C180.312 0.538751 180.622 3.17872 180.167 5.1464C182.975 5.78589 180.683 10.1312 182.211 11.8857C181.447 11.3774 180.043 11.0166 179.404 11.2134C179.342 10.8527 178.289 10 178.64 9.22933C179.114 9.14734 179.775 8.19629 180.209 8.88498C180.209 6.62215 178.908 9.06535 177.938 8.31108C177.855 10.8035 179.321 12.4104 179.754 14.0501H179.404L179.858 15.2963C180.188 14.3453 181.819 14.5421 181.055 15.7391L180.993 15.5751C180.209 16.2146 180.787 17.7723 180.518 18.8709L181.344 19.7072C181.076 20.8058 179.321 20.691 178.206 20.9534C177.814 22.6751 179.115 23.8229 179.775 25.1347C178.929 25.6266 178.351 28.201 177.628 26.7417C178.062 28.365 182.19 28.447 179.507 30.923L178.887 30.1523C178.64 32.7431 179.548 36.5473 178.578 37.6459C176.08 36.4325 175.399 40.5974 172.736 40.7942C173.355 40.7286 173.396 41.7124 173.685 41.8764C173.355 42.0567 173.004 42.3847 173.479 42.811C174.16 41.86 176.059 43.7785 175.316 41.7616C176.947 42.9094 178.124 44.2868 177.711 46.402L176.637 46.2709L177.236 44.6311C176.41 44.7295 176.617 43.8604 176.307 43.4669C175.213 46.5332 173.85 42.811 173.479 46.0085C174.139 46.3856 173.871 46.1561 174.015 47.0087C174.036 46.6152 173.314 46.4676 173.19 47.0907L173.954 47.7794C171.972 48.7141 173.066 45.8117 171.662 46.648C171.002 45.3362 170.898 43.1554 169.453 43.4177C168.627 45.3854 171.745 45.4838 170.795 47.5334L170.176 47.6974C170.465 48.4845 171.394 48.6977 171.889 49.1568C171.559 49.1568 171.27 49.3207 171.105 49.7963C172.302 51.19 172.426 52.0427 173.768 53.3545C173.107 50.1734 175.233 50.8293 174.738 47.5662C175.11 48.1073 175.089 50.3702 176.555 50.6653L175.481 50.5342C175.873 51.6164 176.266 52.715 175.708 53.9612L175.233 53.1085C175.708 54.8958 173.148 55.7977 174.717 57.3226C174.883 56.8471 174.924 56.47 174.8 56.1584C175.13 57.0931 174.841 58.1917 174.511 59.1263L175.977 61.2908C175.44 61.2252 175.213 62.4714 174.449 61.7827C173.396 63.1273 174.903 63.9636 175.027 64.8162C173.644 66.1608 174.717 63.488 173.252 63.1929C172.426 65.1605 172.529 67.3414 173.314 68.5876C173.603 68.1941 173.809 68.0137 174.077 68.0629C173.726 68.0957 173.685 68.9155 173.603 69.3583L174.263 69.7354C173.665 70.4405 173.272 70.2929 172.839 69.5878C172.591 70.2929 173.788 71.2931 172.653 71.9326C172.013 70.6209 173.004 69.1287 172.591 68.4236C172.859 71.0636 170.031 70.7848 170.382 74.1463C170.031 74.1463 169.474 73.5232 169.371 74.1463C169.371 75.622 170.754 74.671 171.456 75.2121C171.208 74.0479 171.724 73.5724 172.715 73.0149L173.231 73.3756C172.921 73.3756 172.798 74.0971 172.467 74.2611L173.603 74.5562C172.343 74.343 171.167 75.3597 171.497 76.2943C172.57 75.4909 172.488 75.7368 173.995 75.6384C175.172 77.0322 172.405 76.901 173.644 78.4424C173.252 78.2948 173.148 77.0486 172.653 78.0652C172.447 78.9343 173.479 78.9179 173.685 79.541C172.736 78.7703 171.91 78.8523 170.754 78.016C170.878 76.4583 170.878 77.3929 170.651 75.8352L169.536 77.0158C169.577 75.6876 168.462 75.9336 168.07 75.786C166.604 77.9013 169.412 77.6389 168.896 79.0491C169.515 79.8198 169.267 77.7209 169.866 78.8851C169.495 80.2133 170.506 79.2622 170.733 80.82L170.279 80.5084C169.577 80.902 170.279 81.4431 170.279 81.9842C170.506 82.6073 174.098 81.7054 173.768 84.1322C173.479 83.9847 173.314 83.9191 173.19 83.9027L164.602 80.5904C164.21 83.0336 163.487 85.8376 162.393 88.5923C160.514 89.0678 161.299 86.4115 160.473 86.5099L161.051 85.2637C161.774 85.4112 160.824 88.002 162.331 86.969C162.187 84.6242 163.219 83.6895 162.042 81.3611C160.164 81.853 161.877 84.247 160.287 85.5096C160.494 84.9357 160.391 84.411 160.225 83.9027C159.771 85.1981 159.276 86.5918 158.76 88.0676L159.131 88.4447C159.503 87.4609 159.771 86.7722 159.854 86.6902C159.462 88.0184 160.246 89.2482 161.526 89.4778L161.609 89.2482L161.918 89.7729L161.505 90.6912L161.175 90.6584ZM144.887 177.613C144.784 177.515 144.66 177.433 144.474 177.367C144.66 177.433 144.784 177.4 144.887 177.613ZM161.258 63.8816C160.783 65.6525 160.143 67.4234 159.689 69.1287C162.744 66.292 165.015 64.2915 164.127 69.4894L164.251 69.8502C164.685 69.2107 164.912 68.0465 164.891 66.9151C164.127 65.9312 161.278 62.7173 160.989 62.7173C160.225 62.9633 160.927 63.5044 160.618 64.0455L161.237 63.8816H161.258ZM165.717 63.0453C166.171 62.0615 165.572 62.2254 165.077 62.0287C165.077 62.3894 165.077 62.7502 165.077 63.1109C165.221 62.9961 165.428 62.9469 165.696 63.0453H165.717ZM164.561 62.0287C164.54 62.1434 164.499 62.2418 164.416 62.2746L164.561 62.0287ZM160.659 81.7218C160.659 81.7218 160.659 81.6563 160.659 81.6071C160.576 81.8366 160.494 82.0826 160.411 82.3285C160.514 82.2466 160.597 82.0662 160.659 81.7218ZM162.249 79.8034L161.361 79.459C161.299 79.6722 161.216 79.9017 161.134 80.1313C161.567 80.0985 161.939 80.0657 162.249 79.8034ZM166.398 73.4904C165.345 72.9493 165.531 71.5555 164.251 71.3259C163.941 71.1948 163.756 71.4899 163.59 71.8015C163.487 72.1622 163.384 72.5557 163.281 72.9657C163.467 72.9985 163.632 73.0968 163.776 73.2608C164.003 72.8673 164.375 72.6213 165.139 72.8673C163.239 73.7527 166.212 73.9495 165.572 75.0481C166.419 75.5073 166.687 73.8675 166.377 73.474L166.398 73.4904ZM176.555 -15.0223C176.679 -15.0387 176.968 -15.1371 177.36 -15.2519L177.876 -14.3828C177.401 -12.9726 175.378 -11.9724 176.782 -10.5294C176.286 -9.95553 175.399 -9.70957 174.655 -9.46361C174.759 -9.75876 174.862 -10.0211 175.006 -10.2507C173.19 -14.104 177.731 -11.9232 176.555 -15.0059V-15.0223ZM171.91 1.35861C171.848 1.19464 171.641 1.12905 171.641 1.12905C173.541 4.57249 173.83 7.27805 173.499 9.01616C174.49 8.7702 175.44 7.27804 175.935 6.57296L176.906 7.32724L175.997 7.65518L176.802 8.88498C177.566 8.63902 177.546 7.70437 178.186 7.13047C178 7.06488 177.029 4.96603 176.451 4.35933L175.481 5.86788C175.853 5.47434 175.894 3.35909 175.75 2.50643C175.213 2.44084 174.181 3.78542 175.316 4.08057C174.49 4.17895 174.717 2.53923 173.726 3.49027C173.066 2.17848 174.057 0.292791 174.573 -0.592663L175.935 -0.625459C176.596 -1.5765 174.428 -1.44532 175.378 -2.56034C175.419 -1.08458 176.885 -2.67512 176.802 -1.51092C177.36 -1.83886 178.227 -1.39613 178.289 -2.56034C176.658 -3.69176 179.569 -3.69176 178.144 -4.74118C178.784 -5.29869 179.114 -3.98691 179.527 -5.16751C178.784 -6.62687 178.124 -6.61048 176.844 -6.80724C176.307 -5.54465 178.309 -5.20031 177.855 -4.18368L175.935 -6.4793C175.564 -6.11856 175.502 -5.8398 175.543 -5.59384C175.481 -6.02017 175.192 -6.41371 174.8 -6.75805C174.573 -6.95482 174.387 -7.13519 174.222 -7.29916C174.036 -6.11856 173.871 -5.05273 173.293 -4.92155L172.694 -5.13472C172.054 -4.75758 172.405 -4.0361 172.818 -3.67536C172.736 -2.60953 173.437 -1.46172 172.612 -1.31414L172.096 -1.77327C172.096 -0.445086 172.137 -0.297511 171.91 1.34222V1.35861ZM164.003 44.0408C166.419 43.4833 168.586 42.811 168.751 39.0724L168.855 39.384C170.568 37.6623 167.513 35.5634 169.453 33.4646C170.155 34.6452 170.073 34.5796 171.869 35.9897L171.414 34.7435C172.612 35.1863 172.137 33.9565 172.343 33.0874L173.706 33.9893C173.19 34.4648 172.839 35.793 173.19 35.793C173.066 35.4814 171.043 37.3835 171.311 38.5641C172.323 38.5477 172.302 36.1209 173.768 37.3507C173.231 36.3505 174.243 36.3341 174.036 35.3175C174.573 36.3177 175.378 35.6782 175.997 36.4489L175.894 34.8091C176.245 34.8091 176.266 37.2195 177.711 36.0225C177.277 35.3339 178.206 33.6777 177.133 33.5301H177.463C177.876 32.3495 176.018 32.8415 176.864 31.4313C176.328 31.3657 175.894 31.6117 175.935 32.1528C176.101 32.6283 176.844 32.7595 176.844 33.6941C175.935 34.0221 177.112 32.5955 175.584 33.0874C174.821 33.3334 175.832 35.5798 174.325 34.7435L174.738 33.5629C173.665 33.4318 173.85 32.5627 172.983 32.4971C172.694 31.7264 174.015 31.1525 173.19 30.3163C172.529 29.9391 171.146 30.3491 171.91 29.1685C173.665 28.3486 173.788 25.4627 173.726 24.3804L173.169 23.3802C172.488 23.3802 172.983 25.1839 172.219 24.4952L172.178 23.0031L172.57 23.1506C172.736 22.6751 172.364 22.134 172.199 21.6749C172.901 22.1996 172.447 23.2326 173.603 23.1179C173.933 22.4456 174.366 22.3964 174.243 21.7405C174.305 21.888 174.387 22.0192 174.552 22.0192C175.254 20.6747 173.499 20.5599 173.169 20.1827C171.91 18.6414 171.6 21.4617 170.465 21.1666V17.0344C170.774 17.4116 171.084 17.8051 171.559 17.7067C172.219 16.7557 172.447 17.7723 172.591 16.3622C171.043 16.313 171.889 14.5093 171.146 13.427C171.848 13.0171 171.992 12.9351 171.848 13.9518C172.859 13.9354 172.694 12.5416 172.859 12.0661C172.653 11.7545 172.57 11.279 172.405 10.951C171.848 11.3118 171.249 11.0822 170.94 10.164L170.733 10.0984C170.238 11.5086 168.813 13.6402 169.701 14.6404L169.247 14.3453C168.132 15.9194 170.506 18.1331 168.504 18.7234C167.76 18.5758 168.277 19.0349 167.203 18.9037L167.864 20.2155L167.409 19.9204L167.348 22.0356L167.162 21.9536C167.988 23.0359 168.669 23.8885 169.226 24.5772C169.701 24.6264 169.845 24.5772 170.155 24.938C170.341 25.2987 170.341 25.5447 170.238 25.7578C170.031 26.2497 169.288 26.5285 168.916 27.1352L169.102 25.1839C168.318 24.9544 167.471 25.0363 166.77 25.9218C166.79 25.5283 166.191 25.3151 166.026 25.7742C166.233 25.8398 166.336 27.086 167.059 26.6925C167.059 28.5618 164.499 31.3329 165.593 34.268C164.994 32.1692 164.272 35.7766 164.292 33.5137C162.765 34.9403 165.345 34.9731 164.912 36.5473C164.437 36.6292 165.097 35.6946 164.251 35.2355C163.322 37.8262 165.634 39.8923 164.85 42.4011H163.838C163.879 42.9094 163.941 43.4505 164.003 44.0244V44.0408ZM164.457 49.206C164.499 49.7143 164.519 50.2226 164.561 50.7309C164.561 50.6817 164.602 50.6325 164.623 50.5833L165.201 52.1411C165.737 51.272 166.935 50.7801 167.244 52.1083C166.852 51.9607 166.274 52.2723 166.109 51.8131C165.366 52.6002 164.499 54.4039 166.088 54.076C164.912 52.3051 168.07 53.8956 167.224 52.5018C168.091 53.2889 167.554 53.9284 167.884 54.6171C167.162 53.8628 166.006 54.5843 165.448 55.5681C165.613 56.0437 165.201 57.2079 165.469 57.9785C166.439 57.8146 166.852 58.5033 167.286 57.3226C167.451 57.7818 167.533 58.4868 166.935 59.2083C166.831 58.8968 166.79 58.3557 166.46 58.3557C165.531 58.7656 165.469 59.3395 165.056 59.6183C165.056 59.8806 165.056 60.143 165.077 60.3889C165.159 60.3233 165.283 60.2742 165.428 60.2414L166.109 61.1596C165.861 59.9954 166.625 60.6841 167.162 60.7497C166.088 60.6021 166.914 61.4548 166.873 61.8483L168.153 61.1268C168.669 61.5859 167.1 62.4714 168.256 62.373C168.999 60.6513 168.916 59.9462 168.834 58.3065L167.843 58.864C167.513 56.9947 169.536 57.9129 169.825 55.8797C169.164 54.9614 170.258 52.8298 168.648 52.6166C169.102 52.9282 170.3 51.5016 169.66 50.7309C168.297 49.8127 168.462 47.4679 167.678 48.1074C167.554 48.7304 168.235 49.6651 167.203 50.0586L167.079 48.8124L166.15 49.5339C166.501 49.1568 165.717 49.1076 164.499 49.1896L164.457 49.206ZM150.936 75.4581V75.5073C150.936 75.5073 150.936 75.4745 150.936 75.4581Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.979 156.213L134.339 162.969C134.546 161.017 134.793 159.246 134.979 156.213Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.94 26.956L171.064 26.6117C171.476 27.0216 171.435 26.8412 171.105 26.4805C171.126 26.1033 170.816 26.1033 170.63 26.0377C170.527 25.9558 170.403 25.8738 170.3 25.7754C170.403 25.9066 170.506 26.0213 170.609 26.1197C170.506 26.6936 170.506 27.0544 170.96 26.9724L170.94 26.956Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.153 41.7603C152.711 40.5141 152.938 40.1862 153.681 40.3337C154.114 39.1367 152.793 39.2023 152.607 38.4316C152.525 39.8254 152.153 40.0714 152.153 41.7603Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.608 38.4353C152.608 38.2713 152.608 38.1237 152.608 37.9434C152.547 38.1401 152.567 38.2877 152.608 38.4353Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.472 43.6321C151.555 43.4025 151.576 43.009 151.865 42.845C151.121 42.6974 151.39 43.8616 151.472 43.6321Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.934 40.12C167.409 40.038 167.264 39.1854 167.491 38.8574C167.326 39.3329 165.881 39.5953 166.934 40.12Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.971 47.6472C154.054 47.4176 154.611 47.0897 155.21 47.3192C154.9 46.9421 153.662 46.3354 153.971 47.6472Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.419 42.4678L166.708 42.3038L166.357 41.3691L166.419 42.4678Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M177.958 40.4009C177.215 39.3187 175.564 41.7619 175.068 39.9746C173.788 42.0899 176.369 39.9254 175.956 41.5487C176.41 40.6305 177.607 40.2698 177.958 40.4009Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M175.958 41.5488C175.896 41.6803 175.833 41.8282 175.812 41.9926C175.875 41.8118 175.937 41.6639 175.958 41.5488Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.09 54.9944C168.028 54.8465 167.925 54.7314 167.842 54.6328C167.904 54.7479 167.966 54.8793 168.09 54.9944Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M175.872 46.8284L174.778 45.2051C175.521 46.2873 175.067 48.7961 176.409 48.7633C176.801 47.9762 176.615 46.9596 176.099 46.5005L175.872 46.812V46.8284Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M148.953 61.4699L148.52 60.7812L148.231 61.5683C148.458 61.3552 149.387 61.8799 148.933 61.4863L148.953 61.4699Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M148.189 61.7182L148.25 61.5703C148.25 61.5703 148.189 61.6525 148.189 61.7182Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M167.906 52.1075C168.071 51.632 168.091 51.2548 167.926 50.7793C167.637 50.9433 167.224 52.1075 167.906 52.1075Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.153 66.1935L150.09 65.1113L150.007 66.2755L150.153 66.1935Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M147.055 70.8984L146.787 71.0624L147.117 71.9807L147.406 71.8331L147.055 70.8984Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174.367 67.1449C174.635 66.4398 173.52 65.7511 173.231 65.9151L173.066 67.3252C174.181 67.0793 173.107 66.9317 173.5 66.1446L174.367 67.1449Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M142.74 107.777C142.1 107.383 142.761 105.907 143.442 105.907C143.69 106.137 143.834 107.006 144.33 106.531L142.823 105.137C144.165 103.661 144.867 106.596 145.341 107.465C145.858 105.858 144.805 105.252 145.114 103.513C144.867 104.005 144.392 104.284 143.979 104.514C142.761 104.432 143.587 102.874 143.69 101.71C143.029 102.382 142.678 101.906 142.286 101.333C142.286 101.234 142.204 101.169 142.142 101.103L141.997 100.906V101.037C141.832 101.005 141.667 101.037 141.44 101.103C141.626 102.103 140.49 102.743 140.366 103.366C142.431 102.972 140.449 105.547 140.924 106.399L140.965 107.334L140.903 107.678C140.676 107.728 140.428 107.596 140.119 107.039C140.428 107.514 140.036 108.941 140.697 108.875L140.139 112.155C140.036 112.253 139.933 112.335 139.768 112.401C139.871 112.532 139.974 112.565 140.077 112.548L137.641 126.863C137.93 126.175 138.488 125.617 138.839 124.912C139.953 126.158 139.293 123.748 140.47 124.207C140.821 124.748 140.552 125.453 140.181 125.847C140.779 126.076 141.44 125.535 142.162 125.683C143.277 123.961 140.346 123.354 141.11 121.632C141.853 121.78 142.389 122.403 142.513 121.239L142.617 121.55C142.121 119.599 144.557 120.304 142.72 118.911L143.793 119.058C143.133 118.123 143.422 116.5 143.442 115.565L143.649 115.647C142.885 112.925 143.649 114.172 143.649 111.22L144.66 112.696C145.362 111.761 144.02 111.368 144.289 110.679C144.495 110.761 145.3 110.679 145.383 111.368L144.082 107.646C143.422 106.711 143.256 107.728 142.782 107.81L142.74 107.777Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M145.136 103.497C145.219 103.317 145.281 103.103 145.281 102.857C145.198 103.087 145.157 103.3 145.136 103.497Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.435 127.846L137.62 126.846C137.496 127.157 137.414 127.469 137.435 127.846Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M143.669 98.2004C143.008 98.7415 142.967 97.6593 142.575 97.5117L142.203 99.6926C142.616 99.7254 143.05 100.004 143.442 99.9877L143.669 98.2004Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M141.316 100.249C141.584 100.348 141.811 100.61 142.018 100.905L142.224 99.7083C141.914 99.6756 141.605 99.7903 141.336 100.249H141.316Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M163.529 102.445L163.488 102.839L163.715 103.462L163.529 102.445Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M160.639 108.317C161.341 107.924 161.032 106.989 160.928 106.678C160.763 107.694 160.619 107.219 160.639 108.317Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M167.596 107.809L167.782 108.825L167.926 108.743L167.596 107.809Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.325 135.75C140.325 135.914 140.325 136.062 140.325 136.226C140.365 136.012 140.365 135.865 140.325 135.75Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.821 127.289C139.19 129.47 140.099 125.649 138.406 126.207L138.695 127.535L138.303 127.387L138.158 128.945C138.922 128.715 139.025 128.486 139.748 128.633C139.087 130.65 138.736 129.175 137.518 130.585L137.229 132.897L137.044 132.684C137.044 132.88 137.105 132.979 137.209 133.061L136.259 140.849C136.589 142.325 137.745 140.226 138.654 141.391C138.943 139.751 140.181 137.422 138.736 137.111C138.922 137.193 139.314 137.34 139.562 137.029L138.509 135.947L137.952 136.799C136.899 135.701 137.745 132.684 138.592 132.208C138.695 133.995 140.326 133.29 139.067 135.635C139.459 135.57 140.202 135.209 140.305 135.766C140.388 132.864 141.544 130.404 140.821 127.305V127.289Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M136.238 155.902L136.113 155.869C136.113 155.869 136.218 155.952 136.238 155.902Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M136.589 154.968L135.391 153.41L135.102 155.591L136.093 155.87C135.866 155.64 135.495 154.82 135.949 154.574L136.589 154.968Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.812 151.705C135.04 152.869 136.258 152.951 136.918 152.41C137.29 153.509 135.514 152.804 136.67 153.656C137.537 153.738 137.269 152.41 137.166 152.099L134.812 151.705Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.002 143.537L137.435 143.914L137.724 143.16L137.002 143.537Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.434 143.916L137.166 144.67C137.537 144.67 137.909 144.654 138.198 144.556L137.455 143.916H137.434Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M136.444 146.641C136.3 146.952 136.155 147.313 136.052 147.739L136.444 146.641Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M136.919 145.803H136.754L136.444 146.639C136.588 146.344 136.753 146.065 136.919 145.803Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.166 144.67C136.299 144.703 135.39 144.736 135.411 145.867L136.753 145.801L137.166 144.67Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.077 114.777L165.387 115.712L165.552 115.63L165.221 114.695L165.077 114.777Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M163.384 119.762C163.487 119.991 163.611 120.172 163.755 120.352C163.693 120.106 163.59 119.909 163.384 119.762Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.483 124.206C167.451 125.141 167.616 122.649 166.894 124.518C166.068 124.6 165.222 123.583 165.779 122.714C166.502 122.878 166.089 123.649 166.956 123.173C166.213 122.468 166.832 122.321 165.676 122.386C165.16 121.304 164.375 121.091 163.777 120.32C164.045 121.599 162.435 124.026 163.591 125.748C164.788 126.764 166.729 126.453 168.669 126.666C169.144 126.584 169.763 124.403 168.483 124.174V124.206Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.712 122.798C170.897 122.322 170.835 122.175 170.732 121.863C170.051 121.863 170.732 122.404 170.712 122.798Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.053 132.143C154.322 132.274 154.487 133.176 155.003 133.045L154.9 131.684C154.796 131.979 154.445 132.061 154.053 132.143Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.859 131.092L154.9 131.682C154.94 131.535 154.94 131.354 154.859 131.092Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.867 132.193L154.054 132.143C154.054 132.143 153.93 132.11 153.867 132.193Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M135.351 149.753C134.814 149.671 135.02 150.295 135.124 150.606C135.206 150.377 135.454 150.065 135.351 149.753Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.244 171.988L132.728 172.447C133.017 172.3 133.162 172.218 133.244 171.988Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.249 181.744C146.249 181.744 146.435 181.827 146.498 181.876C146.435 181.81 146.352 181.777 146.249 181.744Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.497 181.875C146.868 182.285 145.96 183.285 146.558 183.761L146.352 183.679L146.6 184.466C146.682 183.777 147.033 182.351 146.476 181.875H146.497Z\",\n    fill: \"#3F3834\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.361 54.5519C261.402 54.8471 261.815 54.9291 262.042 54.9619L261.898 51.666C261.443 51.7808 260.907 52.7318 260.597 52.1088C260.102 52.4039 260.556 53.2566 261.196 53.3713L260.473 53.1418C261.402 53.8797 259.647 54.4372 259.09 53.9616V54.0272L262.641 56.0605C262.827 55.2898 261.423 55.4866 261.361 54.5683V54.5519Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.283 122.322C265.077 121.911 264.891 121.878 264.726 121.928C264.87 122.076 265.035 122.207 265.283 122.322Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.465 56.5371L264.58 57.1766C264.27 56.9142 263.878 56.7011 263.465 56.5371Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.766 52.2891C246.766 52.2891 246.663 52.2891 246.58 52.2891L247.137 52.5849C247.014 52.4698 246.89 52.3712 246.766 52.2891Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.255 71.3086C268.255 71.3086 268.317 71.4406 268.337 71.5231C268.337 71.4406 268.296 71.3746 268.255 71.3086Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.346 43.2867L241.419 44.7625C240.924 44.5657 241.089 45.2872 240.49 44.9756C240.573 45.0904 240.779 45.6151 241.027 45.4675L240.986 45.156C242.451 45.9267 242.988 45.4347 244.103 46.7301C244.949 45.9103 244.165 45.5659 243.484 45.1396C243.38 44.992 243.339 44.8772 243.277 44.7461L241.233 43.5327L240.304 43.2539L240.346 43.2867Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.093 102.416L254.568 102.449C254.341 102.383 254.073 102.087 254.093 102.416Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.537 56.3053C262.805 56.3053 263.136 56.4037 263.487 56.5185L262.661 56.043C262.661 56.043 262.599 56.2069 262.558 56.2889L262.537 56.3053Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.336 55.2565L259.089 54.0267L258.325 53.584C258.614 54.0595 258.841 54.6006 259.336 55.2565Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.998 69.3402C269.349 71.8818 267.264 68.7827 266.913 69.9633C267.141 70.6684 267.966 70.8816 268.255 71.3079C267.43 69.3238 270.918 71.4883 270.382 69.4714C271.847 69.701 272.054 70.8816 271.703 71.5867C270.34 72.4229 270.629 70.9472 269.246 70.816C269.535 71.6194 269.783 71.4719 270.588 71.7834C270.34 73.0788 272.487 74.3578 270.588 75.1941C270.96 76.1123 271.62 76.0139 272.405 76.5222C273.912 76.5714 273.107 75.1121 274.263 74.7185C274.139 74.8005 273.891 74.9481 273.685 74.9153L273.953 74.1118C273.478 74.8825 272.446 74.0626 272.301 73.6691C272.24 73.374 272.136 72.8001 272.57 72.8492L272.921 73.2756C273.354 72.6853 271.744 72.0458 272.508 71.4063C272.838 71.3571 273.024 71.5866 273.23 71.6194C272.157 70.9799 272.178 70.3241 271.393 69.3402L272.921 69.8649C271.228 69.1271 271.6 67.2742 272.425 65.9788C272.178 66.1264 272.012 66.3887 271.723 66.2411C271.331 65.5032 272.322 64.9129 273.127 65.2409C271.847 64.5522 274.036 62.4533 272.384 61.5023L264.622 57.1406C264.808 57.3046 264.973 57.485 265.055 57.6817C263.755 58.1245 263.92 58.354 262.661 57.6489C263.383 58.354 264.416 58.0425 264.519 59.1247C263.838 58.7148 262.331 58.6492 262.227 59.6822C263.672 62.2238 267.471 63.8307 269.494 66.1591C268.482 66.2739 268.875 68.1596 268.668 69.0779C267.574 68.7663 267.223 68.094 266.975 67.4053C266.934 67.8481 266.934 68.6187 266.913 69.1762L269.04 69.3238L268.998 69.3402Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.325 63.4883C265.325 63.4883 265.2 63.6203 265.138 63.6863C265.221 63.6533 265.283 63.5873 265.325 63.4883Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.955 67.1934C266.955 67.1934 266.893 67.1934 266.852 67.1934L266.935 67.4079C266.935 67.4079 266.935 67.2429 266.955 67.1934Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.265 56.9636C259.976 56.8157 259.894 56.7006 259.584 56.5527C259.687 56.6513 259.77 56.7664 259.853 56.8814C259.997 56.98 260.142 57.0293 260.245 56.9636H260.265Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.021 56.4033L262.434 56.469C262.434 56.469 262.496 56.354 262.516 56.3047C262.289 56.3047 262.103 56.3047 262.021 56.4033Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.514 79.459L260.742 79.69C260.721 79.5415 260.618 79.4755 260.514 79.459Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M267.451 72.2431C267.285 71.3576 265.944 72.1939 265.84 70.9477L265.779 71.3248C265.077 70.4558 265.304 68.8488 265.2 67.783C265.799 67.8814 265.902 67.1107 266.831 67.2091C266.584 66.4876 266.336 65.7661 265.345 65.4218C265.634 64.9627 264.767 64.2904 265.118 63.7165C264.561 63.9788 263.177 62.9458 263.921 64.3396C263.838 64.2248 263.714 64.3068 263.632 64.192C262.888 65.1266 264.251 65.4382 264.292 66.2253C263.755 66.7008 263.363 65.4874 263.157 65.9465C263.714 66.8976 262.641 69.0292 264.726 68.8816C264.911 69.5867 264.457 69.7015 264.086 69.9147C266.357 70.9477 263.404 74.096 266.233 73.9812C266.088 73.5713 266.109 72.9154 265.469 72.3415L267.43 72.2759L267.451 72.2431Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.471 58.4551C260.471 58.4551 260.471 58.5865 260.451 58.6358C260.451 58.5865 260.471 58.5208 260.471 58.4551Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.379 47.0898L270.258 47.4342C270.754 49.533 270.258 50.3037 270.403 52.1402C270.155 52.2878 269.99 52.0582 269.886 51.9598C270.155 53.2552 269.825 55.1901 270.712 56.1084C270.712 56.5183 270.155 57.6169 269.597 57.2234C269.763 57.4201 269.928 57.6497 269.886 57.8793C269.226 57.9613 269.68 57.371 269.123 57.371C269.081 57.5513 268.958 57.6333 269.164 57.6661C268.586 57.371 266.893 58.0432 266.893 56.6003C268.441 56.01 267.1 57.5841 268.834 57.2234C268.834 56.7479 268.173 56.8135 267.946 56.7807C267.946 56.174 268.4 56.174 268.792 56.2068C268.256 55.9936 268.978 55.2065 268.152 54.9114C267.987 53.7308 269.453 54.9442 269.412 54.1735L267.657 53.7635L267.946 52.4682C267.265 50.6317 264.932 52.7961 263.879 50.6809C264.808 50.9432 266.315 50.0578 266.645 49.0739C266.728 49.6642 267.905 50.73 267.409 51.5007C268.751 50.4021 267.616 52.9765 269.164 52.3862C268.4 51.8779 268.276 50.9924 268.648 50.2873L268.813 50.5169C268.978 49.779 267.12 49.2543 267.801 48.2377C267.74 47.7293 268.235 47.8277 268.648 47.9097C268.379 47.4834 268.029 47.1062 268.421 47.1062L268.379 47.0898ZM268.772 48.1885L268.627 48.8608C268.916 48.6968 268.896 48.4508 268.772 48.1885Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.203 26.2168C242.265 26.299 242.306 26.3811 242.368 26.4797C242.327 26.3647 242.265 26.2825 242.203 26.2168Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.178 25.6914C247.22 25.7904 247.282 25.8729 247.344 25.9389L247.178 25.6914Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.812 39.4492L244.08 39.9903C244.039 39.728 243.956 39.564 243.812 39.4492Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.021 27.1025C246.021 27.1025 246.187 27.1685 246.249 27.185C246.187 27.1025 246.083 27.0695 246.021 27.1025Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.521 39.1866L266.955 39.351C266.769 39.2195 266.624 39.1702 266.521 39.1866Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.583 35.1191C266.583 35.1191 266.645 35.1191 266.686 35.1356C266.645 35.1356 266.624 35.1356 266.583 35.1191Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.37 34.0879C242.37 34.0879 242.266 34.0879 242.224 34.1209C242.286 34.2034 242.349 34.1704 242.37 34.0879Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.666 35.1367C266.79 35.1696 266.914 35.2353 267.058 35.3339C266.893 35.2353 266.769 35.1696 266.666 35.1367Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.491 52.6998C258.821 52.667 259.482 51.634 258.615 51.6668L258.367 52.585L258.491 52.6998Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.139 53.3235C258.201 53.4054 258.263 53.5038 258.325 53.5858L258.077 53.4546L257.829 54.1597C257.891 54.2417 257.953 54.3401 257.974 54.4385C257.933 54.3893 257.85 54.3565 257.747 54.3401L257.644 54.5697C258.573 55.1108 259.295 56.4881 259.832 56.8817C260.245 57.4064 260.493 58.0459 260.431 58.4558C260.431 58.0787 260.245 57.5868 259.729 57.7507C259.233 58.5378 257.706 58.9477 259.089 60.2431L259.027 59.4724L261.071 61.1614C260.286 61.8009 260.038 60.3251 259.336 60.0955C260.369 61.4237 257.85 62.6371 259.564 63.211C258.552 63.3258 256.88 63.5226 257.024 64.4244C258.139 63.7521 257.788 64.9327 258.986 64.3752C259.584 64.6704 258.676 65.3755 259.419 65.4083L259.006 65.3427C257.479 66.9168 260.018 67.3432 260.864 67.9662C261.36 69.77 260.74 70.639 261.029 72.1148C260.369 72.1968 258.531 72.6723 258.635 73.2626C259.564 73.5085 260.08 74.8367 261.256 74.9187C261.669 73.8365 260.224 74.0824 259.894 73.4593C261.091 72.8854 261.112 73.361 261.793 72.6067C261.36 73.2134 262.598 75.2303 261.504 75.9025L261.318 75.6894C260.678 76.7388 257.809 77.0668 259.667 78.6901L260.431 79.4772C260.307 79.4444 260.183 79.4444 260.059 79.428C260.018 80.7725 258.676 80.461 259.811 81.8876C259.729 81.7728 259.605 81.8548 259.502 81.74C258.903 82.609 260.307 83.3961 260.616 84.0192C259.667 84.4619 259.646 83.97 258.924 83.7733C258.676 85.2654 260.472 86.774 261.731 87.6266L261.236 88.6105C260.782 88.0693 259.708 87.4299 259.13 87.643C259.378 88.1513 259.811 88.0366 259.687 88.7744C259.047 88.6761 258.449 88.3973 257.644 88.0857C256.735 89.6763 259.873 88.3153 258.057 89.4795C258.077 89.955 259.027 90.1846 259.77 90.201L258.862 91.1192C259.832 91.1684 259.976 92.2343 260.183 92.923C260.596 92.9885 261.153 92.2999 260.761 92.0539C261.525 92.0539 261.938 92.7918 261.958 93.2673C259.956 93.5625 262.557 96.3992 260.142 95.9729C261.009 98.1045 261.525 101.122 262.495 102.499C261.979 103.007 262.061 103.975 261.05 103.45C261.215 105.188 263.383 105.942 263.032 107.713C262.805 107.877 262.929 106.943 262.268 107.041C263.197 108.107 261.649 109.156 262.392 110.862C262.33 110.566 261.896 110.517 261.69 110.484C262.02 110.435 262.454 111.157 262.846 111.583C262.701 111.845 262.557 111.255 262.33 111.419C261.731 114.879 264.786 117.24 265.158 120.602C265.055 119.651 263.692 119.388 263.135 119.421L263.238 120.356C263.94 120.667 264.043 121.372 264.621 121.913C264.374 122.012 264.146 122.323 263.796 122.045C262.701 124.012 266.603 124.734 266.211 127.062L263.176 124.537L262.33 125.308L260.947 124.193C260.307 124.98 262.082 125.472 261.091 125.636C260.782 125.504 260.823 125.127 260.286 125.16C259.976 125.898 260.74 125.882 261.009 126.39C258.779 125.193 258.449 122.471 257.747 121.061C257.561 120.848 258.263 121.208 258.469 121.241C258.325 120.651 258.903 120.241 258.469 119.519C257.54 119.126 257.871 119.929 257.829 120.306C257.066 120.306 257.086 120.126 256.921 119.733C257.912 119.569 256.983 117.437 258.118 116.814C257.54 114.633 255.559 117.371 255.744 115.19L256.818 114.453C255.786 113.272 254.815 111.714 254.898 110.288L254.96 110.583C255.476 110.747 255.744 110.402 255.972 110.239C256.343 109.14 254.836 108.271 255.91 107.549C254.547 106.418 253.412 104.45 252.648 103.089C254.134 102.614 254.114 104.827 255.125 105.336L254.981 104.073C255.084 104.86 255.683 105.123 256.612 105.532C256.756 104.401 255.414 104.122 254.919 103.106C255.332 103.155 255.579 103.007 255.538 102.515L254.527 102.45C254.527 102.45 254.671 102.384 254.733 102.22L253.928 100.384C253.536 100.81 252.669 100.892 252.689 101.368C253.267 101.154 253.412 101.564 253.453 102.04C252.751 101.663 252.937 102.548 252.4 102.581C252.338 101.597 252.07 100.417 251.74 99.7934L252.648 99.5311C252.792 98.5964 252.173 97.6454 252.38 96.9895L252.896 97.1535C253.061 96.022 252.359 94.9562 253.164 93.9232C252.029 92.9885 251.038 91.7915 249.861 91.0373C248.622 90.6601 251.12 88.0366 249.345 87.0035C249.469 86.9215 250.315 87.725 250.79 88.0857C250.914 87.3315 249.366 86.8068 250.625 86.5116C250.336 88.2005 251.616 86.364 252.049 87.1019C251.967 86.3148 251.657 85.5114 251.182 85.1506C251.306 86.4132 249.407 84.7899 250.067 86.0361C248.932 85.1014 248.395 83.7569 248.705 82.5435C249.242 82.5435 249.489 82.3795 249.696 81.9204L248.891 81.5924C248.994 81.0349 249.902 82.6254 250.109 81.494C248.684 80.4118 250.645 78.0014 248.106 77.6079C249.035 76.6896 249.221 79.2312 250.336 77.8538C251.285 78.5753 250.336 79.6903 251.595 79.8871C251.182 79.1492 252.627 79.5591 252.607 79.0836L251.781 78.2802L251.74 78.4605C250.48 77.0996 250.893 74.8531 250.563 73.0494C249.2 71.5737 247.322 70.5898 247.384 68.7533C248.148 69.2616 248.024 67.212 249.427 68.3106C250.026 67.4415 249.221 66.6381 248.684 66.6381C248.54 67.3923 248.519 66.9004 248.292 67.5399C247.611 67.13 247.59 66.1625 248.003 65.7362C247.962 65.9166 248.086 65.851 248.292 65.8838C248.684 64.9819 247.611 65.4739 247.301 64.8344C248.21 64.6048 247.487 63.4078 247.92 62.8011L246.558 61.9812C247.446 62.424 246.826 61.1614 247.631 60.9974C246.992 60.4071 245.877 59.9152 246.083 58.9805C246.558 59.3577 246.703 58.1115 247.59 58.0787C248.375 56.4717 245.113 55.4879 246.31 53.9465C246.517 53.9957 247.115 54.2745 247.322 53.8318C247.074 53.4874 247.157 52.8807 247.033 52.5036C246.971 52.3232 246.868 52.2084 246.661 52.2084C245.774 51.5853 244.886 51.2738 244.122 50.0276C243.11 50.1424 243.544 51.1918 243.874 51.6509L244.886 52.0281C243.379 52.438 245.196 53.1595 244.679 53.4546C242.883 52.7332 243.234 50.5523 242.099 49.2733C240.716 50.0932 240.551 51.8313 240.778 53.3399L241.356 52.6676L241.397 53.4546L242.45 52.6676C242.285 53.4218 242.574 54.0613 242.553 54.7336C242.512 53.9466 243.895 53.6022 243.689 54.0613C242.739 54.9632 244.37 54.9632 244.328 55.6355C244.411 55.2583 244.411 54.7664 244.989 55.078C243.833 56.4389 244.617 56.7669 243.379 58.0131C245.051 57.8163 243.606 59.5216 244.968 59.6692L245.092 59.1117L246.145 60.2759C244.824 61.4073 244.7 59.3413 243.812 61.0302C243.73 62.5715 245.485 62.4895 245.67 63.6865C244.659 63.3094 243.75 62.3748 243.73 61.4073L243.276 62.014C242.677 61.7189 242.739 60.3579 242.76 59.6856C243.936 60.7678 243.09 59.1609 243.978 58.6198C243.007 58.5542 243.193 59.2593 242.388 58.4394C242.429 59.2265 242.512 59.3413 242.202 60.3579C242.553 58.1607 238.796 58.4722 239.539 56.5537C239.993 57.4228 240.922 56.2094 241.376 56.0946C241.253 55.6847 240.984 54.8484 240.736 54.5041L239.353 54.8484C238.713 53.7498 241.645 53.3071 240.179 52.0445C239.333 51.8969 239.931 53.1759 239.766 52.9463C238.837 51.2082 241.046 50.5359 242.058 48.9618C241.645 48.8798 240.757 48.9126 240.014 48.3879C240.86 48.5518 241.273 48.1419 241.892 48.7322C242.223 48.2075 241.603 47.6008 241.273 47.1417C240.798 48.2403 240.076 46.7153 239.56 46.5186C239.684 45.9611 240.406 46.6825 240.633 47.0269C240.84 46.5678 242.078 46.0266 240.819 45.7807C241.707 45.7479 243.152 47.0105 243.4 47.8304L243.523 47.2728C243.978 47.65 243.854 47.732 243.73 48.2895C244.411 47.732 245.154 47.7812 245.774 47.8959C245.65 47.9615 245.567 47.8631 245.443 47.9287C245.216 48.3879 245.485 48.7158 245.939 48.6174C247.136 48.9946 246.661 47.9779 247.239 47.6664L246.992 46.9941L243.172 44.7149C242.718 43.731 243.606 43.2555 244.184 42.5176L243.172 42.3209C243.255 41.4518 243.565 40.6319 244.865 41.173C244.535 41.2058 244.617 41.3206 244.556 41.5174C244.7 41.5338 244.783 41.583 244.865 41.6322L245.051 41.665C244.7 40.7467 244.494 40.1564 244.452 40.1072C245.939 41.665 246.29 40.1728 248.106 40.4188L247.487 38.8446C246.93 39.8121 246.599 38.861 246.352 38.5331C247.363 38.4347 246.31 37.2541 246.455 36.6966L246.661 36.7294C247.012 36.2047 246.909 35.3028 246.641 34.6633C246.31 34.6961 244.659 33.8762 243.647 33.4827C243.276 34.5977 242.863 33.9418 242.243 34.0238C242.305 33.909 242.305 33.6959 242.182 33.6795C241.892 33.5155 241.789 33.8926 241.459 33.9254C241.934 35.106 242.058 36.3194 243.482 36.795C244.122 36.4342 242.863 36.1883 243.296 35.7783C244.246 36.3522 244.06 37.1065 244.039 38.0904L243.193 38.4183L243.668 39.4021C243.214 38.9922 242.326 39.2546 242.14 38.2215C241.335 38.3527 242.347 39.2382 242.078 39.8777L243.214 40.1892C242.594 40.0744 242.491 41.419 241.624 40.468L240.675 38.9102L239.911 39.3529L239.663 38.0248L240.241 38.3363C239.436 36.2047 242.45 37.6968 241.129 35.5652C239.766 34.8929 239.622 34.1714 239.952 32.8596C240.262 33.8107 240.902 32.958 241.707 33.3187C242.285 32.3513 241.149 32.0233 240.633 31.515C241.356 31.2691 241.934 31.0887 241.831 31.9578C243.338 32.0725 241.562 30.8263 243.11 30.7444C243.069 27.8912 238.094 28.4323 240.055 25.0873L240.675 25.2185C239.931 23.0868 240.695 21.857 240.241 19.8893L241.851 18.348C242.099 18.6923 243.255 19.6434 244.039 19.217C242.429 19.9549 242.966 20.7584 242.099 21.5619C242.512 21.6438 242.821 21.3159 243.09 21.1847C243.069 21.6766 242.347 21.9062 242.615 22.5621C242.945 22.5293 243.358 21.8242 243.544 22.3653L242.532 23.2344C242.987 24.415 244.886 23.8247 244.411 25.2021C243.523 24.9397 242.264 24.415 242.058 23.8739C241.851 24.5134 241.542 23.0212 241.005 23.5951C242.305 24.5134 241.253 24.9561 242.058 26.1695C241.872 26.0219 241.624 25.9891 241.542 25.694L240.984 27.4485C241.748 27.0222 241.831 28.9079 242.966 28.7439C243.441 26.8746 242.739 27.4157 243.4 25.284C243.647 25.8907 244.803 26.6778 245.877 27.0386C245.835 27.055 245.794 27.0878 245.774 27.1533C246.888 27.4813 247.198 27.1533 249.159 27.1533C247.755 26.1859 248.911 25.53 248.127 24.3822C247.053 24.1526 246.744 25.0381 247.012 25.612L246.31 24.5954L246.806 24.7921L247.219 22.2342C247.26 22.7261 247.879 22.89 248.354 23.1524C248.395 22.8245 248.684 22.4965 249.015 22.1522C247.982 22.2178 247.26 22.1522 247.281 21.8406C247.549 20.2009 248.499 19.299 249.675 18.6923C249.655 18.6267 249.634 18.5612 249.613 18.4956C248.56 18.7579 247.735 17.2986 246.661 16.7738C247.755 16.8066 247.322 15.9376 247.9 15.4621C246.661 15.1833 244.927 15.4949 243.895 16.0688C245.01 17.2002 245.03 16.7083 246.641 17.2658L247.693 19.0695L246.702 18.6595C246.248 19.545 247.549 20.414 246.248 20.3321C245.402 19.8565 245.939 19.0859 245.072 18.5939L244.597 19.1843C243.338 18.1184 245.835 18.6595 244.968 17.3969C243.854 17.8397 244.886 17.2822 244.163 16.7247C243.379 17.151 244.432 18.9547 242.574 18.5448C241.769 17.8725 244.803 16.3639 242.966 15.4621L243.172 15.5113C243.441 14.2323 242.367 13.7567 241.727 13.2648C242.347 12.7237 241.521 11.953 241.48 11.3627H242.016L241.81 10.5429C242.801 10.9528 241.748 11.5267 241.872 12.2482L242.883 12.1826C241.665 12.9861 243.461 13.5764 244.308 14.2323C243.461 13.2812 244.638 11.6087 242.677 11.3463L243.73 10.7888L243.379 10.5101C244.163 10.1001 245.34 10.5593 245.546 11.3955C245.278 11.5267 245.154 11.6087 244.948 11.5595C245.381 11.953 246.166 12.3302 245.897 13.2484L245.381 12.7401C245.257 13.9043 245.65 14.9701 246.641 15.3801C247.074 13.7076 247.239 12.0678 247.239 10.4773C244.968 9.96896 243.709 9.39506 241.583 9.1163C241.232 8.05048 240.984 6.59112 241.789 5.68927L242.202 5.78764C242.429 5.34492 242.326 4.91859 242.099 4.57425C242.677 4.11512 243.214 4.91859 243.523 4.60704L242.863 3.06569C243.812 3.18047 243.792 4.45946 243.833 5.06617C243.75 4.95138 243.606 4.72182 243.482 4.78741C243.069 5.49249 244.659 6.83708 243.255 7.11583C243.482 7.46017 242.243 6.39435 242.14 7.55856C241.583 8.32923 242.821 8.60799 243.255 8.70637C243.792 8.72277 244.039 7.49297 244.679 7.9357C244.638 7.32899 243.936 7.06663 244.494 6.31236C244.535 6.91906 245.629 7.75532 244.762 8.05048C245.732 9.26388 248.313 9.1327 248.457 8.59158C247.652 8.70636 247.549 6.41075 246.434 7.9357C245.423 7.21421 245.464 5.93522 244.845 5.00057L245.051 5.04976L244.824 3.90196C245.113 4.06593 245.34 4.42667 245.877 4.44307L244.473 2.83613C245.423 3.75438 245.175 2.31141 245.629 1.91788C244.803 1.72111 244.225 1.09802 243.709 1.67192C243.069 2.31142 244.143 2.06546 244.184 2.67216L242.904 1.7867L243.028 1.72111L241.975 1.18C242.12 0.0157953 244.452 1.75391 243.482 0.228957L241.996 0.376533C242.305 -1.34518 244.06 -3.50963 243.441 -4.75583C244.267 -4.39509 245.588 -4.19832 246.413 -4.64105C246.124 -4.13273 246.124 -3.0669 246.228 -2.31262C245.959 -2.18145 244.535 -3.31286 244.906 -4.11633C242.491 -3.78839 246.248 -2.01748 243.812 -1.98468C242.863 0.0813777 246.083 -0.361345 244.556 1.37677C245.65 1.42596 245.072 1.90148 246.021 2.01626C247.817 1.54074 246.083 -0.34495 246.764 -1.47636C246.847 -1.36158 246.992 -1.13202 247.198 -1.08283C247.549 -1.88629 247.342 -2.24704 246.95 -2.82094L246.826 -2.75535C245.815 -3.78838 247.673 -3.34566 248.168 -3.91957C248.024 -4.14913 248.375 -4.96899 247.57 -4.85421L248.664 -5.88724H247.446C247.404 -6.47754 248.209 -6.59232 247.508 -7.14983L246.413 -7.21542L245.959 -5.73966C245.65 -6.51034 244.927 -5.98562 244.741 -6.82189C245.877 -5.85444 245.381 -7.46138 246.393 -7.51058L245.815 -8.15007L246.104 -7.9861C246.682 -8.44522 245.732 -8.5764 245.897 -9.13391C245.257 -8.49441 244.473 -8.08448 245.196 -7.21542C244.617 -7.85492 243.998 -9.10111 243.978 -9.39626C243.565 -10.0522 244.432 -10.4785 244.576 -11.0852C244.927 -9.90458 247.9 -11.3639 246.971 -9.06832C246.764 -9.11751 246.826 -9.29788 246.971 -9.37987C245.546 -9.11751 246.971 -7.9861 247.487 -7.46139C248.292 -7.55977 248.457 -7.03505 248.953 -7.90411C248.437 -7.62535 247.198 -8.72397 247.92 -9.54384L249.613 -9.33068L249.902 -10.5605L249.985 -10.4457C251.12 -10.872 249.861 -11.7739 250.563 -12.5937C249.985 -13.2332 250.645 -15.5617 248.788 -14.627C249.902 -15.3485 248.581 -16.07 248.416 -16.9062L247.652 -15.906C246.517 -17.185 247.281 -16.7915 245.402 -17.8737C245.877 -17.9557 246.269 -18.1524 246.744 -17.9393C246.93 -19.579 247.611 -21.9074 246.29 -22.9568C246.455 -24.1211 248.478 -24.1866 247.838 -25.8592C247.631 -26.2199 246.228 -25.6788 246.806 -26.7282C246.93 -26.7938 247.982 -25.6296 247.941 -26.8266C246.703 -27.7613 248.829 -28.7943 247.797 -29.9749C248.313 -30.5324 248.23 -31.5654 249.242 -31.2867C248.932 -30.3684 249.035 -29.0402 249.51 -28.8107C248.891 -28.9747 248.849 -28.1876 248.416 -28.8927C247.508 -27.5317 248.994 -27.9416 248.333 -26.7118C248.746 -26.597 249.531 -27.3021 249.18 -27.5809C250.604 -27.5153 249.655 -25.0557 251.451 -26.0887C251.678 -27.4169 248.767 -27.9908 250.356 -29.073C251.182 -28.5647 250.398 -27.8596 251.822 -27.1873L252.483 -28.1056L251.512 -28.8599L251.719 -28.8107C253.164 -30.434 250.377 -30.4504 249.82 -32.0082C248.746 -31.1883 247.384 -32.3525 246.702 -31.7294C246.62 -32.7624 246.888 -33.4839 248.313 -33.4183C249.283 -31.4506 249.799 -33.2216 251.038 -31.3851C251.574 -31.6474 253.081 -30.8439 253.329 -31.877C252.441 -33.1068 252.111 -31.5982 251.76 -32.7952C251.884 -32.8608 252.029 -32.9264 252.235 -32.8608C251.554 -33.4347 252.565 -33.4675 251.822 -34.1726L252.091 -34.0086C253.04 -34.7629 251.203 -34.9433 252.214 -35.5828C251.141 -35.3696 251.389 -36.1075 250.79 -36.5666C250.315 -35.8943 248.767 -35.5992 248.726 -34.2054C249.551 -33.9922 250.006 -34.0578 250.356 -33.4675V-34.3694C250.46 -34.1726 250.666 -34.0086 250.811 -33.8119L250.295 -32.9756C249.799 -34.107 248.87 -33.6643 248.044 -34.1726C248.519 -35.1564 247.9 -35.0089 248.23 -35.632C249.448 -35.5008 250.501 -37.4357 251.409 -38.5343C251.347 -38.3539 251.347 -38.1244 251.306 -38.0096C251.987 -37.1241 252.38 -38.5179 252.73 -38.5343L252.173 -39.1902C252.235 -39.0754 252.524 -38.895 252.71 -39.141C252.565 -39.9773 251.347 -40.01 251.203 -40.8627C251.884 -40.8791 252.834 -40.1084 253.247 -40.6003C253.845 -40.7315 255.476 -41.1907 254.981 -42.3385C254.733 -42.4368 254.609 -42.732 254.547 -43.0599C254.568 -43.0108 254.588 -42.9452 254.65 -42.9288L255.476 -43.6011C256.55 -42.896 254.795 -42.3877 255.889 -41.6826L256.983 -41.5514C256.942 -41.0595 257.355 -40.3872 257.871 -40.0428C258.139 -40.7643 257.871 -40.9447 257.706 -41.781C258.408 -41.8465 258.862 -41.2398 258.924 -41.1415L258.325 -41.3054C257.313 -40.3872 259.233 -39.7641 258.903 -38.5671C258.841 -38.3867 258.779 -38.5015 258.573 -38.5671C259.522 -37.5177 257.974 -36.6322 259.275 -35.5828L258.738 -35.9271C259.13 -35.2384 260.08 -33.8938 260.988 -32.5657L261.422 -32.5329C261.69 -32.6641 261.628 -32.1885 261.422 -31.9426C261.876 -31.2703 262.289 -30.6308 262.619 -30.1061C262.887 -30.2536 263.135 -30.4504 263.218 -30.68C262.743 -30.9095 263.259 -32.0574 262.123 -31.959C262.867 -32.4509 261.958 -33.3855 262.433 -33.7627C261.628 -33.0904 261.422 -34.3366 260.802 -34.5006C261.545 -34.6973 260.864 -35.5828 261.814 -35.4188C262.082 -35.55 261.132 -35.1073 261.69 -34.7629C262.516 -33.943 262.619 -36.1075 263.383 -35.1073C262.825 -36.3534 263.279 -37.9112 262.516 -39.2066L262.061 -38.5343C262.247 -39.0754 262.165 -40.3872 262.639 -40.4528C262.701 -40.0428 262.64 -39.5509 262.784 -39.0262C263.857 -38.9278 262.908 -40.2888 263.589 -40.3052L261.938 -41.9449L261.814 -41.289C261.194 -41.7482 262.144 -43.0927 262.412 -44.1094C263.837 -43.4207 262.247 -42.5516 262.743 -41.4202C263.218 -40.6003 264.229 -41.8138 264.497 -41.0431C264.869 -41.2071 264.869 -41.699 264.518 -41.9613L264.828 -42.2401C266.108 -41.4858 265.653 -40.01 266.727 -38.9442C266.582 -39.0426 266.438 -39.1246 266.293 -39.1574C265.695 -38.4359 265.633 -37.6488 265.922 -36.8946C266.397 -37.2553 266.108 -37.4357 265.984 -37.6652C266.314 -37.6652 266.397 -36.9601 266.727 -36.665C267.181 -37.3373 267.532 -36.747 267.8 -37.1733C268.069 -36.6978 267.945 -36.3534 267.759 -35.8123C267.222 -35.5664 267.078 -36.0911 266.417 -36.0747C266.768 -35.4844 265.137 -35.3204 265.819 -34.4514C266.211 -35.5336 267.243 -34.0742 267.656 -33.6643L267.718 -33.8447C268.461 -33.4511 268.461 -33.156 267.718 -32.9592C267.449 -33.4347 267.718 -33.8447 266.892 -33.7627C266.892 -33.4675 266.892 -33.1724 267.099 -32.8116L266.562 -33.156V-31.6638C267.264 -31.3851 268.213 -30.9423 269.225 -30.68C268.544 -30.3684 269.039 -29.8437 269.266 -29.483L268.977 -29.6633C268.317 -29.0402 268.709 -27.5645 269.307 -27.4169C268.709 -26.9742 265.612 -30.9259 265.922 -27.5973C265.819 -26.3511 267.842 -26.7118 268.482 -25.9575C268.482 -25.9575 268.275 -26.0067 268.151 -25.9575C267.966 -25.4164 268.709 -25.3181 268.998 -24.8589C269.328 -25.1705 269.369 -25.646 269.101 -25.81C269.927 -25.5968 268.936 -24.6786 269.555 -24.2194C268.317 -24.8261 268.977 -23.1864 268.358 -23.6455C267.449 -22.5961 268.358 -21.3827 269.266 -20.776C267.594 -20.1201 269.369 -19.4806 268.544 -18.3164C268.606 -18.4968 268.378 -18.8411 268.585 -19.0871C267.615 -19.825 267.966 -17.8737 267.099 -18.9723C267.243 -18.7427 267.635 -18.9231 267.491 -19.1691C267.408 -19.579 266.995 -19.9725 266.521 -19.9069L265.55 -18.9723L265.323 -19.333L263.981 -17.9065C264.188 -17.8573 264.456 -17.9885 264.58 -18.054C263.919 -16.3487 264.477 -14.3483 264.208 -12.8561C267.078 -12.4462 265.179 -9.08472 266.892 -7.80573C266.087 -8.16647 264.642 -8.39603 264.023 -8.21566C263.919 -8.49442 262.784 -9.10112 263.073 -9.70782C263.548 -9.7898 264.126 -10.5277 264.621 -10.0194C264.415 -11.7411 263.341 -9.83899 262.309 -10.3801C262.454 -8.47802 264.085 -7.29741 264.704 -6.08401H264.353L264.952 -5.14937C265.179 -5.87085 266.81 -5.78886 266.19 -4.85421L266.108 -4.96899C265.385 -4.44428 266.149 -3.29646 266.004 -2.4602L266.913 -1.8535C266.768 -1.01724 264.993 -1.03363 263.94 -0.787674C263.754 0.540508 265.158 1.34398 265.963 2.31142C265.158 2.72135 264.931 4.70542 264.023 3.6232C264.663 4.8366 268.771 4.68902 266.438 6.6895L265.715 6.14839C265.798 8.11607 267.181 10.9364 266.376 11.8219C263.734 11.0512 263.589 14.2159 260.967 14.5274C261.566 14.4454 261.752 15.1833 262.061 15.2981C261.752 15.4621 261.442 15.7244 261.979 16.0196C262.516 15.2653 264.683 16.5935 263.651 15.1177C265.426 15.8884 266.81 16.8558 266.686 18.4792L265.592 18.4464L265.943 17.1674C265.137 17.2822 265.199 16.6263 264.848 16.3475C264.188 18.7251 262.309 16.0032 262.412 18.4464C263.114 18.6923 262.825 18.5284 263.094 19.1679C263.052 18.8727 262.309 18.8071 262.289 19.2826L263.156 19.7582C261.318 20.5944 262 18.3316 260.72 19.0531C259.873 18.102 259.46 16.4459 258.057 16.741C257.52 18.2824 260.637 18.1676 259.976 19.7746L259.378 19.9385C259.77 20.5124 260.72 20.6108 261.298 20.9224C260.967 20.9552 260.699 21.0863 260.596 21.4471C261.979 22.4145 262.247 23.054 263.754 23.9559C262.639 21.5947 264.848 21.9554 263.878 19.5286C264.332 19.9057 264.621 21.6274 266.128 21.7422L265.034 21.7094C265.592 22.4965 266.128 23.2836 265.757 24.2838L265.158 23.6771C265.881 24.9889 263.465 25.8416 265.282 26.891C265.385 26.5302 265.344 26.2351 265.179 26.0055C265.653 26.6778 265.55 27.5305 265.364 28.252L267.16 29.7769C266.624 29.7769 266.582 30.728 265.715 30.2524C264.89 31.3511 266.5 31.8594 266.768 32.4825C265.612 33.5975 266.252 31.515 264.745 31.4002C264.25 32.9416 264.704 34.5813 265.674 35.434C265.901 35.1224 266.087 34.9585 266.355 34.9749C266.004 35.0241 266.108 35.6472 266.087 35.9915L266.789 36.2211C266.314 36.795 265.901 36.713 265.364 36.2211C265.22 36.7786 266.603 37.4181 265.592 37.992C264.725 37.0573 265.468 35.8603 264.931 35.3684C265.612 37.3361 262.784 37.3525 263.734 39.8449C263.403 39.8777 262.722 39.4677 262.722 39.9432C263.011 41.0583 264.188 40.222 264.972 40.5663C264.518 39.7137 264.952 39.3037 265.819 38.8118L266.397 39.0414C266.108 39.0742 266.087 39.6153 265.798 39.7793L266.975 39.9105C265.674 39.8613 264.704 40.7303 265.199 41.4026C266.128 40.7139 266.087 40.8943 267.553 40.6975C268.956 41.6322 266.19 41.7797 267.697 42.8292C267.284 42.7472 266.954 41.8289 266.644 42.6324C266.603 43.3047 267.615 43.1899 267.945 43.6326C266.851 43.1407 266.066 43.2883 264.766 42.7472C264.601 41.5666 264.766 42.2717 264.291 41.1239L263.403 42.1077C263.218 41.1075 262.165 41.3862 261.752 41.3042C260.678 43.0259 263.403 42.5832 263.156 43.6818C263.899 44.2065 263.3 42.6488 264.085 43.4687C263.94 44.5017 264.786 43.6982 265.282 44.846L264.786 44.6657C264.146 45.0264 264.952 45.3708 265.055 45.7807C265.385 46.2234 268.791 45.2232 268.895 47.0597C268.585 46.9777 268.399 46.9449 268.275 46.9449L259.192 45.2724C259.233 47.1581 259.047 49.3225 258.511 51.5198C256.756 52.0609 257.004 49.9948 256.199 50.1424L256.529 49.1421C257.272 49.1913 256.839 51.2246 258.118 50.3063C257.52 48.5518 258.366 47.7484 256.797 46.0922C255.022 46.6334 257.148 48.2895 255.806 49.3881C255.91 48.929 255.703 48.5518 255.435 48.1747C255.228 49.1913 255.022 50.29 254.795 51.4706L255.228 51.7165C255.394 50.9294 255.538 50.3883 255.6 50.3227C255.476 51.3558 256.488 52.2248 257.788 52.2576L257.829 52.0773L258.242 52.438L258.015 53.1759L258.139 53.3235ZM263.3 120.339C263.176 120.29 263.011 120.257 262.825 120.224C263.011 120.241 263.135 120.192 263.3 120.339ZM253.432 33.04C253.247 34.4337 252.875 35.8275 252.73 37.1557C255.29 34.7289 257.231 33.0564 257.19 37.0573L257.375 37.3197C257.685 36.795 257.726 35.8931 257.54 35.0404C256.632 34.3518 253.288 32.1381 252.999 32.1709C252.276 32.4169 253.061 32.7776 252.854 33.2203L253.453 33.04H253.432ZM257.726 32.0561C258.015 31.2691 257.437 31.4494 256.942 31.3347L257.128 32.1545C257.251 32.0561 257.437 32.0069 257.726 32.0561ZM256.426 31.3675C256.426 31.4494 256.384 31.5314 256.322 31.5642L256.426 31.3675ZM255.93 46.6333C255.93 46.6333 255.93 46.5842 255.889 46.5514C255.848 46.7317 255.806 46.9285 255.786 47.1253C255.868 47.0433 255.93 46.9121 255.93 46.6333ZM257.169 45.0264L256.219 44.846C256.178 45.0264 256.157 45.1904 256.116 45.3708C256.55 45.3052 256.901 45.2396 257.148 45.01L257.169 45.0264ZM260.162 39.8777C259.027 39.5661 258.965 38.4839 257.664 38.4347C257.334 38.3691 257.21 38.5987 257.107 38.8446C257.086 39.1234 257.045 39.4349 257.004 39.7629C257.19 39.7629 257.375 39.8285 257.54 39.9432C257.706 39.6317 258.015 39.4021 258.82 39.5333C257.086 40.3696 260.08 40.2548 259.646 41.1403C260.575 41.419 260.534 40.1564 260.162 39.8941V39.8777ZM259.316 -27.958C259.44 -27.9744 259.729 -28.04 260.1 -28.1548L260.678 -27.4989C260.307 -26.4167 258.366 -25.6132 259.894 -24.531C259.46 -24.0883 258.573 -23.8751 257.85 -23.6783C257.912 -23.9079 258.015 -24.1211 258.139 -24.285C256.033 -27.2037 260.74 -25.6132 259.316 -27.958ZM256.054 -15.3157C255.972 -15.4305 255.765 -15.4797 255.765 -15.4797C257.974 -12.8889 258.531 -10.8392 258.346 -9.49465C259.316 -9.72421 260.121 -10.8884 260.554 -11.4295L261.587 -10.8884L260.72 -10.6097L261.649 -9.69142C262.392 -9.90458 262.289 -10.6097 262.867 -11.0688C262.66 -11.118 261.504 -12.6757 260.885 -13.1185L260.059 -11.9379C260.389 -12.2494 260.245 -13.8563 260.018 -14.5122C259.481 -14.545 258.573 -13.4956 259.729 -13.2988C258.924 -13.2004 259.006 -14.463 258.077 -13.7088C257.293 -14.6926 258.098 -16.1684 258.552 -16.857L259.894 -16.9226C260.472 -17.6605 258.304 -17.5129 259.151 -18.382C259.336 -17.2506 260.637 -18.4968 260.678 -17.6113C261.215 -17.8737 262.103 -17.5457 262.061 -18.4476C260.327 -19.2674 263.238 -19.333 261.731 -20.1037C262.33 -20.5464 262.763 -19.5462 263.073 -20.4644C262.227 -21.5631 261.545 -21.5303 260.265 -21.6615C259.811 -20.694 261.855 -20.4645 261.483 -19.6774L259.398 -21.3991C259.068 -21.1203 259.006 -20.9072 259.089 -20.7104C258.986 -21.0384 258.676 -21.3335 258.242 -21.5959C257.995 -21.7434 257.788 -21.8746 257.623 -22.0058C257.54 -21.0875 257.437 -20.2841 256.88 -20.1693L256.261 -20.3333C255.662 -20.0381 256.075 -19.4806 256.508 -19.2183C256.508 -18.3984 257.334 -17.5457 256.508 -17.3982L255.951 -17.7425C256.075 -16.7259 256.137 -16.6111 256.054 -15.3485V-15.3157ZM253.143 17.7085C255.455 17.1182 257.499 16.4787 257.169 13.6256L257.313 13.8551C258.8 12.445 255.497 11.0184 257.169 9.31307C258.015 10.1821 257.933 10.1329 259.894 11.1004L259.275 10.1821C260.513 10.4609 259.894 9.54263 259.976 8.87034L261.442 9.49344C261.009 9.88698 260.802 10.92 261.153 10.8872C260.988 10.6576 259.233 12.2154 259.625 13.0844C260.637 13.0189 260.286 11.1824 261.917 12.0186C261.256 11.2807 262.268 11.2152 261.917 10.4609C262.578 11.1988 263.3 10.6576 264.002 11.2152L263.692 9.98536C264.023 9.96896 264.374 11.7891 265.653 10.8052C265.137 10.2969 265.86 9.00152 264.766 8.95233H265.096C265.364 8.01768 263.568 8.4932 264.229 7.37819C263.672 7.34539 263.3 7.55856 263.403 7.96849C263.63 8.31283 264.374 8.37842 264.518 9.0999C263.651 9.39505 264.663 8.24725 263.197 8.70637C262.474 8.93593 263.754 10.5757 262.144 10.0345L262.412 9.1163C261.318 9.06711 261.401 8.41122 260.534 8.41122C260.142 7.83731 261.401 7.329 260.472 6.73869C259.77 6.47634 258.449 6.86987 259.047 5.93522C260.699 5.23014 260.431 3.0329 260.265 2.19664L259.605 1.45876C258.924 1.50795 259.626 2.83613 258.779 2.34421L258.573 1.21279L258.986 1.31118C259.089 0.934041 258.676 0.556903 258.449 0.196162C259.213 0.5733 258.862 1.36037 259.997 1.24559C260.245 0.720875 260.678 0.655286 260.472 0.163367C260.554 0.278148 260.658 0.360139 260.823 0.360139C261.36 -0.689289 259.605 -0.705692 259.254 -0.984447C257.829 -2.09946 257.829 0.0485884 256.673 -0.115385L256.199 -3.26367C256.55 -2.98492 256.901 -2.70616 257.375 -2.78815C257.933 -3.54242 258.263 -2.78815 258.263 -3.85398C256.715 -3.82118 257.355 -5.24774 256.508 -6.03482C257.169 -6.36276 257.293 -6.44475 257.272 -5.65768C258.284 -5.70687 257.953 -6.7727 258.057 -7.13344C257.809 -7.363 257.685 -7.72374 257.479 -7.9697C256.962 -7.67455 256.343 -7.83852 255.951 -8.52721L255.744 -8.5764C255.414 -7.47778 254.217 -5.78886 255.228 -5.06737L254.733 -5.28054C253.804 -4.01795 256.405 -2.42741 254.465 -1.90269C253.721 -1.98468 254.279 -1.65673 253.185 -1.70593L253.99 -0.738484L253.515 -0.951651L253.68 0.671685L253.474 0.622496C254.423 1.40957 255.187 2.03266 255.827 2.52458C256.302 2.52458 256.446 2.49179 256.777 2.75414C257.004 3.0165 257.024 3.21327 256.962 3.37724C256.818 3.77078 256.116 4.01673 255.827 4.49226L255.765 3.0001C254.96 2.85252 254.114 2.96731 253.536 3.68879C253.515 3.39364 252.896 3.24606 252.792 3.60681C252.999 3.656 253.267 4.60704 253.928 4.26269C254.176 5.68926 251.987 7.95209 253.432 10.1493C252.565 8.57519 252.318 11.3791 252.029 9.64102C250.707 10.8216 253.267 10.7068 253.019 11.9202C252.545 12.0186 253.102 11.248 252.194 10.9528C251.616 12.9861 254.155 14.429 253.742 16.3967L252.73 16.4623C252.854 16.8394 252.978 17.2494 253.123 17.6921L253.143 17.7085ZM254.341 21.6274C254.444 22.0046 254.547 22.3981 254.671 22.7917L254.712 22.6769L255.497 23.8247C255.91 23.1196 257.024 22.6769 257.52 23.6607C257.107 23.5787 256.591 23.8575 256.343 23.5131C255.724 24.169 255.125 25.5956 256.653 25.2349C255.228 23.9723 258.593 24.9561 257.54 23.9559C258.531 24.497 258.077 25.0217 258.511 25.5136C257.685 24.9889 256.632 25.6284 256.24 26.3991C256.488 26.7434 256.24 27.6617 256.653 28.2356C257.582 28.0388 258.118 28.5307 258.346 27.6125C258.593 27.9568 258.779 28.4815 258.304 29.0554C258.139 28.8259 258.036 28.4159 257.685 28.4487C256.839 28.8259 256.859 29.2686 256.508 29.5146C256.55 29.7113 256.612 29.9081 256.653 30.1049C256.735 30.0557 256.839 30.0065 256.962 29.9573L257.788 30.6132C257.355 29.7441 258.222 30.2196 258.758 30.2196C257.664 30.2032 258.614 30.7772 258.655 31.0723L259.811 30.4328C260.389 30.7444 258.986 31.5314 260.121 31.3675C260.575 30.0065 260.389 29.4818 260.038 28.252L259.151 28.7439C258.511 27.3501 260.678 27.8912 260.637 26.3335C259.811 25.6776 260.616 23.9887 258.986 23.9559C259.481 24.1526 260.451 23.0048 259.729 22.4637C258.242 21.857 258.077 20.0697 257.375 20.6108C257.355 21.0863 258.16 21.7586 257.19 22.1358L256.901 21.2011L256.075 21.8078C256.364 21.4963 255.579 21.5127 254.382 21.6438L254.341 21.6274Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.612 106.086L248.871 111.267C248.52 109.775 248.272 108.398 247.612 106.086Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.781 25.7571C258.677 25.642 258.595 25.5763 258.471 25.4941C258.554 25.5763 258.636 25.6585 258.781 25.7571Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.839 32.1704L240.303 31.6621L240.137 32.2852C240.344 32.1048 241.335 32.4328 240.819 32.154L240.839 32.1704Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.801 35.7113L242.554 34.875L242.657 35.7932L242.801 35.7113Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.552 39.5977L240.304 39.7452L240.8 40.4339L241.048 40.2863L240.552 39.5977Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.974 34.4458C267.119 33.8883 265.901 33.462 265.653 33.6096L265.715 34.6754C266.768 34.3966 265.674 34.3802 265.942 33.7571L266.974 34.4458Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.461 68.3253C242.739 68.1121 243.09 66.8987 243.75 66.8167C244.039 66.9643 244.349 67.6038 244.762 67.1775L242.986 66.292C243.998 64.9966 245.319 67.1775 245.959 67.7678C246.124 66.4888 244.968 66.1445 244.906 64.7835C244.762 65.1934 244.349 65.4558 243.998 65.6853C242.78 65.7673 243.255 64.4883 243.11 63.5865C242.615 64.1768 242.14 63.8652 241.645 63.4553C241.603 63.3733 241.521 63.3405 241.459 63.2913L241.273 63.1602V63.2749C241.149 63.2749 240.984 63.3077 240.757 63.3897C241.149 64.144 240.158 64.7507 240.158 65.2426C242.119 64.7015 240.695 66.8987 241.335 67.489L241.562 68.1941V68.4565C241.356 68.5221 241.087 68.4565 240.674 68.0629C241.087 68.3909 241.005 69.5223 241.624 69.3911L241.789 71.9655C241.706 72.0475 241.624 72.1295 241.479 72.1951C241.603 72.2771 241.706 72.2935 241.81 72.2771L242.697 83.4928C242.801 82.9353 243.234 82.427 243.399 81.8531C244.762 82.6402 243.564 80.9021 244.844 81.0988C245.319 81.4596 245.216 82.0335 244.927 82.3778C245.567 82.4762 246.083 81.9679 246.847 81.9843C247.549 80.5413 244.514 80.4593 244.886 79.0492C245.649 79.0656 246.331 79.4755 246.166 78.5736L246.351 78.8032C245.422 77.393 247.982 77.6062 245.856 76.7863H246.95C246.083 76.1468 246 74.8678 245.794 74.1628L246 74.1955C244.617 72.2279 245.649 73.0805 244.989 70.8341L246.31 71.8343C246.785 71.0309 245.402 70.9161 245.505 70.3422C245.711 70.375 246.516 70.211 246.723 70.7357L244.659 68.0465C243.812 67.4235 243.874 68.2105 243.399 68.3253H243.461Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.908 64.7837C244.948 64.6361 244.969 64.4722 244.908 64.2754C244.887 64.4722 244.887 64.6197 244.908 64.7837Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.802 84.2793L242.719 83.4922C242.678 83.7381 242.678 84.0005 242.802 84.2793Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.348 60.9138C241.811 61.4058 241.543 60.5695 241.13 60.5039L241.233 62.2092C241.646 62.1928 242.121 62.3404 242.513 62.3076L242.348 60.9138Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.448 62.7329C240.737 62.7821 241.005 62.9625 241.273 63.1593L241.211 62.2246C240.902 62.2246 240.613 62.3558 240.448 62.7493V62.7329Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.804 61.9141L262.866 62.2092L263.196 62.6519L262.804 61.9141Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.195 66.6337C261.814 66.2566 261.298 65.6007 261.133 65.3711C261.195 66.1418 260.926 65.8138 261.195 66.6337Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M267.946 65.4551L268.359 66.1766L268.483 66.111L267.946 65.4551Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.549 89.8711L247.652 90.2326C247.652 90.0683 247.611 89.9533 247.549 89.8711Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.98 83.4093C244.907 85.2786 244.865 82.2615 243.358 82.9174L243.957 83.8849L243.524 83.8193L243.751 85.0163C244.453 84.7375 244.473 84.5407 245.237 84.5571C245.072 86.1805 244.391 85.1147 243.544 86.3445L243.833 88.1318L243.585 88.0006C243.606 88.1482 243.709 88.2138 243.833 88.2629L244.803 94.2972C245.505 95.363 246.104 93.6085 247.281 94.3627C247.157 93.0838 247.817 91.1489 246.31 91.1161C246.517 91.1489 246.95 91.2145 247.095 90.9357L245.794 90.2634L245.464 90.9849C244.164 90.3126 244.246 87.8858 244.969 87.4103C245.505 88.7549 246.93 87.9842 246.269 89.9355C246.641 89.8371 247.281 89.4436 247.528 89.8699C246.909 87.6726 247.425 85.6394 245.96 83.4093H245.98Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.747 105.66H248.601C248.601 105.66 248.727 105.693 248.747 105.66Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.849 104.908L247.281 103.924L247.57 105.613L248.622 105.662C248.354 105.531 247.755 104.973 248.148 104.711L248.87 104.908H248.849Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.269 102.727C246.785 103.579 248.003 103.448 248.519 102.923C249.159 103.694 247.26 103.432 248.602 103.891C249.469 103.809 248.87 102.858 248.685 102.645L246.29 102.71L246.269 102.727Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.249 96.2334L246.786 96.4629L246.868 95.8398L246.249 96.2334Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.786 96.4629L246.704 97.0696C247.075 97.004 247.426 96.9384 247.674 96.8236L246.766 96.4629H246.786Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.516 98.6602C246.454 98.9225 246.413 99.2013 246.413 99.5456L246.516 98.6602Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.765 97.9531L246.6 97.9859L246.517 98.6582C246.579 98.4123 246.662 98.1827 246.765 97.9531Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.702 97.0703C245.856 97.2179 244.989 97.3819 245.298 98.2345L246.599 97.9886L246.702 97.0703Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.954 70.9171L267.47 71.573L267.594 71.4911L267.078 70.8516L266.954 70.9171Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.418 74.834C266.583 74.9983 266.748 75.1134 266.913 75.2284C266.81 75.0641 266.666 74.9162 266.418 74.834Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M272.424 77.4749C271.619 78.2948 271.227 76.4419 270.938 77.9177C270.154 78.0816 269.08 77.4421 269.431 76.7371C270.195 76.7535 269.947 77.393 270.69 76.9338C269.782 76.5075 270.381 76.3107 269.245 76.5239C268.482 75.786 267.676 75.7368 266.913 75.2285C267.47 76.1468 266.438 78.1472 267.965 79.2787C269.369 79.869 271.206 79.3934 273.168 79.3114C273.622 79.1967 273.725 77.5077 272.424 77.4913V77.4749Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.304 76.1477C274.387 75.7869 274.304 75.6721 274.118 75.459C273.458 75.541 274.263 75.8525 274.304 76.1477Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.143 85.2638C260.432 85.313 260.824 85.9689 261.299 85.8049L260.865 84.8047C260.844 85.0506 260.494 85.149 260.143 85.2638Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.658 84.3613L260.844 84.805C260.844 84.69 260.802 84.5585 260.658 84.3613Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.957 85.3151L260.122 85.2656C260.122 85.2656 259.998 85.2656 259.957 85.3151Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.269 101.184C245.732 101.2 246.104 101.643 246.269 101.856C246.29 101.659 246.455 101.397 246.269 101.184Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M250.336 118.189L249.964 118.633C250.191 118.469 250.315 118.387 250.336 118.189Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.82 123.141C265.923 123.141 266.027 123.157 266.11 123.19C266.048 123.157 265.944 123.141 265.82 123.141Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.107 123.189C266.582 123.419 266.004 124.321 266.727 124.567H266.52L266.995 125.075C266.871 124.55 266.809 123.452 266.107 123.206V123.189Z\",\n    fill: \"#3F3834\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.656 115.861C133.739 115.976 133.822 116.091 133.987 116.141C133.925 115.96 133.801 115.878 133.656 115.861Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M114.375 96.3314C114.479 96.3314 114.562 96.3314 114.645 96.3314C114.583 96.2984 114.479 96.2984 114.375 96.3314Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M132.604 120.928C132.604 120.928 132.77 120.961 132.874 120.961C132.77 120.944 132.687 120.928 132.604 120.928Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M113.241 26.1172C113.241 26.1172 113.324 26.1997 113.344 26.2492C113.344 26.1997 113.324 26.1502 113.241 26.1172Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.195 92.3625C134.091 92.2965 133.987 92.247 133.884 92.2305C133.946 92.313 134.05 92.3625 134.195 92.3625Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M131.51 92.2972C132.295 93.2974 133.059 92.084 133.884 92.2316C133.657 91.9692 133.823 91.3953 133.203 91.6741C134.855 91.1494 132.295 90.0999 133.595 89.526C133.43 89.5096 132.894 89.8376 132.481 89.444C132.316 88.8537 133.079 88.9029 133.43 88.657C132.956 88.4766 132.625 87.5911 132.852 87.6895C132.439 87.296 131.242 88.0995 130.54 87.5583C129.425 87.1976 130.375 86.6893 130.065 86.263C130.829 85.7382 130.602 86.7877 130.974 87.0008L130.458 85.5251C131.036 85.0988 131.531 85.7218 131.407 86.1482C132.109 85.5579 131.469 84.8036 130.561 84.6396C130.767 84.2789 130.561 84.0821 130.932 83.7214C131.449 84.0657 133.017 84.0493 133.286 84.5904C133.183 85.4759 132.068 84.2625 131.841 85.0332L132.79 85.0988C132.254 85.4267 132.956 85.6727 133.038 86.0334C132.811 86.2302 132.708 85.9842 132.563 85.8694C132.646 86.4925 132.13 87.0008 133.203 87.4764C134.07 86.6237 132.894 85.3611 133.967 84.984L132.646 83.295C132.212 83.295 131.51 83.8854 130.87 83.4098C131.985 83.2131 132.481 82.7211 132.687 82.0653C131.49 82.3112 131.614 81.0322 130.643 81.3602C131.242 81.6553 130.231 81.8193 130.148 81.8521C130.065 81.229 129.033 81.7701 128.971 81.4258C129.24 80.2779 129.735 81.4749 130.169 80.3435C130.705 80.5895 131.923 81.1798 132.419 81.8193C132.956 81.7701 132.336 81.1962 132.956 80.9338C132.316 81.311 131.82 80.6715 131.552 80.983C131.036 80.0648 129.797 79.0154 129.529 77.9167C131.304 78.0807 130.891 79.7696 132.997 79.4253C132.728 78.8842 131.861 78.8842 131.985 78.4578C133.059 78.0807 132.109 77.1789 132.088 76.441L131.552 76.7689C131.118 76.4902 131.449 75.9655 131.552 75.6375L131.779 75.7195L131.449 75.3915C131.449 75.3915 131.552 75.326 131.614 75.326C131.056 74.9652 131.593 74.0634 131.263 73.3911C130.396 73.3911 131.221 74.0634 131.139 74.3913C130.932 74.4733 130.561 75.1128 129.962 74.8012C129.962 73.965 128.909 73.3747 128.93 72.4236L128.662 72.7352C128.063 72.44 128.352 72.0137 128.311 71.571C128.909 70.7511 129.529 72.1777 130.024 71.6694C130.788 71.9973 129.921 72.5548 131.036 72.6368L132.254 72.1121C131.51 71.6858 132.625 71.1938 132.46 70.8987L131.923 71.2266C130.974 71.161 131.696 70.8659 131.82 70.7019L130.437 70.9315C130.21 71.407 131.407 71.7349 130.602 72.0793C130.169 71.243 129.054 71.4398 129.013 70.4232C129.549 70.374 129.219 70.6199 129.611 70.7183C129.983 70.374 128.868 70.0132 129.302 69.4393C129.632 69.7673 130.189 70.2756 130.912 69.8656L129.88 69.5705C130.045 69.3081 130.458 69.4229 130.478 69.3081C130.685 68.931 129.405 69.3901 129.673 68.8162C129.88 68.7342 130.107 68.5375 130.354 68.6195C130.396 67.9472 130.024 68.2915 129.508 67.6684C129.508 68.2259 127.939 68.2587 127.753 67.6684C127.918 66.8485 127.051 66.291 128.352 65.7171L127.671 65.3564C128.641 65.5859 128.001 64.8317 128.166 64.5693C129.24 64.4873 128.146 65.7991 129.88 65.7991C130.045 65.258 130.581 65.4876 131.056 65.6679C130.891 65.0776 129.818 65.4548 129.116 65.1924C129.549 65.1924 129.24 64.1922 130.189 64.5365C130.251 64.0446 129.136 63.9462 129.343 63.5855C129.776 63.6347 130.334 63.7003 130.87 63.6675C130.499 63.6183 130.953 63.1592 130.994 63.0608C130.788 63.1428 130.086 62.8968 130.396 63.3231C129.549 63.2247 130.354 62.3065 129.653 62.3229C130.623 62.2737 129.859 61.3882 130.251 60.9291C127.96 60.9783 131.118 61.7654 129.24 61.9294C128.455 61.3226 129.157 59.8961 128.146 58.9122C128.579 58.076 129.013 58.9122 129.859 58.7319C130.231 59.5025 129.549 59.6993 129.962 60.3716C130.354 59.6337 130.127 58.4203 129.405 57.8792C129.302 57.0757 131.676 56.9774 131.118 56.0099C130.375 56.1411 130.21 56.1247 129.942 56.4199C129.673 56.1575 129.942 55.8623 129.942 55.5672C129.467 55.4032 129.384 56.0099 128.971 55.6164C129.116 55.4688 129.198 55.1409 129.714 55.2065L129.776 55.272C129.095 54.3374 131.552 54.5998 130.148 53.7963C129.776 53.8619 130.251 54.0422 130.003 54.2226C129.425 54.3702 128.62 53.8783 128.393 53.5011C128.889 53.5667 128.496 53.1732 128.662 52.9108C129.508 52.7305 128.909 53.5667 129.467 53.6979L129.591 52.9764L129.467 53.124L128.662 52.3533C128.93 52.8944 127.629 52.6157 127.526 52.3697C127.691 51.8286 127.857 51.2875 128.806 51.3531C127.857 51.2875 127.898 50.6152 127.691 50.1397C127.361 50.6644 126.886 50.2053 126.577 50.0577L127.506 49.2706C127.774 50.0905 128.352 49.0903 128.992 49.287C129.962 49.5166 129.467 50.0249 129.343 50.4512C131.098 49.5986 128.393 49.2542 129.24 48.5163C129.673 48.5163 130.189 48.5819 130.086 48.9099C130.375 48.7787 129.24 48.2376 129.735 47.7457C129.425 47.8768 128.558 48.1556 128.187 47.6637L129.26 47.0078C129.487 46.2535 128.125 46.7454 127.609 46.1223L126.866 46.5323C125.916 46.4667 126.866 45.6796 125.813 45.6632C125.771 46.0567 126.597 46.2699 126.288 46.6798C125.276 46.8274 125.751 46.1551 125.193 45.9256C125.627 45.0729 125.668 45.2533 126.473 44.6138C128.042 44.581 128.435 45.6468 130.478 45.5156C130.21 44.6958 129.694 43.4988 130.292 42.9577C129.818 42.2198 128.579 42.2854 127.671 42.4001C127.506 42.0886 127.629 41.941 127.877 41.7443L128.393 42.0886C127.877 41.1867 127.34 40.662 127.382 39.711C127.113 39.1699 126.164 39.383 125.421 39.5142L125.255 38.9239L125.049 39.0059C124.037 38.8747 124.368 38.35 124.409 37.9729C124.843 37.9729 124.946 38.2024 125.214 38.186C125.586 37.8417 125.482 37.317 125.049 37.0382C125.482 37.0382 126.453 37.2678 126.164 37.6777C126.061 37.7269 125.895 37.6941 125.792 37.7433L126.37 38.432C125.833 37.6285 126.928 37.153 127.98 37.1694C127.444 36.3659 126.907 37.8253 126.494 36.8743C128.538 35.6117 125.916 34.4802 128.827 33.7752C128.207 33.1849 127.196 32.4962 127.113 31.5779C126.246 31.5779 126.762 30.9712 125.689 31.0696C124.574 31.9551 127.402 32.6929 125.792 33.398C126.205 33.7916 126.928 33.644 127.402 33.8244C127.485 34.1687 127.382 34.4966 126.845 34.5458C126.308 33.7424 124.719 34.3327 124.677 33.316C123.934 33.4472 124.223 34.2671 124.017 34.6442C123.604 34.5458 123.15 34.6442 122.799 34.8902C122.097 34.6278 121.478 34.0539 120.879 33.7588C121.292 33.8571 121.519 33.6604 121.767 33.7588L120.507 32.7093C121.044 32.3814 121.684 32.283 122.159 32.4634C122.427 31.8731 121.23 30.8892 122.53 30.8728C122.324 30.1186 121.767 31.1188 121.395 31.1844L121.333 31.1188L121.457 31.9223C119.95 32.0207 121.808 31.004 120.363 30.8892C117.597 30.7909 121.23 29.7578 120.776 29.2003L122.778 29.8234L122.324 29.2659C123.108 29.5774 124.409 29.561 125.235 30.053C125.276 29.2659 125.854 28.1509 125.482 27.6426C126.143 27.4294 126.783 27.331 127.464 27.413C126.184 26.6423 128.063 26.1668 128.063 25.4781C127.299 24.773 127.093 26.2324 126.081 25.7241C126.577 25.4945 126.164 25.101 125.957 24.9206C126.329 25.1338 125.689 25.9208 125.379 26.4456C125.4 26.052 124.43 26.1176 124.017 26.0192L123.831 26.6751C122.613 26.6587 123.707 25.8717 123.088 25.5765C124.182 25.7405 124.203 25.6421 125.276 25.8061C124.822 25.2486 124.781 24.3959 125.421 23.904C125.854 23.6088 125.978 24.1335 126.288 24.2811C127.031 24.1335 125.813 23.7236 126.721 23.5924C127.402 23.658 126.804 23.9368 127.01 24.1335L127.258 22.4446C127.691 22.4446 127.857 22.8382 127.691 23.1169C128.166 22.5922 127.918 22.2315 126.391 21.6903C126.783 21.1 127.382 20.4114 128.042 20.5917C127.753 20.3294 127.361 20.5261 126.928 20.5589C127.113 19.7719 125.565 19.7555 125.482 19.2963L124.698 19.6899C125.482 18.9028 123.336 19.5751 123.934 18.9028C124.781 18.9684 125.751 18.8864 126.639 18.7224C125.792 18.6568 126.494 18.1977 126.473 17.9026C125.648 18.1321 125.648 17.3287 124.843 17.837C124.099 17.2139 125.214 16.8367 124.099 16.4268C123.872 16.7548 123.17 15.9185 122.592 16.2136C122.468 15.5905 123.418 15.0822 124.347 15.197C124.306 15.4266 123.975 15.8037 124.677 15.7217L124.388 14.5739C124.801 14.2624 124.946 13.8688 125.916 13.754C124.76 13.4589 126.556 12.5898 125.214 12.4095C126.102 12.7374 125.008 13.1473 124.884 13.2949L124.677 13.1309C124.677 13.1309 124.677 13.1801 124.636 13.2293L122.902 12.8686C122.303 13.3933 124.017 12.8686 124.058 13.5409C122.572 14.246 121.519 12.4095 120.631 13.0981C120.198 13.6229 121.684 13.4261 122.303 13.7868V13.6721L123.108 14.5575C122.572 14.6395 122.118 14.3935 122.118 14.3935C122.241 15.5249 121.436 15.7545 121.354 16.9679C121.54 16.8695 123.17 16.5252 123.48 17.0663C123.914 17.427 122.943 17.5418 122.881 17.8698C122.675 17.6894 121.746 17.5582 122.324 17.2631L121.189 17.345C119.723 16.5252 118.67 17.0663 118.133 15.8857C117.287 15.8857 116.771 15.0494 116.936 14.3771L116.213 14.7543C114.686 14.1968 117.369 14.5411 116.048 13.7704C117.514 13.2949 119.186 12.475 120.507 12.8686C120.796 12.2127 119.95 12.0651 119.867 11.524C121.044 11.0649 121.23 11.5732 122.448 11.3928C122.262 10.9829 121.643 10.5238 120.982 10.9009L121.354 10.081C121.622 10.0318 121.663 10.3106 121.643 10.4254C121.849 10.0974 121.168 9.57273 120.672 9.45795C120.755 9.50714 120.982 9.68751 120.796 9.78589C120.404 9.49074 119.723 8.98242 119.372 8.98242C120.074 9.37596 118.691 9.57273 119.578 9.98266C119.248 9.98266 118.567 9.96626 118.691 9.68751C118.03 10.163 118.216 10.5566 117.411 10.8025C117.989 10.409 117.039 10.2778 116.895 10.2286C116.709 10.5566 117.039 11.1305 117.411 11.2944C116.007 11.4748 117.824 12.4423 116.317 12.1799C116.833 12.1963 116.915 12.639 116.626 12.9014C116.028 12.9342 115.594 12.3767 114.872 12.1963C114.025 11.0977 115.904 12.1143 116.296 11.8192L116.069 10.9337C115.883 11.0485 115.037 10.6713 115.202 11.2453C114.294 11.0649 113.592 10.573 114.19 10.0482C113.777 9.98266 113.901 10.3106 113.881 10.409C113.468 10.3434 111.899 9.96626 111.796 10.6877C111.837 10.4746 112.518 10.9665 112.931 10.5566C113.138 10.8189 112.663 11.6552 111.858 11.4256C112.147 11.7372 112.807 12.3439 113.014 12.6226C112.394 12.7538 112.704 12.4095 112.394 12.2947L112.91 13.2621L113.571 12.9178C113.179 13.6885 114.892 14.0328 115.491 14.5903C114.376 14.5903 114.211 14.0984 113.592 13.754C112.291 14.2296 114.314 13.9508 114.19 14.5739C114.005 14.6723 113.736 14.7215 113.385 14.7051L114.417 15.1314C114.294 15.279 114.046 15.2134 113.984 15.1642C115.284 15.9349 115.553 15.033 116.193 16.148C116.688 15.4102 115.367 15.6069 115.388 15.0166C116.151 14.6231 116.895 15.5741 117.39 15.7217C117.184 16.312 115.532 16.476 116.502 17.1319C115.924 16.6564 115.47 17.1647 115.346 16.4596C114.727 16.0989 114.872 16.7056 114.232 16.8203C114.459 17.0007 115.388 16.6236 115.284 17.1483H115.119L116.399 17.919C115.883 18.7388 117.886 19.6571 116.626 20.2802L117.782 20.0998C117.927 20.6081 117.989 21.3296 118.257 21.6739C117.576 21.6084 117.493 21.2804 117.225 20.9361C117.08 21.8543 117.844 22.625 118.815 23.2153C119.64 22.7398 119.558 22.6742 120.115 22.2315C121.787 22.7726 119.145 22.9693 119.991 23.7236C118.856 23.7728 119 23.5104 117.906 23.74C118.711 24.0352 118.567 24.5763 119.248 24.9206C118.154 25.1502 117.184 24.8222 117.06 24.0352C118.009 23.4121 116.255 22.8054 117.163 22.2806L116.461 22.6086C116.09 22.0347 116.275 21.6575 115.697 21.182H115.862L114.706 20.9853V21.264C114.066 21.1 112.993 20.5753 112.952 20.4277C113.179 21.2476 114.995 21.2312 116.028 21.592C116.028 22.3626 114.005 22.7234 115.016 23.1989C114.479 23.2645 113.922 23.6908 113.406 23.3793C113.076 22.9693 113.777 22.6578 112.993 22.6414C113.055 23.0841 112.58 22.9201 112.745 23.5924C113.757 23.6908 114.768 24.1499 115.594 24.6255C116.152 25.1174 116.151 25.7733 115.862 26.1832C115.739 25.6749 114.748 25.1994 114.005 25.3469C115.057 25.6257 113.199 26.3636 114.644 26.1668C114.562 26.7571 114.644 27.7573 113.385 27.8393C112.91 27.2982 113.654 26.7407 113.365 26.2652C113.344 26.3964 113.034 26.5275 112.725 26.462L112.828 25.7733C112.25 26.3144 111.837 26.216 112.002 26.8883C112.105 26.8391 112.291 26.7571 112.374 26.8227C112.415 26.9867 112.374 27.1998 112.394 27.3638L111.259 27.413C111.816 27.9049 110.392 28.9052 111.259 29.807L111.032 29.725C110.805 30.4629 113.055 30.5121 113.344 31.3156C112.807 31.086 112.332 31.2008 111.796 31.25C112.374 31.6435 111.445 31.8731 111.135 32.283C111.796 31.8075 112.353 32.5946 112.704 32.2502C113.839 32.2174 113.86 33.0537 113.736 33.48C112.27 33.7424 112.91 32.1682 111.403 32.8077C111.28 33.234 112.105 33.3324 112.374 33.0373C112.209 33.5784 112.043 34.3819 111.156 34.7754C112.27 35.4149 111.672 35.6609 113.117 36.0708C113.055 35.7264 112.002 35.71 112.58 35.2837L113.654 35.7592C113.736 36.3823 112.787 36.8906 112.663 37.317L112.188 36.8743H112.353C111.878 36.7267 112.147 36.1364 111.341 36.2184C112.353 36.6283 111.383 36.9562 112.085 37.481H111.92C112.766 38.3992 110.268 39.1043 112.374 39.711C112.332 39.5306 113.138 39.1863 113.55 39.3011C113.055 39.5142 113.22 40.1045 112.621 40.0881L112.415 39.8914C112.25 40.4325 112.147 40.7604 112.353 40.9572C113.096 41.1048 113.674 40.9572 114.066 41.3343C113.592 42.2854 112.353 40.9572 111.713 41.5967L112.498 42.4821L111.816 42.6789C111.156 44.0071 113.365 45.0073 113.385 46.4175C112.25 46.4339 111.775 45.4173 111.692 45.0729C110.681 45.5156 112.064 46.1387 111.362 46.7126C111.197 47.2538 112.209 47.6637 112.848 47.5817C113.261 48.254 112.167 48.0572 111.981 48.1392C113.22 48.3524 112.787 49.205 113.055 49.7461L112.353 49.7789L113.22 50.6152C113.282 50.402 113.922 50.5988 114.355 50.5988L114.294 50.812C116.213 49.9921 112.952 48.9591 115.119 48.1064C115.388 48.3688 115.759 48.0244 116.028 48.2704C115.966 48.4835 115.862 48.5327 115.594 48.5491C116.172 48.6803 116.668 49.0247 116.647 48.5655C118.133 48.5819 117.762 49.5002 118.278 50.1233C117.328 50.6316 116.853 49.5986 116.151 49.3526C116.255 49.5986 116.895 49.7789 116.523 50.1397L115.408 50.0577C116.007 50.9267 116.379 50.2873 117.452 50.484C118.876 50.7136 117.39 51.2711 117.493 51.5007L117.225 51.2383C116.75 51.9106 117.927 52.0582 117.844 52.6649L116.957 52.9436C118.071 52.1893 115.408 52.009 115.986 51.5826C114.954 52.6813 113.695 51.3531 112.766 51.0087C112.972 51.4843 112.848 51.927 112.229 52.1729C113.674 52.8616 111.692 53.6323 113.406 54.2882C113.199 54.6653 112.621 53.9603 112.601 54.3538C112.477 55.0753 112.683 55.8295 113.323 56.5838C113.282 56.9774 112.787 56.9118 112.312 57.0266C111.651 58.9122 114.314 59.6501 113.674 61.6998L113.076 61.4046C112.952 61.831 112.745 62.2081 113.55 62.4213C111.631 62.9624 114.727 64.2578 112.683 64.9629C112.312 65.8811 113.963 65.9139 114.273 66.6354C113.839 66.6354 113.014 66.4222 112.828 66.783C113.509 69.1278 113.654 71.2266 114.005 73.801C113.839 73.7846 113.695 73.6534 113.633 73.5878C113.468 75.2604 115.326 76.9001 114.727 78.2939C114.995 78.5562 115.367 79.3269 116.151 79.0973C116.255 78.7694 117.225 78.7202 117.824 78.753C118.67 79.9828 116.42 79.3597 116.688 80.1796C115.202 80.4419 115.718 79.6548 114.397 79.6712L115.346 80.8682C114.872 81.5405 115.718 82.2128 115.016 82.8031C115.181 82.5408 113.901 82.7211 114.479 82.2784C114.541 82.344 114.645 82.2948 114.706 82.3604C114.83 81.3602 114.005 81.8193 113.654 80.9338C114.025 81.7209 114.397 82.7703 114.108 83.4754C115.119 83.3278 114.541 84.0329 115.181 84.2297L115.078 84.2789C115.512 84.2789 115.821 84.7052 115.945 84.8364L114.665 85.0168C114.83 85.3283 115.305 84.9348 115.47 85.2299C115.78 85.6563 115.924 87.1976 114.583 87.3124C114.686 87.8371 115.429 87.9847 115.264 88.5258C114.934 88.4766 114.789 88.3618 114.624 88.329C114.355 89.4768 114.789 90.887 114.025 91.9692C114.355 92.8547 114.562 93.609 115.45 94.1665C115.346 93.9205 115.656 93.2318 116.379 93.6746C116.915 93.9205 116.709 94.2812 116.957 94.642C116.296 94.56 116.317 95.5766 115.862 94.8388C114.397 95.0191 116.152 96.4293 114.706 96.4129C115.161 96.5769 114.892 97.6263 115.677 98.0198C115.037 98.1018 115.243 97.4623 114.789 97.4623L114.995 97.9379H114.562C114.19 98.8561 115.986 99.0201 116.255 99.5612H116.09L116.317 99.9055L115.14 99.4792C115.305 100.07 116.358 100.365 116.606 101.021L116.234 101.086L116.647 101.48C116.647 101.48 116.42 101.398 116.317 101.43C117.431 101.791 116.998 102.644 117.927 102.988C117.762 103.251 116.379 103.464 117.328 103.808L115.945 103.743C115.78 102.873 116.915 103.415 116.399 102.513C114.624 103.185 114.83 105.071 114.975 106.333C115.883 107.35 114.417 109.022 116.461 109.449L115.615 109.35L114.913 111.056C115.264 112.515 114.624 114.007 115.759 115.106L115.057 115.417C117.411 116.565 116.048 119.32 118.876 120.074C118.237 120.73 117.803 119.877 117.287 119.812C117.06 120.287 118.897 121.091 117.638 121.55C117.204 121.55 117.225 120.878 116.957 121.189C116.151 121.534 117.762 121.681 116.853 122.075C117.7 121.894 118.67 122.698 118.835 123.288C118.863 123.212 118.904 123.162 118.959 123.141C119.599 123.059 119.475 123.485 119.558 123.731C119.558 123.731 119.393 123.714 119.331 123.649C120.425 126.65 120.941 130.093 120.136 133.258L119.537 132.684C120.012 133.143 119.682 133.946 119.516 134.192L119.454 134.127C118.154 134.979 120.734 135.078 119.227 135.734L119.083 135.602C119.124 136.619 117.72 137.226 118.464 138.226C117.968 139.013 117.287 138.931 116.688 139.472C116.73 139.931 117.535 140.145 117.7 140.161L117.762 139.948C118.526 139.702 118.402 140.423 118.732 140.751C119.95 140.505 121.829 140.636 123.067 139.718C122.654 139.046 125.008 139.062 124.822 138.308C123.212 137.882 126.019 137.226 124.574 136.537C125.689 136.898 125.173 135.717 126.391 136.324C127.258 136.045 125.441 134.848 126.494 134.307C126.742 134.389 126.989 134.373 127.134 134.504C126.494 133.75 127.898 133.979 127.898 133.422H126.762C126.391 133.225 127.196 133.159 126.989 132.963C126.845 133.11 126.308 133.438 125.854 133.274C125.586 133.012 125.214 132.799 125.214 132.52C125.648 132.52 125.854 132.717 125.999 132.848C125.999 132.848 126.102 132.241 126.639 132.192C127.01 132.405 127.01 132.684 127.65 132.881C127.98 132.077 128.022 132.815 128.93 132.421C127.588 132.536 128.352 131.733 128.042 131.29C128.579 131.241 128.207 131.602 128.62 131.7C130.974 130.864 128.207 130.47 128.703 129.404C128.868 129.421 129.013 129.552 129.074 129.617C128.703 129.126 129.942 128.765 129.178 128.453C129.405 127.978 130.685 128.371 130.664 127.633C129.281 127.847 130.932 126.764 129.446 126.748L130.313 126.174C129.508 125.682 127.836 126.305 127.691 125.338C128.228 124.452 130.127 125.42 130.891 124.895L130.086 124.682L130.664 124.239L130.726 124.305C130.458 124.042 130.685 123.567 131.118 123.567C131.449 123.616 131.449 123.895 131.799 123.928C131.056 123.501 133.802 122.222 131.593 121.763C131.985 121.501 131.985 120.976 132.687 121.042C131.717 120.812 132.997 119.894 132.357 119.55C132.687 119.599 133.224 119.271 132.956 119.008C132.584 119.353 132.212 119.14 131.676 118.91C132.377 118.598 131.779 117.746 132.956 117.598C132.316 117.123 131.469 117.303 130.623 117.188C131.325 116.877 131.18 115.909 132.543 116.073C132.378 116.336 132.109 116.926 133.017 116.811C133.513 116.319 132.646 116.598 132.501 116.188C132.749 116.221 133.327 115.909 133.719 115.991C133.575 115.745 133.575 115.417 133.802 115.057C133.203 115.598 132.852 114.712 132.316 115.04L133.286 115.565C133.348 116.188 132.543 115.696 132.212 115.942C131.944 114.843 130.561 115.057 129.921 114.024C130.148 113.827 130.52 113.483 130.561 113.368C130.623 113.712 131.882 113.646 132.109 113.45C131.056 112.876 132.77 112.417 133.017 111.925C132.708 112.335 131.903 112.122 131.614 111.974C130.87 110.974 132.088 111.58 132.646 111.154C132.501 109.613 134.112 108.645 133.265 107.399L132.13 107.989L133.203 108.186C132.357 108.645 130.788 108.104 130.086 107.842C130.458 107.776 130.251 107.022 130.85 107.317L130.375 106.579C129.9 106.694 130.107 107.17 129.591 106.825C129.921 106.579 130.169 105.825 130.809 106.3C130.85 105.907 130.478 105.415 129.838 105.497C129.776 104.874 131.221 105.563 131.655 105.841C131.717 105.349 132.667 105.415 132.956 105.563L132.811 104.874C133.121 105.021 133.554 105.021 133.843 105.169C134.256 104.71 133.038 104.398 133.946 104.005L133.038 103.841C133.781 102.578 133.905 102.709 134.008 101.545L133.327 101.742C132.109 100.857 134.401 101.086 133.905 99.9055C133.492 99.2332 133.183 98.8069 132.109 98.8889C131.696 98.4954 132.336 98.4134 132.749 98.233C132.15 97.9379 131.036 97.282 131.696 96.8064C132.027 97.1344 132.295 97.3967 132.481 97.6919C133.554 97.6099 132.708 96.6589 133.203 96.1505C132.687 95.8062 131.387 94.6748 130.437 94.0517C129.57 94.3304 128.29 94.2321 127.402 93.6746C128.084 93.7565 128.084 92.9203 128.538 92.5267C129.178 92.7235 130.107 91.6577 130.375 92.4775C130.045 92.7235 129.136 92.8219 129.467 93.1498C130.148 92.9531 130.912 92.4283 131.51 91.8872C131.841 91.9364 132.274 92.2152 132.274 92.4939C131.985 92.3464 131.779 92.4284 131.51 92.4448V92.2972Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M131.882 75.3924C131.882 75.3924 131.676 75.2773 131.552 75.2773C131.634 75.3266 131.738 75.3759 131.882 75.3924Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M131.139 63.584H130.849C130.849 63.584 130.994 63.617 131.139 63.584Z\",\n    fill: \"#7E6A5E\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M105.624 379.222C105.562 379.123 105.479 379.041 105.313 378.975C105.354 379.107 105.479 379.189 105.624 379.222Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.108 395.34C123.004 395.34 122.922 395.323 122.839 395.307C122.901 395.34 123.004 395.34 123.108 395.34Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M107.13 375.499C107.13 375.499 106.985 375.466 106.881 375.449C106.985 375.482 107.068 375.482 107.13 375.499Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.022 396.85C103.022 396.85 103.229 396.949 103.333 396.965C103.27 396.899 103.188 396.85 103.022 396.85Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M105.684 397.094C105.003 396.291 104.115 397.144 103.31 396.963C103.517 397.176 103.31 397.586 103.95 397.439C102.257 397.717 104.714 398.685 103.372 399.029C103.537 399.062 104.095 398.849 104.466 399.177C104.569 399.636 103.806 399.538 103.455 399.702C103.909 399.865 104.156 400.554 103.95 400.472C104.322 400.8 105.602 400.275 106.242 400.735C107.315 401.095 106.324 401.39 106.592 401.751C105.767 402.079 106.097 401.325 105.746 401.128L106.118 402.276C105.519 402.555 105.065 402.046 105.23 401.735C104.487 402.128 105.044 402.735 105.932 402.932C105.705 403.194 105.891 403.358 105.478 403.588C105.003 403.293 103.434 403.194 103.207 402.768C103.393 402.112 104.384 403.096 104.693 402.555L103.764 402.44C104.322 402.243 103.64 401.997 103.599 401.718C103.847 401.587 103.929 401.768 104.053 401.882C104.053 401.407 104.59 401.063 103.558 400.636C102.608 401.21 103.682 402.259 102.567 402.456L103.723 403.817C104.157 403.85 104.92 403.457 105.498 403.866C104.384 403.932 103.826 404.276 103.578 404.752C104.796 404.653 104.569 405.605 105.56 405.441C104.982 405.162 105.994 405.129 106.097 405.096C106.097 405.572 107.191 405.244 107.232 405.506C106.861 406.359 106.469 405.424 105.932 406.228C105.416 406.014 104.26 405.473 103.806 404.965C103.269 404.965 103.806 405.441 103.186 405.588C103.847 405.359 104.301 405.867 104.59 405.654C105.024 406.375 106.159 407.261 106.345 408.113C104.59 407.851 105.168 406.621 103.021 406.72C103.248 407.146 104.115 407.211 103.95 407.523C102.856 407.72 103.702 408.474 103.682 409.032L104.239 408.818C104.652 409.064 104.28 409.425 104.136 409.671L103.909 409.589L104.218 409.851C104.218 409.851 104.115 409.884 104.053 409.884C104.569 410.196 103.971 410.835 104.218 411.36C105.085 411.426 104.322 410.852 104.446 410.622C104.652 410.573 105.085 410.13 105.643 410.393C105.581 411.032 106.572 411.54 106.448 412.262L106.737 412.049C107.315 412.327 106.985 412.606 106.985 412.951C106.303 413.524 105.829 412.409 105.292 412.754C104.549 412.459 105.478 412.098 104.363 411.95L103.104 412.245C103.806 412.623 102.65 412.901 102.794 413.147L103.351 412.934C104.28 413.049 103.558 413.229 103.413 413.328L104.796 413.262C105.065 412.918 103.888 412.59 104.735 412.393C105.106 413.065 106.221 413 106.159 413.754C105.622 413.754 105.973 413.59 105.581 413.475C105.189 413.705 106.262 414.066 105.767 414.459C105.457 414.197 104.962 413.754 104.198 414.016L105.209 414.312C105.024 414.492 104.631 414.394 104.59 414.459C104.363 414.721 105.663 414.459 105.354 414.885C105.147 414.935 104.9 415.066 104.673 414.984C104.569 415.492 104.982 415.246 105.436 415.754C105.478 415.328 107.067 415.427 107.17 415.886C106.923 416.492 107.749 416.984 106.407 417.312L107.047 417.64C106.097 417.394 106.675 418.001 106.469 418.198C105.395 418.198 106.613 417.279 104.858 417.148C104.652 417.542 104.136 417.329 103.682 417.148C103.785 417.607 104.9 417.394 105.581 417.64C105.147 417.607 105.354 418.378 104.446 418.05C104.342 418.427 105.436 418.558 105.209 418.821C104.796 418.755 104.239 418.657 103.682 418.64C104.033 418.706 103.558 419.018 103.517 419.083C103.723 419.034 104.404 419.28 104.136 418.936C104.962 419.083 104.074 419.706 104.796 419.739C103.826 419.706 104.507 420.428 104.074 420.739C106.365 420.87 103.269 420.034 105.168 420.067C105.891 420.575 105.065 421.608 105.994 422.412C105.478 423.019 105.127 422.346 104.26 422.412C103.95 421.805 104.652 421.707 104.301 421.166C103.847 421.69 103.971 422.625 104.631 423.084C104.673 423.691 102.278 423.592 102.773 424.363C103.517 424.314 103.682 424.363 103.991 424.133C104.239 424.347 103.95 424.56 103.909 424.773C104.363 424.937 104.507 424.494 104.879 424.806C104.735 424.904 104.611 425.15 104.115 425.068L104.053 425.019C104.652 425.773 102.216 425.396 103.558 426.101C103.929 426.085 103.475 425.921 103.723 425.79C104.301 425.724 105.065 426.15 105.271 426.446C104.776 426.364 105.147 426.675 104.962 426.872C104.115 426.937 104.776 426.364 104.218 426.232L104.033 426.757L104.177 426.659L104.92 427.298C104.693 426.872 105.973 427.183 106.056 427.364C105.849 427.757 105.622 428.151 104.693 428.036C105.622 428.151 105.54 428.659 105.705 429.036C106.076 428.676 106.51 429.036 106.799 429.184L105.787 429.709C105.581 429.069 104.941 429.774 104.322 429.594C103.372 429.348 103.909 429.003 104.095 428.692C102.278 429.2 104.92 429.659 104.033 430.151C103.599 430.119 103.104 430.037 103.228 429.791C102.918 429.873 104.012 430.364 103.475 430.692C103.785 430.61 104.673 430.463 105.003 430.873L103.867 431.283C103.558 431.84 104.982 431.561 105.436 432.07L106.2 431.807C107.129 431.922 106.118 432.447 107.17 432.529C107.232 432.234 106.448 432.021 106.778 431.725C107.79 431.676 107.274 432.152 107.79 432.365C107.274 432.972 107.253 432.84 106.407 433.25C104.838 433.152 104.549 432.332 102.505 432.283C102.711 432.922 103.104 433.857 102.464 434.218C102.877 434.808 104.115 434.841 105.024 434.825C105.168 435.071 105.024 435.169 104.776 435.3L104.301 435.005C104.735 435.726 105.23 436.153 105.106 436.874C105.333 437.301 106.283 437.202 107.026 437.153L107.15 437.612L107.356 437.563C108.347 437.727 107.976 438.104 107.893 438.399C107.46 438.366 107.377 438.186 107.109 438.186C106.716 438.416 106.778 438.825 107.17 439.055C106.737 439.022 105.787 438.776 106.118 438.481C106.221 438.448 106.386 438.481 106.489 438.465L105.973 437.907C106.448 438.547 105.292 438.825 104.26 438.744C104.735 439.383 105.395 438.334 105.705 439.071C103.558 439.875 106.076 440.908 103.104 441.22C103.661 441.695 104.611 442.302 104.59 442.99C105.457 443.056 104.879 443.466 105.953 443.482C107.17 442.908 104.404 442.138 106.076 441.728C105.705 441.4 104.962 441.449 104.507 441.285C104.466 441.023 104.59 440.777 105.127 440.793C105.602 441.433 107.212 441.105 107.17 441.875C107.914 441.826 107.728 441.187 107.955 440.924C108.347 441.039 108.822 440.99 109.173 440.826C109.854 441.072 110.412 441.547 110.99 441.826C110.597 441.711 110.35 441.843 110.123 441.761L111.279 442.646C110.721 442.859 110.061 442.876 109.627 442.712C109.317 443.138 110.391 443.974 109.09 443.876C109.235 444.466 109.875 443.745 110.267 443.728L110.329 443.777L110.288 443.171C111.795 443.22 109.834 443.827 111.279 444.023C114.004 444.319 110.308 444.811 110.701 445.27L108.781 444.63L109.173 445.089C108.43 444.794 107.129 444.696 106.365 444.269C106.242 444.843 105.54 445.63 105.87 446.04C105.189 446.139 104.528 446.155 103.867 446.04C105.044 446.713 103.124 446.909 103.042 447.418C103.723 448.008 104.115 446.959 105.024 447.418C104.507 447.549 104.879 447.86 105.065 448.024C104.714 447.828 105.457 447.319 105.829 446.942C105.767 447.237 106.737 447.27 107.129 447.385L107.398 446.909C108.595 447.024 107.418 447.516 107.996 447.795C106.943 447.565 106.902 447.647 105.849 447.418C106.242 447.877 106.159 448.516 105.457 448.811C105.003 448.992 104.941 448.598 104.652 448.451C103.909 448.5 105.044 448.91 104.115 448.926C103.455 448.811 104.074 448.664 103.888 448.5L103.413 449.713C102.98 449.681 102.877 449.369 103.062 449.172C102.526 449.517 102.732 449.812 104.136 450.353C103.661 450.746 102.959 451.189 102.34 450.992C102.588 451.205 103 451.107 103.434 451.14C103.124 451.697 104.673 451.861 104.652 452.206L105.478 452.009C104.569 452.501 106.799 452.238 106.118 452.681C105.292 452.534 104.322 452.501 103.393 452.517C104.218 452.665 103.455 452.911 103.434 453.124C104.28 453.058 104.157 453.632 105.024 453.354C105.643 453.895 104.466 454.042 105.498 454.469C105.787 454.255 106.324 454.96 106.943 454.796C106.943 455.272 105.911 455.534 105.024 455.338C105.106 455.174 105.519 454.944 104.796 454.911L104.858 455.78C104.404 455.961 104.177 456.223 103.207 456.19C104.28 456.551 102.34 456.945 103.62 457.256C102.815 456.895 103.971 456.748 104.136 456.649L104.301 456.797C104.301 456.797 104.322 456.764 104.363 456.731L105.994 457.223C106.696 456.912 104.9 457.076 104.982 456.567C106.592 456.239 107.232 457.732 108.265 457.354C108.801 457.01 107.294 456.977 106.758 456.617L106.716 456.699L106.118 455.944C106.654 455.944 107.067 456.19 107.067 456.19C107.17 455.338 108.017 455.272 108.327 454.37C108.12 454.419 106.448 454.485 106.242 454.059C105.87 453.731 106.84 453.78 106.985 453.534C107.17 453.698 108.058 453.895 107.439 454.042L108.574 454.108C109.875 454.895 111.01 454.616 111.32 455.567C112.146 455.666 112.497 456.371 112.208 456.863L112.992 456.666C114.375 457.289 111.815 456.666 112.93 457.436C111.382 457.6 109.565 457.978 108.368 457.518C107.955 457.961 108.739 458.191 108.677 458.617C107.418 458.781 107.356 458.387 106.118 458.355C106.221 458.683 106.716 459.109 107.439 458.929L106.881 459.486C106.613 459.486 106.634 459.273 106.675 459.191C106.386 459.404 106.943 459.88 107.398 460.044C107.336 459.994 107.15 459.83 107.356 459.781C107.666 460.044 108.223 460.536 108.554 460.585C107.955 460.175 109.379 460.257 108.616 459.814C108.946 459.863 109.606 459.978 109.421 460.175C110.184 459.912 110.102 459.601 110.948 459.535C110.288 459.748 111.175 459.978 111.299 460.044C111.568 459.83 111.382 459.339 111.052 459.158C112.455 459.224 110.928 458.224 112.331 458.65C111.836 458.568 111.836 458.224 112.187 458.06C112.786 458.125 113.075 458.601 113.756 458.847C114.334 459.814 112.724 458.748 112.27 458.929V459.634C112.497 459.584 113.24 459.978 113.219 459.519C114.066 459.798 114.623 460.273 113.9 460.585C114.293 460.7 114.251 460.437 114.293 460.355C114.685 460.47 116.109 461.011 116.398 460.454C116.316 460.618 115.758 460.126 115.263 460.388C115.118 460.142 115.8 459.568 116.543 459.88C116.336 459.585 115.82 459.027 115.676 458.781C116.316 458.765 115.923 458.994 116.212 459.125L115.923 458.305L115.201 458.486C115.779 457.945 114.148 457.436 113.694 456.928C114.788 457.076 114.85 457.469 115.387 457.83C116.77 457.633 114.705 457.584 114.974 457.109C115.18 457.059 115.449 457.059 115.779 457.109L114.85 456.649C114.994 456.551 115.222 456.633 115.283 456.682C114.148 455.928 113.715 456.584 113.302 455.649C112.682 456.141 114.024 456.157 113.859 456.617C113.033 456.813 112.476 455.994 112.022 455.83C112.331 455.403 114.004 455.485 113.178 454.862C113.673 455.288 114.21 454.96 114.189 455.518C114.726 455.862 114.705 455.387 115.345 455.37C115.16 455.206 114.169 455.37 114.375 454.993L114.54 455.026L113.405 454.272C114.086 453.698 112.228 452.78 113.57 452.452H112.393C112.331 452.075 112.373 451.517 112.166 451.222C112.827 451.337 112.868 451.599 113.075 451.894C113.364 451.205 112.724 450.533 111.836 449.992C110.969 450.271 111.01 450.336 110.412 450.615C108.822 450.041 111.485 450.156 110.742 449.5C111.877 449.566 111.691 449.746 112.827 449.681C112.084 449.385 112.29 448.992 111.65 448.664C112.765 448.598 113.673 448.926 113.715 449.533C112.682 449.91 114.334 450.55 113.364 450.861L114.086 450.681C114.375 451.156 114.127 451.419 114.623 451.845L114.458 451.812L115.573 452.091V451.878C116.212 452.075 117.203 452.583 117.224 452.714C117.121 452.042 115.325 451.878 114.355 451.484C114.499 450.91 116.522 450.812 115.593 450.353C116.13 450.353 116.749 450.074 117.203 450.369C117.472 450.714 116.749 450.894 117.513 450.976C117.513 450.632 117.967 450.796 117.885 450.271C116.894 450.107 115.965 449.631 115.201 449.205C114.705 448.779 114.809 448.27 115.139 447.975C115.201 448.369 116.13 448.828 116.873 448.795C115.862 448.484 117.802 448.09 116.336 448.106C116.481 447.664 116.543 446.893 117.781 446.926C118.194 447.385 117.389 447.746 117.616 448.139C117.658 448.041 117.988 447.959 118.256 448.041L118.07 448.565C118.71 448.205 119.103 448.32 119.041 447.778C118.937 447.811 118.731 447.86 118.669 447.795C118.669 447.664 118.731 447.5 118.71 447.369L119.846 447.434C119.35 447.008 120.878 446.352 120.135 445.581L120.362 445.663C120.672 445.106 118.421 444.893 118.215 444.253C118.731 444.466 119.206 444.417 119.743 444.433C119.206 444.089 120.155 443.991 120.506 443.695C119.804 444.007 119.33 443.368 118.937 443.597C117.802 443.532 117.864 442.892 118.029 442.58C119.515 442.498 118.71 443.646 120.279 443.269C120.444 442.958 119.619 442.81 119.33 443.023C119.536 442.63 119.784 442.023 120.713 441.793C119.66 441.22 120.279 441.072 118.876 440.662C118.917 440.924 119.949 441.023 119.35 441.301L118.318 440.859C118.318 440.383 119.288 440.072 119.454 439.76L119.887 440.137L119.722 440.105C120.176 440.268 119.866 440.695 120.672 440.695C119.701 440.318 120.713 440.137 120.052 439.678L120.217 439.711C119.454 438.94 121.993 438.596 119.97 437.989C119.97 438.12 119.165 438.317 118.772 438.219C119.288 438.088 119.165 437.645 119.784 437.694L119.97 437.858C120.176 437.465 120.3 437.219 120.135 437.071C119.412 436.907 118.834 436.973 118.463 436.661C119.02 435.972 120.135 437.071 120.837 436.628L120.135 435.907L120.816 435.808C121.6 434.857 119.474 433.939 119.598 432.873C120.733 432.939 121.126 433.742 121.167 434.005C122.199 433.759 120.878 433.185 121.642 432.791C121.848 432.398 120.878 432.021 120.238 432.037C119.887 431.496 120.94 431.725 121.146 431.676C119.928 431.414 120.444 430.824 120.217 430.397L120.919 430.43L120.114 429.725C120.032 429.889 119.412 429.692 118.979 429.659L119.061 429.495C117.079 429.971 120.238 430.988 117.988 431.463C117.74 431.25 117.348 431.48 117.1 431.266C117.183 431.102 117.286 431.086 117.554 431.086C116.997 430.955 116.522 430.643 116.522 430.988C115.056 430.856 115.49 430.201 115.036 429.692C116.027 429.381 116.398 430.184 117.079 430.43C116.997 430.25 116.378 430.053 116.77 429.823L117.864 429.971C117.327 429.282 116.914 429.725 115.862 429.495C114.478 429.217 115.985 428.922 115.903 428.725L116.151 428.938C116.687 428.462 115.511 428.266 115.676 427.823L116.584 427.675C115.407 428.167 118.05 428.479 117.43 428.774C118.566 428.02 119.681 429.118 120.589 429.446C120.424 429.069 120.589 428.758 121.229 428.61C119.846 427.987 121.89 427.561 120.238 426.921C120.465 426.659 120.981 427.216 121.043 426.921C121.229 426.396 121.105 425.806 120.527 425.199C120.589 424.904 121.084 425.003 121.559 424.953C122.385 423.592 119.804 422.838 120.61 421.33L121.188 421.608C121.353 421.297 121.6 421.034 120.795 420.805C122.757 420.542 119.784 419.329 121.889 418.968C122.344 418.312 120.692 418.165 120.465 417.591C120.899 417.624 121.683 417.853 121.931 417.591C121.456 415.787 121.497 414.197 121.394 412.229C121.559 412.262 121.683 412.36 121.745 412.426C122.055 411.18 120.362 409.819 121.084 408.818C120.837 408.605 120.527 407.982 119.743 408.113C119.619 408.343 118.648 408.31 118.05 408.244C117.307 407.261 119.495 407.884 119.309 407.244C120.795 407.162 120.238 407.703 121.539 407.802L120.713 406.834C121.229 406.359 120.465 405.801 121.208 405.408C121.022 405.588 122.302 405.555 121.704 405.834C121.642 405.785 121.539 405.801 121.477 405.752C121.27 406.49 122.137 406.211 122.385 406.9C122.075 406.293 121.807 405.457 122.158 404.965C121.146 405.014 121.766 404.506 121.146 404.309L121.25 404.276C120.816 404.244 120.548 403.899 120.424 403.784L121.704 403.752C121.559 403.506 121.064 403.768 120.919 403.538C120.651 403.194 120.651 402.03 121.993 402.046C121.931 401.653 121.208 401.472 121.435 401.079C121.766 401.128 121.889 401.243 122.055 401.276C122.426 400.439 122.117 399.341 122.963 398.587C122.695 397.898 122.571 397.308 121.745 396.832C121.828 397.012 121.456 397.521 120.775 397.144C120.259 396.93 120.486 396.668 120.3 396.373C120.961 396.488 121.002 395.717 121.415 396.307C122.901 396.274 121.27 395.094 122.715 395.209C122.282 395.045 122.633 394.274 121.889 393.93C122.529 393.913 122.282 394.389 122.715 394.422L122.55 394.044L122.984 394.077C123.438 393.421 121.662 393.159 121.456 392.733L121.621 392.765L121.415 392.47L122.55 392.88C122.426 392.421 121.415 392.126 121.229 391.618H121.6L121.229 391.273C121.291 391.323 121.456 391.355 121.559 391.339C120.486 390.978 120.981 390.371 120.093 390.044C120.279 389.863 121.683 389.798 120.775 389.47L122.137 389.617C122.24 390.273 121.146 389.781 121.559 390.519C123.396 390.142 123.355 388.715 123.335 387.748C122.509 386.912 124.119 385.764 122.117 385.288L122.942 385.436L123.789 384.206C123.582 383.091 124.346 382.009 123.293 381.091L124.016 380.91C121.766 379.877 123.376 377.909 120.63 377.139C121.311 376.696 121.683 377.368 122.179 377.45C122.447 377.106 120.672 376.368 121.993 376.122C122.426 376.155 122.344 376.663 122.633 376.45C123.458 376.253 121.869 376.024 122.798 375.794C121.951 375.86 121.043 375.188 120.919 374.745C120.919 374.745 120.871 374.778 120.775 374.843C120.135 374.86 120.3 374.548 120.217 374.351C120.217 374.351 120.383 374.384 120.444 374.433C119.619 372.088 119.412 369.465 120.486 367.153L121.043 367.628C120.61 367.251 121.022 366.677 121.208 366.497L121.27 366.546C122.653 366.005 120.093 365.743 121.642 365.349L121.766 365.448C121.807 364.677 123.273 364.333 122.633 363.529C123.211 362.972 123.871 363.086 124.511 362.726C124.511 362.381 123.727 362.168 123.562 362.135L123.479 362.299C122.695 362.43 122.88 361.889 122.571 361.627C121.353 361.725 119.474 361.479 118.174 362.086C118.525 362.627 116.171 362.43 116.316 363.021C117.885 363.463 115.015 363.742 116.398 364.365C115.325 364.005 115.717 364.939 114.582 364.398C113.694 364.546 115.387 365.579 114.313 365.907C114.086 365.825 113.818 365.825 113.694 365.71C114.272 366.333 112.889 366.038 112.827 366.464L113.962 366.53C114.313 366.727 113.508 366.71 113.694 366.874C113.838 366.776 114.416 366.563 114.85 366.727C115.098 366.94 115.449 367.136 115.428 367.35C114.994 367.317 114.809 367.153 114.685 367.054C114.685 367.054 114.54 367.497 113.983 367.497C113.632 367.3 113.653 367.087 113.033 366.907C112.62 367.481 112.662 366.923 111.733 367.153C113.075 367.153 112.249 367.71 112.517 368.071C111.98 368.071 112.373 367.825 111.98 367.727C109.565 368.169 112.269 368.678 111.691 369.448C111.526 369.416 111.402 369.317 111.341 369.252C111.671 369.662 110.391 369.826 111.134 370.121C110.866 370.465 109.606 370.072 109.586 370.629C110.969 370.563 109.256 371.269 110.721 371.383L109.813 371.744C110.577 372.17 112.311 371.826 112.352 372.564C111.733 373.187 109.937 372.318 109.132 372.662L109.916 372.892L109.317 373.171L109.256 373.121C109.503 373.335 109.235 373.679 108.801 373.646C108.471 373.597 108.492 373.384 108.161 373.318C108.863 373.695 106.014 374.45 108.161 374.958C107.749 375.122 107.707 375.515 107.026 375.417C107.976 375.663 106.613 376.27 107.212 376.565C106.881 376.499 106.324 376.713 106.551 376.926C106.943 376.696 107.294 376.876 107.81 377.106C107.088 377.286 107.604 377.975 106.427 377.991C107.026 378.401 107.872 378.319 108.698 378.467C107.976 378.647 108.017 379.385 106.696 379.156C106.881 378.975 107.191 378.549 106.283 378.565C105.746 378.91 106.634 378.762 106.737 379.074C106.489 379.041 105.891 379.221 105.498 379.139C105.622 379.336 105.581 379.582 105.333 379.828C105.994 379.467 106.242 380.156 106.799 379.959L105.87 379.5C105.87 379.024 106.613 379.451 106.985 379.303C107.15 380.156 108.554 380.09 109.09 380.91C108.843 381.041 108.45 381.271 108.388 381.353C108.347 381.091 107.109 381.041 106.861 381.173C107.852 381.681 106.097 381.91 105.829 382.255C106.159 381.96 106.943 382.189 107.232 382.32C107.872 383.124 106.737 382.583 106.118 382.861C106.118 384.026 104.425 384.649 105.168 385.633L106.365 385.272L105.313 385.042C106.18 384.764 107.707 385.288 108.388 385.534C108.017 385.551 108.161 386.141 107.583 385.879L107.996 386.469C108.471 386.42 108.306 386.043 108.781 386.338C108.43 386.502 108.12 387.043 107.521 386.649C107.46 386.944 107.79 387.338 108.43 387.322C108.43 387.797 107.067 387.174 106.654 386.928C106.551 387.305 105.622 387.174 105.333 387.043L105.416 387.568C105.127 387.436 104.693 387.404 104.404 387.272C103.971 387.584 105.147 387.912 104.198 388.141L105.085 388.338C104.239 389.224 104.115 389.125 103.909 389.994L104.59 389.896C105.725 390.65 103.455 390.306 103.867 391.24C104.218 391.782 104.487 392.126 105.56 392.142C105.932 392.47 105.292 392.487 104.858 392.585C105.436 392.864 106.489 393.421 105.787 393.733C105.478 393.471 105.23 393.257 105.085 393.011C104.012 393.011 104.755 393.782 104.218 394.11C104.693 394.405 105.911 395.356 106.778 395.897C107.666 395.75 108.946 395.914 109.772 396.406C109.111 396.291 109.028 396.93 108.533 397.193C107.914 396.996 106.881 397.734 106.696 397.094C107.047 396.947 107.976 396.93 107.666 396.652C106.985 396.75 106.159 397.078 105.519 397.455C105.189 397.406 104.776 397.16 104.796 396.947C105.085 397.078 105.292 397.029 105.56 397.029L105.684 397.094Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.806 409.77C103.806 409.77 103.991 409.868 104.136 409.885C104.053 409.835 103.95 409.802 103.806 409.77Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.517 418.705C103.517 418.705 103.704 418.705 103.808 418.705C103.745 418.705 103.662 418.688 103.517 418.705Z\",\n    fill: \"#7E6A5E\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.79,\n    filter: \"url(#filter2_d_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.338 12.5234L230.118 447.659\",\n    stroke: \"black\",\n    strokeWidth: 0.1,\n    strokeMiterlimit: 10\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.79,\n    filter: \"url(#filter3_d_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.037 18.6758L229.816 453.811\",\n    stroke: \"black\",\n    strokeWidth: 0.1,\n    strokeMiterlimit: 10\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M119.331 19.0332H66.9104V451.36H119.331V19.0332Z\",\n    fill: \"#6B594A\",\n    fillOpacity: 0.26\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.79,\n    filter: \"url(#filter4_d_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.8753 25.5469L63.6343 460.682\",\n    stroke: \"black\",\n    strokeWidth: 0.1,\n    strokeMiterlimit: 10\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.34\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.714 308.801C123.714 308.801 123.714 308.883 123.714 308.932C123.777 309.031 123.84 309.129 123.871 309.228L123.714 308.801Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.083 331.771C123.083 331.771 123.083 331.87 123.083 331.919C123.114 331.919 123.145 331.919 123.083 331.771Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.035 123.955C125.035 123.955 125.035 124.021 125.035 124.054C125.035 123.972 125.035 123.889 125.066 123.807V123.955H125.035Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.128 124.429C125.065 124.937 125.034 124.282 125.034 124.068C124.939 124.626 124.939 125.183 124.971 125.757C125.065 125.757 125.065 124.691 125.128 124.429Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.382 59.6759L125.54 59.8079C125.476 59.6924 125.445 59.6594 125.382 59.6759Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.869 309.227L123.93 309.391C123.93 309.391 123.899 309.276 123.869 309.227Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M122.738 352.973C122.738 352.973 122.643 353.022 122.611 353.088C122.611 353.121 122.611 353.138 122.611 353.154L122.738 352.989V352.973Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.729 382.081C121.729 382.081 121.761 382.179 121.792 382.179C121.855 381.687 121.887 380.375 121.887 378.686L121.698 378.588V382.081H121.729Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M116.974 413.89L117.383 410.791C117.446 420.744 117.005 425.401 117.226 433.911L117.163 433.436C117.068 434.682 117.918 435.387 116.722 449.079H116.69C116.69 449.555 116.753 449.555 116.659 450.506L116.911 448.144C117.005 449.571 117.163 450.801 117.163 452.703C117.131 453.096 117.037 453.244 116.974 453.277V457.917L116.722 459.344C116.848 460.77 117.352 460.114 117.037 463.919C117.415 462.492 117.226 465.804 117.415 465.329C117.383 465.525 117.289 465.952 117.226 466.313C117.226 468.575 117.289 472.822 117.478 473.872C117.478 473.872 118.328 465.05 118.737 462.672C118.611 465.853 118.768 463.509 118.894 462.886L118.8 462.672C118.894 460.77 119.146 460.77 119.209 459.819C119.209 459.819 119.178 459.852 119.146 459.868V459.983C119.146 460.065 119.115 460.016 119.083 459.918C119.02 459.934 118.989 459.852 119.02 459.327V459.426C119.02 458.639 119.083 457.261 119.083 456.655H119.272C118.926 455.228 119.933 447.161 119.965 445.258C120.217 443.356 119.965 440.995 120.091 438.618C120.185 434.83 120.374 436.732 120.563 434.83C120.721 432.452 120.343 435.305 120.343 434.354L120.626 431.517C120.626 433.174 120.752 432.272 120.847 431.977C120.91 429.517 121.287 425.647 120.941 424.877C121.161 421.564 121.319 421.548 121.35 420.121C121.287 420.597 121.193 421.548 121.13 421.548C121.319 420.22 121.098 420.908 121.067 421.45C120.941 419.416 121.886 410.939 121.476 410.513H121.539C121.224 410.037 120.941 410.791 120.784 409.381L120.941 408.43L120.815 407.003C120.941 406.052 121.004 406.512 121.035 406.512C120.91 404.2 121.13 400.969 121.193 398.149L120.311 401.117C120.532 398.756 120.972 394.476 120.721 394L121.035 392.574C121.634 387.835 120.847 389.262 121.035 387.36L121.382 384.982V387.36C121.539 384.982 121.634 384.031 121.854 382.145V382.129C121.854 382.26 121.854 382.342 121.791 382.358V382.03C121.634 381.735 121.539 380.505 121.571 378.833C121.634 376.455 121.445 374.602 121.791 370.815L121.476 369.864L121.697 367.01H121.949C121.917 369.798 121.949 375.045 121.917 378.636L122.043 378.702C122.043 376.57 121.98 374.16 122.043 372.75C122.106 372.061 122.389 370.306 122.547 371.585L122.326 370.274C122.389 363.174 122.358 363.141 122.736 355.729L122.61 356.369C122.547 354.893 122.484 353.433 122.704 353.024C122.799 348.58 123.019 343.972 123.365 341.086L123.082 340.447C123.082 339.512 123.586 338.102 123.176 337.643L123.082 335.642C123.114 334.363 122.956 333.576 123.145 332.117C123.145 332.035 123.145 331.937 123.176 331.838C123.334 328.936 122.925 331.871 123.114 328.542C123.334 327.477 122.767 327.362 122.83 325.738L123.271 324.115C123.554 321.18 123.114 320.672 123.176 316.425C123.365 314.375 123.712 313.391 124.027 314.752C123.649 312.883 123.775 313.9 123.617 311.44C123.775 311.063 123.806 311.325 123.964 311.866C124.184 309.669 123.838 310.522 123.869 308.866C123.586 308.39 123.114 307.833 123.082 307.291L122.988 307.931C122.862 306.176 122.799 304.274 122.988 302.241L123.145 302.323L123.082 300.159L123.271 300.027V296.928L123.176 297.355C123.176 296.633 123.114 294.239 123.239 292.878L123.334 292.927C123.712 289.09 123.334 285.909 123.334 281.417L123.554 282.007C123.775 280.465 123.208 281.58 123.365 279.76L123.649 279.662C123.302 278.055 123.743 277.58 123.901 276.481L123.554 277.006L123.649 274.923C123.806 272.628 124.121 273.513 124.278 273.857L124.027 272.283L124.341 271.972C123.995 270.824 124.404 270.824 124.247 268.823C124.373 268.659 124.436 269.168 124.499 268.479L124.09 265.167L124.247 267.167L123.806 266.921C123.491 264.839 123.901 264.101 123.806 262.625L123.932 263.642C123.838 261.215 124.058 261.084 124.153 259.723C124.058 260.149 123.932 260.789 123.869 259.821C123.869 259.1 124.027 259.428 124.09 258.755C123.775 258.591 123.649 256.853 123.806 255.279C123.838 255.296 123.901 255.328 123.932 255.443C123.901 255.033 123.806 254.836 123.901 254.131L124.247 254.541L123.932 253.197C124.027 252.295 123.806 250.983 124.027 251.114L124.09 251.623L124.247 244.818L124.53 244.719C124.153 244.047 124.719 241.014 124.247 241.243C124.499 239.964 124.121 236.193 124.625 236.947C124.719 232.487 124.247 230.06 124.562 224.633C125.034 222.698 124.94 217.401 125.034 213.909C124.94 207.087 124.814 202.693 124.751 195.724C125.412 191.543 124.656 185.279 125.066 180.77L124.845 179.54C125.286 176.539 124.845 171.964 125.286 167.767C125.192 166.734 125.16 166.193 125.16 165.963C125.16 166.16 125.097 166.439 124.94 166.537C125.066 165.34 124.94 162.913 125.255 163.077V163.389C125.601 163.569 125.192 159.748 125.475 158.404L125.129 159.142L125.223 156.863L125.286 157.469C124.656 147.598 125.758 143.138 125.192 133.857C125.538 135.087 125.034 132.021 125.412 131.906C125.947 129.561 125.349 127.577 125.255 125.658C125.255 125.658 125.223 125.642 125.192 125.527L125.286 122.182C125.758 124.183 124.908 119.772 125.286 121.608C125.758 112.869 125.506 101.472 125.79 91.3553L125.664 91.798C125.727 89.24 125.601 86.0425 125.821 84.0912C126.042 82.14 125.538 79.8279 125.538 79.0737C125.349 76.942 125.79 75.0071 125.758 75.909C125.727 73.6298 125.286 71.4817 125.506 68.317C125.947 67.2348 125.192 59.6757 125.664 59.5937V59.5609C126.01 55.5107 125.475 51.6738 125.821 47.3121C125.821 47.3121 125.853 47.3941 125.884 47.5416L124.53 38.6543L122.893 41.1795L121.508 48.8698V69.7436L120.847 86.4033L120.563 126.954L120.878 129.856C120.154 137.825 120.784 148.041 120.217 156.617L120.532 156.797C120.532 159.224 120.343 159.06 120.28 159.65C120.091 182.164 120.28 205.333 119.619 225.584C119.398 227.535 119.43 233.471 119.209 235.012C119.524 241.587 119.43 248.556 119.335 255.148V254.902V258.001C119.335 258.132 119.272 258.149 119.241 258.05C119.493 261.543 119.146 267.069 118.989 271.349V271.103C118.611 296.108 118.926 319.311 118.233 344.103C117.604 355.631 118.139 369.044 117.572 382.26C117.226 384.687 117.163 411.447 117.289 413.808L116.974 413.89Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.161 398.017C121.161 398.017 121.161 398.131 121.161 398.197L121.35 397.541L121.161 398.017Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.877 433.419C120.934 431.828 120.877 431.746 120.877 431.976C120.877 432.55 120.877 433.058 120.877 433.419Z\",\n    fill: \"#202020\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.79,\n    filter: \"url(#filter5_d_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M122.552 33.3574L119.332 468.493\",\n    stroke: \"black\",\n    strokeWidth: 0.1,\n    strokeMiterlimit: 10\n  }))))), /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter6_d_42_3399)\"\n  }, _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5733 140.075L10.4739 194.357L301.681 201.435L303.78 147.152L12.5733 140.075Z\",\n    fill: \"#5D5042\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask1_42_3399\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 10,\n    y: 140,\n    width: 294,\n    height: 62\n  }, _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5726 140.077L10.4731 194.359L301.68 201.437L303.779 147.154L12.5726 140.077Z\",\n    fill: \"white\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask1_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.5\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M99.2717 170.611C99.0791 170.557 98.9857 170.663 99.2717 170.611Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M252.479 163.391C252.479 163.391 252.561 163.386 252.623 163.382C252.714 163.048 252.809 162.762 252.891 162.543L252.479 163.391Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M277.249 164.647C277.249 164.647 277.359 164.706 277.404 164.737C277.384 164.539 277.406 164.339 277.249 164.647Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M195.808 168.238C195.599 168.218 195.484 168.308 195.391 168.413C195.507 168.339 195.624 168.266 195.808 168.238Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.1733 173.786C54.1733 173.786 54.2353 173.782 54.2733 173.747C54.1841 173.686 54.0965 173.642 54.0039 173.549L54.1717 173.77L54.1733 173.786Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.633 173.212C55.1943 173.44 54.5143 173.68 54.274 173.761C54.8961 174.182 55.4994 174.21 56.0971 173.975C56.0668 173.467 54.9193 173.589 54.633 173.212Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199.474 192.988C199.355 193.045 199.213 193.071 199.115 193.126C199.302 193.131 199.42 193.074 199.474 192.988Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M252.89 162.542L253.044 162.219C253.044 162.219 252.938 162.407 252.89 162.542Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M300.051 164.451C300.076 164.696 300.137 164.89 300.196 165.067C300.217 165.066 300.238 165.064 300.258 165.063L300.051 164.451Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M366.824 188.852L363.385 186.981C374.028 185.73 379.12 187.562 388.188 185.671L387.694 186.113C389.041 186.538 389.585 182.062 404.581 187.032L404.601 187.228C405.093 187.18 405.074 186.787 406.118 187.28L403.519 186.145C405.018 185.606 406.305 184.603 408.335 184.409C408.77 184.611 408.955 185.011 409.008 185.336L413.97 184.841L415.564 186.072C417.064 185.335 416.214 182.642 420.37 184.023C418.738 182.202 422.342 182.829 421.792 181.893C422.002 182.127 422.491 182.458 422.894 182.761C425.308 182.46 429.838 181.794 430.919 180.804C430.919 180.804 421.234 177.158 418.597 175.237C422.035 175.644 419.483 174.983 418.78 174.37L418.579 174.843C416.509 174.448 416.453 173.267 415.409 172.972C415.418 173.07 415.45 173.183 415.483 173.296L415.612 173.14C415.715 173.347 415.668 173.498 415.556 173.62C415.583 173.882 415.518 174.067 414.955 174.02L415.046 173.899C414.197 174.101 412.712 173.965 412.063 173.891L412.006 172.908C410.584 174.84 401.685 170.355 399.634 170.354C397.527 169.171 395.062 170.808 392.481 170.265C388.403 170.079 390.375 168.885 388.287 168.096C385.705 167.553 388.856 169.228 387.83 169.326L384.699 168.044C386.462 167.867 385.473 167.304 385.125 166.932C382.467 166.854 378.217 165.166 377.507 167.168C373.902 166.328 373.844 165.542 372.307 165.491C372.838 165.836 373.862 166.133 373.901 166.525C372.431 165.697 373.221 166.766 373.819 166.942C371.675 167.867 362.332 163.706 361.991 165.883L361.952 165.49C361.555 167.111 362.435 168.651 360.956 169.6L359.914 168.91L358.414 169.646C357.37 169.153 357.843 168.712 357.844 168.515C355.401 169.344 351.885 168.564 348.849 168.444L352.262 172.734C349.662 171.797 344.975 169.874 344.54 171.316L342.947 169.888C337.71 167.226 339.458 171.228 337.37 170.439L334.731 168.912L337.274 168.866C334.693 168.125 333.629 167.633 331.563 166.646C331.563 166.646 331.545 166.68 331.547 166.696C331.698 166.752 331.788 166.829 331.798 166.927L331.452 166.982C331.181 167.788 329.873 168.381 328.094 168.396C325.531 168.246 323.607 169.503 319.452 167.924L318.522 169.595L315.409 168.707L315.34 167.395C318.342 167.386 323.947 166.701 327.802 166.522L327.846 165.927C325.555 166.007 322.991 166.663 321.491 166.577C320.743 166.345 318.789 165.038 320.125 164.114L318.788 165.433C311.184 165.817 311.129 165.886 303.115 164.651L303.841 165.279C302.291 165.723 300.737 166.134 300.24 165.097C295.448 165.022 290.474 164.367 287.293 162.793L286.684 164.361C285.664 164.311 284.047 162.028 283.666 164.207L281.545 164.95C280.17 164.873 279.371 165.779 277.754 164.944C277.645 164.885 277.558 164.842 277.447 164.766C277.452 164.815 277.455 164.848 277.46 164.897C274.315 164.307 277.557 166.273 273.938 165.499C272.734 164.44 272.771 167.498 271.002 167.199L269.15 165.046C265.925 163.869 265.509 166.116 260.946 166.258C258.721 165.543 257.56 163.676 258.92 161.961C257.018 164.056 258.082 163.314 255.475 164.368C255.02 163.541 255.291 163.359 255.855 162.583C253.446 161.684 254.444 163.38 252.665 163.394C252.224 164.985 251.751 167.499 251.185 167.634L251.895 168.099C250.06 169.005 248.033 169.446 245.807 168.732L245.852 167.939L243.539 168.415L243.334 167.408L240.022 167.832L240.484 168.099C239.713 168.263 237.167 168.688 235.669 168.207L235.696 167.646C231.474 166.022 228.195 168.434 223.361 168.758L223.947 167.585C222.243 166.493 223.588 169.368 221.59 168.854L221.448 167.448C219.777 169.363 219.159 167.133 217.933 166.47L218.573 168.305L216.305 167.988C213.807 167.456 214.667 165.707 214.984 164.733L213.374 166.233L212.963 164.614C211.831 166.545 211.714 164.348 209.608 165.436C209.401 164.824 209.924 164.462 209.174 164.213L205.73 166.619L207.816 165.533L207.683 167.927C205.553 169.805 204.643 167.758 203.079 168.482L204.144 167.74C201.58 168.396 201.375 167.389 199.898 166.907C200.376 167.337 201.102 167.966 200.06 168.312C199.287 168.459 199.604 167.485 198.856 167.253C198.766 168.838 196.931 169.744 195.205 169.047C195.223 168.816 195.243 168.601 195.353 168.462C194.925 168.736 194.738 169.143 193.958 168.798L194.317 167.015L192.958 168.746C191.981 168.298 190.623 169.618 190.69 168.429L191.213 168.067L183.883 167.874L183.742 166.468C183.09 168.434 179.704 165.853 180.051 168.282C178.598 167.009 174.673 169.38 175.349 166.623C170.539 166.566 168.077 169.272 162.185 168.132C159.99 165.87 154.347 166.804 150.587 166.681C143.314 167.882 138.633 168.903 131.193 169.885C126.533 166.792 120.033 171.35 115.101 169.672L113.847 171.002C110.525 169.058 105.738 171.714 101.121 169.869C100.042 170.464 99.4822 170.664 99.2179 170.713C99.4303 170.766 99.7446 171.009 99.8884 171.822C98.5708 171.281 96.0008 172.085 96.1058 170.45L96.4186 170.266C96.5237 168.631 92.5522 171.153 91.0274 169.785L91.9043 171.506L89.4383 171.284L90.0656 170.932C79.6577 175.146 74.5815 169.76 64.7993 173.605C66.0321 171.651 62.8761 174.664 62.6471 172.59C60.0098 170.043 58.0169 173.295 56.0025 174.064C56.0123 174.162 55.9827 174.279 55.8756 174.45L52.2589 174.318C54.287 171.623 49.7732 176.581 51.6333 174.276C42.1466 172.607 30.0016 174.99 19.0938 174.432L19.5949 175.091C16.8366 175.052 13.4501 175.975 11.2979 174.96C9.14577 173.945 6.80479 176.824 6.01045 176.957C3.77449 178.201 1.57992 175.938 2.56187 176.024C0.13767 176.425 -2.0575 178.9 -5.50444 177.983C-6.78044 175.794 -14.6772 180.474 -14.8888 177.954L-14.9086 178.169C-19.3604 176.527 -23.3106 179.673 -28.0752 178.215C-28.0752 178.215 -27.9904 178.028 -27.8421 177.855L-37.0066 185.789L-33.8722 194.111L-25.2611 200.671L-2.90785 198.479L15.1128 200.576L58.6235 198.309L61.6326 196.308C70.3468 199.358 81.1333 195.203 90.4743 197.275L90.5793 195.64C93.1722 195.475 93.0443 196.47 93.7134 196.74C117.872 195.618 142.655 192.664 164.515 194.024C166.668 195.039 173.025 194.208 174.707 195.285C181.67 193.067 189.166 192.855 196.247 192.833L195.996 193.013L199.308 192.589C199.465 192.711 199.485 192.907 199.375 193.046C203.069 191.479 209.055 192.728 213.677 193.174L213.426 193.355C240.293 192.802 265.071 188.976 291.805 190.405C304.313 192.671 318.54 188.544 332.863 190.316C335.544 191.857 364.221 189.741 366.725 188.891L366.824 188.852Z\",\n    fill: \"#72665A\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.4\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M207.522 178.05C207.788 178 207.677 178.14 207.522 178.05Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.724 172.619C78.724 172.619 78.6417 172.624 78.6006 172.627C78.4597 173.08 78.3344 173.483 78.2199 173.786L78.7257 172.635L78.724 172.619Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.3696 168.304C58.3696 168.304 58.2993 168.226 58.2512 168.163C58.2378 168.444 58.1813 168.711 58.3696 168.304Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M126.788 171.561C126.957 171.6 127.073 171.51 127.161 171.356C127.046 171.446 126.93 171.536 126.788 171.561Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.641 178.181C245.641 178.181 245.58 178.185 245.542 178.22C245.613 178.315 245.663 178.394 245.738 178.521L245.643 178.197L245.641 178.181Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.138 178.956C244.728 178.587 245.341 178.301 245.541 178.223C245.101 177.56 244.616 177.475 244.062 177.724C243.988 178.436 244.959 178.408 245.138 178.956Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M303.776 179.46L303.538 180.594C303.697 180.123 303.766 179.773 303.776 179.46Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.1969 173.769L77.9927 174.211C78.0446 174.109 78.1121 173.956 78.1969 173.769Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.3582 166.251C39.3853 165.904 39.3779 165.625 39.3533 165.38C39.3328 165.381 39.3123 165.382 39.3123 165.382L39.4009 166.265L39.3582 166.251Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.7275 159.519C13.6995 159.653 13.6081 159.774 13.6006 159.906C14.0153 160.324 15.1701 160.481 16.6888 160.549L16.9435 159.167L13.7291 159.536L13.7275 159.519Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M-11.3579 125.023L-8.88201 128.024C-17.9883 128.7 -21.8627 125.591 -29.7635 127.342L-29.262 126.767C-30.308 126.044 -31.6268 132.297 -43.1092 123.748L-43.0754 123.466C-43.5075 123.493 -43.5768 124.04 -44.3413 123.234L-42.3935 125.1C-43.7403 125.712 -45.0009 126.977 -46.7327 127.054C-47.0569 126.712 -47.1144 126.14 -47.0986 125.679L-51.3254 125.865L-52.4072 123.959C-53.7878 124.853 -53.6268 128.725 -56.805 126.36C-55.8041 129.11 -58.6649 127.844 -58.4035 129.209C-58.5409 128.872 -58.8832 128.351 -59.1382 127.874C-61.1927 128.037 -65.0986 128.532 -66.2118 129.819C-66.2118 129.819 -58.8862 135.951 -57.0532 138.943C-59.8384 138.018 -57.8328 139.223 -57.3672 140.148L-57.1003 139.506C-55.4494 140.273 -55.6334 141.946 -54.8352 142.471C-54.8277 142.339 -54.8235 142.174 -54.84 142.011L-54.9832 142.234C-55.0144 141.923 -54.9724 141.723 -54.8431 141.567C-54.8175 141.203 -54.7203 140.934 -54.2511 141.069L-54.3582 141.24C-53.6116 141.044 -52.4165 141.396 -51.884 141.543L-52.0326 142.951C-50.4695 140.368 -43.9444 147.603 -42.2463 147.808C-40.7324 149.686 -38.3711 147.628 -36.3202 148.665C-32.9579 149.357 -34.84 150.825 -33.2567 152.156C-31.2075 153.177 -33.5065 150.494 -32.6405 150.455L-30.2945 152.576C-31.8 152.639 -31.0874 153.548 -30.8653 154.11C-28.6727 154.497 -25.4708 157.304 -24.483 154.56C-21.6355 156.106 -21.7519 157.216 -20.486 157.448C-20.8505 156.912 -21.6693 156.388 -21.6017 155.825C-20.5378 157.139 -21.0073 155.557 -21.4517 155.256C-19.4907 154.161 -12.5489 161.008 -11.8204 157.951L-11.888 158.515C-11.2231 156.268 -11.6587 153.993 -10.2442 152.817L-9.51528 153.89L-8.13464 152.996C-7.34963 153.802 -7.85108 154.376 -7.88491 154.658C-5.67786 153.745 -2.9225 155.199 -0.430243 155.682L-2.4211 149.261C-0.439508 150.846 3.06931 154.029 3.72099 152.063L4.76899 154.25C8.59521 158.531 7.94914 152.716 9.51185 154.048L11.4125 156.477L9.2807 156.283C11.2961 157.586 12.0606 158.393 13.6084 159.989C13.6067 159.973 13.6257 159.955 13.643 159.921C13.5286 159.813 13.4759 159.702 13.4628 159.571L13.7715 159.551C14.1554 158.425 15.3467 157.708 16.8562 157.891C18.9525 158.351 20.8042 156.786 23.9502 159.448L25.0472 157.174L27.461 158.732L27.2538 160.587C24.7607 160.301 19.9536 160.689 16.7311 160.564L16.5885 161.412C18.5063 161.537 20.7585 160.868 22.0071 161.134C22.5865 161.542 23.9506 163.577 22.6612 164.761L24.0405 163.028C30.4426 163.264 30.4961 163.178 36.9239 165.731L36.4534 164.758C37.8372 164.308 39.2004 163.859 39.4164 165.392C43.3894 165.979 47.3877 167.436 49.732 169.952L50.5319 167.812C51.3574 167.99 52.2783 171.386 53.0085 168.346L54.9118 167.501C56.0542 167.741 56.8875 166.553 58.0782 167.892C58.1481 167.97 58.2197 168.064 58.2929 168.175C58.2864 168.11 58.2798 168.044 58.2955 167.994C60.7916 169.135 58.4911 166.024 61.3304 167.489C62.1152 169.117 62.6952 164.787 64.1017 165.388L65.2136 168.624C67.6494 170.608 68.4554 167.497 72.291 167.747C74.0101 168.987 74.5962 171.73 73.1287 174.027C75.1091 171.27 74.0849 172.206 76.4682 170.986C76.672 172.19 76.4258 172.42 75.8057 173.463C77.6366 174.991 77.1353 172.473 78.6226 172.642C79.2925 170.445 80.1825 166.934 80.6887 166.82L80.1794 166.079C81.8935 165 83.6715 164.558 85.3701 165.799L85.1714 166.914L87.1774 166.474L87.135 167.907L89.9683 167.662L89.6375 167.255C90.3067 167.114 92.5079 166.761 93.6476 167.593L93.5206 168.391C96.7143 171.116 99.9065 168.051 103.988 168.072L103.278 169.663C104.486 171.379 103.92 167.188 105.483 168.109L105.352 170.107C107.087 167.579 107.161 170.798 108.055 171.86L107.871 169.207L109.679 169.882C111.644 170.892 110.579 173.279 110.155 174.622L111.78 172.66L111.807 174.994C113.139 172.377 112.789 175.491 114.75 174.183C114.797 175.068 114.284 175.528 114.865 175.952L118.203 172.894L116.244 174.219L116.839 170.859C118.996 168.419 119.338 171.408 120.763 170.544L119.738 171.481C122.011 170.81 121.971 172.26 123.11 173.093C122.796 172.438 122.326 171.465 123.241 171.094C123.91 170.953 123.465 172.297 124.026 172.722C124.423 170.493 126.115 169.398 127.413 170.566C127.362 170.882 127.29 171.199 127.184 171.387C127.585 171.049 127.84 170.49 128.415 171.062L127.773 173.537L129.241 171.24C129.978 171.983 131.357 170.25 131.05 171.931L130.537 172.391L136.584 173.422L136.453 175.421C137.362 172.715 139.667 176.697 139.838 173.249C140.78 175.196 144.521 172.244 143.414 176.065C147.406 176.634 149.968 173.066 154.664 175.285C156.041 178.685 160.937 177.947 164.018 178.524C170.301 177.566 174.389 176.616 180.765 175.981C184.027 180.824 190.343 175.044 194.11 177.914L195.426 176.169C197.807 179.259 202.305 175.996 205.783 179.082C206.786 178.344 207.303 178.13 207.526 178.083C207.37 177.978 207.148 177.613 207.177 176.46C208.177 177.351 210.472 176.481 210.06 178.778L209.751 178.995C209.339 181.291 213.144 178.138 214.141 180.229L213.742 177.705L215.746 178.269L215.147 178.701C224.639 173.822 227.795 181.945 236.668 177.5C235.274 180.122 238.463 176.202 238.263 179.159C239.955 183.016 242.248 178.627 244.086 177.753C244.092 177.605 244.138 177.438 244.26 177.216L247.237 177.784C245.032 181.395 249.738 174.845 247.746 177.9C255.309 181.236 265.862 179.086 274.835 181L274.549 180.015C276.842 180.363 279.829 179.384 281.425 181.043C283.018 182.685 285.514 178.875 286.208 178.765C288.313 177.25 289.69 180.65 288.88 180.422C290.981 180.107 293.283 176.836 295.976 178.491C296.611 181.724 304.084 175.92 303.78 179.493L303.853 179.192C307.237 181.955 311.14 177.923 314.811 180.454C314.811 180.454 314.712 180.707 314.55 180.948L323.728 170.677L322.745 158.616L316.86 148.478L297.848 149.289L283.261 144.474L246.648 143.244L243.751 145.748C237.1 140.56 227.307 145.327 219.959 141.451L219.548 143.747C217.352 143.738 217.665 142.32 217.165 141.875C196.864 140.992 175.677 142.632 157.78 138.471C156.186 136.828 150.751 137.354 149.543 135.638C143.325 138.056 137.046 137.599 131.156 136.903L131.401 136.658L128.568 136.903C128.466 136.712 128.479 136.432 128.586 136.26C125.207 138.087 120.476 135.722 116.721 134.628L116.967 134.399C94.5281 132.434 73.1748 135.302 51.2212 130.543C41.2653 126.059 28.6366 130.43 17.0771 126.475C15.1542 124.031 -9.11131 124.091 -11.3562 125.039L-11.3579 125.023Z\",\n    fill: \"#72665A\"\n  }))))), /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter7_d_42_3399)\"\n  }, _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M302.152 268.014H10.8066V322.322H302.152V268.014Z\",\n    fill: \"#5D5042\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask2_42_3399\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 10,\n    y: 268,\n    width: 293,\n    height: 55\n  }, _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M302.152 268.014H10.8062V322.322H302.152V268.014Z\",\n    fill: \"white\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask2_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.5\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M115.307 308.171C115.1 308.105 115.017 308.221 115.307 308.171Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.731 305.466C268.731 305.466 268.813 305.466 268.875 305.466C268.978 305.138 269.082 304.86 269.185 304.646L268.731 305.483V305.466Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M293.42 307.469C293.42 307.469 293.524 307.518 293.566 307.551C293.566 307.353 293.566 307.155 293.42 307.469Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M211.879 308.633C211.672 308.617 211.548 308.683 211.466 308.798C211.59 308.732 211.714 308.666 211.879 308.633Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.076 310.01C70.076 310.01 70.1382 310.01 70.1796 309.977C70.0967 309.911 69.9931 309.862 69.9102 309.779L70.076 310.01Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.5719 309.436C71.1086 309.682 70.4274 309.895 70.1797 309.96C70.7784 310.403 71.377 310.436 71.9963 310.239C71.9963 309.731 70.8403 309.813 70.5719 309.436Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M269.184 304.631L269.37 304.318C269.37 304.318 269.246 304.499 269.184 304.631Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M381.817 334.277L378.473 332.292C389.166 331.358 394.182 333.342 403.328 331.719L402.832 332.145C404.174 332.604 404.897 328.144 419.657 333.555V333.752C420.173 333.719 420.173 333.326 421.185 333.85L418.625 332.637C420.152 332.129 421.474 331.194 423.517 331.046C423.951 331.259 424.095 331.669 424.137 331.997L429.132 331.653L430.66 332.932C432.188 332.227 431.486 329.538 435.573 331.03C434.025 329.161 437.596 329.898 437.08 328.947C437.287 329.177 437.761 329.521 438.133 329.849C440.548 329.62 445.131 329.095 446.246 328.128C446.246 328.128 436.75 324.192 434.19 322.192C437.617 322.7 435.098 321.962 434.417 321.339L434.19 321.815C432.146 321.355 432.146 320.175 431.114 319.847C431.114 319.945 431.155 320.06 431.176 320.175L431.3 320.011C431.403 320.224 431.341 320.372 431.238 320.486C431.259 320.732 431.176 320.946 430.619 320.864L430.722 320.732C429.876 320.913 428.389 320.732 427.749 320.634V319.65C426.222 321.536 417.531 316.797 415.487 316.731C413.443 315.485 410.904 317.043 408.344 316.436C404.277 316.125 406.3 314.993 404.257 314.141C401.697 313.518 404.773 315.288 403.761 315.354L400.706 313.977C402.481 313.862 401.511 313.255 401.181 312.878C398.538 312.714 394.368 310.91 393.563 312.878C389.992 311.943 389.992 311.156 388.444 311.058C388.96 311.419 389.971 311.747 389.992 312.14C388.567 311.271 389.311 312.353 389.889 312.55C387.721 313.419 378.576 308.976 378.122 311.14V310.746C377.626 312.353 378.431 313.928 376.924 314.829L375.913 314.108L374.385 314.813C373.353 314.288 373.869 313.862 373.869 313.665C371.371 314.419 367.903 313.534 364.889 313.321L368.089 317.715C365.55 316.699 360.946 314.649 360.43 316.059L358.902 314.583C353.783 311.763 355.352 315.813 353.308 314.977L350.748 313.37H353.308C350.748 312.583 349.736 312.058 347.693 311.009C347.693 311.009 347.672 311.042 347.672 311.058C347.817 311.124 347.899 311.206 347.92 311.304L347.569 311.337C347.259 312.14 345.938 312.698 344.142 312.649C341.582 312.435 339.6 313.616 335.513 311.927L334.501 313.583L331.446 312.599V311.288C334.439 311.353 340.075 310.845 343.936 310.779L343.998 310.173C341.706 310.173 339.126 310.763 337.598 310.632C336.855 310.369 334.976 309.008 336.339 308.123L334.935 309.402C327.317 309.566 327.255 309.631 319.308 308.156L320.009 308.812C318.441 309.205 316.851 309.582 316.417 308.516C311.649 308.303 306.694 307.5 303.577 305.844L302.896 307.385C301.884 307.303 300.357 304.975 299.882 307.139L297.735 307.828C296.352 307.713 295.505 308.598 293.936 307.713C293.833 307.664 293.73 307.598 293.647 307.533C293.647 307.582 293.647 307.615 293.647 307.664C290.53 306.991 293.689 309.041 290.097 308.172C288.941 307.073 288.837 310.14 287.083 309.795L285.328 307.582C282.169 306.319 281.633 308.533 277.07 308.549C274.882 307.762 273.809 305.876 275.254 304.188C273.251 306.221 274.345 305.516 271.703 306.5C271.29 305.663 271.579 305.483 272.157 304.729C269.804 303.761 270.712 305.483 268.937 305.434C268.421 307.008 267.843 309.517 267.265 309.615L267.946 310.107C266.067 310.96 264.024 311.353 261.835 310.566L261.918 309.779L259.585 310.189L259.441 309.172L256.117 309.5L256.571 309.779C255.787 309.91 253.227 310.271 251.761 309.746L251.823 309.189C247.694 307.451 244.288 309.746 239.437 309.943L240.077 308.795C238.425 307.664 239.623 310.566 237.661 309.992L237.558 308.582C235.824 310.435 235.329 308.188 234.131 307.5L234.689 309.353L232.439 308.976C229.961 308.369 230.911 306.647 231.283 305.68L229.61 307.139L229.28 305.516C228.062 307.418 228.041 305.221 225.894 306.237C225.709 305.614 226.266 305.27 225.523 305.007L221.972 307.319L224.119 306.303L223.871 308.68C221.642 310.5 220.837 308.434 219.247 309.09L220.341 308.385C217.74 308.976 217.596 307.959 216.13 307.434C216.584 307.877 217.286 308.533 216.233 308.844C215.469 308.976 215.82 308.008 215.077 307.746C214.912 309.336 213.033 310.173 211.341 309.435C211.341 309.205 211.403 308.992 211.506 308.844C211.072 309.107 210.845 309.517 210.102 309.139L210.536 307.369L209.09 309.058C208.12 308.582 206.716 309.861 206.84 308.664L207.398 308.303L200.09 307.893L199.987 306.483C199.264 308.434 196.002 305.745 196.25 308.172C194.867 306.86 190.821 309.123 191.626 306.385C186.816 306.188 184.235 308.828 178.393 307.5C176.308 305.188 170.611 305.942 166.874 305.712C159.545 306.696 154.818 307.582 147.345 308.336C142.824 305.106 136.115 309.467 131.263 307.647L129.942 308.943C126.722 306.893 121.809 309.418 117.288 307.434C116.173 307.992 115.595 308.172 115.347 308.221C115.554 308.287 115.863 308.533 115.966 309.336C114.666 308.762 112.065 309.484 112.251 307.861L112.581 307.697C112.767 306.057 108.659 308.467 107.234 307.057L108.039 308.812L105.603 308.516L106.264 308.172C95.653 312.075 90.843 306.532 80.8927 310.107C82.2139 308.188 78.9315 311.107 78.787 309.025C76.2685 306.401 74.1422 309.599 72.0778 310.304C72.0778 310.402 72.0572 310.533 71.9333 310.681L68.3206 310.435C70.4676 307.795 65.7402 312.632 67.7013 310.386C58.3084 308.434 46.046 310.468 35.1668 309.582L35.6416 310.255C32.8753 310.123 29.4484 310.96 27.3634 309.877C25.2577 308.795 22.8011 311.615 21.9754 311.714C19.6839 312.878 17.5989 310.566 18.5692 310.681C16.1126 311.009 13.8211 313.419 10.4149 312.403C9.23819 310.173 1.14583 314.616 1.02197 312.091L0.980679 312.304C-3.37516 310.533 -7.48326 313.567 -12.19 311.96C-12.19 311.96 -12.1075 311.779 -11.9423 311.599L-21.4797 319.257L-18.7341 327.668L-10.4353 334.473L12.0045 332.948L29.9232 335.588L73.5022 334.605L76.5988 332.702C85.1659 335.998 96.1484 332.161 105.376 334.523L105.562 332.883C108.163 332.784 107.998 333.801 108.638 334.08C132.832 333.67 157.729 331.44 179.508 333.457C181.614 334.539 187.993 333.883 189.644 335.031C196.704 333.014 204.198 333.03 211.279 333.211L211.01 333.391L214.334 333.063C214.479 333.194 214.499 333.391 214.396 333.522C218.153 332.063 224.078 333.49 228.681 334.063L228.413 334.244C255.291 334.49 280.229 331.391 306.88 333.621C319.287 336.261 333.676 332.555 347.899 334.752C350.521 336.375 379.278 335.096 381.817 334.326V334.277Z\",\n    fill: \"#72665A\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.4\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.169 307.452C223.439 307.419 223.314 307.568 223.169 307.452Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M95.3227 293.891C95.3227 293.891 95.2401 293.891 95.1988 293.891C95.013 294.333 94.8479 294.727 94.7034 295.022L95.3227 293.907V293.891Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.4644 288.3C75.4644 288.3 75.4021 288.218 75.3605 288.152C75.319 288.432 75.2359 288.695 75.4644 288.3Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M143.341 295.876C143.506 295.925 143.63 295.843 143.733 295.695C143.609 295.777 143.485 295.86 143.341 295.876Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.175 309.994C261.175 309.994 261.114 309.994 261.072 310.027C261.134 310.126 261.175 310.208 261.237 310.339L261.175 310.011V309.994Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.597 310.732C260.225 310.338 260.865 310.092 261.071 310.027C260.7 309.338 260.225 309.223 259.647 309.437C259.502 310.142 260.473 310.174 260.597 310.732Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M94.683 295.008L94.4353 295.435C94.4972 295.337 94.5798 295.189 94.683 295.008Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.74 285.055C56.8017 284.71 56.8223 284.432 56.8223 284.186C56.8017 284.186 56.7811 284.186 56.7606 284.186V285.071L56.74 285.055Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.8441 276.726C31.8028 276.857 31.6996 276.972 31.679 277.103C32.0505 277.546 33.186 277.775 34.693 277.939L35.0852 276.578L31.8441 276.742V276.726Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.2915 240.749L12.4591 243.897C3.3139 243.995 -0.236826 240.65 -8.2879 241.896L-7.73051 241.355C-8.70077 240.568 -10.6413 246.717 -21.2315 237.469L-21.1696 237.19C-21.6031 237.19 -21.727 237.732 -22.4082 236.879L-20.6535 238.863C-22.0573 239.388 -23.4404 240.568 -25.1745 240.536C-25.4635 240.175 -25.4635 239.601 -25.4016 239.142L-29.6336 239.06L-30.5212 237.092C-31.9869 237.896 -32.214 241.765 -35.1454 239.207C-34.4229 242.011 -37.1479 240.568 -37.024 241.946C-37.1272 241.601 -37.4163 241.06 -37.6227 240.568C-39.6871 240.601 -43.63 240.847 -44.8687 242.06C-44.8687 242.06 -38.1801 248.636 -36.6524 251.735C-39.3361 250.636 -37.4575 251.964 -37.086 252.915L-36.7557 252.292C-35.1867 253.161 -35.5377 254.818 -34.7945 255.391C-34.7738 255.26 -34.7532 255.096 -34.7532 254.916L-34.9184 255.129C-34.9184 254.818 -34.8564 254.621 -34.7119 254.473C-34.65 254.113 -34.5261 253.85 -34.072 254.014L-34.1958 254.178C-33.432 254.031 -32.276 254.457 -31.7599 254.637L-32.0489 256.031C-30.2322 253.555 -24.452 261.18 -22.7798 261.491C-21.4586 263.459 -18.8988 261.557 -16.9583 262.721C-13.6759 263.623 -15.699 264.968 -14.2539 266.394C-12.3134 267.542 -14.3365 264.722 -13.4695 264.738L-11.3432 267.001C-12.8502 266.968 -12.2309 267.919 -12.0657 268.493C-9.91875 269.018 -7.00798 272.018 -5.74871 269.346C-3.06502 271.067 -3.2921 272.166 -2.05348 272.477C-2.36313 271.92 -3.12696 271.346 -3.00309 270.789C-2.07412 272.166 -2.38378 270.559 -2.79665 270.231C-0.732277 269.264 5.50215 276.528 6.53433 273.527L6.41047 274.084C7.29815 271.887 7.09171 269.592 8.61935 268.509L9.23866 269.624L10.7044 268.821C11.4063 269.674 10.8489 270.215 10.7869 270.493C13.0784 269.723 15.6795 271.346 18.1155 271.986L16.7736 265.459C18.5903 267.165 21.7694 270.559 22.6158 268.641L23.4416 270.887C26.8272 275.396 26.7652 269.559 28.1896 270.985L29.8411 273.527L27.7355 273.199C29.6141 274.626 30.2953 275.478 31.6784 277.167C31.6784 277.151 31.6991 277.134 31.7197 277.102C31.6165 276.987 31.5752 276.872 31.5752 276.741H31.8849C32.3803 275.642 33.6396 275.003 35.1259 275.281C37.1697 275.872 39.1721 274.429 42.0416 277.282L43.3628 275.085L45.613 276.79L45.2208 278.626C42.7641 278.184 37.9335 278.266 34.7337 277.938L34.5066 278.774C36.4059 279.02 38.718 278.495 39.9359 278.84C40.4727 279.282 41.6287 281.398 40.225 282.496L41.7732 280.857C48.1315 281.496 48.1935 281.414 54.3453 284.366L53.9737 283.365C55.3981 283.005 56.8019 282.644 56.8638 284.185C60.7655 285.021 64.6053 286.727 66.6903 289.383L67.7018 287.301C68.5069 287.53 69.0849 290.974 70.1171 287.989L72.0989 287.268C73.2137 287.579 74.1633 286.448 75.2161 287.858C75.2781 287.94 75.34 288.039 75.4019 288.153C75.4019 288.088 75.4019 288.022 75.4226 287.973C77.7966 289.268 75.8148 286.022 78.4985 287.661C79.1178 289.334 80.1294 285.054 81.4712 285.743L82.2557 289.039C84.4852 291.17 85.6 288.121 89.3984 288.612C90.988 289.957 91.2976 292.728 89.6049 294.925C91.855 292.302 90.7403 293.171 93.2382 292.105C93.3207 293.318 93.0524 293.532 92.3298 294.532C94.002 296.172 93.7543 293.63 95.22 293.892C96.1076 291.744 97.3463 288.301 97.8624 288.219L97.4288 287.448C99.2455 286.481 101.062 286.153 102.631 287.497L102.321 288.596L104.365 288.284L104.179 289.711L107.028 289.645L106.739 289.219C107.42 289.121 109.65 288.908 110.703 289.809L110.496 290.597C113.407 293.515 116.896 290.662 120.963 290.941L120.096 292.482C121.128 294.27 120.983 290.055 122.449 291.072L122.119 293.056C124.101 290.646 123.853 293.86 124.637 294.975L124.72 292.318L126.475 293.105C128.333 294.237 127.032 296.549 126.475 297.861L128.291 296.008L128.085 298.336C129.674 295.811 129.014 298.894 131.099 297.713C131.058 298.598 130.5 299.025 131.037 299.484L134.67 296.647L132.585 297.844L133.514 294.532C135.909 292.236 135.95 295.237 137.457 294.466L136.342 295.335C138.675 294.811 138.489 296.254 139.542 297.155C139.294 296.483 138.923 295.483 139.872 295.171C140.554 295.073 139.976 296.385 140.492 296.844C141.111 294.647 142.907 293.663 144.084 294.909C144.001 295.221 143.898 295.532 143.774 295.712C144.208 295.401 144.517 294.86 145.033 295.467L144.146 297.893L145.838 295.696C146.499 296.483 148.047 294.843 147.573 296.5L147.015 296.942L152.94 298.352L152.61 300.337C153.786 297.697 155.686 301.812 156.202 298.385C156.945 300.386 160.97 297.68 159.484 301.419C163.406 302.239 166.317 298.844 170.776 301.353C171.808 304.829 176.763 304.403 179.777 305.174C186.135 304.616 190.305 303.928 196.725 303.698C199.492 308.732 206.366 303.37 209.834 306.469L211.321 304.813C213.385 308.043 218.195 305.075 221.353 308.371C222.427 307.699 222.964 307.519 223.191 307.486C223.046 307.371 222.86 306.994 223.005 305.846C223.913 306.797 226.287 306.076 225.647 308.338L225.317 308.535C224.677 310.798 228.785 307.896 229.57 310.044L229.425 307.502L231.366 308.191L230.726 308.584C240.676 304.321 243.009 312.618 252.298 308.748C250.647 311.274 254.218 307.568 253.723 310.503C255.023 314.455 257.748 310.224 259.668 309.47C259.689 309.322 259.751 309.158 259.895 308.945L262.806 309.699C260.246 313.159 265.593 306.928 263.302 309.847C270.506 313.651 281.262 312.175 289.994 314.651L289.808 313.651C292.058 314.143 295.134 313.356 296.559 315.11C297.983 316.849 300.853 313.208 301.554 313.143C303.805 311.765 304.837 315.242 304.052 314.963C306.179 314.783 308.8 311.667 311.319 313.487C311.629 316.75 319.659 311.437 318.998 314.979L319.102 314.684C322.198 317.652 326.492 313.881 329.898 316.635C329.898 316.635 329.774 316.881 329.589 317.111L339.766 307.453L339.993 295.368L335.142 284.89L316.108 284.497L302.05 278.774L265.676 275.232L262.538 277.544C256.427 271.953 246.188 276.085 239.252 271.756L238.612 274.019C236.423 273.871 236.878 272.477 236.423 272.002C216.275 269.838 194.991 270.133 177.568 264.853C176.144 263.115 170.673 263.295 169.641 261.508C163.2 263.525 156.986 262.672 151.185 261.606L151.454 261.376L148.605 261.442C148.522 261.245 148.563 260.967 148.687 260.803C145.137 262.41 140.657 259.753 137.024 258.425L137.292 258.212C115.121 254.834 93.5478 256.343 72.1402 250.21C62.6647 245.11 49.6385 248.669 38.5115 243.995C36.8394 241.437 12.6449 239.962 10.3121 240.749H10.2915Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.24 272.034C18.24 272.034 18.1367 272.001 18.0955 271.984L18.3845 273.427L18.24 272.034Z\",\n    fill: \"#72665A\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.28\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M192.245 306.253C192.245 306.253 192.204 306.253 192.183 306.253C192.142 306.515 192.101 306.728 192.039 306.892L192.245 306.236V306.253Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.489 304.663C181.489 304.663 181.449 304.614 181.429 304.598C181.429 304.746 181.429 304.91 181.489 304.663Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M216.997 303.876C216.997 303.876 217.142 303.827 217.184 303.744C217.122 303.794 217.08 303.843 216.997 303.876Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.722 303.022C278.722 303.022 278.702 303.022 278.681 303.039C278.722 303.088 278.764 303.121 278.806 303.187L278.743 303.006L278.722 303.022Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.495 303.465C278.268 303.284 278.557 303.104 278.66 303.055C278.392 302.71 278.144 302.678 277.875 302.842C277.875 303.235 278.371 303.186 278.495 303.465Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M215.945 284.494C215.945 284.494 216.048 284.444 216.111 284.395C216.028 284.395 215.986 284.428 215.945 284.494Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M192.039 306.908L191.956 307.156C191.956 307.156 191.998 307.007 192.039 306.908Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M171.58 304.251C171.58 304.054 171.56 303.907 171.518 303.775H171.498L171.58 304.251Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.54 294.299C121.54 294.299 121.54 294.463 121.56 294.545L121.767 294.102C121.664 294.134 121.581 294.217 121.54 294.299Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.956 301.547C157.956 301.547 157.915 301.678 157.915 301.76C158.142 301.973 158.761 302.022 159.546 301.989L159.587 301.219L157.956 301.53V301.547Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M143.072 283.608L144.517 285.149C139.851 285.854 137.684 284.313 133.699 285.559L133.927 285.231C133.348 284.87 133.018 288.347 126.598 284.1V283.952C126.371 283.985 126.371 284.28 125.937 283.87L127.052 284.821C126.392 285.215 125.814 285.953 124.926 286.051C124.74 285.887 124.678 285.559 124.657 285.313L122.49 285.575L121.829 284.575C121.169 285.116 121.458 287.232 119.703 286.051C120.364 287.51 118.815 286.936 119.042 287.674C118.96 287.494 118.753 287.215 118.588 286.969C117.535 287.133 115.554 287.543 115.058 288.297C115.058 288.297 119.187 291.38 120.302 292.938C118.815 292.544 119.909 293.118 120.198 293.61L120.302 293.249C121.189 293.61 121.189 294.528 121.643 294.791C121.643 294.709 121.643 294.627 121.623 294.528L121.561 294.659C121.52 294.496 121.561 294.381 121.582 294.299C121.582 294.102 121.602 293.938 121.85 294.004L121.809 294.102C122.18 293.971 122.82 294.102 123.109 294.184V294.955C123.77 293.479 127.548 297.201 128.435 297.25C129.323 298.218 130.438 297.004 131.532 297.496C133.307 297.742 132.42 298.628 133.307 299.284C134.422 299.759 133.08 298.382 133.534 298.332L134.855 299.398C134.092 299.497 134.505 299.956 134.649 300.251C135.805 300.382 137.622 301.792 137.973 300.251C139.521 300.989 139.521 301.612 140.202 301.678C139.975 301.399 139.542 301.136 139.542 300.825C140.161 301.497 139.831 300.661 139.583 300.513C140.533 299.841 144.496 303.317 144.703 301.628V301.94C144.93 300.677 144.579 299.464 145.239 298.759L145.673 299.316L146.333 298.775C146.788 299.185 146.561 299.513 146.561 299.677C147.655 299.103 149.162 299.792 150.462 299.956L149.079 296.529C150.194 297.316 152.176 298.923 152.403 297.824L153.063 298.972C155.293 301.169 154.612 298.021 155.499 298.677L156.614 299.939H155.499C156.614 300.563 157.048 300.956 157.935 301.776C157.935 301.776 157.935 301.76 157.935 301.743C157.873 301.694 157.832 301.628 157.832 301.563L157.977 301.53C158.121 300.907 158.699 300.481 159.463 300.513C160.578 300.694 161.445 299.759 163.22 301.087L163.654 299.808L164.995 300.579V301.596C163.695 301.53 161.238 301.923 159.566 301.973V302.432C160.536 302.432 161.651 301.973 162.312 302.087C162.642 302.284 163.447 303.35 162.848 304.039L163.468 303.039C166.791 302.924 166.812 302.875 170.28 304.039L169.971 303.53C170.652 303.235 171.333 302.94 171.539 303.76C173.624 303.924 175.771 304.58 177.113 305.875L177.402 304.678C177.836 304.744 178.496 306.564 178.723 304.875L179.652 304.35C180.251 304.449 180.623 303.76 181.304 304.449C181.345 304.498 181.387 304.531 181.428 304.596C181.428 304.563 181.428 304.531 181.428 304.498C182.79 305.023 181.428 303.416 182.976 304.104C183.472 304.957 183.533 302.579 184.277 302.842L185.04 304.563C186.424 305.547 186.651 303.826 188.632 303.809C189.582 304.432 190.057 305.892 189.417 307.203C190.284 305.613 189.809 306.17 190.965 305.416C191.151 306.072 191.027 306.203 190.759 306.793C191.791 307.564 191.399 306.203 192.163 306.236C192.39 305.006 192.637 303.055 192.906 302.973L192.596 302.596C193.422 301.94 194.31 301.628 195.259 302.251L195.218 302.875L196.229 302.563L196.291 303.35L197.736 303.104L197.53 302.891C197.86 302.793 198.975 302.514 199.615 302.924V303.366C201.39 304.727 202.877 302.94 204.982 302.793L204.714 303.694C205.437 304.58 204.92 302.317 205.767 302.76L205.808 303.858C206.551 302.415 206.778 304.17 207.294 304.711L207.047 303.268L208.017 303.58C209.09 304.055 208.678 305.4 208.512 306.154L209.235 305.023L209.379 306.302C209.916 304.826 209.916 306.548 210.845 305.744C210.928 306.22 210.68 306.498 211.01 306.712L212.559 304.924L211.63 305.711L211.733 303.858C212.703 302.448 213.054 304.055 213.735 303.547L213.261 304.104C214.396 303.645 214.458 304.449 215.098 304.859C214.891 304.514 214.602 304.006 215.057 303.76C215.387 303.662 215.242 304.416 215.552 304.613C215.635 303.383 216.44 302.727 217.183 303.301C217.183 303.481 217.162 303.645 217.1 303.76C217.286 303.563 217.389 303.235 217.72 303.53L217.534 304.908L218.153 303.596C218.566 303.973 219.185 302.973 219.123 303.908L218.876 304.186L222.055 304.514L222.096 305.613C222.406 304.104 223.83 306.187 223.727 304.301C224.326 305.334 226.08 303.58 225.729 305.711C227.814 305.875 228.95 303.826 231.489 304.859C232.397 306.662 234.875 306.088 236.505 306.269C239.685 305.515 241.749 304.826 245.011 304.252C246.972 306.777 249.903 303.383 252.009 304.809L252.587 303.809C253.991 305.4 256.138 303.448 258.099 305.006C258.574 304.563 258.842 304.432 258.945 304.399C258.863 304.35 258.718 304.154 258.677 303.53C259.234 303.973 260.37 303.416 260.287 304.695L260.142 304.826C260.06 306.105 261.856 304.236 262.475 305.334L262.124 303.973L263.198 304.203L262.909 304.465C267.533 301.432 269.618 305.76 273.953 303.006C273.375 304.498 274.8 302.219 274.862 303.858C275.956 305.908 276.885 303.416 277.793 302.875C277.793 302.793 277.793 302.694 277.855 302.579L279.424 302.776C278.495 304.826 280.559 301.071 279.692 302.825C283.78 304.367 289.106 302.793 293.854 303.514L293.647 302.989C294.845 303.088 296.331 302.448 297.26 303.301C298.168 304.137 299.242 301.956 299.613 301.874C300.604 300.956 301.513 302.776 301.1 302.678C302.173 302.432 303.164 300.546 304.65 301.35C305.167 303.088 308.697 299.644 308.738 301.596V301.432C310.658 302.809 312.433 300.464 314.477 301.71C314.477 301.71 314.436 301.858 314.374 301.989L318.523 296.037L317.346 289.478L313.734 284.149L303.969 285.297L296.166 283.214L277.194 283.919L275.832 285.395C272.095 282.804 267.327 285.789 263.301 283.936L263.218 285.215C262.083 285.297 262.166 284.493 261.877 284.28C251.348 284.559 240.51 286.264 231.035 284.657C230.126 283.821 227.34 284.313 226.617 283.427C223.541 284.985 220.279 284.969 217.203 284.805L217.327 284.657L215.882 284.903C215.82 284.805 215.82 284.641 215.862 284.542C214.231 285.674 211.65 284.542 209.648 284.1L209.772 283.968C198.067 283.739 187.208 286.116 175.627 284.329C170.239 282.247 163.963 285.116 157.77 283.395C156.635 282.132 144.125 283.083 143.01 283.673L143.072 283.608Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M124.636 285.313H124.677C124.677 284.771 124.596 284.968 124.636 285.313Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.503 299.988C150.503 299.988 150.441 299.988 150.42 299.988L150.73 300.743L150.503 300.005V299.988Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.927 300.432C134.67 300.597 134.711 300.465 134.608 300.252C134.34 300.219 134.113 300.252 133.927 300.432Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M118.568 286.347C118.176 286.298 118.32 286.625 118.568 286.986C118.96 286.921 119.249 286.888 119.249 286.888C119.022 286.757 118.816 286.478 118.589 286.347H118.568Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.157 293.627L120.033 294.071C120.261 293.972 120.261 293.808 120.157 293.627Z\",\n    fill: \"#9F8F80\"\n  }))))), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M302.153 399.176H10.8071V438.447H302.153V399.176Z\",\n    fill: \"#5D5042\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask3_42_3399\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 10,\n    y: 399,\n    width: 293,\n    height: 40\n  }, _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M302.151 399.174H10.8059V438.445H302.151V399.174Z\",\n    fill: \"white\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask3_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.22\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.634 429.244C258.884 429.178 258.8 429.327 258.634 429.244Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M129.714 432.656C129.714 432.656 129.631 432.656 129.59 432.656C129.508 433.115 129.404 433.525 129.322 433.837L129.714 432.656Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M108.988 429.737C108.988 429.737 108.905 429.655 108.864 429.605C108.864 429.885 108.864 430.164 108.988 429.737Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M177.504 428.31C177.69 428.343 177.793 428.228 177.855 428.08C177.752 428.179 177.648 428.261 177.504 428.31Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M296.64 426.755C296.64 426.755 296.578 426.771 296.557 426.788C296.64 426.886 296.702 426.952 296.784 427.067L296.661 426.738L296.64 426.755Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M296.227 427.556C295.772 427.212 296.351 426.9 296.557 426.802C296.061 426.162 295.545 426.113 295.029 426.408C295.029 427.13 296 427.015 296.227 427.556Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M129.342 433.838L129.197 434.282C129.238 434.183 129.3 434.019 129.342 433.838Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M89.8287 429C89.8287 428.656 89.7874 428.377 89.7255 428.131C89.7049 428.131 89.6842 428.131 89.6636 428.131L89.8287 429Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.5506 424.062C63.53 424.193 63.468 424.308 63.468 424.456C63.9222 424.833 65.0989 424.915 66.6265 424.882L66.7091 423.488L63.5506 424.062Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.7932 391.4L37.6008 394.221C28.6001 395.516 24.4094 392.696 16.7093 394.958L17.1428 394.352C16.0281 393.696 15.3881 400.025 3.02249 392.302V392.023C2.58897 392.072 2.58896 392.63 1.74257 391.892L3.88952 393.614C2.60961 394.319 1.49485 395.663 -0.218587 395.86C-0.590175 395.549 -0.714037 394.975 -0.734681 394.516L-4.92536 394.991L-6.20528 393.171C-7.48519 394.155 -6.90717 397.992 -10.334 395.86C-9.03348 398.517 -12.0268 397.451 -11.6139 398.812C-11.7791 398.484 -12.1713 397.992 -12.5016 397.533C-14.5454 397.844 -18.3851 398.582 -19.3347 399.96C-19.3347 399.96 -11.3662 405.567 -9.21927 408.421C-12.0888 407.699 -9.98309 408.749 -9.40506 409.65L-9.21927 408.995C-7.50583 409.65 -7.50583 411.323 -6.6388 411.798C-6.6388 411.667 -6.65944 411.503 -6.68008 411.339L-6.78331 411.569C-6.86588 411.274 -6.82459 411.061 -6.72137 410.897C-6.74202 410.536 -6.65944 410.257 -6.18463 410.355L-6.26721 410.536C-5.54468 410.29 -4.30605 410.552 -3.76931 410.667V412.077C-2.4894 409.404 4.79785 416.16 6.51128 416.242C8.22471 418.013 10.3717 415.799 12.498 416.685C15.9248 417.144 14.2114 418.735 15.9248 419.948C18.0718 420.833 15.4913 418.308 16.3584 418.21L18.9182 420.161C17.4318 420.325 18.2369 421.178 18.5053 421.719C20.7348 421.965 24.2236 424.539 24.9049 421.719C27.8982 423.063 27.8982 424.178 29.1988 424.326C28.7653 423.818 27.9189 423.359 27.8982 422.785C29.0956 424.014 28.4763 422.473 27.9808 422.211C29.8181 420.997 37.4769 427.327 37.8692 424.244V424.801C38.3027 422.506 37.6214 420.276 38.8807 419.013L39.7271 420.03L41.007 419.046C41.8741 419.784 41.4405 420.407 41.4405 420.686C43.5256 419.62 46.457 420.883 48.9962 421.194L46.3125 414.947C48.4594 416.39 52.2992 419.325 52.7327 417.308L54.0126 419.407C58.3065 423.424 57.0059 417.669 58.7194 418.866L60.8663 421.161L58.7194 421.129C60.8663 422.293 61.7127 423.031 63.4262 424.523C63.4262 424.506 63.4262 424.49 63.4262 424.457C63.3023 424.359 63.2404 424.26 63.2197 424.113L63.5294 424.064C63.7977 422.916 64.9125 422.145 66.4195 422.211C68.5665 422.539 70.2386 420.85 73.6655 423.26L74.5119 420.915L77.0717 422.309V424.178C74.5531 424.064 69.8257 424.769 66.5846 424.867L66.5227 425.72C68.4426 425.72 70.6308 424.9 71.8901 425.08C72.5094 425.457 74.099 427.392 72.9429 428.638L74.1196 426.818C80.5192 426.605 80.5605 426.523 87.2491 428.622L86.671 427.687C87.9922 427.146 89.3134 426.605 89.685 428.114C93.6899 428.425 97.86 429.59 100.461 431.951L101.039 429.753C101.885 429.868 103.165 433.197 103.578 430.114L105.395 429.147C106.551 429.311 107.274 428.065 108.574 429.327C108.657 429.409 108.739 429.491 108.822 429.59C108.822 429.524 108.822 429.458 108.822 429.409C111.444 430.377 108.801 427.441 111.795 428.704C112.765 430.262 112.868 425.917 114.313 426.408L115.779 429.557C118.421 431.36 118.875 428.212 122.715 428.196C124.552 429.311 125.44 432 124.222 434.394C125.894 431.508 124.986 432.508 127.215 431.131C127.566 432.311 127.319 432.574 126.823 433.64C128.805 435.033 128.041 432.574 129.527 432.639C129.961 430.409 130.456 426.851 130.952 426.704L130.374 425.999C131.963 424.802 133.677 424.244 135.514 425.375L135.452 426.507L137.413 425.933L137.537 427.376L140.324 426.933L139.932 426.54C140.593 426.343 142.74 425.851 143.978 426.605L143.937 427.409C147.405 429.901 150.274 426.638 154.341 426.376L153.805 427.999C155.188 429.622 154.176 425.49 155.828 426.294L155.91 428.294C157.355 425.654 157.789 428.852 158.78 429.852L158.305 427.228L160.184 427.786C162.269 428.655 161.463 431.098 161.154 432.475L162.578 430.409L162.847 432.721C163.879 430.032 163.879 433.148 165.695 431.705C165.84 432.574 165.386 433.082 166.005 433.459L168.998 430.196L167.202 431.639L167.429 428.261C169.308 425.687 169.969 428.638 171.31 427.687L170.382 428.688C172.57 427.868 172.694 429.311 173.912 430.049C173.519 429.426 172.941 428.491 173.829 428.048C174.469 427.868 174.18 429.245 174.799 429.606C174.944 427.343 176.513 426.162 177.937 427.212C177.937 427.54 177.896 427.835 177.793 428.048C178.164 427.687 178.35 427.097 178.969 427.638L178.598 430.147L179.816 427.753C180.621 428.442 181.818 426.622 181.694 428.311L181.24 428.819L187.371 429.426L187.454 431.426C188.053 428.671 190.798 432.475 190.592 429.032C191.748 430.918 195.154 427.704 194.473 431.59C198.498 431.885 200.687 428.147 205.579 430.049C207.334 433.345 212.103 432.279 215.261 432.623C221.413 431.246 225.397 429.999 231.673 428.95C235.451 433.558 241.107 427.359 245.174 429.967L246.289 428.13C248.993 431.032 253.122 427.474 256.92 430.311C257.849 429.508 258.345 429.262 258.551 429.196C258.386 429.114 258.118 428.77 258.035 427.605C259.108 428.425 261.317 427.392 261.152 429.721L260.884 429.967C260.719 432.279 264.166 428.884 265.384 430.885L264.724 428.393L266.767 428.819L266.21 429.294C275.128 423.785 279.154 431.656 287.535 426.622C286.42 429.327 289.186 425.195 289.29 428.163C291.395 431.885 293.191 427.359 294.925 426.359C294.925 426.212 294.946 426.048 295.049 425.818L298.084 426.179C296.267 429.917 300.272 423.08 298.6 426.261C306.486 429.065 316.787 426.212 325.932 427.507L325.54 426.54C327.852 426.72 330.742 425.556 332.497 427.097C334.252 428.638 336.337 424.654 337.018 424.506C338.938 422.85 340.693 426.146 339.867 425.982C341.931 425.523 343.872 422.096 346.721 423.572C347.691 426.753 354.524 420.456 354.607 424.031L354.648 423.736C358.302 426.261 361.77 421.965 365.713 424.244C365.713 424.244 365.63 424.506 365.506 424.752L373.537 413.897L371.245 401.96L364.288 392.253L345.441 394.352L330.391 390.564L293.769 391.843L291.148 394.532C283.943 389.826 274.736 395.237 266.974 391.876L266.809 394.188C264.62 394.319 264.765 392.892 264.228 392.482C243.894 392.991 222.982 396.09 204.691 393.171C202.937 391.63 197.569 392.532 196.186 390.925C190.241 393.761 183.944 393.729 177.999 393.45L178.226 393.187L175.419 393.63C175.295 393.433 175.295 393.171 175.377 392.991C172.219 395.04 167.244 393.007 163.363 392.171L163.59 391.925C141.005 391.499 120.052 395.827 97.6742 392.597C87.2697 388.809 75.1518 394.04 63.2197 390.892C61.0315 388.58 36.8576 390.318 34.7313 391.4H34.7932Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.1412 421.228C49.1412 421.228 49.038 421.212 48.9761 421.195L49.5747 422.573L49.1412 421.212V421.228Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1838 422.029C18.6289 422.34 18.6908 422.094 18.4844 421.701C17.9683 421.635 17.5141 421.701 17.1838 422.029Z\",\n    fill: \"#72665A\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.25\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.729 433.117C225.729 433.117 225.832 433.067 225.895 433.018C225.812 433.018 225.77 433.051 225.729 433.117Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.856 432.246L154.301 433.788C149.636 434.493 147.468 432.951 143.484 434.198L143.711 433.87C143.133 433.509 142.803 436.985 136.382 432.738V432.591C136.155 432.623 136.155 432.919 135.722 432.509L136.837 433.46C136.176 433.853 135.598 434.591 134.71 434.69C134.524 434.526 134.463 434.198 134.442 433.952L132.274 434.214L131.614 433.214C130.953 433.755 131.242 435.87 129.487 434.69C130.148 436.149 128.6 435.575 128.827 436.313C128.744 436.133 128.538 435.854 128.373 435.608C127.32 435.772 125.338 436.182 124.843 436.936C124.843 436.936 128.971 440.019 130.086 441.576C128.6 441.183 129.694 441.757 129.983 442.249L130.086 441.888C130.974 442.249 130.974 443.167 131.428 443.429C131.428 443.347 131.428 443.265 131.407 443.167L131.345 443.298C131.304 443.134 131.345 443.019 131.366 442.937C131.366 442.741 131.387 442.577 131.634 442.642L131.593 442.741C131.965 442.609 132.605 442.741 132.894 442.823V443.593C133.554 442.118 137.332 445.84 138.22 445.889C139.107 446.856 140.222 445.643 141.316 446.135C143.092 446.381 142.204 447.266 143.092 447.922C144.206 448.398 142.865 447.02 143.319 446.971L144.64 448.037C143.876 448.135 144.289 448.594 144.433 448.89C145.59 449.021 147.406 450.431 147.757 448.89C149.305 449.628 149.305 450.251 149.987 450.316C149.76 450.037 149.326 449.775 149.326 449.464C149.945 450.136 149.615 449.3 149.367 449.152C150.317 448.48 154.281 451.956 154.487 450.267V450.579C154.714 449.316 154.363 448.103 155.024 447.397L155.457 447.955L156.118 447.414C156.572 447.824 156.345 448.152 156.345 448.316C157.439 447.742 158.946 448.431 160.247 448.594L158.863 445.167C159.978 445.955 161.96 447.561 162.187 446.463L162.848 447.611C165.077 449.808 164.396 446.66 165.284 447.316L166.398 448.578H165.284C166.398 449.201 166.832 449.595 167.72 450.415C167.72 450.415 167.72 450.398 167.72 450.382C167.658 450.333 167.616 450.267 167.616 450.201L167.782 450.169C167.926 449.546 168.504 449.119 169.268 449.152C170.383 449.332 171.25 448.398 173.025 449.726L173.459 448.447L174.8 449.218V450.234C173.5 450.169 171.043 450.562 169.371 450.611V451.07C170.341 451.07 171.477 450.611 172.117 450.726C172.447 450.923 173.252 451.989 172.653 452.677L173.273 451.677C176.596 451.562 176.617 451.513 180.085 452.677L179.776 452.169C180.457 451.874 181.138 451.579 181.345 452.399C183.43 452.563 185.576 453.219 186.918 454.514L187.207 453.317C187.641 453.383 188.301 455.203 188.529 453.514L189.458 452.989C190.056 453.087 190.428 452.399 191.109 453.087C191.15 453.137 191.192 453.169 191.233 453.235C191.233 453.202 191.233 453.169 191.233 453.137C192.595 453.661 191.233 452.054 192.781 452.743C193.277 453.596 193.339 451.218 194.082 451.48L194.846 453.202C196.229 454.186 196.456 452.464 198.438 452.448C199.387 453.071 199.862 454.53 199.222 455.842C200.089 454.252 199.614 454.809 200.77 454.055C200.956 454.711 200.832 454.842 200.564 455.432C201.596 456.203 201.204 454.842 201.968 454.875C202.195 453.645 202.442 451.694 202.711 451.612L202.401 451.234C203.227 450.579 204.115 450.267 205.064 450.89L205.023 451.513L206.034 451.202L206.096 451.989L207.541 451.743L207.335 451.53C207.665 451.431 208.78 451.152 209.42 451.562V452.005C211.195 453.366 212.682 451.579 214.787 451.431L214.519 452.333C215.242 453.219 214.725 450.956 215.572 451.398L215.613 452.497C216.356 451.054 216.583 452.809 217.1 453.35L216.852 451.907L217.822 452.218C218.896 452.694 218.483 454.038 218.317 454.793L219.04 453.661L219.185 454.94C219.721 453.464 219.721 455.186 220.65 454.383C220.733 454.858 220.485 455.137 220.815 455.35L222.364 453.563L221.435 454.35L221.538 452.497C222.508 451.087 222.859 452.694 223.54 452.186L223.066 452.743C224.201 452.284 224.263 453.087 224.903 453.497C224.696 453.153 224.407 452.645 224.862 452.399C225.192 452.3 225.047 453.055 225.357 453.251C225.44 452.022 226.245 451.366 226.988 451.94C226.988 452.12 226.967 452.284 226.905 452.399C227.091 452.202 227.194 451.874 227.525 452.169L227.339 453.546L227.958 452.235C228.371 452.612 228.99 451.612 228.928 452.546L228.681 452.825L231.86 453.153L231.901 454.252C232.211 452.743 233.635 454.825 233.532 452.94C234.131 453.973 235.885 452.218 235.534 454.35C237.619 454.514 238.755 452.464 241.294 453.497C242.202 455.301 244.68 454.727 246.31 454.907C249.49 454.153 251.554 453.464 254.816 452.891C256.777 455.416 259.708 452.022 261.814 453.448L262.392 452.448C263.796 454.038 265.943 452.087 267.904 453.645C268.379 453.202 268.647 453.071 268.75 453.038C268.668 452.989 268.523 452.792 268.482 452.169C269.039 452.612 270.175 452.054 270.092 453.333L269.948 453.465C269.865 454.743 271.661 452.874 272.28 453.973L271.929 452.612L273.003 452.841L272.714 453.104C277.338 450.07 279.423 454.399 283.758 451.644C283.18 453.137 284.605 450.857 284.667 452.497C285.761 454.547 286.69 452.054 287.598 451.513C287.598 451.431 287.598 451.333 287.66 451.218L289.229 451.415C288.3 453.465 290.364 449.71 289.497 451.464C293.585 453.005 298.911 451.431 303.659 452.153L303.452 451.628C304.65 451.726 306.136 451.087 307.065 451.94C307.973 452.776 309.047 450.595 309.418 450.513C310.409 449.595 311.318 451.415 310.905 451.316C311.978 451.07 312.969 449.185 314.456 449.988C314.972 451.726 318.502 448.283 318.543 450.234V450.07C320.463 451.448 322.238 449.103 324.282 450.349C324.282 450.349 324.241 450.497 324.179 450.628L328.328 444.676L327.151 438.117L323.539 432.787L313.774 433.935L305.971 431.853L286.999 432.558L285.637 434.034C281.9 431.443 277.132 434.427 273.106 432.574L273.023 433.853C271.888 433.935 271.971 433.132 271.682 432.919C261.153 433.197 250.315 434.903 240.84 433.296C239.932 432.46 237.145 432.951 236.422 432.066C233.346 433.624 230.084 433.607 227.009 433.443L227.132 433.296L225.687 433.542C225.625 433.443 225.625 433.279 225.667 433.181C224.036 434.312 221.455 433.181 219.453 432.738L219.577 432.607C207.872 432.378 197.034 434.755 185.432 432.968C180.044 430.885 173.768 433.755 167.575 432.033C166.44 430.771 153.93 431.722 152.815 432.312L152.856 432.246Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.421 433.952H134.461C134.461 433.41 134.38 433.607 134.421 433.952Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M128.353 434.968C127.96 434.919 128.105 435.247 128.353 435.607C128.745 435.542 129.034 435.509 129.034 435.509C128.807 435.378 128.6 435.099 128.373 434.968H128.353Z\",\n    fill: \"#9F8F80\"\n  })))), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter8_dd_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M295.159 28.9911C203.228 27.7212 111.277 26.4666 19.3459 25.1967C24.658 19.8151 29.97 14.4335 35.2817 9.06762L277 13.1094C283.06 18.3982 289.119 23.7027 295.179 28.9915L295.159 28.9911Z\",\n    fill: \"#C4CAB9\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_d_42_3399\",\n    x: 10.4636,\n    y: 23.5449,\n    width: 292.033,\n    height: 430.033,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 4\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter1_d_42_3399\",\n    x: 187.997,\n    y: 10.8258,\n    width: 15.3411,\n    height: 447.136,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 3\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.75 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter2_d_42_3399\",\n    x: 221.068,\n    y: 5.52307,\n    width: 23.3206,\n    height: 455.136,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 3\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.75 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter3_d_42_3399\",\n    x: 218.766,\n    y: 9.67542,\n    width: 27.3206,\n    height: 459.136,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 3\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 6\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.75 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter4_d_42_3399\",\n    x: 58.5842,\n    y: 22.5465,\n    width: 15.3411,\n    height: 447.136,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 3\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.75 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter5_d_42_3399\",\n    x: 108.281,\n    y: 24.3571,\n    width: 27.3206,\n    height: 459.136,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 3\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 6\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.75 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter6_d_42_3399\",\n    x: 4.47314,\n    y: 138.075,\n    width: 305.307,\n    height: 73.36,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 4\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter7_d_42_3399\",\n    x: 4.80615,\n    y: 266.014,\n    width: 303.346,\n    height: 66.3079,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 4\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter8_dd_42_3399\",\n    x: 13.3459,\n    y: 7.06763,\n    width: 287.833,\n    height: 31.9238,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 4\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 2\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"hardAlpha\",\n    operator: \"out\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0.452255 0 0 0 0 0.466667 0 0 0 0 0.425833 0 0 0 1 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"effect2_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect2_dropShadow_42_3399\",\n    result: \"shape\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgProductItem);\nexport default __webpack_public_path__ + \"static/media/ProductItem.e8611f0e440e1deeec6d2fd33d5bd0ad.svg\";\nexport { ForwardRef as ReactComponent };","import { FC, useEffect, useRef, useState } from 'react';\r\n\r\nimport ProductItemBG from '../../../assets/ProductItem.svg';\r\nimport {\r\n  ProductsState,\r\n  ProductType,\r\n  useProducts,\r\n} from '../../../context/ProductContext';\r\n\r\ninterface IProductItemProps {\r\n  product: ProductType;\r\n  productKey: keyof ProductsState;\r\n}\r\n\r\nconst ProductItem: FC<IProductItemProps> = ({ productKey, product }) => {\r\n  const { setProduct } = useProducts();\r\n  const { nameOpened, priceOpened } = product;\r\n\r\n  const [productName, setProductName] = useState<string>('');\r\n  const [productImage, setProductImage] = useState<string>('');\r\n  const [productPrice, setProductPrice] = useState<string>('');\r\n  const [parentHeight, setParentHeight] = useState<number | null>(null);\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleShowName = () => {\r\n    !!product.productName.length &&\r\n      setProduct(productKey, { ...product, nameOpened: true });\r\n  };\r\n\r\n  const handleShowPrice = () => {\r\n    !!product.productPrice.length &&\r\n      setProduct(productKey, { ...product, priceOpened: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const parentElement = containerRef.current.parentElement;\r\n      if (parentElement) {\r\n        setParentHeight(parentElement.clientHeight);\r\n      }\r\n    }\r\n  }, [containerRef]);\r\n\r\n  useEffect(() => {\r\n    if (!nameOpened) {\r\n      setProductName('');\r\n      setProductImage('');\r\n    }\r\n    if (nameOpened) {\r\n      setProductName(product.productName);\r\n      setProductImage(product.imgSrc);\r\n    }\r\n  }, [nameOpened, product]);\r\n\r\n  useEffect(() => {\r\n    if (priceOpened) {\r\n      setProductPrice(product.productPrice);\r\n    }\r\n  }, [priceOpened, product]);\r\n\r\n  return (\r\n    <div\r\n      className='w-fit pt-5'\r\n      ref={containerRef}\r\n      style={parentHeight ? { maxHeight: parentHeight } : {}}\r\n    >\r\n      <div className='w-full h-[200px] lg:h-[200px]'>\r\n        {productImage && (\r\n          <img\r\n            src={productImage}\r\n            alt='Product image'\r\n            className={`max-w-[315px] w-full h-[200px] lg:h-[200px] rounded-[5px] transition-opacity duration-500 object-contain ${\r\n              productImage ? 'opacity-100 animate-fadeIn' : 'opacity-0'\r\n            }`}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className='relative w-fit'>\r\n        <div className='absolute top-[55px] left-0 right-0 m-auto z-40'>\r\n          <div\r\n            style={{ boxShadow: '0 4px 6px 0 rgba(0, 0, 0, 0.5)' }}\r\n            className='bg-[#56639d] hover:brightness-110 active:brightness-[1.18] transition w-full md:h-[46px] h-[36px] mb-2 flex items-center justify-center cursor-pointer rounded-[5px]'\r\n            onClick={handleShowName}\r\n          >\r\n            <p\r\n              className={`md:text-[28px] text-[26px] font-bold uppercase text-white transition-opacity duration-500 ${\r\n                nameOpened ? 'opacity-100 animate-fadeIn' : 'opacity-0'\r\n              }`}\r\n            >\r\n              {productName}\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{ boxShadow: '0 4px 6px 0 rgba(0, 0, 0, 0.5)' }}\r\n            className='bg-[#e3e3e3] hover:brightness-110 active:brightness-[1.18] transition w-[142px] md:h-[46px] h-[36px] m-auto flex items-center justify-center rounded-[5px]'\r\n            onClick={() => productName && handleShowPrice()}\r\n          >\r\n            <p\r\n              className={`text-center md:text-[32px] text-[26px] font-bold uppercase text-[#333] cursor-pointer transition-opacity duration-500 ${\r\n                priceOpened && productPrice\r\n                  ? 'opacity-100 animate-fadeIn'\r\n                  : 'opacity-0'\r\n              }`}\r\n            >\r\n              {productPrice ? '$' + productPrice : ''}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <img\r\n          src={ProductItemBG}\r\n          alt='Product item'\r\n          className='relative top-[16px]'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCrossIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 25,\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.7495 17.9062C24.8453 19.3274 20.0348 24.1368 18.8609 23.8122C18.6092 23.7307 16.0798 21.4102 12.9585 18.3419C9.72355 21.5483 7.06843 24.0806 6.69167 24.042C5.72796 23.8411 1.30113 19.7383 1.57776 17.8538C1.61492 17.3098 3.76889 14.8654 6.5048 11.9979C3.3398 8.72079 0.807521 6.06566 0.846118 5.6889C1.00552 4.76738 5.1083 0.340546 6.9921 0.533528C7.57833 0.612156 10.0227 2.76613 12.8902 5.50203C15.96 2.54794 18.5329 0.183665 18.909 0.138618C20.3717 0.000605302 25.1395 4.85331 24.815 6.02721C24.775 6.23668 22.4129 8.80827 19.3446 11.9297C22.3402 14.9572 24.7044 17.5301 24.7495 17.9062Z\",\n    fill: \"#5C5C5C\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCrossIcon);\nexport default __webpack_public_path__ + \"static/media/CrossIcon.8e81af2e16e8951d0163d53892cfc111.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAcceptImages(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 78,\n    height: 48,\n    viewBox: \"0 0 78 48\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.8,\n    clipPath: \"url(#clip0_10_2324)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.1449 38.0482H42.5021C41.282 38.0482 40.2931 37.0557 40.2931 35.8312V3.0661C40.2931 1.8416 41.282 0.84906 42.5021 0.84906H70.2532C72.6214 3.31329 74.9895 5.77371 77.3539 8.23793V35.8312C77.3539 35.9795 77.3388 36.7667 75.1449 38.0482Z\",\n    fill: \"#7C7258\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.2738 38.048H41.3727C40.7741 38.048 40.2891 37.5613 40.2891 36.9604V1.9327C40.2891 1.33185 40.7741 0.845093 41.3727 0.845093H69.6657C69.965 0.845093 70.2075 1.08847 70.2075 1.3889V6.99045C70.2075 7.56087 70.666 8.02101 71.2343 8.02101H76.8156C77.115 8.02101 77.3575 8.26439 77.3575 8.56481V36.9604C77.3575 37.5613 76.8725 38.048 76.2738 38.048Z\",\n    fill: \"#C8B992\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.1454 18.6042C55.1454 19.7983 54.3269 20.5018 52.9364 20.5018H51.6708V22.6922H50.4166V16.6686H52.9364C54.3269 16.6686 55.1454 17.3721 55.1454 18.6042ZM53.8723 18.5966C53.8723 17.9844 53.5274 17.6763 52.7431 17.6763H51.6708V19.5283H52.7431C53.5237 19.5283 53.8723 19.2089 53.8723 18.5966Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.4466 22.6961H60.0105L57.9114 19.1556L57.3923 18.1441H57.3847L57.4226 19.2127V22.6999H56.2935V16.6762H57.7219L59.8211 20.209L60.3402 21.232H60.3591L60.3212 20.1634V16.6762H61.4504V22.6999L61.4466 22.6961Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.2139 19.5093V22.696H67.2969L67.2704 21.9735C66.9256 22.4831 66.3421 22.7873 65.4971 22.7873C63.8527 22.7873 62.7159 21.6541 62.7159 19.6918C62.7159 17.7296 63.8527 16.5811 65.6373 16.5811C66.937 16.5811 67.7213 17.0375 68.1911 18.0604L67.0355 18.5624C66.846 17.9235 66.3345 17.6117 65.6714 17.6117C64.6446 17.6117 64.0156 18.3418 64.0156 19.6842C64.0156 21.0266 64.5877 21.7758 65.6979 21.7758C66.5088 21.7758 67.134 21.3841 67.134 20.5817V20.4448H65.3797V19.5131H68.2177L68.2139 19.5093Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.8556 47.1992H2.20902C0.988945 47.1992 0 46.2066 0 44.9821V12.217C0 10.9925 0.988945 10 2.20902 10H29.9601C32.3283 12.4642 34.6964 14.9246 37.0608 17.3889V44.9821C37.0608 45.1304 37.0457 45.9176 34.8518 47.1992H34.8556Z\",\n    fill: \"#7C7258\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.9847 47.1992H1.08367C0.485 47.1992 0 46.7124 0 46.1115V11.0876C0 10.4868 0.485 10 1.08367 10H29.3766C29.6759 10 29.9184 10.2434 29.9184 10.5438V16.1454C29.9184 16.7158 30.3769 17.1759 30.9453 17.1759H36.5266C36.8259 17.1759 37.0684 17.4193 37.0684 17.7197V46.1154C37.0684 46.7162 36.5834 47.203 35.9847 47.203V47.1992Z\",\n    fill: \"#C8B992\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.1181 29.6302C14.1181 31.0829 13.2542 31.9385 11.7613 31.9385C10.132 31.9385 9.44997 30.9878 9.70763 29.6112L10.9353 29.3906C10.7913 30.4592 11.0452 30.9041 11.7992 30.9041C12.5532 30.9041 12.8639 30.4212 12.8639 29.4515V25.8198H14.1181V29.6264V29.6302Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.3208 27.7554C20.3208 28.9495 19.5024 29.653 18.1118 29.653H16.8462V31.8434H15.592V25.8198H18.1118C19.5024 25.8198 20.3208 26.5233 20.3208 27.7554ZM19.0477 27.7478C19.0477 27.1355 18.7029 26.8275 17.9185 26.8275H16.8462V28.6795H17.9185C18.6991 28.6795 19.0477 28.36 19.0477 27.7478Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.6675 28.6605V31.8472H25.7505L25.724 31.1247C25.3792 31.6343 24.7957 31.9385 23.9507 31.9385C22.3063 31.9385 21.1696 30.8053 21.1696 28.843C21.1696 26.8808 22.3063 25.7323 24.0909 25.7323C25.3906 25.7323 26.1749 26.1886 26.6448 27.2116L25.4891 27.7136C25.2996 27.0747 24.7881 26.7629 24.125 26.7629C23.0982 26.7629 22.4692 27.493 22.4692 28.8354C22.4692 30.1778 23.0414 30.9269 24.1515 30.9269C24.9624 30.9269 25.5876 30.5353 25.5876 29.7329V29.596H23.8333V28.6643H26.6713L26.6675 28.6605Z\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_10_2324\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 78,\n    height: 48,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAcceptImages);\nexport default __webpack_public_path__ + \"static/media/AcceptImages.6338bcc3223723b354ffc5d1dc36eb94.svg\";\nexport { ForwardRef as ReactComponent };","import { FC } from 'react';\r\n\r\ninterface ConfirmationPopupProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onReset: () => void;\r\n}\r\n\r\nconst ConfirmationPopup: FC<ConfirmationPopupProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onReset,\r\n}) => {\r\n  const handleBackdropClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div\r\n      className='fixed w-screen h-screen bg-black/70 z-50 flex justify-center items-center transition-opacity duration-[50ms] animate-fadeIn'\r\n      onClick={handleBackdropClick}\r\n    >\r\n      <div className='bg-[#ffffee] rounded-[15px] m-auto w-full max-w-[500px] p-5'>\r\n        <h6 className='text-[28px] font-bold text-black/80 font-inter text-center mb-5'>\r\n          Are you sure you want to reset the game?\r\n        </h6>\r\n        <div className='flex justify-around'>\r\n          <button\r\n            style={{\r\n              textShadow: '0 2px 1px 0 rgba(0, 0, 0, 0.25)',\r\n              boxShadow:\r\n                'inset 3px -2px 4px 0 rgba(144, 144, 144, 0.25), inset -2px 0 4px 0 rgba(92, 92, 92, 0.25)',\r\n            }}\r\n            className='w-fit h-[43px] bg-[#56639d] hover:bg-[#56639d]/70 active:bg-[#56639d]/50 transition text-[#fff] text-[28px] font-bold rounded-[5px] uppercase px-2'\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            style={{\r\n              textShadow: '0 2px 1px 0 rgba(0, 0, 0, 0.25)',\r\n              boxShadow:\r\n                'inset 3px -2px 4px 0 rgba(144, 144, 144, 0.25), inset -2px 0 4px 0 rgba(92, 92, 92, 0.25)',\r\n            }}\r\n            className='w-[111px] h-[43px] px-1 bg-[#9D5656] hover:bg-[#9D5656]/70 active:bg-[#9D5656]/50 transition text-[#fff] text-[28px] font-bold rounded-[5px] uppercase'\r\n            onClick={() => {\r\n              onClose(), onReset();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationPopup;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport CrossIcon from '../../assets/CrossIcon.svg';\r\nimport AcceptImages from '../../assets/AcceptImages.svg';\r\nimport { ProductType, useProducts } from '../../context/ProductContext';\r\nimport ConfirmationPopup from './ConfirmationPopup/ConfirmationPopup';\r\nimport { useGame } from '../../context/GameContext';\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst SettingsModal: FC<ModalProps> = ({ isOpen, onClose }) => {\r\n  const { products, setProduct, resetProducts } = useProducts();\r\n  const { resetGame } = useGame();\r\n\r\n  const [openConfirmationModal, setOpenConfirmationModal] =\r\n    useState<boolean>(false);\r\n  const [product1, setProduct1] = useState<ProductType>(products.product1);\r\n  const [product2, setProduct2] = useState<ProductType>(products.product2);\r\n  const [product3, setProduct3] = useState<ProductType>(products.product3);\r\n\r\n  const [imagePreview1, setImagePreview1] = useState<\r\n    string | ArrayBuffer | null\r\n  >(product1.imgSrc || null);\r\n  const [imagePreview2, setImagePreview2] = useState<\r\n    string | ArrayBuffer | null\r\n  >(product2.imgSrc || null);\r\n  const [imagePreview3, setImagePreview3] = useState<\r\n    string | ArrayBuffer | null\r\n  >(product3.imgSrc || null);\r\n\r\n  const handleBackdropClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    productSetter: React.Dispatch<React.SetStateAction<ProductType>>,\r\n    setImagePreview: React.Dispatch<\r\n      React.SetStateAction<string | ArrayBuffer | null>\r\n    >,\r\n  ) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      if (file.type !== 'image/png' && file.type !== 'image/jpeg') return;\r\n\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n        productSetter((prev) => ({\r\n          ...prev,\r\n          imgSrc: reader.result as string,\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProduct('product1', product1);\r\n  }, [product1]);\r\n\r\n  useEffect(() => {\r\n    setProduct('product2', product2);\r\n  }, [product2]);\r\n\r\n  useEffect(() => {\r\n    setProduct('product3', product3);\r\n  }, [product3]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div\r\n      id='default-modal'\r\n      tabIndex={-1}\r\n      className='fixed inset-0 z-50 overflow-auto'\r\n    >\r\n      <div\r\n        className='fixed inset-0 bg-black bg-opacity-70 transition-opacity duration-[50ms] animate-fadeIn'\r\n        onClick={handleBackdropClick}\r\n      />\r\n      <div className='absolute top-5 left-0 right-0 pb-5 z-10 w-fit h-fit flex justify-center items-center m-auto transition-opacity duration-[200ms] animate-fadeIn'>\r\n        <button\r\n          style={{ boxShadow: 'inset 0 0 7px 0 rgba(255, 255, 255, 0.15)' }}\r\n          className='absolute top-[10px] right-5 px-4 py-[6px] bg-[#e3e3e3] hover:bg-[#e3e3e3]/70 active:bg-[#e3e3e3]/50 transition rounded-[5px]'\r\n          onClick={onClose}\r\n        >\r\n          <img src={CrossIcon} alt='CrossIcon' />\r\n        </button>\r\n        <div className='bg-[#ffe] rounded-[15px] p-8 w-full max-w-[788px]'>\r\n          <h3 className='font-bold text-[18px] font-inter mb-[5px]'>\r\n            How To Play\r\n          </h3>\r\n          <ul className='list-disc pl-5 text-[18px] font-inter font-normal mb-[26px] ml-[10px]'>\r\n            <li>\r\n              The player needs to prevent the climber from falling off the\r\n              mountain by guessing the prices of three different items. The\r\n              difference between their guess and the actual retail price of the\r\n              item will dictate how successful they are.\r\n            </li>\r\n            <li>\r\n              Start the game by showing the player the first item, describing\r\n              that item, and asking them to guess the price. For every dollar\r\n              the guess is off from the actual price, the climber moves up one\r\n              step on the mountain.\r\n            </li>\r\n            <li>Then move on to the second and third items.</li>\r\n            <li>\r\n              The goal is to guess as accurately as possible to minimize the\r\n              climber's movement. If the climber moves more than 25 steps, he\r\n              falls off the mountain, and the game is lost. The game is won if\r\n              the climber does not fall after all three prices have been\r\n              guessed.\r\n            </li>\r\n          </ul>\r\n\r\n          <h3 className='font-bold text-[18px] font-inter mb-[5px]'>\r\n            Game Controls\r\n          </h3>\r\n          <p className='text-[18px] font-inter font-normal underline'>\r\n            Game Screen\r\n          </p>\r\n          <ul className='list-disc pl-5 text-[18px] font-inter font-normal mb-[5px] ml-[10px]'>\r\n            <li>&larr; &rarr; : Move Climber (left and right arrows)</li>\r\n            <li>(Spacebar) Button: Winning sound effect</li>\r\n          </ul>\r\n          <p className='text-[18px] font-inter font-normal underline'>\r\n            Product Page\r\n          </p>\r\n          <ul className='list-disc pl-5 text-[18px] font-inter font-normal mb-[23px] ml-[10px]'>\r\n            <li>Click the nameplate to reveal the product</li>\r\n            <li>Y Button: Correct Guess sound effect</li>\r\n            <li>N Button: Incorrect Guess sound effect</li>\r\n            <li>Click the price to reveal the price</li>\r\n          </ul>\r\n\r\n          <div className='flex justify-between items-start gap-[25px]'>\r\n            <div className='w-full'>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Product 1:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product1.productName}\r\n                  onChange={(e) =>\r\n                    setProduct1((prev) => ({\r\n                      ...prev,\r\n                      productName: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Name'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Price:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product1.productPrice}\r\n                  onChange={(e) =>\r\n                    +e.target.value < 999999 &&\r\n                    setProduct1((prev) => ({\r\n                      ...prev,\r\n                      productPrice: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Price'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='relative w-[223px] h-[101px] bg-white flex flex-col items-center justify-center text-center text-[#B6BBC1] border border-[#c0bfc1] rounded-[2px]'>\r\n                {imagePreview1 ? (\r\n                  <img\r\n                    src={imagePreview1 as string}\r\n                    alt='Product 1'\r\n                    className='w-full h-full object-contain'\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <img src={AcceptImages} alt='Accept images' />\r\n                    <span className='text-xs font-inter font-normal text-[#B6BBC1]'>\r\n                      Upload image\r\n                    </span>\r\n                  </>\r\n                )}\r\n                <input\r\n                  type='file'\r\n                  accept='image/png, image/jpeg'\r\n                  onChange={(e) =>\r\n                    handleFileChange(e, setProduct1, setImagePreview1)\r\n                  }\r\n                  className='absolute inset-0 opacity-0 cursor-pointer'\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='w-full'>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Product 2:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product2.productName}\r\n                  onChange={(e) =>\r\n                    setProduct2((prev) => ({\r\n                      ...prev,\r\n                      productName: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Name'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Price:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product2.productPrice}\r\n                  onChange={(e) =>\r\n                    +e.target.value < 999999 &&\r\n                    setProduct2((prev) => ({\r\n                      ...prev,\r\n                      productPrice: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Price'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='relative w-[223px] h-[101px] bg-white flex flex-col items-center justify-center text-center text-[#B6BBC1] border border-[#c0bfc1] rounded-[2px]'>\r\n                {imagePreview2 ? (\r\n                  <img\r\n                    src={imagePreview2 as string}\r\n                    alt='Product 2'\r\n                    className='w-full h-full object-contain'\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <img src={AcceptImages} alt='Accept images' />\r\n                    <span className='text-xs font-inter font-normal text-[#B6BBC1]'>\r\n                      Upload image\r\n                    </span>\r\n                  </>\r\n                )}\r\n                <input\r\n                  type='file'\r\n                  accept='image/png, image/jpeg'\r\n                  onChange={(e) =>\r\n                    handleFileChange(e, setProduct2, setImagePreview2)\r\n                  }\r\n                  className='absolute inset-0 opacity-0 cursor-pointer'\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='w-full'>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Product 3:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product3.productName}\r\n                  onChange={(e) =>\r\n                    setProduct3((prev) => ({\r\n                      ...prev,\r\n                      productName: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Name'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Price:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product3.productPrice}\r\n                  onChange={(e) =>\r\n                    +e.target.value < 999999 &&\r\n                    setProduct3((prev) => ({\r\n                      ...prev,\r\n                      productPrice: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Price'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='relative w-[223px] h-[101px] bg-white flex flex-col items-center justify-center text-center text-[#B6BBC1] border border-[#c0bfc1] rounded-[2px]'>\r\n                {imagePreview3 ? (\r\n                  <img\r\n                    src={imagePreview3 as string}\r\n                    alt='Product 3'\r\n                    className='w-full h-full object-contain'\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <img src={AcceptImages} alt='Accept images' />\r\n                    <span className='text-xs font-inter font-normal text-[#B6BBC1]'>\r\n                      Upload image\r\n                    </span>\r\n                  </>\r\n                )}\r\n                <input\r\n                  type='file'\r\n                  accept='image/png, image/jpeg'\r\n                  onChange={(e) =>\r\n                    handleFileChange(e, setProduct3, setImagePreview3)\r\n                  }\r\n                  className='absolute inset-0 opacity-0 cursor-pointer'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='w-full mt-3 flex'>\r\n            <button\r\n              style={{\r\n                textShadow: '0 2px 1px 0 rgba(0, 0, 0, 0.25)',\r\n                boxShadow:\r\n                  'inset 3px -2px 4px 0 rgba(144, 144, 144, 0.25), inset -2px 0 4px 0 rgba(92, 92, 92, 0.25)',\r\n              }}\r\n              className='w-[111px] h-[43px] px-1 bg-[#9D5656] hover:bg-[#9D5656]/70 active:bg-[#9D5656]/50 transition text-[#fff] text-[28px] font-bold rounded-[5px] uppercase ml-auto'\r\n              onClick={() => setOpenConfirmationModal(true)}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ConfirmationPopup\r\n        isOpen={openConfirmationModal}\r\n        onClose={() => setOpenConfirmationModal(false)}\r\n        onReset={() => {\r\n          resetProducts();\r\n          resetGame();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSettings(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 45,\n    height: 45,\n    viewBox: \"0 0 45 45\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M26.7651 2.16446C26.9529 2.5285 26.9995 2.9947 27.0927 3.92709C27.2692 5.69195 27.3574 6.57438 27.7268 7.05854C28.1953 7.6727 28.9573 7.98832 29.7228 7.88533C30.3263 7.80414 31.0127 7.24257 32.3854 6.11943C33.1106 5.52607 33.4733 5.22939 33.8634 5.10474C34.359 4.94642 34.8952 4.97316 35.3725 5.18001C35.7484 5.34286 36.0796 5.67415 36.7422 6.33673L38.6632 8.25768C39.3258 8.92028 39.6571 9.25158 39.8199 9.62742C40.0268 10.1048 40.0535 10.6409 39.8952 11.1365C39.7705 11.5267 39.4739 11.8893 38.8805 12.6145C37.7573 13.9873 37.1957 14.6737 37.1145 15.2772C37.0116 16.0427 37.3272 16.8047 37.9413 17.2732C38.4255 17.6425 39.3079 17.7308 41.0729 17.9073C42.0053 18.0005 42.4715 18.0472 42.8356 18.2349C43.2979 18.4734 43.6581 18.8714 43.8494 19.3552C44 19.7361 44 20.2046 44 21.1417V23.8585C44 24.7954 44 25.2638 43.8495 25.6446C43.6582 26.1286 43.2979 26.5267 42.8354 26.7652C42.4714 26.9529 42.0053 26.9995 41.0731 27.0927C39.3087 27.2691 38.4265 27.3574 37.9425 27.7265C37.328 28.195 37.0122 28.9573 37.1154 29.7232C37.1967 30.3264 37.7581 31.0126 38.8808 32.3848C39.474 33.1098 39.7705 33.4723 39.8952 33.8623C40.0536 34.358 40.0269 34.8944 39.8199 35.3719C39.6571 35.7476 39.3259 36.0788 38.6635 36.7411L36.7423 38.6623C36.0797 39.3249 35.7485 39.6562 35.3726 39.819C34.8953 40.0259 34.3591 40.0526 33.8635 39.8943C33.4734 39.7697 33.1107 39.473 32.3855 38.8796C31.0128 37.7565 30.3264 37.1949 29.7229 37.1137C28.9574 37.0107 28.1954 37.3263 27.7269 37.9405C27.3575 38.4247 27.2693 39.3072 27.0928 41.0724C26.9995 42.0052 26.9528 42.4716 26.765 42.8358C26.5265 43.2979 26.1286 43.658 25.645 43.8493C25.264 44 24.7953 44 23.858 44H21.1417C20.2046 44 19.7361 44 19.3552 43.8494C18.8714 43.6581 18.4734 43.2979 18.2349 42.8356C18.0472 42.4715 18.0005 42.0053 17.9073 41.0729C17.7308 39.3079 17.6425 38.4255 17.2732 37.9413C16.8047 37.3272 16.0428 37.0116 15.2772 37.1146C14.6737 37.1957 13.9873 37.7573 12.6145 38.8805C11.8892 39.4739 11.5265 39.7707 11.1364 39.8953C10.6408 40.0536 10.1047 40.0269 9.62735 39.82C9.25149 39.6572 8.92018 39.3259 8.25756 38.6632L6.33666 36.7424C5.67406 36.0797 5.34275 35.7484 5.1799 35.3726C4.97307 34.8953 4.94633 34.3591 5.10464 33.8636C5.22928 33.4734 5.52598 33.1107 6.11937 32.3855C7.24254 31.0127 7.80413 30.3263 7.88532 29.7228C7.9883 28.9573 7.67268 28.1953 7.05854 27.7268C6.57438 27.3574 5.69194 27.2692 3.92708 27.0927C2.99469 26.9995 2.5285 26.9528 2.16447 26.7651C1.7021 26.5266 1.34188 26.1286 1.1506 25.6448C1 25.2639 1 24.7954 1 23.8583V21.1419C1 20.2047 1 19.736 1.15068 19.355C1.34196 18.8714 1.70206 18.4735 2.16427 18.235C2.52839 18.0472 2.9947 18.0005 3.92733 17.9073C5.69267 17.7307 6.57535 17.6425 7.0596 17.2729C7.67349 16.8045 7.989 16.0428 7.88617 15.2774C7.80505 14.6737 7.24328 13.9871 6.11975 12.6139C5.5261 11.8883 5.22928 11.5256 5.10464 11.1352C4.94647 10.6398 4.9732 10.1039 5.17988 9.62673C5.34274 9.25072 5.67417 8.91929 6.33702 8.25644L8.25766 6.3358C8.92028 5.67318 9.25159 5.34187 9.62745 5.17901C10.1048 4.9722 10.6409 4.94546 11.1365 5.10375C11.5267 5.2284 11.8893 5.52515 12.6147 6.11864C13.9873 7.24167 14.6736 7.80319 15.277 7.88444C16.0427 7.98757 16.8049 7.67185 17.2735 7.05745C17.6427 6.57337 17.7309 5.69118 17.9073 3.92681C18.0005 2.99468 18.0471 2.52861 18.2348 2.16466C18.4733 1.70214 18.8715 1.34181 19.3554 1.15052C19.7362 1 20.2046 1 21.1414 1H23.8583C24.7954 1 25.2639 1 25.6448 1.1506C26.1286 1.34188 26.5266 1.7021 26.7651 2.16446ZM22.5 31.1C27.2496 31.1 31.1 27.2496 31.1 22.5C31.1 17.7504 27.2496 13.9 22.5 13.9C17.7504 13.9 13.9 17.7504 13.9 22.5C13.9 27.2496 17.7504 31.1 22.5 31.1Z\",\n    fill: \"#939393\",\n    stroke: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettings);\nexport default __webpack_public_path__ + \"static/media/Settings.83836ff3aa439c00cdfc9ced4cd1e090.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { ProductsState, useProducts } from '../../context/ProductContext';\r\nimport ProductItem from './ProductItem/ProductItem';\r\nimport SettingsModal from '../SettingsModal/SettingsModal';\r\nimport SettingsIcon from '../../assets/Settings.svg';\r\nimport Correct3Dings from '../../assets/audio/Correct3Dings.mp3';\r\nimport BuzzerIncorrect from '../../assets/audio/BuzzerIncorrect.mp3';\r\n\r\nconst ProdutScreen = () => {\r\n  const { products } = useProducts();\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n  const correctAudioRef = useRef<any>(null);\r\n  const incorrectAudioRef = useRef<any>(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handlePlayCorrectAudio = () => {\r\n    correctAudioRef.current.pause();\r\n    incorrectAudioRef.current.pause();\r\n    correctAudioRef.current.currentTime = 0;\r\n    correctAudioRef.current.play();\r\n  };\r\n\r\n  const handlePlayIncorrectAudio = () => {\r\n    correctAudioRef.current.pause();\r\n    incorrectAudioRef.current.pause();\r\n    incorrectAudioRef.current.currentTime = 0;\r\n    incorrectAudioRef.current.play();\r\n  };\r\n\r\n  const handleKeyDown = (event: KeyboardEvent) => {\r\n    if ((event.key === 'y' || event.key === 'Y') && !isModalOpen) {\r\n      handlePlayCorrectAudio();\r\n    } else if ((event.key === 'n' || event.key === 'N') && !isModalOpen) {\r\n      handlePlayIncorrectAudio();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [isModalOpen]);\r\n  return (\r\n    <>\r\n      <audio ref={correctAudioRef} src={Correct3Dings} preload='auto' />\r\n      <audio ref={incorrectAudioRef} src={BuzzerIncorrect} preload='auto' />\r\n      <div className='relative h-screen bg-[#FFFFEE] px-5 pt-[70px] pb-[77px]  transition-opacity duration-75 animate-fadeIn'>\r\n        <div className='bg-[#ecddb4] h-full w-full border-[2px] border-solid border-black border-t-[5px] rounded-[60px] p-[24px] pb-0 overflow-hidden'>\r\n          <div className='bg-[#96E3F5] h-full w-full border-[2px] border-solid border-black border-b-0 rounded-t-[60px] flex gap-3 justify-around p-3 pb-0 items-end'>\r\n            {Object.entries(products).map(([key, product]) => (\r\n              <ProductItem\r\n                key={key}\r\n                product={product}\r\n                productKey={key as keyof ProductsState}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className='absolute bottom-[16px] left-0 px-[70px] z-40 flex w-full items-center justify-between'>\r\n          <button\r\n            className='hover:rotate-[20deg] active:rotate-[35deg] active:scale-[0.97] transition'\r\n            onClick={() => setIsModalOpen(true)}\r\n          >\r\n            <img src={SettingsIcon} alt='Settings icon' />\r\n          </button>\r\n          <button\r\n            style={{\r\n              textShadow: '0 2px 1px 0 rgba(0, 0, 0, 0.25)',\r\n              boxShadow:\r\n                'inset 3px -2px 4px 0 rgba(144, 144, 144, 0.25), inset -2px 0 4px 0 rgba(92, 92, 92, 0.25)',\r\n            }}\r\n            className='w-[111px] h-[43px] px-1 bg-[#56639d] hover:bg-[#56639d]/70 active:bg-[#56639d]/50 text-[#fff] text-[28px] font-bold rounded-[5px] uppercase transition'\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <SettingsModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProdutScreen;\r\n","import { HashRouter, Routes, Route } from 'react-router-dom';\r\n\r\nimport GameScreen from './components/GameScreen/GameScreen';\r\nimport ProdutScreen from './components/ProductScreen/ProdutScreen';\r\n\r\nconst App = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path='/' element={<GameScreen />} />\r\n        <Route path='/products' element={<ProdutScreen />} />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport App from './App';\r\nimport { ProductsProvider } from './context/ProductContext';\r\nimport { GameProvider } from './context/GameContext';\r\n\r\nimport './index.css';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement,\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <GameProvider>\r\n      <ProductsProvider>\r\n        <App />\r\n      </ProductsProvider>\r\n    </GameProvider>\r\n  </React.StrictMode>,\r\n);\r\n\r\nreportWebVitals();\r\n"],"names":["aa","require","ca","p","a","b","c","arguments","length","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","Object","prototype","hasOwnProperty","ka","la","ma","v","d","e","f","g","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","Error","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","l","h","k","displayName","includes","name","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Mg","join","Ng","Og","index","Pg","Qg","props","Rg","implementation","Sg","Tg","q","r","y","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","defaultProps","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","console","error","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","exports","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","module","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","leafPrototypes","getProto","getPrototypeOf","obj","__esModule","ns","def","getOwnPropertyNames","definition","o","chunkId","all","reduce","promises","miniCssF","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","i","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Action","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","filter","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState","_future","v7_partialHydration","initialized","errorIndex","findIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","alreadyWarned","getChildren","hookName","ctx","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","__reactRouterVersion","startTransitionImpl","ReactDOM","HashRouter","historyRef","querySelector","setStateImpl","v7_startTransition","newState","stepXCoefficient","GameContext","GameProvider","remainingMoves","setRemainingMoves","positionX","setPositionX","positionY","setPositionY","savedPositionX","setSavesPositionX","savedPositionY","setSavesPositionY","startPoint","setStartPoint","startPositionY","setStartPositionY","startPositionX","setStartPositionX","leftLimit","setLeftLimit","_jsx","resetGame","useGame","GameScreen","yodelAudioRef","climberStopsMovingAudioRef","winningAudioRef","fallAudioRef","startPointContext","setStartPointContext","isStartPositionSet","setStartPositionSet","falling","setFalling","isYodeling","setIsYodeling","outerRocksSize","setOuterRocksSize","headerHeight","setHeaderHeight","isGameStarted","setIsGmeStarted","rightLimit","setRightLimit","points","setPoints","isRendered","setIsRendered","isMainBgLoaded","setMainBgLoaded","isGameContainerLoaded","setGameContainerLoaded","gameBackgroundElement","setGameBackgroundElement","yodelyGuyElement","setYodelyGuyElement","rulerElement","setRulerElement","gameMarginBottom","setGameMarginBottom","handlePlayFallAudioRef","pause","currentTime","play","xCoefficient","yCoefficient","validKeys","Number","closestKey","max","getStepXCoefficient","innerWidth","handleKeyDown","prevPositionX","prevPositionY","innerHeight","handleKeyUp","centerPosition","entries","getClosestPointKey","timer","yodelyGuyRect","getBoundingClientRect","gameBackgroundRect","relativeX","relativeY","bottom","rulerRect","adjustedDistance","right","reightLimit","distanceFromLeftLimit","koeficient","moveForBigScreen","numberOfPoints","pointDistance","pointsObject","updateDimensions","getElementById","offsetWidth","offsetHeight","updateDimensionsBackground","updateDimensionsHeader","updateDimensionsYodelyGuy","updateDimensionsRuler","rerender1","rerender2","abs","fallAnimation","transform","_jsxs","className","ThePriceIsRightYodelling","preload","SingleDing","WinningDingX10","ScreamCrash","OuterRocks2560","OuterRocks1920","OuterRocks1366","alt","onLoad","Header2560","Header1920","Header1366","maxWidth","GameBackground2560","GameBackground1920","GameBackground1366","maxHeight","YellowRulerRotate","YodelyGuy","initialProductsValues","product1","imgSrc","productPrice","productName","priceOpened","nameOpened","product2","product3","ProductsContext","ProductsProvider","products","setProducts","setProduct","resetProducts","useProducts","productKey","product","setProductName","productImage","setProductImage","setProductPrice","parentHeight","setParentHeight","containerRef","parentElement","clientHeight","boxShadow","handleShowName","ProductItemBG","isOpen","onClose","onReset","textShadow","openConfirmationModal","setOpenConfirmationModal","setProduct1","setProduct2","setProduct3","imagePreview1","setImagePreview1","imagePreview2","setImagePreview2","imagePreview3","setImagePreview3","handleFileChange","productSetter","setImagePreview","_e$target$files","file","files","reader","FileReader","onloadend","readAsDataURL","tabIndex","CrossIcon","onChange","placeholder","_Fragment","AcceptImages","accept","ConfirmationPopup","ProdutScreen","isModalOpen","setIsModalOpen","correctAudioRef","incorrectAudioRef","Correct3Dings","BuzzerIncorrect","ProductItem","SettingsIcon","SettingsModal","App","reportWebVitals"],"sourceRoot":""}