{"version":3,"file":"static/js/main.83b63fc8.js","mappings":"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","sources":["../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","reportWebVitals.ts","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","assets/GameBackground.svg","assets/GameBackgroundWide.svg","assets/YellowRulerRotate.svg","assets/YodelyGuy.svg","context/GameContext.tsx","components/GameScreen/constants.ts","components/GameScreen/GameScreen.tsx","context/ProductContext.tsx","assets/ProductItem.svg","components/ProductScreen/ProductItem/ProductItem.tsx","assets/CrossIcon.svg","assets/AcceptImages.svg","components/SettingsModal/ConfirmationPopup/ConfirmationPopup.tsx","components/SettingsModal/SettingsModal.tsx","assets/Settings.svg","components/ProductScreen/ProdutScreen.tsx","App.tsx","index.tsx"],"sourcesContent":["/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"2832e561\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"cliffhangers:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/cliffhangers/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcliffhangers\"] = self[\"webpackChunkcliffhangers\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  // We keep the raw Response for redirects so we can return it verbatim\n  response: Response;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: unknown;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\n/**\n * Result from a loader or action called via dataStrategy\n */\nexport interface HandlerResult {\n  type: \"data\" | \"error\";\n  result: unknown; // data, Error, Response, DeferredData, DataWithResponseInit\n}\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on `<Form>`,\n * useSubmit(), `<fetcher.Form>`, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\ntype DataFunctionReturnValue = Promise<DataFunctionValue> | DataFunctionValue;\n\n/**\n * Route loader function signature\n */\nexport type LoaderFunction<Context = any> = {\n  (\n    args: LoaderFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n} & { hydrate?: boolean };\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (\n    args: ActionFunctionArgs<Context>,\n    handlerCtx?: unknown\n  ): DataFunctionReturnValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionStatus?: number;\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\nexport interface DataStrategyMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {\n  shouldLoad: boolean;\n  resolve: (\n    handlerOverride?: (\n      handler: (ctx?: unknown) => DataFunctionReturnValue\n    ) => Promise<HandlerResult>\n  ) => Promise<HandlerResult>;\n}\n\nexport interface DataStrategyFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {\n  matches: DataStrategyMatch[];\n}\n\nexport interface DataStrategyFunction {\n  (args: DataStrategyFunctionArgs): Promise<HandlerResult[]>;\n}\n\nexport interface AgnosticPatchRoutesOnNavigationFunction<\n  M extends AgnosticRouteMatch = AgnosticRouteMatch\n> {\n  (opts: {\n    path: string;\n    matches: M[];\n    patch: (routeId: string | null, children: AgnosticRouteObject[]) => void;\n  }): void | Promise<void>;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction | boolean;\n  action?: ActionFunction | boolean;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\nexport type PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: string[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\n\nexport function matchRoutesImpl<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename: string,\n  allowPartial: boolean\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      decoded,\n      allowPartial\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string,\n  allowPartial = false\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    let route = meta.route;\n\n    if (\n      !match &&\n      end &&\n      allowPartial &&\n      !routesMeta[routesMeta.length - 1].route.index\n    ) {\n      match = matchPath(\n        {\n          path: meta.relativePath,\n          caseSensitive: meta.caseSensitive,\n          end: false,\n        },\n        remainingPathname\n      );\n    }\n\n    if (!match) {\n      return null;\n    }\n\n    Object.assign(matchedParams, match.params);\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, compiledParams] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = compiledParams.reduce<Mutable<Params>>(\n    (memo, { paramName, isOptional }, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      const value = captureGroups[index];\n      if (isOptional && !value) {\n        memo[paramName] = undefined;\n      } else {\n        memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n      }\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\ntype CompiledPathParam = { paramName: string; isOptional?: boolean };\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, CompiledPathParam[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let params: CompiledPathParam[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(\n        /\\/:([\\w-]+)(\\?)?/g,\n        (_: string, paramName: string, isOptional) => {\n          params.push({ paramName, isOptional: isOptional != null });\n          return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n        }\n      );\n\n  if (path.endsWith(\"*\")) {\n    params.push({ paramName: \"*\" });\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, params];\n}\n\nexport function decodePath(value: string) {\n  try {\n    return value\n      .split(\"/\")\n      .map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\"))\n      .join(\"/\");\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nexport function getResolveToMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[], v7_relativeSplatPath: boolean) {\n  let pathMatches = getPathContributingMatches(matches);\n\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) =>\n      idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\n    );\n  }\n\n  return pathMatches.map((match) => match.pathnameBase);\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport class DataWithResponseInit<D> {\n  type: string = \"DataWithResponseInit\";\n  data: D;\n  init: ResponseInit | null;\n\n  constructor(data: D, init?: ResponseInit) {\n    this.data = data;\n    this.init = init || null;\n  }\n}\n\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nexport function data<D>(data: D, init?: number | ResponseInit) {\n  return new DataWithResponseInit(\n    data,\n    typeof init === \"number\" ? { status: init } : init\n  );\n}\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const replace: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n\nexport type ErrorResponse = {\n  status: number;\n  statusText: string;\n  data: any;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nexport class ErrorResponseImpl implements ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DataStrategyMatch,\n  AgnosticRouteObject,\n  DataResult,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  HandlerResult,\n  ImmutableRouteKey,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n  AgnosticPatchRoutesOnNavigationFunction,\n  DataWithResponseInit,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  getResolveToMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  matchRoutesImpl,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the future config for the router\n   */\n  get future(): FutureConfig;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the window associated with the router\n   */\n  get window(): RouterInit[\"window\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE DO NOT USE\n   *\n   * Patch additional children routes into an existing parent route\n   * @param routeId The parent route id or a callback function accepting `patch`\n   *                to perform batch patching\n   * @param children The additional children routes\n   */\n  patchRoutes(routeId: string | null, children: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_fetcherPersist: boolean;\n  v7_normalizeFormMethod: boolean;\n  v7_partialHydration: boolean;\n  v7_prependBasename: boolean;\n  v7_relativeSplatPath: boolean;\n  v7_skipActionErrorRevalidation: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n  unstable_patchRoutesOnNavigation?: AgnosticPatchRoutesOnNavigationFunction;\n  unstable_dataStrategy?: DataStrategyFunction;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: {\n      routeId?: string;\n      requestContext?: unknown;\n      unstable_dataStrategy?: DataStrategyFunction;\n    }\n  ): Promise<any>;\n}\n\ntype ViewTransitionOpts = {\n  currentLocation: Location;\n  nextLocation: Location;\n};\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (\n    state: RouterState,\n    opts: {\n      deletedFetchers: string[];\n      unstable_viewTransitionOpts?: ViewTransitionOpts;\n      unstable_flushSync: boolean;\n    }\n  ): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n  unstable_viewTransition?: boolean;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ntype PendingActionResult = [string, SuccessResult | ErrorResult];\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * Tuple for the returned or thrown value from the current action.  The routeId\n   * is the action route for success and the bubbled boundary route for errors.\n   */\n  pendingActionResult?: PendingActionResult;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * Route matches which may have been updated from fog of war discovery\n   */\n  matches?: RouterState[\"matches\"];\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.unstable_dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.unstable_patchRoutesOnNavigation;\n\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // FIFO queue of previously discovered routes to prevent re-calling on\n  // subsequent navigations to the same path\n  let discoveredRoutesMaxSize = 1000;\n  let discoveredRoutes = new Set<string>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(\n      initialMatches,\n      dataRoutes,\n      init.history.location.pathname\n    );\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n\n  let initialized: boolean;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(\n        null,\n        dataRoutes,\n        init.history.location.pathname\n      );\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some((m) => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some((m) => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    let isRouteInitialized = (m: AgnosticDataRouteMatch) => {\n      // No loader, nothing to initialize\n      if (!m.route.loader) {\n        return true;\n      }\n      // Explicitly opting-in to running on hydration\n      if (\n        typeof m.route.loader === \"function\" &&\n        m.route.loader.hydrate === true\n      ) {\n        return false;\n      }\n      // Otherwise, initialized if hydrated with data or an error\n      return (\n        (loaderData && loaderData[m.route.id] !== undefined) ||\n        (errors && errors[m.route.id] !== undefined)\n      );\n    };\n\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(\n        (m) => errors![m.route.id] !== undefined\n      );\n      initialized = initialMatches.slice(0, idx + 1).every(isRouteInitialized);\n    } else {\n      initialized = initialMatches.every(isRouteInitialized);\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions: Map<string, Set<string>> = new Map<\n    string,\n    Set<string>\n  >();\n\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener: (() => void) | null = null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: Set<string> = new Set();\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map<string, number>();\n\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set<string>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Map of pending patchRoutesOnNavigation() promises (keyed by path/matches) so\n  // that we only kick them off once for a given combo\n  let pendingPatchRoutes = new Map<\n    string,\n    ReturnType<AgnosticPatchRoutesOnNavigationFunction>\n  >();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () =>\n        persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () =>\n        routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location, {\n        initialHydration: true,\n      });\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(\n    newState: Partial<RouterState>,\n    opts: {\n      flushSync?: boolean;\n      viewTransitionOpts?: ViewTransitionOpts;\n    } = {}\n  ): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers: string[] = [];\n    let deletedFetchersKeys: string[] = [];\n\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach((subscriber) =>\n      subscriber(state, {\n        deletedFetchers: deletedFetchersKeys,\n        unstable_viewTransitionOpts: opts.viewTransitionOpts,\n        unstable_flushSync: opts.flushSync === true,\n      })\n    );\n\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach((key) => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach((key) => deleteFetcher(key));\n    }\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>,\n    { flushSync }: { flushSync?: boolean } = {}\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    let viewTransitionOpts: ViewTransitionOpts | undefined;\n\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === HistoryAction.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location,\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location,\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set<string>([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location,\n      };\n    }\n\n    updateState(\n      {\n        ...newState, // matches, errors, fetchers go through as-is\n        actionData,\n        loaderData,\n        historyAction: pendingAction,\n        location,\n        initialized: true,\n        navigation: IDLE_NAVIGATION,\n        revalidation: \"idle\",\n        restoreScrollPosition: getSavedScrollPosition(\n          location,\n          newState.matches || state.matches\n        ),\n        preventScrollReset,\n        blockers,\n      },\n      {\n        viewTransitionOpts,\n        flushSync: flushSync === true,\n      }\n    );\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      future.v7_relativeSplatPath,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.unstable_viewTransition,\n      flushSync,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      initialHydration?: boolean;\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n      enableViewTransition?: boolean;\n      flushSync?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let { error, notFoundMatches, route } = handleNavigational404(\n        location.pathname\n      );\n      completeNavigation(\n        location,\n        {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        },\n        { flushSync }\n      );\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches }, { flushSync });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionResult: PendingActionResult | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [\n        findNearestBoundary(matches).route.id,\n        { type: ResultType.error, error: opts.pendingError },\n      ];\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        fogOfWar.active,\n        { replace: opts.replace, flushSync }\n      );\n\n      if (actionResult.shortCircuited) {\n        return;\n      }\n\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (\n          isErrorResult(result) &&\n          isRouteErrorResponse(result.error) &&\n          result.error.status === 404\n        ) {\n          pendingNavigationController = null;\n\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error,\n            },\n          });\n          return;\n        }\n      }\n\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n\n      // Create a GET request for the loaders\n      request = createClientSideRequest(\n        init.history,\n        request.url,\n        request.signal\n      );\n    }\n\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors,\n    } = await handleLoaders(\n      request,\n      location,\n      matches,\n      fogOfWar.active,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      opts && opts.initialHydration === true,\n      flushSync,\n      pendingActionResult\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches: updatedMatches || matches,\n      ...getActionDataForCommit(pendingActionResult),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    opts: { replace?: boolean; flushSync?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [\n            boundaryId,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else if (!discoverResult.matches) {\n        let { notFoundMatches, error, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [\n            route.id,\n            {\n              type: ResultType.error,\n              error,\n            },\n          ],\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches\n      );\n      result = results[0];\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(\n          result.response.headers.get(\"Location\")!,\n          new URL(request.url),\n          basename\n        );\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, {\n        submission,\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result],\n      };\n    }\n\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result],\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    initialHydration?: boolean,\n    flushSync?: boolean,\n    pendingActionResult?: PendingActionResult\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState =\n      !isUninterruptedRevalidation &&\n      (!future.v7_partialHydration || !initialHydration);\n\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(\n          {\n            navigation: loadingNavigation,\n            ...(actionData !== undefined ? { actionData } : {}),\n          },\n          {\n            flushSync,\n          }\n        );\n      }\n\n      let discoverResult = await discoverRoutes(\n        matches,\n        location.pathname,\n        request.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return { shortCircuited: true };\n      } else if (discoverResult.type === \"error\") {\n        let { boundaryId, error } = handleDiscoverRouteError(\n          location.pathname,\n          discoverResult\n        );\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: error,\n          },\n        };\n      } else if (!discoverResult.matches) {\n        let { error, notFoundMatches, route } = handleNavigational404(\n          location.pathname\n        );\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error,\n          },\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      future.v7_partialHydration && initialHydration === true,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionResult\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(\n        location,\n        {\n          matches,\n          loaderData: {},\n          // Commit pending error if we're short circuiting\n          errors:\n            pendingActionResult && isErrorResult(pendingActionResult[1])\n              ? { [pendingActionResult[0]]: pendingActionResult[1].error }\n              : null,\n          ...getActionDataForCommit(pendingActionResult),\n          ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n        },\n        { flushSync }\n      );\n      return { shortCircuited: true };\n    }\n\n    if (shouldUpdateNavigationState) {\n      let updates: Partial<RouterState> = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, { flushSync });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(request, redirect.result, {\n        replace,\n      });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingActionResult,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    // During partial hydration, preserve SSR errors for routes that don't re-run\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      Object.entries(state.errors)\n        .filter(([id]) => !matchesToLoad.some((m) => m.route.id === id))\n        .forEach(([routeId, error]) => {\n          errors = Object.assign(errors || {}, { [routeId]: error });\n        });\n    }\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      matches,\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getUpdatedActionData(\n    pendingActionResult: PendingActionResult | undefined\n  ): Record<string, RouteData> | null | undefined {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data as any,\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n\n  function getUpdatedRevalidatingFetchers(\n    revalidatingFetchers: RevalidatingFetcher[]\n  ) {\n    revalidatingFetchers.forEach((rf) => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(\n        undefined,\n        fetcher ? fetcher.data : undefined\n      );\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let flushSync = (opts && opts.unstable_flushSync) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      future.v7_relativeSplatPath,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath }),\n        { flushSync }\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error, { flushSync });\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(\n        key,\n        routeId,\n        path,\n        match,\n        matches,\n        fogOfWar.active,\n        flushSync,\n        submission\n      );\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(\n      key,\n      routeId,\n      path,\n      match,\n      matches,\n      fogOfWar.active,\n      flushSync,\n      submission\n    );\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    function detectAndHandle405Error(m: AgnosticDataRouteMatch) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId,\n        });\n        setFetcherError(key, routeId, error, { flushSync });\n        return true;\n      }\n      return false;\n    }\n\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync,\n    });\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        requestMatches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\n      \"action\",\n      fetchRequest,\n      [match],\n      requestMatches\n    );\n    let actionResult = actionResults[0];\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, {\n            fetcherSubmission: submission,\n          });\n        }\n      }\n\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      false,\n      future.v7_skipActionErrorRevalidation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      deletedFetchers,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      [match.route.id, actionResult]\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect([...loaderResults, ...fetcherResults]);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(revalidationRequest, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        fetchers: new Map(state.fetchers),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    isFogOfWar: boolean,\n    flushSync: boolean,\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(\n      key,\n      getLoadingFetcher(\n        submission,\n        existingFetcher ? existingFetcher.data : undefined\n      ),\n      { flushSync }\n    );\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(\n        matches,\n        path,\n        fetchRequest.signal\n      );\n\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        let { error } = handleDiscoverRouteError(path, discoverResult);\n        setFetcherError(key, routeId, error, { flushSync });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(\n          key,\n          routeId,\n          getInternalRouterError(404, { pathname: path }),\n          { flushSync }\n        );\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\n      \"loader\",\n      fetchRequest,\n      [match],\n      matches\n    );\n    let result = results[0];\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    request: Request,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(\n      location,\n      new URL(request.url),\n      basename\n    );\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true,\n    });\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true || redirect.response.headers.has(\"X-Remix-Replace\")\n        ? HistoryAction.Replace\n        : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.response.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[]\n  ): Promise<DataResult[]> {\n    try {\n      let results = await callDataStrategyImpl(\n        dataStrategyImpl,\n        type,\n        request,\n        matchesToLoad,\n        matches,\n        manifest,\n        mapRouteProperties\n      );\n\n      return await Promise.all(\n        results.map((result, i) => {\n          if (isRedirectHandlerResult(result)) {\n            let response = result.result as Response;\n            return {\n              type: ResultType.redirect,\n              response: normalizeRelativeRoutingRedirectResponse(\n                response,\n                request,\n                matchesToLoad[i].route.id,\n                matches,\n                basename,\n                future.v7_relativeSplatPath\n              ),\n            };\n          }\n\n          return convertHandlerResultToDataResult(result);\n        })\n      );\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      return matchesToLoad.map(() => ({\n        type: ResultType.error,\n        error: e,\n      }));\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    let [loaderResults, ...fetcherResults] = await Promise.all([\n      matchesToLoad.length\n        ? callDataStrategy(\"loader\", request, matchesToLoad, matches)\n        : [],\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          let fetcherRequest = createClientSideRequest(\n            init.history,\n            f.path,\n            f.controller.signal\n          );\n          return callDataStrategy(\n            \"loader\",\n            fetcherRequest,\n            [f.match],\n            f.matches\n          ).then((r) => r[0]);\n        } else {\n          return Promise.resolve<DataResult>({\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path,\n            }),\n          });\n        }\n      }),\n    ]);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return {\n      loaderResults,\n      fetcherResults,\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function updateFetcherState(\n    key: string,\n    fetcher: Fetcher,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    state.fetchers.set(key, fetcher);\n    updateState(\n      { fetchers: new Map(state.fetchers) },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function setFetcherError(\n    key: string,\n    routeId: string,\n    error: any,\n    opts: { flushSync?: boolean } = {}\n  ) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState(\n      {\n        errors: {\n          [boundaryMatch.route.id]: error,\n        },\n        fetchers: new Map(state.fetchers),\n      },\n      { flushSync: (opts && opts.flushSync) === true }\n    );\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function deleteFetcherAndUpdateState(key: string): void {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function handleNavigational404(pathname: string) {\n    let error = getInternalRouterError(404, { pathname });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let { matches, route } = getShortCircuitMatches(routesToUse);\n\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n\n    return { notFoundMatches: matches, route, error };\n  }\n\n  function handleDiscoverRouteError(\n    pathname: string,\n    discoverResult: DiscoverRoutesErrorResult\n  ) {\n    return {\n      boundaryId: findNearestBoundary(discoverResult.partialMatches).route.id,\n      error: getInternalRouterError(400, {\n        type: \"route-discovery\",\n        pathname,\n        message:\n          discoverResult.error != null && \"message\" in discoverResult.error\n            ? discoverResult.error\n            : String(discoverResult.error),\n      }),\n    };\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function checkFogOfWar(\n    matches: AgnosticDataRouteMatch[] | null,\n    routesToUse: AgnosticDataRouteObject[],\n    pathname: string\n  ): { active: boolean; matches: AgnosticDataRouteMatch[] | null } {\n    if (patchRoutesOnNavigationImpl) {\n      // Don't bother re-calling patchRouteOnMiss for a path we've already\n      // processed.  the last execution would have patched the route tree\n      // accordingly so `matches` here are already accurate.\n      if (discoveredRoutes.has(pathname)) {\n        return { active: false, matches };\n      }\n\n      if (!matches) {\n        let fogMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n          routesToUse,\n          pathname,\n          basename,\n          true\n        );\n\n        return { active: true, matches: fogMatches || [] };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n            routesToUse,\n            pathname,\n            basename,\n            true\n          );\n          return { active: true, matches: partialMatches };\n        }\n      }\n    }\n\n    return { active: false, matches: null };\n  }\n\n  type DiscoverRoutesSuccessResult = {\n    type: \"success\";\n    matches: AgnosticDataRouteMatch[] | null;\n  };\n  type DiscoverRoutesErrorResult = {\n    type: \"error\";\n    error: any;\n    partialMatches: AgnosticDataRouteMatch[];\n  };\n  type DiscoverRoutesAbortedResult = { type: \"aborted\" };\n  type DiscoverRoutesResult =\n    | DiscoverRoutesSuccessResult\n    | DiscoverRoutesErrorResult\n    | DiscoverRoutesAbortedResult;\n\n  async function discoverRoutes(\n    matches: AgnosticDataRouteMatch[],\n    pathname: string,\n    signal: AbortSignal\n  ): Promise<DiscoverRoutesResult> {\n    let partialMatches: AgnosticDataRouteMatch[] | null = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      try {\n        await loadLazyRouteChildren(\n          patchRoutesOnNavigationImpl!,\n          pathname,\n          partialMatches,\n          routesToUse,\n          manifest,\n          mapRouteProperties,\n          pendingPatchRoutes,\n          signal\n        );\n      } catch (e) {\n        return { type: \"error\", error: e, partialMatches };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n\n      if (signal.aborted) {\n        return { type: \"aborted\" };\n      }\n\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return { type: \"success\", matches: newMatches };\n      }\n\n      let newPartialMatches = matchRoutesImpl<AgnosticDataRouteObject>(\n        routesToUse,\n        pathname,\n        basename,\n        true\n      );\n\n      // Avoid loops if the second pass results in the same partial matches\n      if (\n        !newPartialMatches ||\n        (partialMatches.length === newPartialMatches.length &&\n          partialMatches.every(\n            (m, i) => m.route.id === newPartialMatches![i].route.id\n          ))\n      ) {\n        addToFifoQueue(pathname, discoveredRoutes);\n        return { type: \"success\", matches: null };\n      }\n\n      partialMatches = newPartialMatches;\n    }\n  }\n\n  function addToFifoQueue(path: string, queue: Set<string>) {\n    if (queue.size >= discoveredRoutesMaxSize) {\n      let first = queue.values().next().value;\n      queue.delete(first);\n    }\n    queue.add(path);\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  function patchRoutes(\n    routeId: string | null,\n    children: AgnosticRouteObject[]\n  ): void {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(\n      routeId,\n      children,\n      routesToUse,\n      manifest,\n      mapRouteProperties\n    );\n\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface StaticHandlerFutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_throwAbortReason: boolean;\n}\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<StaticHandlerFutureConfig>;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future: StaticHandlerFutureConfig = {\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false,\n    ...(opts ? opts.future : null),\n  };\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(\n    request: Request,\n    {\n      requestContext,\n      skipLoaderErrorBubbling,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      skipLoaderErrorBubbling?: boolean;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      skipLoaderErrorBubbling === true,\n      null\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n      unstable_dataStrategy,\n    }: {\n      requestContext?: unknown;\n      routeId?: string;\n      unstable_dataStrategy?: DataStrategyFunction;\n    } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      unstable_dataStrategy || null,\n      false,\n      match\n    );\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          unstable_dataStrategy,\n          skipLoaderErrorBubbling,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `HandlerResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isHandlerResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      let results = await callDataStrategy(\n        \"action\",\n        request,\n        [actionMatch],\n        matches,\n        isRouteRequest,\n        requestContext,\n        unstable_dataStrategy\n      );\n      result = results[0];\n\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")!,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling\n        ? actionMatch\n        : findNearestBoundary(matches, actionMatch.route.id);\n\n      let context = await loadRouteData(\n        loaderRequest,\n        matches,\n        requestContext,\n        unstable_dataStrategy,\n        skipLoaderErrorBubbling,\n        null,\n        [boundaryMatch.route.id, result]\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : result.statusCode != null\n          ? result.statusCode\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    let context = await loadRouteData(\n      loaderRequest,\n      matches,\n      requestContext,\n      unstable_dataStrategy,\n      skipLoaderErrorBubbling,\n      null\n    );\n\n    return {\n      ...context,\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionHeaders: result.headers\n        ? { [actionMatch.route.id]: result.headers }\n        : {},\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null,\n    skipLoaderErrorBubbling: boolean,\n    routeMatch: AgnosticDataRouteMatch | null,\n    pendingActionResult?: PendingActionResult\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0])\n      : matches;\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors:\n          pendingActionResult && isErrorResult(pendingActionResult[1])\n            ? {\n                [pendingActionResult[0]]: pendingActionResult[1].error,\n              }\n            : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await callDataStrategy(\n      \"loader\",\n      request,\n      matchesToLoad,\n      matches,\n      isRouteRequest,\n      requestContext,\n      unstable_dataStrategy\n    );\n\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionResult,\n      activeDeferreds,\n      skipLoaderErrorBubbling\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(\n    type: \"loader\" | \"action\",\n    request: Request,\n    matchesToLoad: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    isRouteRequest: boolean,\n    requestContext: unknown,\n    unstable_dataStrategy: DataStrategyFunction | null\n  ): Promise<DataResult[]> {\n    let results = await callDataStrategyImpl(\n      unstable_dataStrategy || defaultDataStrategy,\n      type,\n      request,\n      matchesToLoad,\n      matches,\n      manifest,\n      mapRouteProperties,\n      requestContext\n    );\n\n    return await Promise.all(\n      results.map((result, i) => {\n        if (isRedirectHandlerResult(result)) {\n          let response = result.result as Response;\n          // Throw redirects and let the server handle them with an HTTP redirect\n          throw normalizeRelativeRoutingRedirectResponse(\n            response,\n            request,\n            matchesToLoad[i].route.id,\n            matches,\n            basename,\n            future.v7_relativeSplatPath\n          );\n        }\n        if (isResponse(result.result) && isRouteRequest) {\n          // For SSR single-route requests, we want to hand Responses back\n          // directly without unwrapping\n          throw result;\n        }\n\n        return convertHandlerResultToDataResult(result);\n      })\n    );\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction throwStaticHandlerAbortedError(\n  request: Request,\n  isRouteRequest: boolean,\n  future: StaticHandlerFutureConfig\n) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(`${method}() call aborted: ${request.method} ${request.url}`);\n}\n\nfunction isSubmissionNavigation(\n  opts: BaseNavigateOrFetchOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  v7_relativeSplatPath: boolean,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getResolveToMatches(contextualMatches, v7_relativeSplatPath),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: BaseNavigateOrFetchOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isInitialLoad: boolean,\n  skipActionErrorRevalidation: boolean,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: Set<string>,\n  deletedFetchers: Set<string>,\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionResult?: PendingActionResult\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingActionResult\n    ? isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : pendingActionResult[1].data\n    : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[0]\n      : undefined;\n  let boundaryMatches = boundaryId\n    ? getLoaderMatchesUntilBoundary(matches, boundaryId)\n    : matches;\n\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult\n    ? pendingActionResult[1].statusCode\n    : undefined;\n  let shouldSkipRevalidation =\n    skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let { route } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (route.loader == null) {\n      return false;\n    }\n\n    if (isInitialLoad) {\n      if (typeof route.loader !== \"function\" || route.loader.hydrate) {\n        return true;\n      }\n      return (\n        state.loaderData[route.id] === undefined &&\n        // Don't re-run if the loader ran and threw an error\n        (!state.errors || state.errors[route.id] === undefined)\n      );\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation\n        ? false\n        : // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n          isRevalidationRequired ||\n          currentUrl.pathname + currentUrl.search ===\n            nextUrl.pathname + nextUrl.search ||\n          // Search params affect all loaders\n          currentUrl.search !== nextUrl.search ||\n          isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial load (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (\n      isInitialLoad ||\n      !matches.some((m) => m.route.id === f.routeId) ||\n      deletedFetchers.has(key)\n    ) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation\n          ? false\n          : isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Idempotent utility to execute patchRoutesOnNavigation() to lazily load route\n * definitions and update the routes/routeManifest\n */\nasync function loadLazyRouteChildren(\n  patchRoutesOnNavigationImpl: AgnosticPatchRoutesOnNavigationFunction,\n  path: string,\n  matches: AgnosticDataRouteMatch[],\n  routes: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  pendingRouteChildren: Map<\n    string,\n    ReturnType<typeof patchRoutesOnNavigationImpl>\n  >,\n  signal: AbortSignal\n) {\n  let key = [path, ...matches.map((m) => m.route.id)].join(\"-\");\n  try {\n    let pending = pendingRouteChildren.get(key);\n    if (!pending) {\n      pending = patchRoutesOnNavigationImpl({\n        path,\n        matches,\n        patch: (routeId, children) => {\n          if (!signal.aborted) {\n            patchRoutesImpl(\n              routeId,\n              children,\n              routes,\n              manifest,\n              mapRouteProperties\n            );\n          }\n        },\n      });\n      pendingRouteChildren.set(key, pending);\n    }\n\n    if (pending && isPromise<AgnosticRouteObject[]>(pending)) {\n      await pending;\n    }\n  } finally {\n    pendingRouteChildren.delete(key);\n  }\n}\n\nfunction patchRoutesImpl(\n  routeId: string | null,\n  children: AgnosticRouteObject[],\n  routesToUse: AgnosticDataRouteObject[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction\n) {\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(\n      route,\n      `No route found to patch children into: routeId = ${routeId}`\n    );\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [routeId, \"patch\", String(route.children?.length || \"0\")],\n      manifest\n    );\n    if (route.children) {\n      route.children.push(...dataChildren);\n    } else {\n      route.children = dataChildren;\n    }\n  } else {\n    let dataChildren = convertRoutesToDataRoutes(\n      children,\n      mapRouteProperties,\n      [\"patch\", String(routesToUse.length || \"0\")],\n      manifest\n    );\n    routesToUse.push(...dataChildren);\n  }\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nfunction defaultDataStrategy(\n  opts: DataStrategyFunctionArgs\n): ReturnType<DataStrategyFunction> {\n  return Promise.all(opts.matches.map((m) => m.resolve()));\n}\n\nasync function callDataStrategyImpl(\n  dataStrategyImpl: DataStrategyFunction,\n  type: \"loader\" | \"action\",\n  request: Request,\n  matchesToLoad: AgnosticDataRouteMatch[],\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  requestContext?: unknown\n): Promise<HandlerResult[]> {\n  let routeIdsToLoad = matchesToLoad.reduce(\n    (acc, m) => acc.add(m.route.id),\n    new Set<string>()\n  );\n  let loadedMatches = new Set<string>();\n\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: matches.map((match) => {\n      let shouldLoad = routeIdsToLoad.has(match.route.id);\n      // `resolve` encapsulates the route.lazy, executing the\n      // loader/action, and mapping return values/thrown errors to a\n      // HandlerResult.  Users can pass a callback to take fine-grained control\n      // over the execution of the loader/action\n      let resolve: DataStrategyMatch[\"resolve\"] = (handlerOverride) => {\n        loadedMatches.add(match.route.id);\n        return shouldLoad\n          ? callLoaderOrAction(\n              type,\n              request,\n              match,\n              manifest,\n              mapRouteProperties,\n              handlerOverride,\n              requestContext\n            )\n          : Promise.resolve({ type: ResultType.data, result: undefined });\n      };\n\n      return {\n        ...match,\n        shouldLoad,\n        resolve,\n      };\n    }),\n    request,\n    params: matches[0].params,\n    context: requestContext,\n  });\n\n  // Throw if any loadRoute implementations not called since they are what\n  // ensures a route is fully loaded\n  matches.forEach((m) =>\n    invariant(\n      loadedMatches.has(m.route.id),\n      `\\`match.resolve()\\` was not called for route id \"${m.route.id}\". ` +\n        \"You must call `match.resolve()` on every match passed to \" +\n        \"`dataStrategy` to ensure all routes are properly loaded.\"\n    )\n  );\n\n  // Filter out any middleware-only matches for which we didn't need to run handlers\n  return results.filter((_, i) => routeIdsToLoad.has(matches[i].route.id));\n}\n\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  handlerOverride: Parameters<DataStrategyMatch[\"resolve\"]>[0],\n  staticContext?: unknown\n): Promise<HandlerResult> {\n  let result: HandlerResult;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (\n    handler: AgnosticRouteObject[\"loader\"] | AgnosticRouteObject[\"action\"]\n  ): Promise<HandlerResult> => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    // This will never resolve so safe to type it as Promise<HandlerResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise<HandlerResult>((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n\n    let actualHandler = (ctx?: unknown) => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(\n          new Error(\n            `You cannot call the handler for a route which defines a boolean ` +\n              `\"${type}\" [routeId: ${match.route.id}]`\n          )\n        );\n      }\n      return handler(\n        {\n          request,\n          params: match.params,\n          context: staticContext,\n        },\n        ...(ctx !== undefined ? [ctx] : [])\n      );\n    };\n\n    let handlerPromise: Promise<HandlerResult>;\n    if (handlerOverride) {\n      handlerPromise = handlerOverride((ctx: unknown) => actualHandler(ctx));\n    } else {\n      handlerPromise = (async () => {\n        try {\n          let val = await actualHandler();\n          return { type: \"data\", result: val };\n        } catch (e) {\n          return { type: \"error\", result: e };\n        }\n      })();\n    }\n\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value!;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, result: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result.result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // HandlerResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return { type: ResultType.error, result: e };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  return result;\n}\n\nasync function convertHandlerResultToDataResult(\n  handlerResult: HandlerResult\n): Promise<DataResult> {\n  let { result, type } = handlerResult;\n\n  if (isResponse(result)) {\n    let data: any;\n\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return { type: ResultType.error, error: e };\n    }\n\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      if (result.data instanceof Error) {\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: result.init?.status,\n        };\n      }\n\n      // Convert thrown unstable_data() to ErrorResponse instances\n      result = new ErrorResponseImpl(\n        result.init?.status || 500,\n        undefined,\n        result.data\n      );\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined,\n    };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  if (isDataWithResponseInit(result)) {\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: result.init?.status,\n      headers: result.init?.headers\n        ? new Headers(result.init.headers)\n        : undefined,\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(\n  response: Response,\n  request: Request,\n  routeId: string,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  v7_relativeSplatPath: boolean\n) {\n  let location = response.headers.get(\"Location\");\n  invariant(\n    location,\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\n  );\n\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(\n      0,\n      matches.findIndex((m) => m.route.id === routeId) + 1\n    );\n    location = normalizeTo(\n      new URL(request.url),\n      trimmedMatches,\n      basename,\n      true,\n      location,\n      v7_relativeSplatPath\n    );\n    response.headers.set(\"Location\", location);\n  }\n\n  return response;\n}\n\nfunction normalizeRedirectLocation(\n  location: string,\n  currentUrl: URL,\n  basename: string\n): string {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\")\n      ? new URL(currentUrl.protocol + normalizedLocation)\n      : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingActionResult: PendingActionResult | undefined,\n  activeDeferreds: Map<string, DeferredData>,\n  skipLoaderErrorBubbling: boolean\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n  let pendingError =\n    pendingActionResult && isErrorResult(pendingActionResult[1])\n      ? pendingActionResult[1].error\n      : undefined;\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (\n          result.statusCode != null &&\n          result.statusCode !== 200 &&\n          !foundError\n        ) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = { [pendingActionResult[0]]: pendingError };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingActionResult: PendingActionResult | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingActionResult,\n    activeDeferreds,\n    false // This method is only called client side so we always want to bubble\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\nfunction getActionDataForCommit(\n  pendingActionResult: PendingActionResult | undefined\n) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1])\n    ? {\n        // Clear out prior actionData on errors\n        actionData: {},\n      }\n    : {\n        actionData: {\n          [pendingActionResult[0]]: pendingActionResult[1].data,\n        },\n      };\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route =\n    routes.length === 1\n      ? routes[0]\n      : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n          id: `__shim-error-route__`,\n        };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n    message,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\" | \"route-discovery\";\n    message?: string;\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (type === \"route-discovery\") {\n      errorMessage =\n        `Unable to match URL \"${pathname}\" - the \\`unstable_patchRoutesOnNavigation()\\` ` +\n        `function threw the following error:\\n${message}`;\n    } else if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isPromise<T = unknown>(val: unknown): val is Promise<T> {\n  return typeof val === \"object\" && val != null && \"then\" in val;\n}\n\nfunction isHandlerResult(result: unknown): result is HandlerResult {\n  return (\n    result != null &&\n    typeof result === \"object\" &&\n    \"type\" in result &&\n    \"result\" in result &&\n    (result.type === ResultType.data || result.type === ResultType.error)\n  );\n}\n\nfunction isRedirectHandlerResult(result: HandlerResult) {\n  return (\n    isResponse(result.result) && redirectStatusCodes.has(result.result.status)\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDataWithResponseInit(\n  value: any\n): value is DataWithResponseInit<unknown> {\n  return (\n    typeof value === \"object\" &&\n    value != null &&\n    \"type\" in value &&\n    \"data\" in value &&\n    \"init\" in value &&\n    value.type === \"DataWithResponseInit\"\n  );\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n\nfunction restoreAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(\n      TRANSITIONS_STORAGE_KEY\n    );\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\n\nfunction persistAppliedTransitions(\n  _window: Window,\n  transitions: Map<string, Set<string>>\n) {\n  if (transitions.size > 0) {\n    let json: Record<string, string[]> = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(\n        TRANSITIONS_STORAGE_KEY,\n        JSON.stringify(json)\n      );\n    } catch (error) {\n      warning(\n        false,\n        `Failed to save applied view transitions in sessionStorage (${error}).`\n      );\n    }\n  }\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject\n  // Omit `future` since those can be pulled from the `router`\n  // `NavigationContext` needs future since it doesn't have a `router` in all cases\n  extends Omit<NavigationContextObject, \"future\"> {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  unstable_flushSync?: boolean;\n  unstable_viewTransition?: boolean;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n  future: {\n    v7_relativeSplatPath: boolean;\n  };\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_decodePath as decodePath,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, decodePath(pathname)),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, future, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { future } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let routePathnamesJson = JSON.stringify(\n    getResolveToMatches(matches, future.v7_relativeSplatPath)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"],\n  future?: RemixRouter[\"future\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined ||\n        matches[matches.length - 1].route.lazy !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState,\n    future\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error !== undefined ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null,\n  future: RemixRouter[\"future\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (!dataRouterState) {\n      return null;\n    }\n\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else if (\n      future?.v7_partialHydration &&\n      parentMatches.length === 0 &&\n      !dataRouterState.initialized &&\n      dataRouterState.matches.length > 0\n    ) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id] !== undefined\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n\n      if (match.route.id) {\n        let { loaderData, errors } = dataRouterState;\n        let needsToRunLoader =\n          match.route.loader &&\n          loaderData[match.route.id] === undefined &&\n          (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error: any;\n    let shouldRenderHydrateFallback = false;\n    let errorElement: React.ReactNode | null = null;\n    let hydrateFallbackElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\n            \"route-fallback\",\n            false,\n            \"No `HydrateFallback` element provided to render during initial hydration\"\n          );\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  RouterSubscriber,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getResolveToMatches as getResolveToMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_relativeSplatPath: boolean;\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  // Only accept future flags relevant to rendering behavior\n  // routing flags should be accessed via router.future\n  future?: Partial<Pick<FutureConfig, \"v7_startTransition\">>;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (newState: RouterState) => {\n      if (v7_startTransition && startTransitionImpl) {\n        startTransitionImpl(() => setStateImpl(newState));\n      } else {\n        setStateImpl(newState);\n      }\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n            future={{\n              v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n            }}\n          >\n            {state.initialized || router.future.v7_partialHydration ? (\n              <DataRoutes\n                routes={router.routes}\n                future={router.future}\n                state={state}\n              />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: Partial<FutureConfig>;\n}\n\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  let { future, static: isStatic } = React.useContext(NavigationContext);\n\n  warning(\n    !isStatic,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getResolveToMatches(matches, future.v7_relativeSplatPath),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  hydrateFallbackElement?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  HydrateFallback?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n  future?: Partial<Pick<FutureConfig, \"v7_relativeSplatPath\">>;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n  future,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({\n      basename,\n      navigator,\n      static: staticProp,\n      future: {\n        v7_relativeSplatPath: false,\n        ...future,\n      },\n    }),\n    [basename, future, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        \"_error\" in promise\n          ? AwaitRenderStatus.error\n          : \"_data\" in promise\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  unstable_flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  unstable_PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n  unstable_HandlerResult,\n  unstable_PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  unstable_dataStrategy?: unstable_DataStrategyFunction;\n  unstable_patchRoutesOnNavigation?: unstable_PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts?.unstable_patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnNavigation: opts?.unstable_patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103, _path104, _path105, _path106, _path107, _path108, _path109, _path110, _path111, _path112, _path113, _path114, _path115, _path116, _path117, _path118, _path119, _path120, _path121, _path122, _path123, _path124, _path125, _path126, _path127, _path128, _path129, _path130, _path131, _path132, _path133, _path134, _path135, _path136, _path137, _path138, _path139, _path140, _path141, _path142, _path143, _path144, _path145, _path146, _path147, _path148, _path149, _path150, _path151, _path152, _path153, _path154, _path155, _path156, _path157, _path158, _path159, _path160, _path161, _path162, _path163, _path164, _path165, _path166, _path167, _path168, _path169, _path170, _path171, _path172, _path173, _path174, _path175, _path176, _path177, _path178, _path179, _path180, _path181, _path182, _path183, _path184, _path185, _path186, _path187, _path188, _path189, _path190, _path191, _path192, _path193, _path194, _path195, _path196, _path197, _path198, _path199, _path200, _path201, _path202, _path203, _path204, _path205, _path206, _path207, _path208, _path209, _path210, _path211, _path212, _path213, _path214, _path215, _path216, _path217, _path218, _path219, _path220, _path221, _path222, _path223, _path224, _path225, _path226, _path227, _path228, _path229, _path230, _path231, _path232, _path233, _path234, _path235, _path236, _path237, _path238, _path239, _path240, _path241, _path242, _path243, _path244, _path245, _path246, _path247, _path248, _path249, _path250, _path251, _path252, _path253, _path254, _path255, _path256, _path257, _path258, _path259, _path260, _path261, _path262, _path263, _path264, _path265, _path266, _path267, _path268, _path269, _path270, _path271, _path272, _path273, _path274, _path275, _path276, _path277, _path278, _path279, _path280, _path281, _path282, _path283, _path284, _path285, _path286, _path287, _path288, _path289, _path290, _path291, _path292, _path293, _path294, _path295, _path296, _path297, _path298, _path299, _path300, _path301, _path302, _path303, _path304, _path305, _path306, _path307, _path308, _path309, _path310, _path311, _path312, _path313, _path314, _path315, _path316, _path317, _path318, _path319, _path320, _path321, _path322, _path323, _path324, _path325, _path326, _path327, _path328, _path329, _path330, _path331, _path332, _path333, _path334, _path335, _path336, _path337, _path338, _path339, _path340, _path341, _path342, _path343, _path344, _path345, _path346, _path347, _path348, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgGameBackground(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1440,\n    height: 839,\n    viewBox: \"0 0 1440 839\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M442.985 53.5989C469.951 49.8424 474.611 72.3515 477.091 73.0164C482.492 73.9689 483.906 68.1456 489.656 67.222C503.144 65.0518 513.793 73.6053 513.123 85.8255C514.105 87.8522 525.727 88.8068 523.67 104.575C524.267 105.453 532.027 104.546 532.964 111.502C539.24 111.854 544.59 119.109 542.033 124.572C542.652 126.681 556.897 126.244 551.252 133.546L367.264 128.333C373.053 122.019 382.41 119.178 391.196 118.76C392.918 111.572 401.294 111.933 402.714 110.886C405.334 108.951 405.648 103.702 413.726 101.46C401.831 90.4216 406.993 78.5233 422.587 74.0346C421.311 65.5828 434.925 54.7236 442.985 53.5989ZM445.154 55.7104C437.184 56.5507 422.15 66.6213 427.037 75.1858C398.014 82.0821 413.212 101.077 418.831 100.067C421.193 99.6422 432.443 67.3742 453.328 93.3568C436.435 77.3997 415.748 95.89 425.114 112.546C417.588 100.268 412.261 99.7479 406.005 113.03C391.618 113.965 394.352 120.305 393.365 120.872C392.597 121.322 379.259 121.221 376.351 125.515C434.121 127.326 491.892 129.127 549.662 130.938C547.446 125.802 540.269 129.822 539.64 128.604C536.672 122.831 544.908 106.079 522.026 118.88C540.38 105.531 518.896 107.7 517.986 106.465C524.854 99.1967 520.373 90.572 510.767 88.834C513.842 70.7365 489.227 60.8135 481.392 78.2635C467.209 71.1577 468.749 53.2423 445.154 55.7104Z\",\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M445.154 55.7117C468.749 53.2435 467.208 71.159 481.392 78.2647C489.226 60.8147 513.841 70.7377 510.767 88.8352C520.373 90.5732 524.854 99.1979 517.986 106.466C518.895 107.701 540.379 105.532 522.025 118.881C544.908 106.08 536.672 122.832 539.639 128.606C540.269 129.823 547.446 125.803 549.662 130.94C491.891 129.129 434.121 127.328 376.35 125.516C379.258 121.222 392.596 121.323 393.365 120.873C394.351 120.307 391.618 113.966 406.004 113.031C412.261 99.7491 417.587 100.269 425.113 112.547C415.748 95.8912 436.434 77.4009 453.327 93.358C432.442 67.3755 421.193 99.6434 418.83 100.068C413.212 101.078 398.013 82.0833 427.037 75.187C422.149 66.6225 437.183 56.5519 445.154 55.7117Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M327.453 139.948C362.449 136.173 364.895 166.441 372.554 165.828C374.097 165.707 379.829 155.117 396.449 157.279C415.038 159.692 415.528 180.443 416.327 181.931C417.211 183.576 434.188 188.895 427.847 204.809C441.437 207.552 439.765 213.368 440.431 213.879C449.046 215.373 456.825 223.805 452.68 232.164C453.314 233.248 467.062 231.045 465.806 241.762C386.707 239.695 307.609 237.618 228.51 235.551C242.163 221.464 256.348 228.846 265.157 216.088C278.471 214.374 276.556 205.289 288.734 200.867C272.395 188.196 280.209 170.089 300.1 166.337C298.206 154.209 315.265 141.264 327.453 139.948ZM327.341 143.02C315.455 144.375 300.21 157.156 303.933 169.009C280.545 171.042 275.956 192.797 294.96 199.506C302.222 176.197 328.597 173.275 337.534 186.874C347.068 201.372 334.295 186.701 333.626 186.251C325.331 180.593 313.021 182.182 306.01 189.056C301.538 193.44 300.423 200.297 298.681 205.25C309.133 223.228 298.691 215.152 295.39 203.106C294.466 202.906 293.529 202.715 292.604 202.515C285.572 205.657 278.643 208.721 277.497 216.438C260.27 217.364 263.56 225.709 262.54 226.264C261.428 226.868 242.533 227.04 238.719 232.765C313.33 234.705 387.941 236.655 462.553 238.595C458.911 233.141 449.818 237.352 449.165 236.165C452.246 229.261 448.859 217.449 441.441 216.983C437.063 219.083 432.675 221.173 428.297 223.273C453.906 200.986 409.243 214.215 425.64 203.722C427.986 185.891 413.426 186.042 412.85 184.908C415.91 162.566 385.925 149.314 374.611 171.011C371.123 169.037 367.647 167.052 364.159 165.077C362.661 163.333 357.834 139.548 327.341 143.02Z\",\n    fill: \"black\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M327.342 143.018C357.835 139.546 362.662 163.331 364.159 165.075C367.648 167.05 371.124 169.034 374.612 171.009C385.926 149.311 415.911 162.564 412.85 184.906C413.427 186.039 427.987 185.888 425.641 203.719C409.244 214.213 453.907 200.984 428.298 223.271C432.675 221.17 437.064 219.081 441.442 216.98C448.859 217.447 452.247 229.259 449.165 236.163C449.818 237.35 458.911 233.138 462.553 238.592C387.942 236.652 313.331 234.702 238.72 232.762C242.534 227.038 261.429 226.866 262.541 226.262C263.56 225.707 260.271 217.362 277.498 216.435C278.644 208.718 285.573 205.655 292.605 202.512C293.53 202.713 294.466 202.903 295.391 203.104C298.692 215.15 309.134 223.226 298.682 205.247C300.424 200.294 301.538 193.437 306.011 189.054C313.022 182.18 325.332 180.591 333.627 186.249C334.296 186.698 347.069 201.37 337.535 186.872C328.597 173.272 302.223 176.195 294.961 199.504C275.957 192.795 280.545 171.04 303.934 169.006C300.21 157.154 315.455 144.373 327.342 143.018Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1014.97 33.9541C1041.93 30.1976 1046.59 52.7068 1049.07 53.3716C1054.47 54.3242 1055.89 48.5009 1061.64 47.5772C1075.13 45.407 1085.77 53.9605 1085.1 66.1807C1086.09 68.2074 1097.71 69.162 1095.65 84.9307C1096.25 85.8087 1104.01 84.901 1104.94 91.8569C1111.22 92.209 1116.57 99.4643 1114.01 104.927C1114.63 107.036 1128.88 106.599 1123.23 113.901L939.245 108.688C945.034 102.374 954.392 99.533 963.178 99.1157C964.9 91.9275 973.276 92.2879 974.695 91.2415C977.315 89.3066 977.63 84.057 985.707 81.8155C973.813 70.7768 978.974 58.8786 994.568 54.3899C993.293 45.938 1006.91 35.0788 1014.97 33.9541ZM1017.14 36.0657C1009.16 36.9059 994.131 46.9765 999.018 55.541C969.995 62.4374 985.194 81.4319 990.812 80.4225C993.175 79.9974 1004.42 47.7295 1025.31 73.712C1008.42 57.7549 987.73 76.2452 997.095 92.9013C989.569 80.6231 984.243 80.1031 977.986 93.3849C963.6 94.3201 966.333 100.661 965.347 101.227C964.578 101.677 951.24 101.576 948.332 105.87C1006.1 107.682 1063.87 109.483 1121.64 111.294C1119.43 106.157 1112.25 110.177 1111.62 108.96C1108.65 103.186 1116.89 86.4345 1094.01 99.235C1112.36 85.8859 1090.88 88.0551 1089.97 86.8198C1096.84 79.5519 1092.35 70.9272 1082.75 69.1892C1085.82 51.0917 1061.21 41.1687 1053.37 58.6188C1039.19 51.513 1040.73 33.5975 1017.14 36.0657Z\",\n    fill: \"black\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1017.13 36.0669C1040.73 33.5988 1039.19 51.5142 1053.37 58.62C1061.21 41.1699 1085.82 51.0929 1082.75 69.1904C1092.35 70.9284 1096.84 79.5531 1089.97 86.821C1090.88 88.0563 1112.36 85.8871 1094.01 99.2362C1116.89 86.4357 1108.65 103.188 1111.62 108.961C1112.25 110.178 1119.43 106.158 1121.64 111.295C1063.87 109.484 1006.1 107.683 948.332 105.872C951.24 101.577 964.578 101.678 965.346 101.228C966.333 100.662 963.599 94.3213 977.986 93.3861C984.242 80.1043 989.569 80.6243 997.095 92.9025C987.729 76.2464 1008.42 57.7561 1025.31 73.7132C1004.42 47.7307 993.174 79.9986 990.811 80.4237C985.193 81.4331 969.994 62.4386 999.018 55.5422C994.13 46.9777 1009.16 36.9071 1017.13 36.0669Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M717.514 20.404C735.423 18.4722 736.675 33.9612 740.594 33.6474C741.384 33.5858 744.317 28.1663 752.822 29.2728C762.334 30.5075 762.585 41.1265 762.994 41.8882C763.446 42.7298 772.134 45.4519 768.889 53.5955C775.844 54.9991 774.988 57.9753 775.329 58.2368C779.738 59.0016 783.719 63.3162 781.597 67.5942C781.922 68.1489 788.957 67.0211 788.315 72.5055C747.837 71.4478 707.359 70.3848 666.882 69.3271C673.869 62.1182 681.127 65.8962 685.635 59.3672C692.449 58.4902 691.469 53.841 697.7 51.5784C689.339 45.094 693.338 35.8282 703.517 33.9082C702.548 27.7014 711.277 21.077 717.514 20.404ZM717.457 21.976C711.374 22.6692 703.573 29.2097 705.478 35.2752C693.51 36.3156 691.161 47.4484 700.887 50.8819C704.603 38.9538 718.1 37.4582 722.673 44.4176C727.552 51.8368 721.016 44.3287 720.674 44.0987C716.429 41.2035 710.129 42.0164 706.541 45.5342C704.253 47.7774 703.682 51.2863 702.791 53.8209C708.139 63.0211 702.796 58.8883 701.107 52.7241C700.634 52.6215 700.154 52.524 699.681 52.4214C696.082 54.0295 692.537 55.5971 691.95 59.5462C683.134 60.0203 684.818 64.2907 684.296 64.5749C683.727 64.884 674.058 64.972 672.106 67.9014C710.287 68.8941 748.468 69.892 786.65 70.8847C784.786 68.0937 780.133 70.2489 779.798 69.6414C781.375 66.1086 779.642 60.0638 775.846 59.8251C773.606 60.8999 771.36 61.9693 769.12 63.0441C782.225 51.6391 759.369 58.4088 767.76 53.039C768.961 43.9142 761.51 43.9916 761.215 43.4114C762.781 31.9784 747.436 25.1965 741.647 36.3C739.862 35.2895 738.083 34.2739 736.298 33.2633C735.532 32.3709 733.062 20.1993 717.457 21.976Z\",\n    fill: \"black\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M717.456 21.9734C733.061 20.1966 735.531 32.3682 736.297 33.2607C738.082 34.2712 739.861 35.2868 741.646 36.2973C747.436 25.1938 762.78 31.9758 761.214 43.4088C761.509 43.9889 768.96 43.9115 767.76 53.0363C759.369 58.4061 782.224 51.6364 769.119 63.0415C771.359 61.9667 773.605 60.8973 775.846 59.8224C779.641 60.0611 781.375 66.106 779.798 69.6388C780.132 70.2463 784.785 68.091 786.649 70.882C748.468 69.8894 710.287 68.8914 672.106 67.8988C674.057 64.9693 683.727 64.8814 684.295 64.5722C684.817 64.288 683.134 60.0176 691.95 59.5435C692.536 55.5945 696.082 54.0268 699.681 52.4187C700.154 52.5213 700.633 52.6188 701.106 52.7214C702.795 58.8856 708.139 63.0185 702.79 53.8183C703.682 51.2837 704.252 47.7748 706.541 45.5316C710.129 42.0138 716.428 41.2008 720.673 44.096C721.015 44.326 727.552 51.8341 722.673 44.415C718.099 37.4556 704.602 38.9511 700.886 50.8792C691.161 47.4458 693.509 36.313 705.478 35.2725C703.572 29.2071 711.374 22.6666 717.456 21.9734Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3.23687 362.397C-0.272804 389.103 -0.768979 410.698 -0.560412 425.555C-0.179238 452.463 -0.510102 450.17 -2.3944 467C-4.3578 484.586 -4.50164 499.05 -2.3944 517.888C-1.38752 526.915 0.511138 534.221 1.99987 539.073L214.864 539.072C214.677 533.422 209.348 424.778 122.684 379.27C83.3516 358.618 22.2884 360.18 3.22967 362.404L3.23687 362.397Z\",\n    fill: \"#7E7B74\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M176.221 509.242C162.327 506.204 156.746 506.276 147.303 503.713C141.405 502.115 142.549 501.806 137.572 500.604C128.107 498.314 122.311 499.027 114.313 498.674C108.595 498.422 102.626 497.235 90.6946 494.852C69.651 490.655 69.802 488.597 59.1507 487.834C49.8803 487.171 39.4159 486.574 30.2606 493.088C28.3331 494.463 22.2631 498.782 20.1271 506.233C18.8182 510.789 19.7819 513.74 20.4651 522.386C20.9901 529.023 21.0117 534.767 20.8751 539.28L191.605 539.28C190.785 537.301 189.512 534.299 187.851 530.642C185.837 526.208 185.492 525.74 185.226 524.257C184.276 518.988 187.175 516.663 185.974 513.74C185.01 511.387 182.162 510.53 176.214 509.234L176.221 509.242Z\",\n    fill: \"black\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.385 359.315C148.458 356.653 145.654 354.757 142.467 353.96L133.824 351.799C135.076 349.928 120.247 351.799 120.247 351.799C120.247 351.799 115.04 352.62 113.005 351.799C111.681 351.267 106.996 347.802 105.209 346.463C104.743 346.114 104.226 345.848 103.667 345.687C101.809 345.152 97.2459 343.926 93.7733 343.707C87.8255 343.333 83.9562 342.786 81.1226 342.534C77.4547 342.203 77.7927 342.57 69.8671 342.534C57.9788 342.476 59.0649 341.663 55.2315 342.16C52.5849 342.505 44.2782 343.578 38.3448 349.668C35.878 352.194 33.821 355.599 33.0946 356.801C32.6199 357.579 31.0089 360.3 29.8582 363.136C28.0674 367.563 27.8876 371.551 27.6072 379.332C27.3051 387.66 27.1181 393.174 27.0462 395.384C32.6199 392.973 38.2009 390.561 43.7747 388.157C55.3825 398.746 64.4373 400.538 70.5073 400.272C82.6186 399.732 91.6301 390.597 103.137 391.713C104.36 391.835 107.999 392.296 110.473 390.129C112.53 388.323 112.954 385.429 113.005 383.37C112.616 387.423 112.731 392.771 114.975 398.3C119.017 408.255 127.856 414.956 128.201 414.64C128.532 414.337 123.598 405.159 116.385 404.31C112.609 403.864 111.415 406.081 105.877 405.815C101.49 405.599 100.512 404.123 96.499 403.561C91.4359 402.856 88.0628 404.519 82.9925 406.189C74.9015 408.859 74.4412 407.629 62.7327 410.321C45.3641 414.316 36.6762 416.317 32.2459 421.118C28.0818 425.632 27.0821 435.133 25.0828 454.13C23.6084 468.145 24.4715 472.075 27.0894 474.163C30.9874 477.279 34.8638 473.184 43.6021 476.416C46.4861 477.481 49.78 479.633 56.3606 483.924C62.6752 488.041 62.4595 488.451 64.2431 488.804C68.6589 489.689 71.2337 487.458 78.7636 488.35C78.8931 488.365 79.7921 488.509 81.5757 488.804C90.9612 490.337 95.7007 491.107 97.6353 491.431C103.454 492.396 106.359 492.878 106.64 492.936C111.257 493.836 111.645 494.116 113.393 494.066C117.046 493.951 118.017 492.626 122.031 492.418C124.131 492.31 125.31 492.59 127.655 492.936C127.655 492.936 132.488 493.641 140.32 493.778C146.792 493.893 159.846 491.345 163.305 482.793C166.045 476.013 161.651 468.202 159.925 465.143C158.177 462.041 157.235 461.681 152.424 456.131C149.583 452.856 143.7 446.024 138.917 438.106C135.969 433.219 130.129 422.428 131.883 421.111C133.185 420.139 138.853 424.206 141.923 429.843C144.153 433.931 144.196 437.343 144.549 439.611C147.015 455.454 172.18 465.179 185.823 480.922C187.902 483.319 189.326 485.406 190.325 488.055C192.052 492.633 191.181 495.347 192.203 501.199C192.634 503.856 193.468 507.275 195.202 510.968C203.616 528.884 225.415 536.543 227.846 533.498C229.903 530.921 218.36 520.361 221.467 516.222L238.833 516.222L248.399 520.596L270 516.222L266.297 488.055L255.188 476.416L234.513 474.163L238.336 458.206C238.654 456.88 238.416 455.483 237.679 454.336L227.461 438.445C225.446 435.311 222.336 433.039 218.738 432.072L214.309 430.882C211.776 430.201 209.466 428.868 207.609 427.016L197.595 417.026C196.062 415.498 193.986 414.64 191.822 414.64V414.64C186.731 414.64 182.878 410.036 183.776 405.024L187 387.027C187.777 382.69 186.608 378.23 183.803 374.832L181.261 371.753C178.412 368.302 174.169 366.303 169.693 366.303L163.643 366.303C160.371 366.303 157.19 365.233 154.582 363.257L153.259 362.254C152.161 361.422 151.192 360.431 150.385 359.315V359.315Z\",\n    fill: \"#7E7B74\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M85.2934 343.991C55.792 347.324 36.4672 335.979 30.9941 361.627C30.2749 369.063 29.5557 376.506 28.8365 383.942C29.3687 395.344 32.7921 383.157 38.5456 383.582C42.8824 383.899 52.2823 395.33 62.2791 396.539C77.6555 398.403 86.552 386.274 102.554 387.181C106.992 384.251 104.352 377.067 109.386 376.024C106.51 355.041 111.522 351.967 85.2934 343.991Z\",\n    fill: \"black\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M84.2706 345.536C56.2937 348.665 37.9676 338.016 32.7773 362.092C32.0953 369.072 31.4133 376.059 30.7312 383.039C31.2359 393.742 34.4824 382.302 39.9386 382.701C44.0513 382.998 52.9654 393.728 62.4456 394.864C77.0275 396.614 85.4642 385.228 100.639 386.079C104.847 383.329 102.344 376.586 107.119 375.606C104.391 355.909 109.144 353.023 84.2706 345.536Z\",\n    fill: \"#939393\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M128.445 354.79C122.685 354.343 117.471 355.56 112.264 358.029C115.133 371.699 108.035 390.515 115.14 402.659C116.471 404.94 132.509 414.248 136.357 424.613C137.673 422.332 138.996 420.057 140.312 417.775C146.612 411.577 168.001 427.507 174.834 406.977L179.149 385.383C179.228 377.968 174.496 368.747 166.563 367.747C155.897 366.408 155.2 375.91 143.549 358.389C138.514 357.187 133.48 355.992 128.445 354.79ZM120.534 357.669C121.131 363.068 121.735 368.466 122.332 373.865C120.06 369.359 115.752 381.827 116.579 376.025C117.78 374.347 118.974 372.663 120.175 370.986C121.951 363.888 116.104 375.996 115.86 372.426C115.809 371.655 120.98 366.998 119.455 358.029C119.815 357.907 120.175 357.791 120.534 357.669ZM122.692 379.264C123.44 379.645 124.145 385.224 132.041 392.941C126.245 390.45 118.794 377.284 122.692 379.264ZM114.781 381.423C117.061 387.542 119.333 393.661 121.613 399.779C121.994 407.712 113.565 393.214 114.781 381.423ZM128.086 403.018C127.726 403.976 127.367 404.94 127.007 405.898C123.346 398.347 122.088 386.556 126.647 398.699C122.512 381.107 133.631 407.705 133.839 409.857C134.551 417.278 131.509 413.909 128.086 403.018ZM137.076 395.82C148.863 408.453 158.184 401.075 166.563 400.859C173.057 400.693 166.894 403.098 156.135 404.098C164.283 412.096 161.507 413.837 155.056 404.458C148.302 405.48 139.658 402.27 137.076 395.82ZM134.199 396.54C135.278 400.261 136.357 403.976 137.435 407.697C136.896 396.698 140.701 406.718 141.031 410.577C142.074 422.713 131.186 403.062 134.199 396.54Z\",\n    fill: \"black\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.534 357.669C120.175 357.791 119.815 357.906 119.456 358.029C120.98 366.998 115.809 371.655 115.86 372.425C116.104 375.996 121.951 363.888 120.175 370.986C118.974 372.663 117.78 374.347 116.579 376.024C115.752 381.826 120.06 369.359 122.332 373.865C121.735 368.466 121.131 363.067 120.534 357.669Z\",\n    fill: \"black\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M122.692 379.263C118.794 377.284 126.245 390.449 132.041 392.94C124.144 385.223 123.44 379.645 122.692 379.263Z\",\n    fill: \"black\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M114.781 381.423C113.565 393.214 121.994 407.711 121.613 399.779C119.333 393.66 117.061 387.542 114.781 381.423Z\",\n    fill: \"black\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M126.648 398.699C127.13 400.139 127.604 401.578 128.086 403.018C131.51 413.909 134.552 417.278 133.84 409.856C133.631 407.704 122.512 381.106 126.648 398.699Z\",\n    fill: \"black\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M128.086 403.019C127.604 401.579 127.13 400.14 126.648 398.7C122.088 386.556 123.347 398.347 127.007 405.898C127.367 404.941 127.727 403.976 128.086 403.019Z\",\n    fill: \"black\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.076 395.819C139.658 402.269 148.302 405.479 155.056 404.457C161.507 413.837 164.283 412.095 156.134 404.097C166.894 403.097 173.057 400.692 166.563 400.858C158.184 401.074 148.863 408.452 137.076 395.819Z\",\n    fill: \"black\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.199 396.54C131.186 403.061 142.074 422.713 141.032 410.577C140.701 406.718 136.896 396.698 137.436 407.697C136.357 403.976 135.278 400.261 134.199 396.54Z\",\n    fill: \"black\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M129.174 356.472C123.724 356.049 118.792 357.2 113.866 359.536C116.58 372.468 109.865 390.268 116.587 401.756C117.846 403.915 133.018 412.72 136.658 422.526C137.903 420.367 139.155 418.215 140.4 416.057C146.36 410.194 166.594 425.263 173.058 405.842L177.14 385.413C177.215 378.399 172.738 369.676 165.234 368.729C155.144 367.463 154.484 376.451 143.462 359.877C138.699 358.739 133.937 357.609 129.174 356.472ZM121.69 359.196C122.255 364.303 122.826 369.41 123.391 374.517C121.241 370.255 117.165 382.049 117.948 376.56C119.084 374.974 120.213 373.38 121.35 371.794C123.03 365.079 117.499 376.533 117.267 373.156C117.22 372.427 122.112 368.021 120.669 359.536C121.01 359.42 121.35 359.311 121.69 359.196ZM123.731 379.625C124.439 379.986 125.105 385.263 132.576 392.563C127.092 390.207 120.043 377.752 123.731 379.625ZM116.247 381.668C118.404 387.456 120.554 393.244 122.71 399.032C123.071 406.537 115.097 392.822 116.247 381.668ZM128.834 402.097C128.494 403.002 128.153 403.915 127.813 404.821C124.35 397.677 123.159 386.523 127.473 398.011C123.561 381.368 134.079 406.53 134.277 408.566C134.95 415.587 132.072 412.4 128.834 402.097ZM137.338 395.287C148.49 407.238 157.307 400.258 165.234 400.054C171.377 399.897 165.547 402.172 155.368 403.118C163.077 410.684 160.451 412.332 154.348 403.459C147.959 404.426 139.781 401.389 137.338 395.287ZM134.617 395.968C135.637 399.489 136.658 403.003 137.679 406.523C137.168 396.118 140.767 405.597 141.08 409.247C142.067 420.728 131.766 402.138 134.617 395.968Z\",\n    fill: \"#939393\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.69 359.196C121.349 359.312 121.009 359.421 120.669 359.537C122.111 368.022 117.22 372.427 117.267 373.156C117.498 376.534 123.03 365.08 121.349 371.794C120.213 373.381 119.084 374.974 117.948 376.561C117.165 382.05 121.241 370.255 123.391 374.518C122.826 369.411 122.254 364.303 121.69 359.196Z\",\n    fill: \"black\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.731 379.624C120.043 377.751 127.092 390.206 132.576 392.562C125.105 385.262 124.439 379.985 123.731 379.624Z\",\n    fill: \"black\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M116.247 381.667C115.097 392.821 123.071 406.536 122.711 399.032C120.554 393.244 118.404 387.455 116.247 381.667Z\",\n    fill: \"black\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M127.473 398.01C127.929 399.372 128.378 400.734 128.834 402.096C132.072 412.399 134.95 415.586 134.277 408.565C134.079 406.529 123.561 381.367 127.473 398.01Z\",\n    fill: \"black\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M128.834 402.097C128.378 400.735 127.929 399.373 127.473 398.011C123.16 386.523 124.35 397.678 127.813 404.821C128.154 403.915 128.494 403.003 128.834 402.097Z\",\n    fill: \"black\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.339 395.287C139.781 401.389 147.959 404.426 154.348 403.459C160.451 412.332 163.077 410.684 155.368 403.118C165.547 402.172 171.378 399.897 165.234 400.054C157.308 400.258 148.49 407.238 137.339 395.287Z\",\n    fill: \"black\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.617 395.967C131.766 402.137 142.067 420.727 141.08 409.246C140.767 405.596 137.168 396.117 137.678 406.522C136.658 403.002 135.637 399.488 134.617 395.967Z\",\n    fill: \"black\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M92.2397 400.705C78.2811 402.162 37.6943 410.45 28.175 418.067C17.186 426.853 20.7737 456.45 18 469.773C23.9015 470.656 29.8105 471.532 35.712 472.415C43.0003 476.695 50.2811 480.967 57.5694 485.247L71.136 482.983C82.7129 488.463 94.9982 485.036 107.314 490.531C126.691 481.986 141.049 496.774 152.536 486.002C159.538 479.435 154.315 465.478 149.144 459.205C140.22 454.035 139.821 444.056 132.563 437.315C128.545 428.257 124.521 419.199 120.503 410.141C110.313 397.218 103.907 407.318 92.2397 400.705Z\",\n    fill: \"black\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.42 418.853C172.813 422.092 158.645 425.842 144.268 419.572C129.776 445.573 168.836 464.857 185.262 480.038C191.519 469.047 203.069 474.136 203.961 469.241C207.55 472.329 215.504 467.448 225.537 472.12C226.853 466.959 228.177 461.805 229.493 456.644C230.536 446.379 223.689 448.495 218.345 436.848C205.601 436.366 196.51 426.706 187.42 418.853ZM162.248 437.568C170.849 439.087 185.672 457.292 203.242 452.685C203.364 453.045 203.479 453.405 203.602 453.764C186.967 457.788 181.314 448.538 168.721 441.887C164.521 439.67 152.251 435.805 162.248 437.568ZM162.967 445.486C164.643 450.763 166.326 456.046 168.001 461.323C164.578 463.158 161.349 448.164 162.967 445.486ZM168.721 451.965C174.417 463.914 176.862 472.912 171.238 463.842C170.217 462.194 167.369 454.153 168.721 451.965ZM178.07 452.685C191.102 483.306 176.222 462.467 176.991 453.764L178.07 452.685ZM174.474 452.685C180.559 463.979 179.696 471.739 176.991 466.002C176.15 461.56 175.316 457.126 174.474 452.685ZM182.385 454.844C192.771 471.818 186.47 469.896 183.464 461.683C183.105 459.401 182.745 457.126 182.385 454.844Z\",\n    fill: \"black\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.248 437.568C152.251 435.805 164.521 439.67 168.721 441.887C181.314 448.539 186.967 457.789 203.602 453.765C203.479 453.405 203.364 453.045 203.242 452.685C185.672 457.292 170.849 439.087 162.248 437.568Z\",\n    fill: \"black\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.967 445.486C161.349 448.164 164.578 463.158 168.002 461.322C166.326 456.046 164.643 450.763 162.967 445.486Z\",\n    fill: \"black\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.721 451.965C167.369 454.154 170.217 462.194 171.238 463.842C176.862 472.912 174.417 463.914 168.721 451.965Z\",\n    fill: \"black\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M178.07 452.686L176.991 453.766C176.222 462.468 191.102 483.308 178.07 452.686Z\",\n    fill: \"black\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174.474 452.686C175.316 457.127 176.15 461.561 176.991 466.003C179.696 471.74 180.559 463.98 174.474 452.686Z\",\n    fill: \"black\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M182.385 454.844C182.745 457.126 183.105 459.401 183.464 461.683C186.47 469.896 192.771 471.818 182.385 454.844Z\",\n    fill: \"black\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M186.871 420.351C173.095 423.406 159.733 426.943 146.174 421.03C132.507 445.551 169.344 463.738 184.836 478.056C190.737 467.69 201.631 472.489 202.472 467.873C205.856 470.785 213.358 466.182 222.82 470.588C224.061 465.721 225.309 460.86 226.551 455.992C227.534 446.312 221.077 448.308 216.037 437.323C204.018 436.868 195.445 427.758 186.871 420.351ZM163.131 438.002C171.244 439.435 185.223 456.603 201.793 452.259C201.909 452.598 202.017 452.937 202.132 453.277C186.444 457.072 181.113 448.348 169.236 442.075C165.275 439.984 153.703 436.339 163.131 438.002ZM163.81 445.47C165.39 450.446 166.977 455.429 168.558 460.405C165.329 462.136 162.284 447.995 163.81 445.47ZM169.236 451.58C174.608 462.849 176.914 471.335 171.61 462.781C170.647 461.227 167.961 453.644 169.236 451.58ZM178.054 452.259C190.344 481.138 176.31 461.485 177.036 453.277L178.054 452.259ZM174.662 452.259C180.4 462.91 179.587 470.229 177.036 464.818C176.243 460.629 175.456 456.447 174.662 452.259ZM182.123 454.295C191.918 470.303 185.976 468.491 183.141 460.745C182.802 458.593 182.462 456.447 182.123 454.295Z\",\n    fill: \"#939393\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M163.132 438.004C153.703 436.34 165.275 439.986 169.236 442.077C181.113 448.35 186.444 457.073 202.133 453.278C202.017 452.939 201.909 452.599 201.793 452.26C185.223 456.605 171.244 439.436 163.132 438.004Z\",\n    fill: \"black\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M163.81 445.47C162.283 447.995 165.329 462.136 168.557 460.405C166.977 455.429 165.39 450.446 163.81 445.47Z\",\n    fill: \"black\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M169.236 451.579C167.961 453.643 170.647 461.226 171.61 462.781C176.914 471.335 174.608 462.849 169.236 451.579Z\",\n    fill: \"black\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M178.054 452.258L177.036 453.276C176.311 461.484 190.344 481.137 178.054 452.258Z\",\n    fill: \"black\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174.662 452.258C175.456 456.446 176.243 460.628 177.036 464.817C179.587 470.228 180.4 462.909 174.662 452.258Z\",\n    fill: \"black\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M182.123 454.295C182.462 456.448 182.802 458.593 183.141 460.745C185.976 468.491 191.918 470.303 182.123 454.295Z\",\n    fill: \"black\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M214.03 473.561C210.398 473.468 190.778 476.649 189.217 479.68C188.225 481.602 191.145 503.398 192.094 505.594C195.417 513.274 209.995 509.301 216.907 512.432C228.601 510.323 234.333 507.386 242.798 517.471C248.911 516.629 255.024 515.794 261.137 514.951C261.49 495.53 262.59 488.908 244.236 479.32C233.844 482.127 223.494 473.799 214.03 473.561ZM205.399 487.238C206.838 487.72 208.276 488.195 209.715 488.678C210.901 488.764 229.14 488.534 228.054 490.477C213.828 491.435 198.617 486.878 205.399 487.238ZM255.743 494.436L255.743 495.876C232.937 500.958 234.635 498.647 255.743 494.436ZM203.242 494.436C212.138 505.039 215.785 514.412 208.636 506.313L203.242 494.436ZM209.715 495.876C210.908 497.503 217.108 507.148 215.468 508.113C213.318 507.516 208.47 496.509 209.715 495.876ZM198.927 495.876C209.513 508.401 208.082 513.03 202.163 504.154C201.084 501.397 200.005 498.633 198.927 495.876ZM195.331 495.876C198.107 502.102 202.422 506.853 200.365 507.393C198.999 507.393 193.741 497.92 195.331 495.876ZM215.468 499.475C216.784 500.792 218.108 502.117 219.424 503.434C225.479 512.144 216.64 506.011 215.468 499.475ZM226.975 503.074C230.104 503.772 226.652 506.112 226.616 506.313C226.853 507.271 227.098 508.235 227.335 509.193C225.249 512.533 224.156 502.448 226.975 503.074Z\",\n    fill: \"black\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.399 487.238C198.617 486.878 213.828 491.435 228.054 490.477C229.14 488.534 210.901 488.764 209.714 488.678C208.276 488.195 206.838 487.72 205.399 487.238Z\",\n    fill: \"black\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M255.743 494.436C234.634 498.647 232.937 500.958 255.743 495.876L255.743 494.436Z\",\n    fill: \"black\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.242 494.436L208.636 506.313C215.784 514.411 212.138 505.039 203.242 494.436Z\",\n    fill: \"black\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M209.715 495.875C208.471 496.509 213.318 507.515 215.468 508.113C217.108 507.148 210.909 497.502 209.715 495.875Z\",\n    fill: \"black\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M198.926 495.875C200.005 498.632 201.084 501.397 202.163 504.154C208.082 513.029 209.513 508.401 198.926 495.875Z\",\n    fill: \"black\"\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M195.33 495.875C193.741 497.92 198.998 507.393 200.365 507.393C202.421 506.853 198.106 502.102 195.33 495.875Z\",\n    fill: \"black\"\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M215.468 499.475C216.64 506.011 225.479 512.144 219.423 503.434C218.107 502.117 216.784 500.793 215.468 499.475Z\",\n    fill: \"black\"\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M226.975 503.073C224.156 502.447 225.249 512.532 227.335 509.192C227.097 508.234 226.853 507.27 226.616 506.312C226.651 506.111 230.104 503.771 226.975 503.073Z\",\n    fill: \"black\"\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M214.808 474.94C211.29 474.849 192.287 477.931 190.775 480.866C189.814 482.728 192.642 503.839 193.562 505.966C196.78 513.405 210.9 509.556 217.594 512.589C228.92 510.546 234.472 507.702 242.671 517.469C248.592 516.654 254.513 515.845 260.434 515.029C260.775 496.219 261.841 489.804 244.064 480.518C233.999 483.237 223.975 475.17 214.808 474.94ZM206.449 488.187C207.842 488.654 209.235 489.114 210.628 489.581C211.777 489.665 229.443 489.442 228.391 491.324C214.613 492.252 199.88 487.838 206.449 488.187ZM255.21 495.159L255.21 496.553C233.121 501.476 234.765 499.238 255.21 495.159ZM204.359 495.159C212.976 505.429 216.507 514.506 209.583 506.663L204.359 495.159ZM210.628 496.553C211.784 498.129 217.789 507.472 216.201 508.406C214.118 507.827 209.423 497.167 210.628 496.553ZM200.179 496.553C210.433 508.685 209.047 513.168 203.314 504.571C202.269 501.901 201.224 499.224 200.179 496.553ZM196.696 496.553C199.385 502.584 203.565 507.186 201.572 507.709C200.249 507.709 195.157 498.533 196.696 496.553ZM216.201 500.039C217.476 501.315 218.757 502.598 220.032 503.874C225.897 512.31 217.336 506.37 216.201 500.039ZM227.346 503.525C230.376 504.202 227.033 506.468 226.998 506.663C227.228 507.59 227.465 508.524 227.694 509.452C225.674 512.687 224.616 502.919 227.346 503.525Z\",\n    fill: \"#939393\"\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M206.448 488.187C199.879 487.838 214.612 492.251 228.391 491.324C229.443 489.442 211.777 489.665 210.628 489.581C209.235 489.114 207.841 488.654 206.448 488.187Z\",\n    fill: \"#939393\"\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M255.21 495.16C234.765 499.239 233.121 501.477 255.21 496.554L255.21 495.16Z\",\n    fill: \"#939393\"\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.359 495.16L209.583 506.664C216.507 514.507 212.975 505.43 204.359 495.16Z\",\n    fill: \"#939393\"\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M210.628 496.554C209.423 497.168 214.118 507.828 216.2 508.407C217.789 507.472 211.784 498.13 210.628 496.554Z\",\n    fill: \"#939393\"\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200.179 496.554C201.224 499.225 202.269 501.902 203.314 504.572C209.047 513.169 210.433 508.686 200.179 496.554Z\",\n    fill: \"#939393\"\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.696 496.554C195.157 498.534 200.249 507.71 201.572 507.71C203.565 507.187 199.385 502.585 196.696 496.554Z\",\n    fill: \"#939393\"\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M216.2 500.038C217.336 506.369 225.897 512.309 220.031 503.873C218.757 502.597 217.475 501.314 216.2 500.038Z\",\n    fill: \"#939393\"\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.346 503.526C224.615 502.919 225.674 512.687 227.694 509.452C227.464 508.525 227.227 507.591 226.998 506.663C227.032 506.468 230.376 504.202 227.346 503.526Z\",\n    fill: \"#939393\"\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M207.197 539.065L233.089 539.065C229.708 532.45 224.264 532.982 218.705 526.468C209.118 507.572 207.852 517.686 191.735 516.03C183.759 530.981 192.389 528.671 198.207 531.867C201.207 534.264 204.198 536.668 207.197 539.065Z\",\n    fill: \"#939393\"\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.521 539.065L68.392 539.065C73.8867 534.523 80.9204 534.221 86.3719 539.065L179.867 539.065C178.364 531.334 185.441 534.141 186.34 539.065C187.671 539.511 188.232 539.324 188.498 539.065C190.08 537.532 183.758 531.111 183.097 521.739C182.917 519.212 183.19 517.103 183.463 515.671C169.921 504.743 150.632 510.567 135.637 502.354L90.3275 498.035C80.9779 495.638 71.6284 493.233 62.2788 490.836C50.0525 489.404 29.541 490.57 23.8018 503.433C18.1705 516.045 25.8371 526.245 24.521 539.065Z\",\n    fill: \"#939393\"\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M179.867 539.066L186.34 539.066C185.441 534.142 178.364 531.335 179.867 539.066Z\",\n    fill: \"black\"\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.3924 539.064L86.3723 539.064C80.9208 534.22 73.8871 534.522 68.3924 539.064Z\",\n    fill: \"black\"\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M91.8023 402.336C78.4828 403.725 39.7541 411.629 30.6706 418.892C20.1847 427.271 23.6081 455.495 20.9614 468.2C26.5928 469.042 32.2313 469.877 37.8626 470.72C44.8172 474.801 51.7646 478.875 58.7193 482.957L71.6648 480.797C82.7117 486.023 94.4346 482.755 106.186 487.996C124.677 479.847 138.377 493.949 149.338 483.677C156.019 477.414 151.035 464.104 146.102 458.123C137.586 453.192 137.205 443.676 130.279 437.247C126.446 428.61 122.606 419.972 118.772 411.334C109.049 399.01 102.935 408.641 91.8023 402.336Z\",\n    fill: \"#939393\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M-0.00012207 516L1441 516L1441 839L-0.000121644 839L-0.00012207 516Z\",\n    fill: \"#718B34\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1200.67 66.7582L1182.43 496.767C874.298 496.862 566.167 496.967 258.036 497.062C572.256 353.621 886.465 210.19 1200.67 66.7582Z\",\n    fill: \"#7B52AC\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M596.189 450.663C601.566 442.707 607.04 433.954 612.387 424.378C618.382 413.641 623.372 403.368 627.562 393.789C629.996 394.166 633.471 394.346 636.968 392.99C645.649 389.617 648.002 379.269 649.965 374.108C653.357 365.152 662.397 353.784 687.407 343.617C687.616 340.333 688.633 333.996 693.808 328.822C695.742 326.899 698.691 323.948 702.173 324.242C706.091 324.578 707.668 328.774 711.793 333.606C714.561 336.842 719.176 341.186 726.997 345.057C726.762 346.588 725.769 351.633 720.946 355.792C715.415 360.566 708.782 360.747 707.288 360.756C708.116 362.388 709.108 364.764 709.629 367.731C711.346 377.62 706.22 385.46 704.545 387.955C699.167 395.931 691.489 399.547 688.251 400.86C691.339 399.646 699.252 396.077 704.545 387.955C712.611 375.575 708.037 362.714 707.3 360.756C708.794 360.747 715.426 360.566 720.957 355.792C725.78 351.634 726.773 346.578 727.008 345.057C728.54 341.246 737.507 319.851 756.61 316.435C758.555 316.091 760.718 315.906 763.106 316.004C764.113 311.482 766.526 303.821 772.932 296.304C775.76 292.981 780.921 286.024 784.984 287.021C787.755 287.694 787.619 291.441 790.538 295.471C794.216 300.557 800.71 303.232 808.075 304.527C819.913 325.446 831.762 346.375 843.6 367.293C846.744 373.471 850.47 377.257 853.382 379.615C856.229 381.92 859.562 383.849 860.085 387.349C860.501 390.129 858.672 390.702 858.761 392.878C859.049 399.754 877.672 400.6 884.139 412.048C885.669 414.757 886.093 417.301 886.241 418.791C862.663 443.883 838.039 455.793 823.751 461.406C814.876 464.896 763.807 484.124 708.036 469.362C682.586 462.623 668.995 452.203 634.926 449.638C618.776 448.422 605.282 449.516 596.222 450.684L596.189 450.663Z\",\n    fill: \"#7B52AC\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M704.545 387.955C706.22 385.46 711.346 377.62 709.629 367.731C709.108 364.764 708.116 362.388 707.288 360.756C708.782 360.747 715.415 360.566 720.946 355.792C725.769 351.633 726.762 346.588 726.997 345.057C719.176 341.186 714.561 336.842 711.793 333.606C707.668 328.774 706.091 324.578 702.173 324.242C698.691 323.948 695.742 326.899 693.808 328.822C688.633 333.996 687.616 340.333 687.407 343.617C662.397 353.784 653.357 365.152 649.965 374.108C648.002 379.269 645.649 389.617 636.968 392.99C633.471 394.346 629.996 394.166 627.562 393.789C623.372 403.368 618.382 413.641 612.387 424.378C607.04 433.954 601.566 442.707 596.189 450.663L596.222 450.684C605.282 449.516 618.776 448.422 634.926 449.638C668.995 452.203 682.586 462.623 708.036 469.362C763.807 484.124 814.876 464.896 823.751 461.406C838.039 455.793 862.663 443.883 886.241 418.791C886.093 417.301 885.669 414.757 884.139 412.048C877.672 400.6 859.049 399.754 858.761 392.878C858.672 390.702 860.501 390.129 860.085 387.349C859.562 383.849 856.229 381.92 853.382 379.615C850.47 377.257 846.744 373.471 843.6 367.293C831.762 346.375 819.913 325.446 808.075 304.527C800.71 303.232 794.216 300.557 790.538 295.471C787.619 291.441 787.755 287.694 784.984 287.021C780.921 286.024 775.76 292.981 772.932 296.304C766.526 303.821 764.113 311.482 763.106 316.004C760.718 315.906 758.555 316.091 756.61 316.435C737.507 319.851 728.54 341.246 727.008 345.057C726.773 346.578 725.78 351.634 720.957 355.792C715.426 360.566 708.794 360.747 707.3 360.756C708.037 362.714 712.611 375.575 704.545 387.955ZM704.545 387.955C699.167 395.931 691.489 399.547 688.251 400.86C691.339 399.646 699.252 396.077 704.545 387.955Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M700.482 349.993C699.305 354.859 697.588 360.377 695.059 366.281C691.34 374.981 686.892 382.091 682.862 387.594\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M676.437 370.977C675.621 371.794 674.191 373.445 673.405 375.903C672.695 378.127 672.828 380.027 672.991 381.108\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M669.168 371.374C668.285 372.477 667.169 374.126 666.349 376.307C665.441 378.721 665.251 380.858 665.255 382.293\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M667.449 364.304C665.633 366.077 663.418 368.608 661.454 371.955C659.214 375.787 658.131 379.313 657.578 381.87\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M651.36 413.786C648.065 419.464 644.583 423.168 641.925 425.553C639.986 427.281 638.314 428.474 637.554 430.841C636.44 434.295 638.559 436.241 637.895 439.676C637.536 441.521 636.321 444.05 632.36 446.736\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M656.168 420.549C654.587 422.021 652.622 424.159 650.878 427.021C649.016 430.064 648.049 432.865 647.512 434.951\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M679.45 408.768C678.894 408.927 677.462 409.399 676.303 410.688C675.227 411.878 674.957 413.121 674.881 413.651\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M718.693 417.295C716.415 419.711 714.042 422.576 711.786 425.925C706.419 433.902 703.793 441.556 702.438 447.319\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M739.678 371.758C738.369 374.417 736.22 377.913 732.735 381.391C730.778 383.335 728.825 384.858 727.074 386.049\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M732.928 364.158C733.187 363.509 733.967 361.83 735.908 360.634C737.126 359.889 738.304 359.626 739.026 359.523C739.098 356.942 739.677 351.218 743.924 345.619C746.2 342.618 748.799 340.632 750.742 339.395\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M776.135 312.231C772.803 313.685 771.38 315.438 770.695 316.69C768.698 320.334 771.211 322.865 769.01 326.872C767.976 328.749 767.243 328.523 764.654 331.761C762.818 334.056 761.632 336.114 760.931 337.467\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M770.678 335.337C770.733 335.974 770.779 337.482 769.877 339.127C768.939 340.833 767.514 341.725 766.919 342.047\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M802.027 331.213C802.428 338.697 805.067 342.093 807.498 343.802C810.082 345.617 811.6 344.943 814.198 346.995C817.614 349.716 817.683 353.039 819.697 358.785C820.674 361.57 822.326 365.543 825.212 370.175\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M801.718 353.262C802.051 354.286 802.534 355.827 803.038 357.717C803.868 360.836 803.757 361.11 804.197 361.963C805.676 364.824 808.496 364.791 810.39 366.751C811.84 368.248 812.948 371.129 811.11 377.196\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M814.946 386.531C815.019 387.302 815.378 389.772 817.605 391.824C819.039 393.145 820.624 393.703 821.48 393.942\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M464.682 471.623C468.104 472.314 492.033 477.021 518.166 474.563C552.48 471.343 552.794 459.338 589.328 451.886C599.907 449.725 632.185 444.141 669.302 452.142C688.122 456.202 693.031 460.482 715.428 464.684C737.647 468.85 756.473 469.066 768.899 468.608C770.15 461.714 773.14 452.092 781.531 447.706C793.002 441.717 803.682 454.669 823.942 453.726C834.09 453.245 844.409 447.11 865.06 434.83C890.957 419.44 887.956 414.588 902.871 405.314C904.847 404.078 910.094 400.937 910.405 396.404C910.579 393.795 908.964 393.114 908.892 389.545C908.815 385.801 910.569 385.123 911.427 380.391C912.37 375.159 910.498 374.44 911.734 371.974C913.163 369.113 916.416 368.601 926.903 365.587C939.966 361.826 939.797 361.227 942.886 361.222C945.817 361.223 952.467 361.781 960.224 367.73C969.597 362.604 977.341 361.522 983.698 362.419C1039.95 370.359 1050.14 541.279 1051.18 560.836C910.206 556.257 769.217 552.016 628.226 548.134C504.064 544.718 379.893 541.569 255.699 538.696C253.228 533.777 249.983 528.212 245.749 522.372C240.809 515.559 235.688 510.011 231.097 505.627C250.715 496.445 270.321 487.263 289.938 478.08C296.52 479.599 305.71 481.028 316.707 480.663C325.972 480.352 333.786 478.861 339.683 477.306C349.736 474.783 359.789 472.259 369.843 469.735C373.014 467.149 376.185 464.564 379.357 461.978C381.333 455.822 384.94 453.926 386.264 453.348C386.971 453.04 388.154 452.623 393.085 452.291C396.767 452.047 399.987 451.82 404.334 452.107C408.546 452.381 414.582 453.167 422.221 455.566C434.979 459.577 436.366 463.112 449.029 467.561C454.906 469.624 459.342 470.528 464.705 471.613L464.682 471.623Z\",\n    fill: \"black\"\n  })), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1023.94 561.794L1136.34 564.979C1149.75 548.712 1156.1 529.293 1148.22 516.236C1135.97 495.931 1094.4 499.386 1069.81 510.027C1036.56 524.399 1025.93 555.536 1023.94 561.794Z\",\n    fill: \"#409519\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1440.96 319.59C1445.05 357.736 1444.71 388.478 1443.61 409.604C1441.62 447.864 1437.47 449.223 1439.54 473.247C1441.69 498.351 1445.95 514.329 1441.69 541.034C1439.65 553.83 1436.31 564.14 1433.73 570.976L1136.81 562.563C1137.39 554.533 1151.34 400.215 1288.88 339.308C1351.31 311.668 1411.36 315.594 1440.97 319.601L1440.96 319.59Z\",\n    fill: \"#7E7B74\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1198.63 521.838C1220.46 518.131 1229.16 518.48 1244.03 515.252C1253.31 513.239 1251.54 512.748 1259.37 511.258C1274.25 508.42 1283.26 509.69 1295.75 509.542C1304.68 509.436 1314.05 508.01 1332.79 505.148C1365.83 500.108 1365.7 497.173 1382.36 496.558C1396.85 496.026 1413.21 495.639 1427.15 505.311C1430.09 507.352 1439.33 513.764 1442.28 524.457C1444.08 530.997 1442.43 535.152 1440.91 547.42C1439.75 556.839 1439.42 565.009 1439.4 571.436L1173.08 563.89C1174.46 561.11 1176.6 556.896 1179.38 551.767C1182.75 545.549 1183.31 544.898 1183.81 542.801C1185.56 535.347 1181.16 531.911 1183.18 527.807C1184.81 524.501 1189.3 523.408 1198.64 521.828L1198.63 521.838Z\",\n    fill: \"black\"\n  })), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1299.6 291.427C1299.67 291.469 1299.95 291.662 1300.32 291.642C1303.68 291.409 1308.52 273.279 1303.86 266.946C1292.06 250.907 1206.41 295.634 1198.78 284.47C1196.93 281.752 1203.05 273.899 1215.32 258.184C1230.58 238.628 1236.96 235.928 1240.18 234.851C1242.78 233.981 1247.12 232.926 1265.86 235.743C1302.15 241.179 1318.23 249.978 1325.53 254.552C1334.8 260.35 1337.15 263.871 1337.96 267.205C1340.16 276.216 1331.24 284.338 1334.85 287.977C1335.69 288.82 1336.8 289.026 1343.79 288.824C1353.08 288.555 1359.15 287.947 1363.58 287.714C1369.32 287.405 1368.77 287.913 1381.14 288.212C1399.69 288.655 1398.03 287.45 1403.99 288.326C1408.1 288.935 1421 290.828 1429.94 299.753C1433.66 303.456 1436.69 308.391 1437.76 310.133C1438.46 311.26 1440.83 315.202 1442.48 319.287C1445.04 325.664 1445.12 331.345 1445.15 342.427C1445.19 354.288 1445.2 362.14 1445.19 365.287C1436.62 361.61 1428.04 357.933 1419.47 354.266C1400.82 368.816 1386.6 370.966 1377.15 370.319C1358.28 369.016 1344.7 355.623 1326.69 356.701C1324.78 356.821 1319.08 357.316 1315.33 354.124C1312.21 351.463 1311.7 347.328 1311.73 344.397C1312.13 350.179 1311.67 357.782 1307.88 365.548C1301.06 379.531 1286.93 388.674 1286.4 388.208C1285.9 387.763 1294.08 374.925 1305.37 374.036C1311.28 373.568 1313.03 376.774 1321.68 376.64C1328.54 376.527 1330.14 374.471 1336.43 373.85C1344.37 373.07 1349.54 375.585 1357.36 378.184C1369.85 382.341 1370.63 380.61 1388.75 384.958C1415.64 391.408 1429.09 394.639 1435.75 401.665C1442.01 408.27 1443.08 421.831 1445.21 448.943C1446.78 468.945 1445.23 474.498 1441.04 477.352C1434.8 481.614 1428.97 475.616 1415.17 479.827C1410.61 481.215 1405.36 484.131 1394.88 489.944C1384.81 495.522 1385.13 496.115 1382.33 496.538C1375.39 497.602 1371.49 494.314 1359.7 495.251C1359.5 495.266 1358.09 495.431 1355.29 495.772C1340.57 497.538 1333.14 498.424 1330.1 498.8C1320.98 499.915 1316.42 500.472 1315.98 500.542C1308.73 501.618 1308.11 502 1305.39 501.851C1299.69 501.526 1298.25 499.599 1292 499.124C1288.73 498.878 1286.87 499.225 1283.2 499.613C1283.2 499.613 1275.62 500.403 1263.4 500.251C1253.29 500.129 1233.06 495.927 1228.11 483.609C1224.19 473.842 1231.45 462.926 1234.3 458.65C1237.19 454.314 1238.67 453.843 1246.47 446.161C1251.07 441.627 1260.6 432.169 1268.47 421.117C1273.32 414.294 1282.99 399.202 1280.32 397.251C1278.34 395.811 1269.29 401.346 1264.21 409.228C1260.52 414.946 1260.28 419.798 1259.61 423.008C1254.94 445.437 1215.18 458.159 1193.08 479.951C1189.72 483.269 1187.39 486.176 1185.69 489.9C1182.76 496.337 1183.98 500.236 1182.08 508.516C1181.27 512.275 1179.79 517.102 1176.9 522.279C1162.84 547.394 1128.44 557.326 1124.81 552.887C1121.73 549.13 1140.28 534.618 1135.65 528.593C1133.86 526.267 1129.2 525.991 1121.12 525.506C1117.14 525.27 1113.62 525.058 1109.74 525.727C1098.06 527.723 1095.85 535.358 1083.08 540.47C1077.25 542.806 1077.02 541.498 1068.31 543.793C1044.09 550.19 1038.19 562.365 1029.81 559.503C1020.74 556.407 1023.6 540.702 1011.48 536.484C1009.04 535.636 1009.36 536.762 1000.68 535.573C965.613 530.745 969.86 527.309 928.105 520.539C857.289 509.061 829.094 516.34 825.654 506.566C817.25 482.649 978.902 419.103 983.641 362.408C983.977 358.451 984.313 345.216 994.188 338.331C1005.58 330.392 1024.01 334.85 1037.81 339.854C1038.11 332.164 1039.95 321.659 1048.23 315.292C1063.61 303.457 1086.1 317.585 1118.48 313.264C1145.03 309.732 1138.88 299.03 1173.3 288.514C1233.2 270.213 1296.04 289.111 1299.56 291.395L1299.6 291.427Z\",\n    fill: \"black\"\n  })), _path92 || (_path92 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M681.634 126.098C682.25 124.906 682.865 123.447 683.486 121.804C683.279 121.942 683.051 122.038 682.834 122.134C682.46 123.466 682.075 124.788 681.634 126.098Z\",\n    fill: \"white\"\n  })), _path93 || (_path93 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M717.892 135.823C717.698 135.295 717.526 134.767 717.366 134.229C717.379 134.486 717.392 134.753 717.405 135.01C717.532 135.833 717.683 136.617 717.835 137.379C717.843 136.857 717.873 136.345 717.892 135.823Z\",\n    fill: \"white\"\n  })), _path94 || (_path94 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M516.874 351.039C514.568 355.453 514.119 360.381 512.213 364.899C512.673 364.604 513.156 364.29 513.651 363.976C514.248 358.683 515.399 354.513 516.885 351.029L516.874 351.039Z\",\n    fill: \"white\"\n  })), _path95 || (_path95 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M528.502 334.529C531.642 330.63 534.554 326.223 536.402 319.602C536.169 320.139 535.891 320.674 535.579 321.209C535.004 322.197 534.331 323.101 533.592 323.971C532.42 327.772 530.622 331.216 528.502 334.529Z\",\n    fill: \"white\"\n  })), _path96 || (_path96 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M919.742 160.221C919.801 160.448 920.65 161.508 921.744 162.912C921.369 161.795 921.018 160.657 920.712 159.49C920.457 158.489 920.213 157.477 919.991 156.467C919.914 158.596 919.613 159.756 919.742 160.231L919.742 160.221Z\",\n    fill: \"white\"\n  })), _path97 || (_path97 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M925.544 171.165L904.916 151.084C878.091 148.202 879.747 127.399 877.728 126.737C862.576 138.495 868.083 146.688 867.389 148.483C844.627 167.232 849.838 131.482 848.128 122.31C846.691 114.612 825.805 123.472 826.066 142.187C812.628 146.388 804.231 172.791 786.596 162.082C762.863 161.553 764.836 166.58 751.577 183.128C758.256 189.981 764.924 196.832 771.604 203.685C778.48 192.799 791.894 189.273 800.546 179.903C801.101 180.093 801.656 180.273 802.21 180.463C797.496 186.264 791.668 192.711 783.196 193.762C779.496 197.584 775.808 201.415 772.109 205.237C779.799 216.699 770.847 234.292 790.678 234.977C792.54 235.952 790.038 239.592 783.835 237.858C769.994 233.991 775.341 215.773 770.949 206.229C767.817 199.426 748.686 188.479 743.405 176.234C738.409 181.115 738.063 173.059 737.365 172.475C729.312 165.738 714.268 172.395 711.505 157.904C712.156 165.611 712.819 173.317 713.47 181.024C686.43 194.506 695.541 211.995 682.769 191.429C681.931 188.843 681.082 186.256 680.244 183.67C668.343 187.597 661.251 196.98 651.974 204.395L649.656 206.38C644.932 214.58 636.416 218.059 627.729 221.011C627.509 221.19 627.289 221.368 627.047 221.535C624.096 223.635 620.713 224.615 617.136 225.078C613.68 227.471 610.159 229.79 606.812 232.268C605.473 233.266 604.145 234.274 602.827 235.302C601.355 237.793 600.337 240.767 599.978 244.447C599.61 244.693 599.252 244.939 598.907 245.175C597.346 248.862 592.973 252.08 587.834 254.733C583.287 259.309 579.637 262.691 567.793 265.062C566.35 281.534 547.713 288.797 540.609 302.219C543.039 331.983 523.62 340.033 519.857 347.758C518.141 353.86 516.414 359.961 514.698 366.063C513.869 367.239 511.335 368.982 508.582 370.554C506.172 373.202 503.087 375.267 499.769 376.957C499.767 377.008 499.753 377.069 499.74 377.12C642.726 309.93 785.723 242.75 928.708 175.56C927.524 174.153 926.477 172.688 925.555 171.175L925.544 171.165ZM629.54 249.887C630.19 258.875 620.799 266.328 613.05 270.946C618.95 263.436 625.792 259.058 629.54 249.887ZM590.371 292.343L609.61 272.899C609.782 273.416 609.943 273.934 610.115 274.451C600.137 286.295 590.159 298.149 580.182 309.992C583.574 304.112 586.979 298.223 590.371 292.343ZM543.237 337.647C543.384 338.851 543.52 340.044 543.667 341.247C541.788 346.596 525.184 353.506 543.237 337.647ZM549.033 332.686C551.797 323.713 554.55 314.73 557.314 305.757C569.01 296.073 571.563 280.852 583.844 271.144C578.453 280.391 573.063 289.628 567.672 298.875C551.063 309.957 561.621 319.153 549.033 332.686ZM611.761 290.899C603.616 298.694 595.47 306.5 587.325 314.295L583.455 328.024C573.924 347.353 576.768 330.018 587.325 314.295C587.763 312.432 588.213 310.558 588.652 308.695C602.254 298.153 619.167 277.209 611.761 290.899ZM642.74 242.061C635.64 256.621 630.11 271.84 616.005 282.306C612.756 281.486 621.879 274.6 622.493 273.777C629.246 263.205 635.987 252.633 642.74 242.061L646.498 231.404C656.751 210.148 663.123 208.483 642.74 242.061ZM725.196 213.645C724.546 203.448 721.032 194.174 717.266 184.719C724.357 192.598 727.618 203.576 725.196 213.645ZM707.771 229.553C710.911 235.208 710.226 241.39 709.922 247.552C712.092 256.132 717.589 258.451 718.45 260.094C723.773 270.26 703.524 259.795 707.771 229.553ZM725.121 215.693C728.03 214.453 726.674 227.936 730.489 237.884C734.925 244.673 739.349 251.461 743.785 258.25C729.672 246.748 723.663 233.222 725.121 215.693ZM741.091 239.722C743.815 242.024 746.539 244.315 749.263 246.617C757.743 259.219 747.541 253.805 741.091 239.722ZM815.223 162.381C804.995 181.393 797.187 174.703 815.914 158.812C815.68 160.005 815.457 161.188 815.223 162.381ZM881.956 164.784C884.938 170.168 887.932 175.542 890.914 180.926C897.192 200.314 877.712 166.601 881.956 164.784ZM906.152 178.795C900.09 170.423 894.038 162.051 887.976 153.679C893.645 156.833 910.096 177.513 906.152 178.795Z\",\n    fill: \"#A68FC8\"\n  })), _path98 || (_path98 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M538.442 301.524C537.805 303.587 537.482 305.659 537.632 307.734C537.75 309.408 537.849 311.03 537.813 312.608C538.246 309.381 538.48 305.718 538.442 301.524Z\",\n    fill: \"white\"\n  })), _path99 || (_path99 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M393.062 452.302C405.538 457.247 410.152 454.539 412.059 454.89C429.259 458.104 453.996 473.299 452.28 476.018C449.444 476.789 446.608 477.57 443.773 478.34C443.222 478.037 442.183 467.716 439.621 468.997C446.714 495.009 417.843 474.612 427.057 474.791C428.409 484.199 429.77 473.976 432.629 475.974C433.417 476.529 433.624 485.935 436.032 475.045C439.924 485.345 439.189 470.983 437.34 469.957C436.459 469.471 435.547 474.776 431.581 473.894C428.303 471.413 425.024 468.922 421.746 466.44C410.256 463.378 398.755 460.325 387.266 457.263C396.579 464.579 393.809 463.547 397.888 473.965C395.499 457.23 400.086 460.168 401.796 474.588C395.319 476.66 390.289 469.239 380.704 467.84C383.241 459.845 383.966 455.673 393.062 452.302Z\",\n    fill: \"#939393\"\n  })), _path100 || (_path100 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M402.748 463.845C407.96 461.973 407.328 484.229 408.32 465.028C413.128 466.527 417.947 468.037 422.755 469.537C423.34 487.071 427.601 475.537 404.582 475.172C403.967 471.393 403.363 467.624 402.748 463.845Z\",\n    fill: \"#939393\"\n  })), _path101 || (_path101 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M815.911 158.808C815.676 160 815.454 161.183 815.219 162.376C804.992 181.387 797.184 174.698 815.911 158.808Z\",\n    fill: \"black\"\n  })), _path102 || (_path102 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M881.954 164.773C884.935 170.157 887.929 175.531 890.911 180.915C897.189 200.303 877.71 166.591 881.954 164.773Z\",\n    fill: \"black\"\n  })), _path103 || (_path103 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M887.974 153.671C893.643 156.825 910.093 177.505 906.15 178.787C900.088 170.415 894.037 162.043 887.974 153.671Z\",\n    fill: \"black\"\n  })), _path104 || (_path104 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M717.263 184.714C724.354 192.593 727.615 203.571 725.193 213.64C724.543 203.443 721.029 194.17 717.263 184.714Z\",\n    fill: \"black\"\n  })), _path105 || (_path105 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M725.119 215.691C728.027 214.451 726.671 227.933 730.486 237.881C734.922 244.67 739.346 251.458 743.781 258.246C729.669 246.745 723.66 233.219 725.119 215.691Z\",\n    fill: \"black\"\n  })), _path106 || (_path106 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M642.738 242.053L646.495 231.397C656.748 210.141 663.12 208.476 642.738 242.053Z\",\n    fill: \"black\"\n  })), _path107 || (_path107 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M707.768 229.553C710.908 235.208 710.234 241.391 709.919 247.552C712.088 256.132 717.585 258.451 718.446 260.094C723.769 270.26 703.521 259.795 707.768 229.553Z\",\n    fill: \"black\"\n  })), _path108 || (_path108 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M741.089 239.718C743.812 242.019 746.536 244.31 749.26 246.612C757.74 259.214 747.538 253.8 741.089 239.718Z\",\n    fill: \"black\"\n  })), _path109 || (_path109 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M642.737 242.059C635.637 256.618 630.107 271.837 616.003 282.303C612.754 281.483 621.876 274.597 622.49 273.774C629.243 263.202 635.984 252.63 642.737 242.059Z\",\n    fill: \"black\"\n  })), _path110 || (_path110 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M629.536 249.884C630.185 258.871 620.795 266.324 613.046 270.942C618.946 263.432 625.788 259.054 629.536 249.884Z\",\n    fill: \"black\"\n  })), _path111 || (_path111 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M583.841 271.147C578.45 280.394 573.06 289.63 567.67 298.878C551.061 309.959 561.619 319.156 549.031 332.689C551.794 323.716 554.548 314.732 557.312 305.759C569.007 296.076 571.561 280.854 583.841 271.147Z\",\n    fill: \"black\"\n  })), _path112 || (_path112 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M609.605 272.897C609.777 273.415 609.938 273.932 610.11 274.449C600.133 286.293 590.155 298.147 580.178 309.99C583.57 304.11 586.974 298.22 590.367 292.341L609.605 272.897Z\",\n    fill: \"black\"\n  })), _path113 || (_path113 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M587.321 314.295C587.759 312.432 588.209 310.559 588.648 308.695C602.25 298.154 619.162 277.21 611.756 290.899C603.611 298.695 595.466 306.5 587.321 314.295Z\",\n    fill: \"black\"\n  })), _path114 || (_path114 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M587.321 314.292L583.451 328.021C573.92 347.349 576.764 330.015 587.321 314.292Z\",\n    fill: \"black\"\n  })), _path115 || (_path115 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M543.233 337.643C543.38 338.847 543.516 340.039 543.663 341.243C541.784 346.591 525.183 353.5 543.233 337.643Z\",\n    fill: \"black\"\n  })), _path116 || (_path116 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M651.973 204.392C663.128 186.124 672.592 185.593 683.907 175.57C684.461 175.76 685.016 175.94 685.571 176.13C686.434 177.702 679.943 184.796 689.929 195.217C703.075 179.619 717.683 186.163 706.287 162.366C710.476 138.96 716.707 161.8 719.17 163.244C725.667 164.627 732.176 166.001 738.672 167.384C740.553 163.532 731.526 161.339 730.501 160.49C709.914 143.577 715.477 116.048 712.79 107.197C710.646 104.4 708.501 101.612 706.357 98.8144C705.627 97.5842 701.786 77.2714 690.464 103.489C685.068 115.986 691.499 124.727 666.609 141.766C664.058 167.689 661.873 168.468 642.566 185.162C647.822 198.114 620.605 228.156 649.654 206.377C637.917 226.771 602.592 217.969 599.977 244.434C584.591 254.597 587.182 261.17 567.78 265.048C566.338 281.521 547.7 288.783 540.596 302.205C543.027 331.97 523.608 340.02 519.845 347.745C518.129 353.847 516.402 359.948 514.686 366.05C511.523 370.542 483.56 383.158 513.638 363.97C517.147 333.02 539.236 340.442 538.427 300.093C546.998 286.18 563.134 280.057 565.611 262.936C585.411 258.003 581.575 253.548 596.648 243.315C600.908 218.578 632.57 220.028 634.715 215.692C633.663 203.269 643.93 197.368 640.36 184.075C658.519 167.44 661.79 165.821 664.402 140.678C669.803 136.393 675.193 132.097 680.594 127.811C685.568 121.043 689.854 94.0518 698.261 89.872C706.896 85.5859 705.413 95.4562 716.156 107.293C716.571 116.53 716.976 125.767 717.392 135.004C721.292 159.86 739.786 156.232 743.309 163.415C746.159 179.815 747.617 185.433 758.829 168.98C760.458 165.264 762.098 161.559 763.727 157.843C764.673 156.527 769.891 154.789 777.244 141.313C782.86 141.903 792.665 143.738 796.13 146.973C804.978 148.546 809.445 143.394 807.217 135.499C812.748 127.63 818.269 119.75 823.8 111.88C819.02 119.771 814.24 127.672 809.46 135.563C809.707 168.843 773.046 127.089 775.095 154.065C772.431 155.353 769.756 156.651 767.093 157.939C762.767 163.833 770.155 159.584 770.963 159.586C780.678 160.2 790.38 160.823 800.095 161.437C806.732 155.279 814.899 150.57 818.754 142.489C830.067 143.312 822.904 132.756 830.065 124.871C832.487 122.203 847.421 112.714 850.445 120.323C851.196 122.22 850.919 150.473 857.721 151.794C860.199 150.665 862.666 149.545 865.144 148.416C865.771 147.235 865.652 131.394 873.893 124.063C884.594 114.536 876.969 144.436 909.514 148.136C922.381 165.158 913.334 144.697 911.626 136.408C886.033 125.288 898.419 100.054 879.311 67.8379C866.329 45.9642 866.777 61.3939 856.388 80.5142C844.956 86.0536 843.901 91.8973 837.822 96.9016C841.399 92.4517 843.414 83.9803 854.256 77.3786C866.438 46.3569 873.705 45.712 886.866 76.2524C899.208 104.904 890.932 124.289 915.066 134.455C922.279 152.547 919.374 158.922 919.743 160.214C919.961 160.989 929.432 171.692 926.606 172.197C919.372 165.154 912.149 158.123 904.915 151.081C878.089 148.199 879.746 127.396 877.726 126.734C862.574 138.493 868.082 146.685 867.388 148.48C844.625 167.229 849.836 131.479 848.127 122.308C846.689 114.61 825.803 123.469 826.065 142.184C812.626 146.385 804.229 172.788 786.595 162.079C762.862 161.55 764.835 166.578 751.575 183.126C758.255 189.978 764.923 196.83 771.602 203.682C778.479 192.796 791.893 189.27 800.545 179.9C801.099 180.09 801.654 180.27 802.209 180.46C797.494 186.262 791.666 192.708 783.194 193.76C779.495 197.581 775.806 201.413 772.107 205.234C779.798 216.696 770.846 234.289 790.676 234.974C792.539 235.949 790.048 239.59 783.833 237.855C769.992 233.988 775.339 215.771 770.948 206.226C767.815 199.423 748.685 188.477 743.404 176.231C738.408 181.112 738.061 173.056 737.364 172.472C729.31 165.735 714.266 172.392 711.504 157.901C712.155 165.608 712.817 173.314 713.469 181.021C686.429 194.503 695.539 211.992 682.767 191.427C681.929 188.84 681.08 186.253 680.243 183.667C668.341 187.594 661.25 196.978 651.973 204.392Z\",\n    fill: \"black\"\n  })), _path117 || (_path117 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M823.799 111.879L837.822 96.9007C843.9 91.8964 844.955 86.0527 856.388 80.5133C866.776 61.393 866.328 45.9634 879.31 67.837C898.418 100.053 886.032 125.287 911.625 136.407C913.333 144.697 922.381 165.157 909.513 148.135C876.968 144.435 884.594 114.535 873.892 124.062C865.651 131.393 865.77 147.234 865.143 148.415C862.665 149.544 860.198 150.664 857.72 151.793C850.918 150.472 851.195 122.219 850.445 120.322C847.42 112.713 832.486 122.202 830.064 124.87C822.904 132.755 830.066 143.311 818.753 142.488C814.899 150.569 806.731 155.279 800.094 161.436C790.38 160.822 780.677 160.199 770.962 159.585C770.154 159.583 762.767 163.832 767.092 157.938C769.755 156.65 772.431 155.352 775.094 154.064C773.045 127.088 809.707 168.842 809.46 135.562C814.24 127.671 819.02 119.77 823.799 111.879Z\",\n    fill: \"white\"\n  })), _path118 || (_path118 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M651.972 204.394C651.195 205.059 650.43 205.714 649.653 206.378C620.604 228.158 647.821 198.116 642.565 185.164C661.872 168.469 664.057 167.691 666.608 141.767C691.498 124.729 685.067 115.987 690.464 103.491C701.785 77.273 705.626 97.5858 706.357 98.8161C708.501 101.614 710.645 104.401 712.789 107.199C715.476 116.049 709.913 143.579 730.5 160.491C731.525 161.34 740.553 163.534 738.672 167.386C732.175 166.002 725.666 164.629 719.169 163.245C716.706 161.802 710.475 138.961 706.286 162.368C717.683 186.165 703.075 179.621 689.928 195.219C679.942 184.798 686.434 177.704 685.57 176.132C685.015 175.942 684.46 175.762 683.906 175.572C672.591 185.594 663.127 186.126 651.972 204.394Z\",\n    fill: \"white\"\n  })), _path119 || (_path119 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1195.32 71.1551L1200.32 72.8341C1198.25 119.242 1196.18 165.659 1194.12 212.067C1178.52 202.881 1183.8 201.196 1183.31 200.485C1177.71 192.3 1172.37 197.54 1171.49 185.799C1155.55 179.31 1174.38 165.472 1167.58 154.424C1165.68 160.346 1163.78 166.279 1161.88 172.201C1159.76 176.641 1152.36 181.198 1153.47 187.339C1143.64 193.129 1146.44 202.392 1144.94 205.548L1131.14 214.383C1127.77 217.69 1129.09 230.644 1112.45 203.602C1114.99 190.564 1107.47 189.387 1102.09 179.732C1105.32 169.04 1094.17 162.984 1100.77 154.069C1101.8 152.683 1112.8 147.449 1111.9 141.571C1106.32 145.687 1100.74 149.793 1095.17 153.91C1091.04 173.946 1060.24 191.534 1045.56 205.295C1039.32 192.756 1048.6 185.577 1039.56 169.76C1041.31 167.934 1043.41 165.246 1044.84 161.668C1048.59 152.313 1045.06 143.828 1043.91 141.325C1094.38 117.938 1144.84 94.5415 1195.32 71.1551ZM1124.95 122.464C1121.75 127.837 1118.57 133.221 1115.38 138.594C1119.3 140.161 1133.76 120.489 1124.95 122.464Z\",\n    fill: \"white\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path120 || (_path120 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1124.95 122.465C1133.76 120.49 1119.29 140.161 1115.38 138.594C1118.57 133.221 1121.75 127.838 1124.95 122.465Z\",\n    fill: \"black\"\n  })), _path121 || (_path121 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M983.686 362.43C990.227 362.615 986.564 367.288 993.559 368.86C997.948 369.845 1010.05 366.395 1026.84 380.054C1047.7 381.772 1053.08 379.413 1038.81 390.643C1033.66 376.311 996.964 372.206 987.932 384.589C976.573 400.156 993.853 399.948 994.067 401.164C994.737 404.955 945.847 435.582 942.557 443.269C931.363 442.265 920.169 441.272 908.975 440.268C894.613 441.767 873.513 458.339 861.428 466.085C852.299 477.45 836.614 498.286 825.699 506.587C817.672 511.147 809.645 515.696 801.617 520.256C772.552 528.617 789.203 500.664 750.476 490.618L771.006 481.974C771.376 479.206 750.156 464.582 789.797 474.818C800.036 476.759 803.117 469.24 813.506 471.39C832.925 460.869 821.279 462.087 824.05 459.388C835.111 453.889 846.159 448.4 857.219 442.902C872.958 432.605 908.879 397.612 916.189 396.395C940.482 392.347 973.851 429.221 973.124 390.32C967.283 382.969 971.456 378.771 971.328 377.968C968.062 375.139 964.796 372.32 961.53 369.49L983.686 362.43Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path122 || (_path122 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M936.455 364.171C974.6 368.942 965.825 381.671 966.579 385.014C967.275 388.098 974.343 393.547 966.375 406.022C949.295 405.066 940.958 395.943 924.117 394.574C913.591 393.722 908.241 401.258 911.57 384.48C912.717 383.826 913.863 383.182 915.01 382.527C908.691 366.091 928.726 371.958 936.455 364.171ZM957.574 372.345L947.141 381.275C909.391 374.947 935.324 384.743 945.945 383.291C948.518 382.934 961.032 372.668 957.574 372.345Z\",\n    fill: \"#939393\"\n  })), _path123 || (_path123 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M959.641 375.077C963.1 375.4 950.586 385.665 948.012 386.023C937.392 387.475 911.46 377.679 949.209 384.007L959.641 375.077Z\",\n    fill: \"#939393\"\n  })), _path124 || (_path124 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M787.363 449.124C797.199 447.619 817.236 454.03 819.673 456.19C831.051 466.291 803.413 468.778 798.882 472.002C790.315 470.734 781.759 469.467 773.191 468.199C774.151 460.056 777.109 450.689 787.363 449.124Z\",\n    fill: \"#939393\"\n  })), _path125 || (_path125 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M615.492 450.404C651.257 448.967 678.785 455.057 711.489 466.449C702.259 467.644 679.068 465.787 685.705 480.582C687.43 484.414 723.184 483.264 725.157 476.575C727.093 469.987 712.196 468.919 740.508 471.372C724.061 474.934 729.94 475.696 723.083 487.279C701.831 484.002 680.177 485.899 659.024 488.539C635.309 488.739 609.274 478.663 573.91 482.027C559.901 487.719 547.301 496.004 531.766 498.259C524.849 515.51 511.596 487.796 501.923 485.113C494.063 482.932 458.83 492.564 461.874 505.504C442.494 503.244 423.103 500.992 403.723 498.731C383.556 492.184 363.4 485.627 343.234 479.079C352.875 476.451 362.517 473.813 372.159 471.186C380.325 457.261 378.247 469.913 378.927 470.352C379.728 470.867 385.56 469.238 396.653 477.005C415.383 474.922 439.266 491.067 443.735 479.364C461.99 480.742 452.314 473.241 454.093 472.482C457.412 471.08 493.163 479.903 526.978 475.572C560.94 471.225 575.352 452.024 615.492 450.404Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path126 || (_path126 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M694.548 469.043C698.416 468.291 719.713 470.002 721.939 472.381C728.51 479.425 712.468 476.511 710.965 480.783C706.028 477.589 691.317 481.887 688.528 480.148C686.046 478.601 688.779 470.171 694.548 469.043ZM711.263 472.591C705.432 473.277 699.612 473.973 693.782 474.659C690.929 478.986 723.746 473.037 711.263 472.591Z\",\n    fill: \"#939393\"\n  })), _path127 || (_path127 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M753.97 471.753C763.26 469.813 768.344 481.294 767.059 482.375C759.106 484.886 751.154 487.387 743.201 489.899C727.286 490.904 717.102 480.99 734.993 484.029C717.958 471.379 742.531 476.565 748.211 475.69C750.134 474.382 752.047 473.062 753.97 471.753ZM762.72 478.152C755.348 480.167 747.975 482.172 740.602 484.188C741.493 486.242 772.218 479.159 762.72 478.152Z\",\n    fill: \"#939393\"\n  })), _path128 || (_path128 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M711.265 472.592C723.747 473.038 690.93 478.986 693.783 474.659C699.614 473.973 705.434 473.277 711.265 472.592Z\",\n    fill: \"black\"\n  })), _path129 || (_path129 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M762.722 478.149C772.219 479.156 741.494 486.24 740.603 484.185C747.976 482.17 755.349 480.165 762.722 478.149Z\",\n    fill: \"black\"\n  })), _path130 || (_path130 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M289.926 478.08C305.616 483.609 322.815 483.132 339.251 480.502C358.965 486.238 378.73 491.503 396.917 500.587C418.541 502.912 440.176 505.227 461.8 507.551C461.972 508.069 462.133 508.586 462.305 509.103C420.793 513.226 379.27 517.339 337.759 521.463C307.796 522.377 276.857 511.885 247.896 521.992C243.027 510.773 230.787 506.736 231.086 505.627C250.703 496.444 270.309 487.262 289.926 478.08Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path131 || (_path131 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M491.752 486.873C503.946 485.394 514.254 497.146 520.829 505.636C503.945 515.316 483.804 506.831 466.138 511.774C455.54 498.435 487.454 487.397 491.752 486.873ZM503.72 497.463C500.416 498.128 500.157 506.485 502.299 505.623C502.707 504.61 503.126 503.596 503.533 502.583C504.235 503.966 504.926 505.359 505.628 506.743C508.743 507.835 509.003 496.403 503.72 497.463Z\",\n    fill: \"#939393\"\n  })), _path132 || (_path132 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M774.057 552.273L712.249 554.78C679.163 556.122 646.066 553.577 613.637 547.197V547.197C636.947 545.073 673.833 532.614 696.982 525.488C707.793 526.819 718.594 528.15 729.405 529.482C739.922 528.416 750.45 527.341 760.967 526.276C780.455 524.932 798.399 529.612 824.426 510.648C852.357 517.395 880.699 508.562 908.716 508.936C915.768 510.499 922.831 512.073 929.883 513.636C953.303 517.518 966.955 514.235 941.925 522.178C912.815 529.892 883.717 537.616 854.607 545.33C839.158 544.923 840.942 519.706 807.6 540.923C794.986 542.851 782.176 541.802 774.057 552.273Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path133 || (_path133 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M606.9 547.541L588.95 547.032C544.482 530.878 504.363 536.736 458.371 543.931L390.993 551.659L280.42 552.955L257.995 537.655C255.156 533.3 252.327 528.955 249.487 524.6C274.683 515.791 309.251 524.408 341.051 523.607L435.736 513.989C471.828 512.839 506.95 518.867 539.509 501.554C579.199 517.203 621.374 527.245 664.114 533.786C646.227 541.736 626.473 545.112 606.9 547.541Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path134 || (_path134 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M729.523 524.703C727.066 523.096 726.662 518.472 729.422 513.609C728.868 513.419 728.313 513.24 727.758 513.05C722.861 534.652 721.274 527.965 725.85 503.77C721.007 506.626 722.557 524.178 719.457 525.115C712.94 524.285 706.423 523.454 699.906 522.624C700.603 520.747 701.301 518.871 701.986 517.004C705.968 509.757 706.547 508.041 706.271 507.9C705.93 507.716 704.11 509.889 702.936 511.588C701.525 513.629 700.67 515.521 700.226 516.626C698.708 520.376 699.047 521.861 697.341 523.064C696.442 523.694 694.777 524.395 694.066 523.873C691.671 522.104 701.878 507.663 701.019 507.177C700.733 507.015 699.391 508.422 698.352 509.797C696.051 512.848 696.097 514.674 693.505 519.542C692.347 521.723 691.265 523.363 689.758 523.443C689.296 523.471 688.897 523.337 688.631 523.227C694.742 511.181 697.581 505.06 697.173 504.874C696.554 504.59 691.99 511.503 685.247 523.644C687.315 523.61 689.371 523.566 691.439 523.532C691.973 523.373 692.562 523.236 693.217 523.131C695.194 522.818 696.929 522.96 698.19 523.18C688.526 525.797 678.874 528.414 669.21 531.031C650.583 528.771 629.754 525.28 607.333 519.888C581.805 513.752 559.332 506.391 540.15 499.021C572.612 486.523 568.845 482.018 607.48 485.04C648.274 495.063 691.224 487.536 732.401 493.193C706.679 499.496 681.183 492.479 703.551 499.038C724.526 499.12 747.022 488.615 765.796 501.314C756.685 514.659 753.976 517.493 753.381 517.199C752.763 516.895 753.761 512.936 755.408 509.651C756.861 506.76 758.835 504.346 757.938 503.408C757.754 503.208 757.455 503.087 757.185 503.09C753.975 503.04 751.944 519.342 749.017 519.208C748.759 519.201 748.585 519.062 748.366 518.892C746.019 517.042 750.485 510.998 748.07 508.859C747.819 508.636 747.471 508.329 746.988 508.326C744.136 508.327 744.985 519.217 737.975 523.61C735.55 525.13 731.727 526.17 729.512 524.713L729.523 524.703ZM589.317 490.666C587.911 491.046 589.627 496.025 581.895 494.043C588.794 498.236 572.554 505.362 576.38 506.7C582.715 501.734 586.99 495.366 588.365 501.402C576.434 516.296 592.997 497.874 593.899 503.609C594.028 504.391 586.047 512.93 596.685 504.2C592.833 515.315 599.485 505.048 600.014 505.32L599.864 509.416C601.308 509.856 604.529 505.612 606.091 508.054C606.452 508.608 602.085 514.747 608.877 508.646C626.715 512.237 632.185 508.804 611.195 506.661C610.369 506.208 616.537 499.053 609.755 499.958C612.816 506.267 603.034 509.341 608.091 499.398C606.339 498.785 598.964 511.02 604.763 498.279C590.808 510.471 603.867 495.127 599.228 496.072C595.675 503.28 592.574 502.987 593.656 494.889C584.049 503.965 592.766 489.718 589.317 490.666ZM684.229 505.656C661.508 542.078 686.004 510.872 685.856 507.239L684.229 505.656ZM688.642 507.831C676.276 528.832 680.299 530.915 690.306 508.391C689.752 508.201 689.197 508.021 688.642 507.831Z\",\n    fill: \"#939393\"\n  })), _path135 || (_path135 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M767.435 502.888C768.418 502.731 779.352 511.446 766.912 517.224C764.247 515.487 773.645 506.897 768.407 507.015C752.149 531.607 765.041 503.261 767.435 502.888Z\",\n    fill: \"#939393\"\n  })), _path136 || (_path136 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1029.85 559.525L858.199 554.661C858.695 551.826 852.835 549.917 855.656 547.414C874.902 543.172 894.148 538.941 913.394 534.699C930.063 529.359 946.721 524.029 963.391 518.69C987.193 536.124 1020.22 529.433 1048.43 527.25C1114 541.839 1079.46 524.234 1029.85 559.525Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path137 || (_path137 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M539.614 538.034C557.92 538.599 584.651 546.315 602.971 546.1V546.1L630.909 549.31V549.31C649.521 553.093 668.429 555.318 687.437 555.962L689.325 556.026L731.915 554.139L859.667 547.091L930.984 529.14L962.301 517.672L984.748 528.51L1018.77 531.35L1050.18 527.743L1083.23 534.757L1055.45 544.335L1031.25 557.57L1024.21 562.741L902.539 569.255L840.707 574.142L794.594 578.383L758.658 585.281L694.869 596.205L647.256 602.313L590.513 608.529L516.46 609.397L392.03 596.978L300.793 581.16C281.86 577.877 263.875 570.599 248.034 559.81V559.81L271.635 539.179V539.179C273.822 547.591 281.449 553.405 290.163 553.303L316.945 552.989L391.505 552.115L466.664 543.563C486.05 539.984 516.733 537.329 539.614 538.034Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path138 || (_path138 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1247.65 237.681C1275.39 234.562 1329.88 251.553 1332.34 271.345C1331.36 277.468 1330.4 283.591 1329.42 289.714L1310.41 303.013C1289.87 298.792 1266.46 297.719 1248.41 309.457C1237.03 303.322 1225.64 297.198 1214.26 291.063C1208.87 288.696 1196.42 286.673 1198.78 284.474C1217.54 273.228 1220.77 240.702 1247.65 237.681ZM1309.77 258.917C1304.62 259.058 1269.14 287.513 1311.43 259.477C1310.88 259.287 1310.32 259.107 1309.77 258.917ZM1322.04 261.315C1309.51 287.335 1317.38 300.381 1317.49 278.1C1320.57 273.246 1324.98 266.196 1322.04 261.315ZM1312.91 265.157C1306.99 266.26 1306.19 303.15 1310.54 284.053L1310.91 273.813C1311.02 273.324 1318.08 264.196 1312.91 265.157ZM1242.16 265.202C1245.84 266.67 1249.54 268.148 1253.23 269.616C1251.67 264.826 1262.81 274.203 1263.4 267.854C1269.93 268.213 1276.48 268.563 1283.01 268.922C1269.39 267.686 1255.78 266.439 1242.16 265.202ZM1303.86 266.95L1299.6 291.431C1304.1 294.296 1305.3 267.75 1303.86 266.95ZM1297.02 269.832C1293.24 270.903 1286.19 301.076 1293.52 288.696C1292.73 278.792 1300.79 268.77 1297.02 269.832ZM1276.71 272.332L1268.24 273.629C1272.35 274.084 1276.44 274.548 1280.55 275.003C1275.29 281.117 1269.91 297.283 1273.61 295.82C1275.78 289.034 1279.6 276.134 1285.07 274.106L1276.71 272.332ZM1289.05 272.681C1286.02 278.92 1282.98 285.148 1279.95 291.387C1277.07 303.391 1288.06 284.462 1289.05 272.681Z\",\n    fill: \"#939393\"\n  })), _path139 || (_path139 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1309.77 258.919C1310.32 259.109 1310.88 259.288 1311.43 259.478C1269.14 287.514 1304.62 259.06 1309.77 258.919Z\",\n    fill: \"#939393\"\n  })), _path140 || (_path140 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1322.04 261.313C1324.98 266.194 1320.57 273.244 1317.49 278.098C1317.38 300.379 1309.51 287.333 1322.04 261.313Z\",\n    fill: \"#939393\"\n  })), _path141 || (_path141 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1312.91 265.153C1318.08 264.193 1311.02 273.32 1310.91 273.809L1310.54 284.049C1306.19 303.145 1306.99 266.256 1312.91 265.153Z\",\n    fill: \"#939393\"\n  })), _path142 || (_path142 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1242.16 265.2C1255.78 266.436 1269.39 267.683 1283.01 268.92C1276.48 268.56 1269.93 268.211 1263.4 267.852C1262.81 274.2 1251.67 264.824 1253.23 269.614C1249.54 268.146 1245.84 266.667 1242.16 265.2Z\",\n    fill: \"#939393\"\n  })), _path143 || (_path143 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1303.86 266.949C1305.3 267.748 1304.1 294.293 1299.6 291.429L1303.86 266.949Z\",\n    fill: \"#939393\"\n  })), _path144 || (_path144 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1297.02 269.831C1300.79 268.769 1292.73 278.791 1293.52 288.695C1286.19 301.075 1293.24 270.903 1297.02 269.831Z\",\n    fill: \"#939393\"\n  })), _path145 || (_path145 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1276.71 272.333L1285.07 274.108C1279.59 276.136 1275.78 289.035 1273.61 295.821C1269.91 297.285 1275.29 281.119 1280.54 275.005C1276.44 274.55 1272.35 274.085 1268.24 273.631L1276.71 272.333Z\",\n    fill: \"#939393\"\n  })), _path146 || (_path146 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1289.05 272.68C1288.06 284.461 1277.07 303.389 1279.95 291.386C1282.98 285.147 1286.02 278.919 1289.05 272.68Z\",\n    fill: \"#939393\"\n  })), _path147 || (_path147 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1349.04 290.776C1394.88 296.821 1425.62 281.537 1432.83 318.264C1433.56 328.874 1434.3 339.494 1435.03 350.104C1433.61 366.3 1428.9 348.813 1419.91 349.163C1413.13 349.421 1397.87 365.267 1382.21 366.546C1358.13 368.518 1344.88 350.87 1319.87 351.453C1313.1 347.09 1317.59 336.987 1309.79 335.279C1315.37 305.557 1307.71 300.963 1349.04 290.776Z\",\n    fill: \"#939393\"\n  })), _path148 || (_path148 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1190.7 290.395C1199.23 287.397 1237.9 303.766 1237.73 309.666C1235.94 312.516 1234.15 315.377 1232.36 318.227C1208.31 315.721 1197.41 328.707 1195.31 348.954C1179.67 339.316 1163.33 330.263 1145.06 325.491C1151.82 292.43 1162.47 299.241 1190.7 290.395ZM1191.86 320.155C1190.08 322.892 1178.92 336.896 1181.1 338.3C1184.74 335.093 1193.51 339.288 1194.2 333.034C1194.62 329.263 1189.66 337.241 1191.53 329.371C1184.61 332.475 1194.82 321.622 1191.86 320.155Z\",\n    fill: \"#939393\"\n  })), _path149 || (_path149 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1146.43 303.489C1146.98 303.679 1147.54 303.859 1148.09 304.049C1146.03 309.116 1143.98 314.183 1141.92 319.25C1140.83 320.172 1121.03 316.3 1146.43 303.489Z\",\n    fill: \"#939393\"\n  })), _path150 || (_path150 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1053.99 313.172C1061.13 312.144 1090.27 318.484 1091.94 319.372C1098.17 322.675 1088.98 325.131 1090.73 337.277C1078.05 341.469 1049.88 362.525 1041.1 343.046C1036.81 333.525 1040.79 315.084 1053.99 313.172ZM1088.47 322.349C1083.45 326.645 1078.42 330.952 1073.4 335.248C1040.79 327.128 1039.93 330.005 1073.32 337.296C1080.16 332.159 1093.09 321.722 1088.47 322.349Z\",\n    fill: \"#939393\"\n  })), _path151 || (_path151 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1127.95 317.312C1138.16 326.652 1125.33 321.112 1111.95 325.058C1100.11 328.546 1091.44 343.215 1094.39 329.174C1097.04 316.508 1117.66 318.26 1127.95 317.312Z\",\n    fill: \"#939393\"\n  })), _path152 || (_path152 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1132.41 318.467C1134.99 319.227 1137.59 319.977 1140.18 320.737C1145.72 327.29 1127.36 320.712 1132.41 318.467Z\",\n    fill: \"#939393\"\n  })), _path153 || (_path153 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1191.86 320.149C1194.82 321.617 1184.61 332.47 1191.53 329.365C1189.66 337.236 1194.62 329.258 1194.2 333.029C1193.51 339.282 1184.74 335.087 1181.1 338.295C1178.92 336.891 1190.08 322.887 1191.86 320.149Z\",\n    fill: \"#939393\"\n  })), _path154 || (_path154 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1088.47 322.345C1093.09 321.718 1080.16 332.155 1073.32 337.292C1039.93 330 1040.79 327.124 1073.4 335.244C1078.42 330.947 1083.45 326.641 1088.47 322.345Z\",\n    fill: \"#939393\"\n  })), _path155 || (_path155 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1118.65 326.275L1132.11 326.656C1145.73 328.231 1185.06 347.592 1196.71 356.676C1199.01 369.124 1199.04 384.726 1211.11 392.961C1202 391.165 1192.9 389.37 1183.79 387.574C1174.95 393.812 1166.12 400.061 1157.28 406.299C1148.58 408.79 1139.88 411.27 1131.18 413.76C1124.18 384.696 1076.4 406.273 1046.66 390.864C1044.32 387.456 1062.91 374.913 1069.38 368.444C1080.91 356.911 1101.43 328.452 1118.65 326.275ZM1090.68 354.184C1097.67 357.457 1104.67 360.731 1111.66 364.004C1119.01 367.677 1116.57 373.779 1127.83 367.025C1116.44 370.546 1110.13 356.919 1090.68 354.184ZM1185.7 366.102C1180.26 377.787 1178.44 391.39 1183.36 383.974C1183.9 383.169 1188.31 364.71 1185.7 366.102ZM1154.21 367.26C1142.88 388.414 1144.18 401.551 1150.68 387.149C1151.85 380.519 1153.04 373.89 1154.21 367.26ZM1194.6 368.404C1186.09 379.347 1186.42 391.052 1192.6 377.061C1193.27 374.179 1193.93 371.286 1194.6 368.404ZM1156.38 369.372C1153.42 379.938 1150 390.717 1155.2 386.252C1155.96 385.607 1159.27 368.008 1156.38 369.372ZM1124.78 373.601C1115.62 387.365 1118.36 402.306 1122.56 388.402C1123.3 383.472 1124.04 378.532 1124.78 373.601ZM1135.85 393.391C1136.76 394.104 1137.68 394.806 1138.58 395.519C1148.51 374.479 1147.27 367.791 1135.85 393.391C1139.03 366.01 1135.72 371.974 1127.98 393.681C1128.89 394.219 1129.82 394.758 1130.73 395.296C1133.8 387.449 1133.29 393.985 1134.13 394.368C1134.71 394.046 1135.28 393.713 1135.85 393.391ZM1130.28 376.832C1119.86 397.746 1122.15 403.274 1128.06 391.633C1128.8 386.703 1129.54 381.762 1130.28 376.832Z\",\n    fill: \"#939393\"\n  })), _path156 || (_path156 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1007.09 336.443C1017.35 337.584 1027.6 338.736 1037.85 339.877C1038.17 341.25 1038.5 342.633 1038.82 344.005C1051.8 358.857 1037.52 354.936 1044.83 379.54C1025.52 381.781 1020.53 370.764 1011.55 368.346C987.502 361.873 983.918 374.534 995.108 341.741C999.103 339.979 1003.1 338.206 1007.09 336.443ZM1011.17 347.834C996.791 357.811 999.088 361.043 1011.1 349.882C1041.89 353.512 1044.49 349.916 1011.17 347.834Z\",\n    fill: \"#939393\"\n  })), _path157 || (_path157 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1086.67 340.746L1088.3 342.33C1075.51 355.252 1065.3 370.635 1049.28 380.688C1035.39 346.509 1055.64 355.898 1071.75 349.549C1076.72 346.614 1081.7 343.68 1086.67 340.746Z\",\n    fill: \"#939393\"\n  })), _path158 || (_path158 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1011.17 347.834C1044.49 349.916 1041.89 353.512 1011.1 349.882C999.089 361.042 996.792 357.81 1011.17 347.834Z\",\n    fill: \"#939393\"\n  })), _path159 || (_path159 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1090.67 354.184C1110.13 356.918 1116.44 370.546 1127.83 367.024C1116.56 373.778 1119.01 367.677 1111.65 364.004C1104.66 360.73 1097.66 357.457 1090.67 354.184Z\",\n    fill: \"#939393\"\n  })), _path160 || (_path160 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1281.17 304.225C1290.18 303.845 1298.25 305.806 1306.24 309.548C1301.06 328.867 1311.15 355.949 1299.44 372.91C1297.25 376.097 1271.74 388.628 1265.21 403.204C1263.27 399.9 1261.32 396.605 1259.39 393.301C1249.88 384.206 1215.69 405.922 1206.1 376.415L1200.49 345.504C1200.75 334.954 1208.61 322.045 1221.03 320.973C1237.74 319.539 1238.34 333.087 1257.42 308.678C1265.34 307.19 1273.25 305.713 1281.17 304.225ZM1293.36 308.671C1292.15 316.325 1290.92 323.978 1289.71 331.632C1293.49 325.322 1299.57 343.248 1298.58 334.958C1296.79 332.519 1295.01 330.07 1293.23 327.631C1290.82 317.456 1299.32 334.938 1299.88 329.87C1300 328.776 1292.18 321.922 1295.02 309.231C1294.47 309.041 1293.91 308.861 1293.36 308.671ZM1288.87 339.296C1287.69 339.805 1286.3 347.71 1273.58 358.338C1282.75 355.052 1295.06 336.652 1288.87 339.296ZM1301.1 342.717C1297.23 351.321 1293.36 359.924 1289.49 368.527C1288.49 379.795 1302.39 359.544 1301.1 342.717ZM1279.23 372.849C1279.74 374.227 1280.25 375.615 1280.76 376.993C1286.86 366.413 1289.44 349.696 1281.69 366.769C1289.06 341.925 1270.33 379.271 1269.9 382.323C1268.4 392.849 1273.32 388.191 1279.23 372.849ZM1265.58 362.212C1246.53 379.662 1232.38 368.754 1219.32 368.077C1209.2 367.554 1218.69 371.247 1235.42 373.146C1222.29 384.162 1226.53 386.763 1237.08 373.705C1247.56 375.458 1261.21 371.273 1265.58 362.212ZM1270.03 363.363C1268.15 368.61 1266.28 373.846 1264.4 379.092C1265.81 363.469 1259.36 377.555 1258.64 383.029C1256.38 400.248 1274.39 372.774 1270.03 363.363Z\",\n    fill: \"#939393\"\n  })), _path161 || (_path161 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1293.36 308.671C1293.91 308.861 1294.47 309.041 1295.02 309.231C1292.18 321.922 1300 328.776 1299.88 329.869C1299.32 334.937 1290.82 317.456 1293.23 327.631C1295.01 330.069 1296.79 332.518 1298.58 334.957C1299.56 343.247 1293.49 325.321 1289.71 331.631C1290.92 323.978 1292.15 316.324 1293.36 308.671Z\",\n    fill: \"#939393\"\n  })), _path162 || (_path162 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1288.87 339.298C1295.05 336.655 1282.75 355.054 1273.58 358.341C1286.3 347.713 1287.69 339.808 1288.87 339.298Z\",\n    fill: \"#939393\"\n  })), _path163 || (_path163 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1301.1 342.716C1302.39 359.543 1288.49 379.793 1289.49 368.526C1293.37 359.923 1297.23 351.319 1301.1 342.716Z\",\n    fill: \"#939393\"\n  })), _path164 || (_path164 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1281.69 366.77C1280.87 368.797 1280.05 370.824 1279.23 372.85C1273.32 388.192 1268.4 392.85 1269.9 382.324C1270.33 379.271 1289.06 341.927 1281.69 366.77Z\",\n    fill: \"#939393\"\n  })), _path165 || (_path165 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1279.23 372.848C1280.05 370.821 1280.87 368.794 1281.69 366.767C1289.44 349.694 1286.86 366.411 1280.76 376.991C1280.25 375.613 1279.74 374.225 1279.23 372.848Z\",\n    fill: \"#939393\"\n  })), _path166 || (_path166 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1265.57 362.213C1261.21 371.274 1247.56 375.458 1237.08 373.706C1226.53 386.764 1222.29 384.163 1235.42 373.146C1218.69 371.247 1209.2 367.555 1219.32 368.077C1232.38 368.755 1246.53 379.663 1265.57 362.213Z\",\n    fill: \"#939393\"\n  })), _path167 || (_path167 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1270.03 363.364C1274.39 372.774 1256.38 400.248 1258.64 383.03C1259.36 377.556 1265.81 363.47 1264.4 379.093C1266.27 373.846 1268.15 368.61 1270.03 363.364Z\",\n    fill: \"#939393\"\n  })), _path168 || (_path168 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1185.7 366.104C1188.31 364.712 1183.9 383.171 1183.36 383.976C1178.44 391.391 1180.26 377.789 1185.7 366.104Z\",\n    fill: \"#939393\"\n  })), _path169 || (_path169 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1154.21 367.261C1153.04 373.891 1151.85 380.52 1150.68 387.149C1144.18 401.551 1142.88 388.415 1154.21 367.261Z\",\n    fill: \"#939393\"\n  })), _path170 || (_path170 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1194.6 368.406C1193.93 371.288 1193.27 374.18 1192.6 377.062C1186.42 391.053 1186.09 379.348 1194.6 368.406Z\",\n    fill: \"#939393\"\n  })), _path171 || (_path171 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1156.38 369.375C1159.27 368.012 1155.96 385.61 1155.2 386.255C1150 390.72 1153.42 379.942 1156.38 369.375Z\",\n    fill: \"#939393\"\n  })), _path172 || (_path172 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1332.44 376.412C1353.15 378.977 1413.15 391.933 1426.94 402.666C1442.86 415.049 1436.06 455.049 1439.53 473.24C1430.7 474.189 1421.86 475.127 1413.04 476.077C1401.98 481.575 1390.93 487.064 1379.87 492.563L1359.78 488.919C1342.28 495.865 1324.16 490.698 1305.56 497.633C1277.14 485.224 1255.04 504.679 1238.47 489.582C1228.37 480.377 1236.84 461.664 1244.85 453.372C1258.38 446.734 1259.47 433.214 1270.61 424.376C1277.04 412.257 1283.48 400.139 1289.9 388.02C1305.71 370.919 1314.75 384.89 1332.44 376.412Z\",\n    fill: \"#939393\"\n  })), _path173 || (_path173 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1124.78 373.603C1124.04 378.533 1123.3 383.473 1122.56 388.403C1118.35 402.307 1115.62 387.366 1124.78 373.603Z\",\n    fill: \"#939393\"\n  })), _path174 || (_path174 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1135.85 393.391C1135.28 393.713 1134.7 394.045 1134.13 394.367C1133.29 393.985 1133.8 387.449 1130.73 395.296C1129.82 394.757 1128.89 394.219 1127.98 393.68C1135.72 371.974 1139.03 366.01 1135.85 393.391Z\",\n    fill: \"#939393\"\n  })), _path175 || (_path175 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1135.85 393.392C1147.27 367.793 1148.51 374.48 1138.58 395.52C1137.68 394.807 1136.76 394.105 1135.85 393.392Z\",\n    fill: \"#939393\"\n  })), _path176 || (_path176 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1130.28 376.837C1129.54 381.767 1128.79 386.707 1128.05 391.637C1122.15 403.278 1119.86 397.75 1130.28 376.837Z\",\n    fill: \"#939393\"\n  })), _path177 || (_path177 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1007.81 393.863C1009 393.149 1018.66 381.604 1013.27 382.742C1011.69 383.077 1012.31 394.903 994.364 392.97C996.485 395.777 1001.43 394.318 1005.53 394.824C1000.23 396.15 997.53 400.379 989.147 397.435C982.572 395.127 990.923 381.689 999.916 379.289C1012.57 375.906 1041.94 386.917 1034.32 390.514C1025.23 389.488 1016.56 391.948 1007.81 393.863Z\",\n    fill: \"#939393\"\n  })), _path178 || (_path178 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1007.81 393.864L1005.53 394.825C1001.44 394.319 996.486 395.778 994.364 392.971C1012.31 394.904 1011.69 383.078 1013.27 382.743C1018.66 381.605 1009 393.15 1007.81 393.864Z\",\n    fill: \"#939393\"\n  })), _path179 || (_path179 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1039.86 392.725C1048.39 395.017 1056.91 397.309 1065.44 399.601C1081.18 402.046 1120.38 397.539 1126.07 415.157C1129.84 426.816 1112.38 425.655 1112.18 441.928C1095.77 425.748 1057.46 439.67 1033.76 436.63C1018.82 434.71 1012.83 423.029 998.013 431.517C984.548 439.223 988.555 464.543 946.389 445.943C965.096 430.923 983.791 415.913 1002.5 400.892C1010.43 396.689 1030.87 392.286 1039.86 392.725ZM1117.75 412.359C1113.93 424.336 1115.57 411.579 1112.5 417.848C1111.4 422.429 1110.29 427.011 1109.19 431.592C1113.03 425.664 1119.27 419.782 1117.75 412.359ZM1059.23 415.826C1049.09 416.953 1038.04 427.987 1044.16 428.725C1045.93 428.939 1054.84 413.118 1075.33 420.895C1063.58 440.684 1079.89 424.284 1076.56 417.854C1070.78 417.178 1065.01 416.502 1059.23 415.826ZM1108.59 417.224C1107.15 420.771 1105.72 424.318 1104.27 427.865C1103.06 437.999 1109.62 430.097 1108.59 417.224Z\",\n    fill: \"#939393\"\n  })), _path180 || (_path180 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1117.75 412.359C1119.27 419.782 1113.03 425.663 1109.19 431.592C1110.29 427.01 1111.4 422.429 1112.5 417.848C1115.57 411.579 1113.92 424.336 1117.75 412.359Z\",\n    fill: \"#939393\"\n  })), _path181 || (_path181 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1059.23 415.827C1065.01 416.503 1070.78 417.179 1076.56 417.856C1079.89 424.285 1063.58 440.684 1075.33 420.896C1054.83 413.119 1045.93 428.94 1044.16 428.725C1038.04 427.988 1049.09 416.954 1059.23 415.827Z\",\n    fill: \"#939393\"\n  })), _path182 || (_path182 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1108.59 417.228C1109.62 430.101 1103.06 438.003 1104.27 427.869C1105.72 424.322 1107.15 420.775 1108.59 417.228Z\",\n    fill: \"#939393\"\n  })), _path183 || (_path183 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1185.85 392.758C1208.47 398.012 1230.37 403.973 1253.12 395.689C1274.38 433.317 1212.45 459.024 1186.04 479.894C1176.85 463.981 1158.57 470.71 1157.43 463.707C1151.68 467.942 1139.52 460.647 1123.63 466.85C1121.84 459.449 1120.05 452.059 1118.26 444.659C1117.17 430.01 1127.74 433.323 1136.68 416.991C1156.58 416.868 1171.26 403.528 1185.85 392.758ZM1224.14 420.495C1210.65 422.275 1186.58 447.517 1159.41 440.187C1159.2 440.693 1159.01 441.2 1158.8 441.707C1184.54 448.166 1193.83 435.258 1213.82 426.353C1220.49 423.384 1239.83 418.428 1224.14 420.495ZM1222.61 431.727C1219.72 439.159 1216.83 446.601 1213.94 454.033C1219.18 456.795 1225 435.608 1222.61 431.727ZM1213.3 440.689C1203.8 457.435 1199.52 470.127 1208.76 457.474C1210.44 455.174 1215.3 443.861 1213.3 440.689ZM1198.68 441.299C1176.76 484.285 1201.06 455.297 1200.31 442.883L1198.68 441.299ZM1204.29 441.458C1194.21 457.256 1195.16 468.333 1199.67 460.291C1201.21 454.01 1202.75 447.739 1204.29 441.458ZM1191.84 444.181C1174.76 467.868 1184.68 465.412 1189.8 453.861C1190.48 450.631 1191.16 447.411 1191.84 444.181Z\",\n    fill: \"#939393\"\n  })), _path184 || (_path184 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1224.14 420.491C1239.83 418.424 1220.49 423.38 1213.82 426.349C1193.83 435.254 1184.54 448.163 1158.8 441.703C1159.01 441.197 1159.2 440.69 1159.41 440.183C1186.58 447.513 1210.65 422.271 1224.14 420.491Z\",\n    fill: \"#939393\"\n  })), _path185 || (_path185 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1222.61 431.728C1225 435.608 1219.18 456.795 1213.94 454.033C1216.83 446.601 1219.72 439.159 1222.61 431.728Z\",\n    fill: \"#939393\"\n  })), _path186 || (_path186 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1213.3 440.687C1215.3 443.86 1210.44 455.172 1208.76 457.471C1199.51 470.125 1203.8 457.433 1213.3 440.687Z\",\n    fill: \"#939393\"\n  })), _path187 || (_path187 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1198.68 441.305L1200.31 442.888C1201.05 455.302 1176.76 484.289 1198.68 441.305Z\",\n    fill: \"#939393\"\n  })), _path188 || (_path188 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1204.29 441.458C1202.75 447.738 1201.21 454.009 1199.67 460.29C1195.16 468.332 1194.21 457.255 1204.29 441.458Z\",\n    fill: \"#939393\"\n  })), _path189 || (_path189 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1191.84 444.182C1191.16 447.412 1190.48 450.632 1189.8 453.862C1184.68 465.413 1174.76 467.868 1191.84 444.182Z\",\n    fill: \"#939393\"\n  })), _path190 || (_path190 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1008.11 431.798C1012.29 431.588 1029.08 445.123 1045.84 444.142C1055.62 438.628 1097.7 436.458 1105.49 440.707C1113 444.815 1119.41 466.4 1118.52 468.241C1117.59 470.203 1102.63 471.327 1101.04 470.308C1100.13 469.718 1096.31 449.058 1098.25 469.716C1092.22 472.159 1097.07 465.173 1093.63 457.797L1091.45 471.574L1089.2 471.51C1085.27 448.591 1088.36 477.226 1084.79 469.335L1084.57 475.479C1063.88 487.081 1066.43 492.002 1071.57 477.673C1067.23 483.701 1062.9 489.728 1058.56 495.756C1051.64 497.969 1025.69 483.969 1017.54 481.268C1008.37 478.23 988.389 477.664 987.001 471.689C985.37 464.663 994.156 432.509 1008.11 431.798ZM1095.05 449.637C1087.62 453.352 1080.18 457.078 1072.75 460.793C1073.64 467.758 1109.53 448.376 1095.05 449.637ZM1045.17 462.574C1048.58 468.35 1069.35 469.902 1064.09 467.211C1057.78 465.669 1051.48 464.117 1045.17 462.574ZM1050.44 487.325C1048.33 495.999 1053.88 487.71 1060.76 481.467C1049.37 502.066 1072.13 474.419 1069.48 473.514C1067.35 475.504 1065.21 477.493 1063.08 479.483C1070.78 467.636 1060.18 477.043 1055.16 481.308C1057.13 478.464 1059.1 475.608 1061.08 472.763C1060.53 472.573 1059.97 472.394 1059.42 472.204C1044.99 485.438 1041.16 495.334 1050.44 487.325Z\",\n    fill: \"#939393\"\n  })), _path191 || (_path191 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1095.05 449.632C1109.53 448.372 1073.64 467.753 1072.75 460.788C1080.18 457.073 1087.62 453.348 1095.05 449.632Z\",\n    fill: \"#939393\"\n  })), _path192 || (_path192 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1045.17 462.576C1051.48 464.118 1057.78 465.67 1064.09 467.212C1069.35 469.903 1048.58 468.351 1045.17 462.576Z\",\n    fill: \"#939393\"\n  })), _path193 || (_path193 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1055.15 481.312C1053.59 483.318 1052.01 485.323 1050.44 487.329C1041.16 495.338 1044.99 485.442 1059.42 472.208C1059.97 472.397 1060.53 472.577 1061.08 472.767C1059.1 475.612 1057.13 478.467 1055.15 481.312Z\",\n    fill: \"#939393\"\n  })), _path194 || (_path194 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1063.08 479.483C1062.31 480.148 1061.54 480.802 1060.76 481.467C1053.88 487.709 1048.33 495.999 1050.44 487.325C1052.01 485.319 1053.59 483.314 1055.15 481.308C1060.18 477.043 1070.78 467.636 1063.08 479.483Z\",\n    fill: \"#939393\"\n  })), _path195 || (_path195 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1060.77 481.471C1061.54 480.807 1062.31 480.152 1063.08 479.487C1065.21 477.497 1067.35 475.508 1069.48 473.518C1072.13 474.423 1049.37 502.07 1060.77 481.471Z\",\n    fill: \"#939393\"\n  })), _path196 || (_path196 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M908.748 446.401C929.409 444.035 952.688 455.765 972.248 460.501C963.394 467.088 954.552 473.664 945.698 480.25C945.415 480.304 944.528 475.379 942.332 480.155C937.926 471.635 937.155 484.467 935.265 489.18C934.583 486.957 933.733 472.664 931.337 473.693C934.74 506.058 924.721 498.702 911.258 500.801C884.704 504.948 857.781 511.535 830.689 508.256C854.477 488.788 858.283 467.851 888.256 454.021C895.087 451.478 901.917 448.945 908.748 446.401ZM923.969 460.158C920.887 462.46 917.816 464.771 914.733 467.072C911.96 468.285 886.623 474.169 887.977 477.077C901.401 472.968 916.994 470.662 926.756 460.75C925.831 460.549 924.894 460.359 923.969 460.158ZM919.034 472.319L919.989 492.335L922.233 492.399C922.517 489.844 922.79 487.289 923.074 484.735C923.758 484.754 922.753 495.079 926.141 493.022C928.024 491.876 923.597 470.378 920.512 477.999C920.019 476.109 919.527 474.209 919.034 472.319ZM926.85 473.566C925.865 495.351 931.706 499.32 930.422 483.405C929.228 480.122 928.044 476.849 926.85 473.566ZM915.445 478.368C913.025 493.286 920.325 501.601 918.007 485.104C917.156 482.855 916.295 480.617 915.445 478.368Z\",\n    fill: \"#939393\"\n  })), _path197 || (_path197 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M923.969 460.159C924.894 460.36 925.83 460.55 926.755 460.751C916.994 470.663 901.402 472.968 887.978 477.077C886.624 474.169 911.96 468.286 914.733 467.073C917.815 464.772 920.887 462.46 923.969 460.159Z\",\n    fill: \"#939393\"\n  })), _path198 || (_path198 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M919.034 472.318C919.527 474.208 920.019 476.108 920.512 477.997C923.597 470.377 928.024 491.874 926.141 493.02C922.753 495.077 923.758 484.752 923.074 484.733C922.79 487.287 922.517 489.842 922.233 492.397L919.989 492.333L919.034 472.318Z\",\n    fill: \"#939393\"\n  })), _path199 || (_path199 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M926.85 473.566C928.044 476.849 929.227 480.121 930.422 483.405C931.706 499.319 925.865 495.35 926.85 473.566Z\",\n    fill: \"#939393\"\n  })), _path200 || (_path200 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M915.445 478.371C916.295 480.619 917.157 482.858 918.007 485.106C920.325 501.603 913.026 493.288 915.445 478.371Z\",\n    fill: \"#939393\"\n  })), _path201 || (_path201 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M969.556 472.736C974.733 474.595 979.899 476.443 985.075 478.301C995.849 480.657 1006.61 483.012 1017.39 485.367C1030.76 489.703 1042.7 498.703 1057.29 499.824C1064.37 538.997 1063.94 515.962 1011.48 524.152C975.259 524.233 970.433 511.519 937.884 509.766C942.27 497.897 953.454 473.274 969.556 472.736ZM968.921 490.144C978.524 493.83 988.115 497.525 997.717 501.211C986.16 514.168 999.259 499.584 1010.56 503.112C996.682 498.793 982.802 494.464 968.921 490.144Z\",\n    fill: \"#939393\"\n  })), _path202 || (_path202 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M968.921 490.144C982.801 494.463 996.68 498.793 1010.56 503.112C999.257 499.583 986.159 514.168 997.715 501.21C988.113 497.525 978.523 493.83 968.921 490.144Z\",\n    fill: \"#939393\"\n  })), _path203 || (_path203 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1141.5 469.403C1147.17 469.43 1177.61 474.824 1179.89 479.204C1181.34 481.982 1175.66 512.859 1174.06 515.941C1168.48 526.72 1145.95 520.423 1135 524.572C1116.87 521.055 1108.08 516.624 1094.35 530.596C1084.86 529.127 1075.37 527.669 1065.88 526.201C1066.33 498.558 1064.96 489.088 1094.09 476.26C1110.15 480.713 1126.73 469.323 1141.5 469.403ZM1154.26 489.241C1151.99 489.863 1149.72 490.475 1147.45 491.098C1145.6 491.168 1117.16 490.034 1118.75 492.847C1140.89 494.838 1164.86 489.028 1154.26 489.241ZM1075.35 497.255L1075.28 499.303C1110.59 507.541 1108.06 504.179 1075.35 497.255ZM1157.25 499.576C1142.82 514.266 1136.65 527.438 1148.22 516.234L1157.25 499.576ZM1147.08 501.338C1145.13 503.599 1134.96 517.047 1137.47 518.492C1140.85 517.737 1148.99 502.294 1147.08 501.338ZM1163.91 501.815C1146.74 519.164 1148.74 525.812 1158.43 513.448C1160.25 509.573 1162.08 505.689 1163.91 501.815ZM1169.52 501.974C1164.86 510.709 1157.89 517.276 1161.07 518.135C1163.2 518.196 1171.89 504.952 1169.52 501.974ZM1137.92 506.204C1135.8 508.019 1133.66 509.845 1131.54 511.661C1121.64 523.784 1135.75 515.45 1137.92 506.204ZM1119.78 510.815C1114.86 511.67 1120.13 515.151 1120.17 515.439C1119.75 516.79 1119.32 518.152 1118.9 519.503C1121.98 524.347 1124.21 510.049 1119.78 510.815Z\",\n    fill: \"#939393\"\n  })), _path204 || (_path204 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1154.26 489.242C1164.85 489.03 1140.89 494.84 1118.75 492.849C1117.16 490.036 1145.59 491.17 1147.45 491.099C1149.72 490.477 1151.99 489.865 1154.26 489.242Z\",\n    fill: \"#939393\"\n  })), _path205 || (_path205 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1075.35 497.254C1108.06 504.177 1110.59 507.539 1075.28 499.302L1075.35 497.254Z\",\n    fill: \"#939393\"\n  })), _path206 || (_path206 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1157.25 499.578L1148.22 516.236C1136.65 527.439 1142.82 514.268 1157.25 499.578Z\",\n    fill: \"#939393\"\n  })), _path207 || (_path207 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1147.08 501.34C1148.99 502.296 1140.86 517.739 1137.47 518.494C1134.96 517.049 1145.13 503.602 1147.08 501.34Z\",\n    fill: \"#939393\"\n  })), _path208 || (_path208 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1163.91 501.816C1162.08 505.691 1160.25 509.575 1158.43 513.449C1148.74 525.813 1146.74 519.166 1163.91 501.816Z\",\n    fill: \"#939393\"\n  })), _path209 || (_path209 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1169.52 501.97C1171.89 504.949 1163.2 518.192 1161.07 518.131C1157.89 517.272 1164.86 510.705 1169.52 501.97Z\",\n    fill: \"#939393\"\n  })), _path210 || (_path210 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1137.92 506.204C1135.75 515.45 1121.64 523.784 1131.54 511.661C1133.66 509.845 1135.8 508.02 1137.92 506.204Z\",\n    fill: \"#939393\"\n  })), _path211 || (_path211 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1119.78 510.814C1124.21 510.047 1121.98 524.344 1118.9 519.501C1119.32 518.149 1119.75 516.788 1120.17 515.437C1120.13 515.149 1114.86 511.668 1119.78 510.814Z\",\n    fill: \"#939393\"\n  })), _path212 || (_path212 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1148.77 562.892L1108.38 561.748C1113.99 552.487 1122.46 553.485 1131.47 544.463C1147.4 518.007 1148.85 532.45 1174.08 530.807C1185.75 552.429 1172.4 548.76 1163.16 553.05C1158.36 556.327 1153.57 559.615 1148.77 562.892Z\",\n    fill: \"#939393\"\n  })), _path213 || (_path213 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1433.72 570.969L1365.29 569.03C1356.95 562.325 1346 561.584 1337.24 568.235L1191.4 564.103C1194.14 553.171 1182.96 556.852 1181.3 563.816C1179.2 564.392 1178.34 564.101 1177.94 563.721C1175.55 561.47 1185.74 552.615 1187.26 539.312C1187.67 535.726 1187.35 532.713 1187 530.663C1208.69 515.718 1238.48 524.854 1262.3 513.833L1333.2 509.692C1347.91 506.695 1362.62 503.688 1377.33 500.692C1396.47 499.194 1428.41 501.76 1436.69 520.312C1444.82 538.502 1432.34 552.673 1433.72 570.969Z\",\n    fill: \"#939393\"\n  })), _path214 || (_path214 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1191.4 564.101L1181.3 563.815C1182.96 556.851 1194.14 553.171 1191.4 564.101Z\",\n    fill: \"#939393\"\n  })), _path215 || (_path215 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1365.29 569.03L1337.24 568.236C1346 561.585 1356.95 562.326 1365.29 569.03Z\",\n    fill: \"#939393\"\n  })), _path216 || (_path216 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1309.77 258.913C1310.32 259.103 1310.88 259.283 1311.43 259.473C1269.14 287.509 1304.62 259.055 1309.77 258.913Z\",\n    fill: \"black\"\n  })), _path217 || (_path217 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1322.03 261.306C1324.98 266.187 1320.56 273.237 1317.49 278.09C1317.37 300.372 1309.51 287.325 1322.03 261.306Z\",\n    fill: \"black\"\n  })), _path218 || (_path218 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1312.91 265.152C1318.08 264.191 1311.02 273.319 1310.91 273.808L1310.54 284.048C1306.19 303.144 1306.98 266.255 1312.91 265.152Z\",\n    fill: \"black\"\n  })), _path219 || (_path219 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1242.16 265.194C1255.78 266.431 1269.39 267.678 1283.01 268.915C1276.48 268.555 1269.93 268.206 1263.4 267.846C1262.81 274.195 1251.67 264.818 1253.23 269.608C1249.54 268.14 1245.84 266.662 1242.16 265.194Z\",\n    fill: \"black\"\n  })), _path220 || (_path220 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1297.02 269.822C1300.78 268.76 1292.73 278.782 1293.52 288.686C1286.19 301.066 1293.24 270.894 1297.02 269.822Z\",\n    fill: \"black\"\n  })), _path221 || (_path221 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1276.71 272.32L1285.07 274.095C1279.59 276.123 1275.77 289.022 1273.61 295.808C1269.9 297.272 1275.29 281.106 1280.54 274.991C1276.44 274.537 1272.34 274.072 1268.24 273.618L1276.71 272.32Z\",\n    fill: \"black\"\n  })), _path222 || (_path222 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1289.05 272.675C1288.06 284.455 1277.07 303.384 1279.95 291.38C1282.98 285.142 1286.02 278.914 1289.05 272.675Z\",\n    fill: \"black\"\n  })), _path223 || (_path223 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1191.86 320.148C1194.82 321.615 1184.61 332.468 1191.53 329.364C1189.66 337.234 1194.62 329.257 1194.2 333.027C1193.51 339.281 1184.74 335.086 1181.1 338.293C1178.92 336.889 1190.08 322.885 1191.86 320.148Z\",\n    fill: \"black\"\n  })), _path224 || (_path224 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1088.46 322.343C1093.09 321.716 1080.15 332.153 1073.32 337.29C1039.93 329.999 1040.79 327.122 1073.39 335.242C1078.41 330.946 1083.44 326.64 1088.46 322.343Z\",\n    fill: \"black\"\n  })), _path225 || (_path225 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1011.17 347.83C1044.49 349.912 1041.89 353.508 1011.09 349.878C999.086 361.039 996.79 357.806 1011.17 347.83Z\",\n    fill: \"black\"\n  })), _path226 || (_path226 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1090.67 354.182C1110.13 356.917 1116.43 370.544 1127.83 367.023C1116.56 373.776 1119.01 367.675 1111.65 364.002C1104.66 360.729 1097.66 357.455 1090.67 354.182Z\",\n    fill: \"black\"\n  })), _path227 || (_path227 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1293.36 308.672C1293.91 308.862 1294.47 309.042 1295.02 309.232C1292.18 321.923 1300 328.777 1299.88 329.871C1299.32 334.939 1290.82 317.457 1293.23 327.632C1295.01 330.071 1296.79 332.52 1298.57 334.959C1299.56 343.249 1293.49 325.323 1289.71 331.632C1290.92 323.979 1292.14 316.326 1293.36 308.672Z\",\n    fill: \"black\"\n  })), _path228 || (_path228 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1288.87 339.3C1295.05 336.656 1282.75 355.055 1273.58 358.342C1286.29 347.714 1287.68 339.809 1288.87 339.3Z\",\n    fill: \"black\"\n  })), _path229 || (_path229 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1301.1 342.716C1302.38 359.542 1288.48 379.793 1289.49 368.525C1293.36 359.922 1297.23 351.319 1301.1 342.716Z\",\n    fill: \"black\"\n  })), _path230 || (_path230 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1281.69 366.775C1280.87 368.802 1280.05 370.829 1279.23 372.856C1273.32 388.197 1268.4 392.855 1269.9 382.329C1270.33 379.277 1289.06 341.932 1281.69 366.775Z\",\n    fill: \"black\"\n  })), _path231 || (_path231 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1279.22 372.849C1280.05 370.822 1280.87 368.795 1281.69 366.769C1289.43 349.696 1286.86 366.413 1280.76 376.993C1280.25 375.615 1279.74 374.227 1279.22 372.849Z\",\n    fill: \"black\"\n  })), _path232 || (_path232 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1265.57 362.214C1261.21 371.275 1247.56 375.46 1237.08 373.707C1226.53 386.765 1222.29 384.164 1235.42 373.148C1218.68 371.249 1209.19 367.556 1219.32 368.079C1232.38 368.756 1246.53 379.664 1265.57 362.214Z\",\n    fill: \"black\"\n  })), _path233 || (_path233 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1270.02 363.369C1274.39 372.78 1256.38 400.253 1258.64 383.035C1259.36 377.561 1265.81 363.475 1264.4 379.098C1266.27 373.851 1268.15 368.615 1270.02 363.369Z\",\n    fill: \"black\"\n  })), _path234 || (_path234 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1185.7 366.097C1188.31 364.705 1183.89 383.164 1183.36 383.969C1178.44 391.384 1180.26 377.782 1185.7 366.097Z\",\n    fill: \"black\"\n  })), _path235 || (_path235 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1154.21 367.26C1153.04 373.889 1151.85 380.518 1150.68 387.148C1144.18 401.55 1142.88 388.413 1154.21 367.26Z\",\n    fill: \"black\"\n  })), _path236 || (_path236 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1194.6 368.408C1193.93 371.29 1193.26 374.182 1192.6 377.064C1186.42 391.055 1186.09 379.35 1194.6 368.408Z\",\n    fill: \"black\"\n  })), _path237 || (_path237 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1156.38 369.376C1159.27 368.012 1155.96 385.611 1155.2 386.255C1150 390.721 1153.42 379.942 1156.38 369.376Z\",\n    fill: \"black\"\n  })), _path238 || (_path238 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1124.78 373.6C1124.04 378.53 1123.3 383.47 1122.56 388.4C1118.35 402.303 1115.62 387.363 1124.78 373.6Z\",\n    fill: \"black\"\n  })), _path239 || (_path239 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1135.85 393.393C1135.28 393.715 1134.7 394.047 1134.13 394.369C1133.29 393.987 1133.8 387.451 1130.73 395.298C1129.82 394.76 1128.89 394.221 1127.98 393.683C1135.72 371.976 1139.03 366.012 1135.85 393.393Z\",\n    fill: \"black\"\n  })), _path240 || (_path240 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1135.85 393.389C1147.27 367.789 1148.51 374.477 1138.58 395.516C1137.67 394.804 1136.76 394.101 1135.85 393.389Z\",\n    fill: \"black\"\n  })), _path241 || (_path241 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1130.28 376.83C1129.54 381.76 1128.79 386.7 1128.05 391.63C1122.15 403.271 1119.86 397.743 1130.28 376.83Z\",\n    fill: \"black\"\n  })), _path242 || (_path242 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1007.81 393.863L1005.53 394.823C1001.43 394.318 996.484 395.776 994.363 392.969C1012.31 394.902 1011.69 383.077 1013.27 382.742C1018.66 381.603 1009 393.148 1007.81 393.863Z\",\n    fill: \"black\"\n  })), _path243 || (_path243 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1117.75 412.359C1119.27 419.782 1113.03 425.664 1109.19 431.592C1110.29 427.011 1111.4 422.429 1112.5 417.848C1115.57 411.58 1113.92 424.336 1117.75 412.359Z\",\n    fill: \"black\"\n  })), _path244 || (_path244 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1059.23 415.825C1065.01 416.501 1070.78 417.177 1076.56 417.854C1079.88 424.283 1063.58 440.683 1075.33 420.894C1054.83 413.118 1045.92 428.938 1044.16 428.724C1038.04 427.987 1049.09 416.952 1059.23 415.825Z\",\n    fill: \"black\"\n  })), _path245 || (_path245 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1108.59 417.225C1109.61 430.097 1103.06 437.999 1104.27 427.865C1105.71 424.318 1107.15 420.771 1108.59 417.225Z\",\n    fill: \"black\"\n  })), _path246 || (_path246 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1224.14 420.496C1239.83 418.429 1220.49 423.386 1213.82 426.354C1193.83 435.259 1184.54 448.168 1158.8 441.708C1159.01 441.202 1159.2 440.695 1159.41 440.188C1186.58 447.519 1210.65 422.277 1224.14 420.496Z\",\n    fill: \"black\"\n  })), _path247 || (_path247 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1222.61 431.733C1225 435.614 1219.18 456.8 1213.94 454.038C1216.82 446.606 1219.72 439.165 1222.61 431.733Z\",\n    fill: \"black\"\n  })), _path248 || (_path248 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1213.3 440.69C1215.3 443.863 1210.44 455.175 1208.76 457.475C1199.51 470.128 1203.8 457.437 1213.3 440.69Z\",\n    fill: \"black\"\n  })), _path249 || (_path249 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1198.68 441.302L1200.3 442.886C1201.05 455.3 1176.76 484.287 1198.68 441.302Z\",\n    fill: \"black\"\n  })), _path250 || (_path250 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1204.29 441.457C1202.75 447.738 1201.21 454.009 1199.67 460.29C1195.16 468.331 1194.21 457.255 1204.29 441.457Z\",\n    fill: \"black\"\n  })), _path251 || (_path251 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1191.83 444.185C1191.16 447.415 1190.48 450.635 1189.8 453.865C1184.68 465.416 1174.76 467.872 1191.83 444.185Z\",\n    fill: \"black\"\n  })), _path252 || (_path252 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1095.06 449.635C1109.53 448.374 1073.64 467.755 1072.75 460.791C1080.19 457.075 1087.62 453.35 1095.06 449.635Z\",\n    fill: \"black\"\n  })), _path253 || (_path253 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1045.17 462.572C1051.48 464.114 1057.78 465.666 1064.09 467.208C1069.35 469.9 1048.58 468.347 1045.17 462.572Z\",\n    fill: \"black\"\n  })), _path254 || (_path254 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1055.16 481.305C1053.59 483.31 1052.01 485.316 1050.44 487.322C1041.16 495.33 1044.99 485.435 1059.42 472.2C1059.97 472.39 1060.53 472.57 1061.08 472.76C1059.1 475.605 1057.14 478.46 1055.16 481.305Z\",\n    fill: \"black\"\n  })), _path255 || (_path255 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1063.09 479.487C1062.31 480.152 1061.54 480.807 1060.77 481.472C1053.88 487.714 1048.33 496.003 1050.45 487.329C1052.01 485.324 1053.59 483.318 1055.16 481.313C1060.19 477.047 1070.78 467.641 1063.09 479.487Z\",\n    fill: \"black\"\n  })), _path256 || (_path256 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1060.77 481.462C1061.54 480.797 1062.31 480.143 1063.09 479.478C1065.21 477.488 1067.35 475.499 1069.48 473.509C1072.13 474.414 1049.37 502.06 1060.77 481.462Z\",\n    fill: \"black\"\n  })), _path257 || (_path257 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M923.969 460.17C920.886 462.471 917.815 464.783 914.733 467.084C911.96 468.297 886.624 474.18 887.978 477.089C901.401 472.979 916.994 470.674 926.755 460.762C925.83 460.561 924.893 460.371 923.969 460.17ZM919.034 472.331L919.989 492.346L922.232 492.41C922.516 489.855 922.789 487.3 923.073 484.746C923.757 484.765 922.752 495.09 926.14 493.033C928.023 491.887 923.596 470.39 920.511 478.011C920.018 476.121 919.526 474.221 919.034 472.331ZM926.849 473.577C925.864 495.362 931.705 499.331 930.421 483.417C929.227 480.133 928.043 476.861 926.849 473.577ZM915.444 478.379C913.025 493.297 920.325 501.612 918.006 485.115C917.156 482.866 916.294 480.628 915.444 478.379Z\",\n    fill: \"black\"\n  })), _path258 || (_path258 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M923.969 460.17C924.893 460.371 925.83 460.561 926.755 460.762C916.994 470.674 901.401 472.979 887.978 477.089C886.624 474.18 911.96 468.297 914.733 467.084C917.815 464.783 920.886 462.471 923.969 460.17Z\",\n    fill: \"black\"\n  })), _path259 || (_path259 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M919.035 472.331C919.528 474.221 920.02 476.121 920.513 478.011C923.598 470.39 928.025 491.887 926.142 493.033C922.754 495.09 923.759 484.765 923.075 484.746C922.791 487.3 922.518 489.855 922.234 492.41L919.99 492.346L919.035 472.331Z\",\n    fill: \"black\"\n  })), _path260 || (_path260 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M926.851 473.575C928.045 476.858 929.229 480.131 930.423 483.414C931.707 499.328 925.866 495.36 926.851 473.575Z\",\n    fill: \"black\"\n  })), _path261 || (_path261 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M915.446 478.38C916.296 480.628 917.158 482.867 918.008 485.115C920.327 501.612 913.027 493.297 915.446 478.38Z\",\n    fill: \"black\"\n  })), _path262 || (_path262 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M968.922 490.141C982.802 494.46 996.682 498.789 1010.56 503.108C999.258 499.58 986.161 514.164 997.717 501.207C988.115 497.521 978.524 493.826 968.922 490.141Z\",\n    fill: \"black\"\n  })), _path263 || (_path263 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1154.25 489.247C1164.85 489.034 1140.89 494.844 1118.75 492.853C1117.16 490.041 1145.59 491.174 1147.45 491.104C1149.72 490.481 1151.99 489.869 1154.25 489.247Z\",\n    fill: \"black\"\n  })), _path264 || (_path264 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1075.35 497.26C1108.06 504.184 1110.59 507.546 1075.28 499.308L1075.35 497.26Z\",\n    fill: \"black\"\n  })), _path265 || (_path265 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1157.25 499.583L1148.22 516.24C1136.65 527.444 1142.82 514.273 1157.25 499.583Z\",\n    fill: \"black\"\n  })), _path266 || (_path266 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1147.08 501.345C1148.98 502.301 1140.85 517.743 1137.47 518.498C1134.96 517.054 1145.13 503.606 1147.08 501.345Z\",\n    fill: \"black\"\n  })), _path267 || (_path267 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1163.9 501.819C1162.08 505.693 1160.25 509.577 1158.43 513.452C1148.73 525.816 1146.74 519.168 1163.9 501.819Z\",\n    fill: \"black\"\n  })), _path268 || (_path268 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1169.51 501.978C1171.89 504.957 1163.19 518.2 1161.06 518.14C1157.88 517.281 1164.86 510.713 1169.51 501.978Z\",\n    fill: \"black\"\n  })), _path269 || (_path269 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1137.92 506.207C1135.75 515.453 1121.64 523.786 1131.54 511.664C1133.66 509.848 1135.79 508.022 1137.92 506.207Z\",\n    fill: \"black\"\n  })), _path270 || (_path270 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1119.78 510.822C1124.21 510.056 1121.98 524.352 1118.9 519.509C1119.32 518.158 1119.75 516.797 1120.17 515.445C1120.13 515.157 1114.86 511.677 1119.78 510.822Z\",\n    fill: \"black\"\n  })), _path271 || (_path271 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M483.319 433.913C493.733 430.425 500.569 425.893 504.826 422.488C516.127 413.449 516.64 406.452 527.569 401.473C535.392 397.912 538.199 400.093 547.064 397.207C554.587 394.755 563.717 389.55 572.374 377.864\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path272 || (_path272 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M548.286 411.686C552.284 406.746 558.182 400.517 566.485 394.551C576.552 387.322 586.326 383.222 593.352 380.869\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path273 || (_path273 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M941.731 251.159C929.286 254.599 924.093 259.629 921.915 264.231C919.371 269.633 922.077 272.129 919.599 279.408C917.096 286.779 913.635 286.22 905.757 297.467C905.757 297.467 904.346 299.487 894.492 317.208C891.795 320.34 888.955 324.001 886.185 328.207C883.022 333.007 880.565 337.561 878.665 341.628\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path274 || (_path274 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M893.561 270.653C896.096 267.332 899.924 263.064 905.408 258.955C911.758 254.194 917.968 251.428 922.44 249.813\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path275 || (_path275 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M935.03 242.142C938.084 238.754 941.138 235.366 944.193 231.978\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path276 || (_path276 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M958.56 223.563C964.557 217.992 969.23 213.358 972.227 210.317C983.736 198.65 987.355 193.637 995.874 188.528C1001.28 185.288 1006.21 183.47 1009.28 182.491\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path277 || (_path277 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1064.53 209.709C1046.58 218.815 1042.7 226.301 1042.64 231.547C1042.59 235.995 1045.3 237.937 1044.84 243.644C1044.26 250.885 1039.37 254.754 1034.54 261.004C1030.17 266.651 1030.89 267.727 1022.14 287.929C1019 295.18 1014.23 305.808 1007.83 318.808\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path278 || (_path278 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1093.74 204.12C1094.19 218.985 1098.8 227.696 1103.18 232.976C1105.46 235.736 1109.39 239.63 1109.82 245.485C1110.17 250.385 1107.9 254.575 1105.87 257.408\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path279 || (_path279 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1105.28 273.443C1104.52 278.239 1103.76 283.025 1102.99 287.821\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path280 || (_path280 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1099.98 298.161L1099.72 305.37\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path281 || (_path281 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1088.42 277.777C1087.76 279.9 1087.1 282.014 1086.42 284.137\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path282 || (_path282 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1090.05 265.253C1094.48 260.182 1094.86 256.369 1094.72 254.325C1094.64 253.288 1094.39 251.968 1093.86 249.309C1093.3 246.474 1092.74 244.152 1092.34 242.582\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path283 || (_path283 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1156.27 216.86C1155.93 219.761 1155.97 223.945 1158.32 228.019C1159.44 229.947 1160.33 230.567 1161.27 232.244C1162.67 234.733 1163.72 238.771 1161.66 245.355\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path284 || (_path284 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1160.79 197.197C1160.62 197.961 1160.31 199.849 1161.2 202.026C1162.07 204.152 1163.6 205.374 1164.28 205.854\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path285 || (_path285 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1167.76 215.047C1167.7 217.27 1167.9 220.597 1169.48 224.188C1171.63 229.129 1174.11 229.394 1176.44 234.011C1179.55 240.157 1178.76 246.757 1178.55 248.514C1177.97 253.397 1176.28 256.056 1177.84 259.995C1178.64 262.027 1179.95 263.479 1180.91 264.356\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path286 || (_path286 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M856.706 554.063L830.011 557.909C824.522 558.7 819.103 559.94 813.81 561.617L811.515 562.344C805.23 564.335 798.732 565.559 792.164 565.988L785.78 566.406C785.14 566.448 784.505 566.547 783.882 566.703L781.495 567.3C776.95 568.437 772.397 565.594 771.447 561.026V561.026C770.857 558.192 771.798 555.245 773.926 553.258L775.515 551.775C780.518 543.901 793.974 544.117 801.781 542.216C812.002 539.092 817.832 536.243 828.053 533.12C833.606 530.742 851.046 547.19 856.706 554.063Z\",\n    fill: \"#939393\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path287 || (_path287 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M782.609 599.166C782.448 599.883 781.712 600.253 780.978 600.224L763.899 599.559L755.589 601.213C752.119 601.903 748.792 603.195 745.759 605.03V605.03C741.105 607.846 735.788 609.366 730.367 609.429L713.399 609.628L702 608.167C699.766 607.881 697.695 606.865 696.109 605.276V605.276C691.23 600.386 692.571 592.124 698.76 588.942L707.413 584.493C712.417 576.619 721.379 582.901 729.186 581C739.407 577.876 746.413 579.403 756.634 576.279C761.929 574.011 784.425 591.112 782.609 599.166Z\",\n    fill: \"#939393\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path288 || (_path288 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M734.02 592.456C735.023 593.651 736.028 594.854 737.03 596.049C737.745 589.619 748.046 603.588 746.607 605.006C744.017 607.553 742.007 599.849 741.36 600.053C741.824 601.97 742.299 603.884 742.763 605.801L740.64 606.468L734.02 592.456Z\",\n    fill: \"black\"\n  })), _path289 || (_path289 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M741.71 590.863C743.769 592.832 745.815 594.797 747.874 596.766C753.629 607.741 747.015 606.757 741.71 590.863Z\",\n    fill: \"black\"\n  })), _path290 || (_path290 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M732.382 597.92C733.823 599.258 735.271 600.586 736.712 601.924C743.604 612.987 734.379 609.358 732.382 597.92Z\",\n    fill: \"black\"\n  })), _path291 || (_path291 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M753.748 590.335C754.366 591.224 754.985 592.119 755.603 593.008C758.133 588.774 763.998 599.041 762.212 599.859C758.998 601.328 759.283 595.997 758.604 596.075C758.498 597.398 758.404 598.721 758.299 600.044L756.072 600.299L753.748 590.335Z\",\n    fill: \"black\"\n  })), _path292 || (_path292 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M761.575 589.963C762.984 591.465 764.381 592.963 765.79 594.464C768.158 602.319 762.1 601.066 761.575 589.963Z\",\n    fill: \"black\"\n  })), _path293 || (_path293 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M750.61 593.841C751.607 594.865 752.614 595.883 753.611 596.908C757.043 604.924 749.241 601.667 750.61 593.841Z\",\n    fill: \"black\"\n  })), _path294 || (_path294 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M801.488 549.109C802.49 550.304 803.496 551.506 804.498 552.702C805.213 546.271 815.514 560.241 814.074 561.658C811.484 564.205 809.475 556.502 808.828 556.705C809.292 558.622 809.766 560.536 810.23 562.454L808.107 563.121L801.488 549.109Z\",\n    fill: \"black\"\n  })), _path295 || (_path295 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M809.177 547.516C811.237 549.485 813.283 551.449 815.342 553.418C821.097 564.393 814.483 563.41 809.177 547.516Z\",\n    fill: \"black\"\n  })), _path296 || (_path296 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M799.85 554.573C801.291 555.911 802.739 557.238 804.18 558.576C811.072 569.639 801.846 566.01 799.85 554.573Z\",\n    fill: \"black\"\n  })), _path297 || (_path297 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M821.216 546.987C821.834 547.877 822.452 548.771 823.07 549.661C825.601 545.426 831.466 555.693 829.68 556.511C826.466 557.98 826.751 552.649 826.072 552.727C825.966 554.051 825.872 555.373 825.767 556.696L823.54 556.951L821.216 546.987Z\",\n    fill: \"black\"\n  })), _path298 || (_path298 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M829.043 546.615C830.452 548.117 831.849 549.615 833.258 551.117C835.626 558.972 829.568 557.719 829.043 546.615Z\",\n    fill: \"black\"\n  })), _path299 || (_path299 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M818.078 550.494C819.074 551.518 820.082 552.536 821.079 553.56C824.511 561.577 816.709 558.32 818.078 550.494Z\",\n    fill: \"black\"\n  })), _path300 || (_path300 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M328.26 534.693C329.324 534.958 327.009 539.029 329.553 542.146C331.986 545.126 335.569 544.39 338.278 548.199C338.498 548.506 340.448 551.321 339.319 552.7C338.487 553.712 336.815 552.953 334.511 553.823C331.139 555.089 329.925 558.454 329.866 558.636C328.422 562.899 332.068 566.472 332.25 566.652C330.696 567.683 328.289 569.056 325.057 569.936C321.909 570.795 319.535 570.855 315.87 570.812C312.676 570.775 308.036 570.829 302.171 571.271C303.717 570.485 305.991 569.125 308.147 566.934C310.041 565.002 310.39 563.91 311.712 562.625C313.274 561.113 316.158 559.383 321.952 559.027C319.288 555.911 318.883 553.249 318.819 551.873C318.769 550.711 318.918 549.056 323.514 541.15C326.976 535.22 327.801 534.592 328.26 534.693Z\",\n    fill: \"#E8AE86\"\n  })), _path301 || (_path301 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M328.295 534.586C328.888 534.835 328.643 535.478 328.648 535.916C328.494 537.176 328.33 538.586 328.669 539.809C329.268 542.576 332.15 543.716 334.813 544.655C336.738 545.401 338.49 546.767 339.51 548.409C340.808 550.154 341.669 553.697 338.348 554.184C335.323 554.24 333.211 554.991 331.55 557.304C329.21 560.212 330.341 564.199 332.902 566.708L332.519 566.947C329.289 568.991 325.569 570.421 321.646 570.958C317.758 571.441 313.826 571.242 309.949 571.554C306.058 571.802 301.615 572.195 297.715 572.604L301.631 570.456C304.17 569.072 306.464 567.295 308.186 565.152C309.821 562.668 312.08 560.06 315.335 559.094C317.448 558.322 319.662 558.03 321.842 557.898L320.923 559.669C317.218 555.199 316.674 550.906 319.98 546.067C322.322 542.305 324.544 538.503 327.348 535.013C327.575 534.829 327.8 534.507 328.271 534.565L328.295 534.586ZM328.237 534.8C327.731 534.828 327.341 535.515 327.032 535.871C324.685 539.237 322.969 542.959 321.324 546.606C320.703 548.117 320.01 549.683 319.872 551.253C319.902 553.824 321.185 556.294 322.969 558.364L324.337 559.949L322.061 560.135C318.28 560.436 314.253 561.347 311.959 564.137C309.731 567.332 306.535 570.314 302.711 572.076L302.112 570.365C307.304 570.059 312.572 570.157 317.746 570.364C320.314 570.461 322.867 570.25 325.305 569.539C327.744 568.859 330.021 567.755 332.006 566.345L331.953 566.943C329.466 564.572 327.965 560.994 329.326 557.81C330.661 554.402 333.962 552.261 338.037 552.32C338.422 552.252 338.398 552.252 338.517 552.112C338.904 551.265 338.325 550.151 337.868 549.228C336.658 546.757 334.32 545.728 331.64 544.362C328.85 542.88 327.791 539.937 328.253 537.222L328.419 535.908C328.427 535.566 328.601 534.988 328.261 534.811L328.237 534.8Z\",\n    fill: \"#3C3636\"\n  })), _path302 || (_path302 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M350.24 558.97C352.143 559.812 354.192 560.844 356.304 562.1C360.406 564.537 363.607 567.146 366.033 569.454C363.051 569.115 359.146 569.118 355.198 570.647C351.311 572.154 349.636 574.244 347.184 573.835C345.614 573.576 343.634 572.276 341.904 567.603C344.996 566.041 346.841 563.107 346.637 560.079C346.391 556.562 343.414 553.503 339.319 552.697C340.063 551.419 342.313 547.947 347.074 545.907C354.27 542.835 361.197 545.624 362.142 546.029C361.152 546.872 359.686 548.287 358.577 550.338C357.267 552.743 357.499 554.063 356.229 555.7C355.385 556.776 353.75 558.161 350.24 558.97Z\",\n    fill: \"#E8AE86\"\n  })), _path303 || (_path303 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M350.361 558.991C357.511 561.19 363.675 565.737 368.771 570.66L365.899 570.373C361.229 569.905 356.596 570.579 352.511 572.739C346.277 576.652 343.508 572.759 341.556 567.714L341.457 567.459L341.732 567.317C346.503 565.032 347.491 558.811 343.416 555.637C341.893 554.279 339.789 553.695 337.712 553.4C340.651 547.071 348.012 542.6 355.844 543.447C358.752 543.658 361.523 544.575 364.092 545.783L362.91 546.735C360.534 548.62 358.946 550.953 358.026 553.706C357.109 556.693 353.746 558.749 350.361 558.98L350.361 558.991ZM350.12 558.962C350.419 558.798 350.996 558.6 351.356 558.478C353.889 557.573 356.134 555.819 356.623 553.359C357.216 550.419 358.917 547.454 361.387 545.334L361.671 546.931C357.906 545.535 353.466 545.171 349.562 546.284C345.609 547.365 342.251 549.901 340.313 553.156L339.585 551.767C345.698 552.911 349.403 559.472 346.145 564.311C345.198 565.815 343.791 567.069 342.113 567.9L342.289 567.503C342.65 568.512 343.084 569.51 343.649 570.432C345.922 574.117 348.188 574.123 351.702 571.564C355.732 568.828 361.216 567.793 366.191 568.535L365.293 570.082C363.11 567.952 360.761 565.953 358.232 564.126C355.678 562.204 352.888 560.658 350.144 558.951L350.12 558.962Z\",\n    fill: \"#3C3636\"\n  })), _path304 || (_path304 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M344.378 572.91C344.015 573.8 343.342 575.077 342.005 576.138C339.796 577.903 337.121 578.03 334.799 578.356C332.2 578.718 328.473 579.551 323.99 581.684C323.335 579.28 323.65 577.388 323.927 576.35C325.105 571.909 329.489 567.537 333.469 567.704C335.398 567.788 335.917 568.87 338.302 568.714C340.891 568.545 341.96 567.156 343.11 567.591C343.897 567.891 344.67 569.023 344.378 572.91Z\",\n    fill: \"#E8AE86\"\n  })), _path305 || (_path305 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M344.498 572.939C343.871 577.022 339.41 578.952 335.279 579.267C331.357 579.868 327.277 580.449 323.73 582.187C322.438 577.881 323.369 573.005 326.825 569.626C328.529 567.952 331.054 566.344 333.853 566.588C334.878 566.651 335.824 567.109 336.393 567.348C337.544 567.825 338.82 567.746 340.021 567.38C345.358 565.024 345.351 569.654 344.498 572.929L344.498 572.939ZM344.268 572.889C344.021 571.345 344.048 569.541 342.998 568.391C342.828 568.275 342.732 568.287 342.636 568.32C341.64 568.727 339.676 569.774 338.253 569.769C336.75 570.054 334.87 569.062 333.602 568.864C331.66 568.758 329.924 569.76 328.468 570.993C325.427 573.728 323.111 577.713 324.374 581.614L323.829 581.396C325.579 580.565 327.304 579.648 329.152 578.912C332.543 577.208 336.995 577.604 340.379 576.316C341.974 575.636 343.298 574.383 344.281 572.899L344.268 572.889Z\",\n    fill: \"#3C3636\"\n  })), _path306 || (_path306 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M338.307 569.25C343.299 569.192 347.304 565.563 347.252 561.144C347.201 556.726 343.112 553.191 338.12 553.25C333.128 553.308 329.123 556.938 329.175 561.356C329.227 565.774 333.315 569.309 338.307 569.25Z\",\n    fill: \"url(#paint0_radial_4_4)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path307 || (_path307 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M402.514 551.435C403.578 551.7 401.263 555.77 403.806 558.888C406.24 561.868 409.823 561.132 412.532 564.941C412.752 565.248 414.702 568.063 413.573 569.442C412.741 570.454 411.069 569.695 408.765 570.565C405.392 571.831 404.178 575.195 404.12 575.377C402.675 579.64 406.321 583.214 406.504 583.393C404.949 584.425 402.543 585.797 399.311 586.678C396.163 587.536 393.789 587.596 390.124 587.554C386.93 587.517 382.29 587.571 376.425 588.013C377.971 587.227 380.245 585.867 382.401 583.676C384.295 581.744 384.643 580.652 385.966 579.367C387.528 577.855 390.412 576.125 396.206 575.769C393.542 572.653 393.137 569.99 393.072 568.615C393.023 567.453 393.172 565.797 397.768 557.892C401.23 551.962 402.055 551.334 402.514 551.435Z\",\n    fill: \"#E8AE86\"\n  })), _path308 || (_path308 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M402.549 551.328C403.142 551.577 402.897 552.22 402.902 552.657C402.748 553.918 402.584 555.328 402.923 556.551C403.522 559.317 406.404 560.457 409.067 561.397C410.992 562.142 412.744 563.509 413.764 565.15C415.062 566.896 415.923 570.438 412.602 570.925C409.577 570.982 407.465 571.732 405.804 574.045C403.464 576.953 404.595 580.94 407.156 583.449L406.773 583.689C403.543 585.732 399.823 587.163 395.9 587.699C392.012 588.182 388.08 587.983 384.203 588.295C380.312 588.543 375.869 588.937 371.969 589.345L375.885 587.198C378.424 585.813 380.718 584.037 382.44 581.893C384.075 579.41 386.334 576.802 389.589 575.835C391.702 575.064 393.916 574.771 396.096 574.639L395.177 576.41C391.472 571.941 390.928 567.648 394.234 562.808C396.576 559.047 398.798 555.244 401.602 551.755C401.828 551.571 402.054 551.248 402.524 551.307L402.549 551.328ZM402.491 551.542C401.985 551.569 401.595 552.256 401.286 552.612C398.939 555.979 397.223 559.701 395.578 563.347C394.957 564.859 394.264 566.424 394.126 567.994C394.156 570.565 395.439 573.036 397.223 575.106L398.591 576.69L396.315 576.877C392.534 577.177 388.507 578.088 386.213 580.878C383.985 584.073 380.789 587.055 376.965 588.817L376.366 587.107C381.558 586.801 386.826 586.899 391.999 587.105C394.568 587.203 397.121 586.992 399.559 586.28C401.998 585.601 404.275 584.497 406.26 583.087L406.206 583.685C403.72 581.313 402.219 577.736 403.58 574.551C404.914 571.143 408.216 569.003 412.291 569.062C412.676 568.993 412.652 568.993 412.771 568.853C413.158 568.006 412.579 566.893 412.122 565.97C410.912 563.498 408.573 562.469 405.894 561.103C403.104 559.621 402.045 556.678 402.507 553.963L402.673 552.649C402.681 552.308 402.855 551.729 402.515 551.552L402.491 551.542Z\",\n    fill: \"#3C3636\"\n  })), _path309 || (_path309 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M424.493 575.714C426.396 576.556 428.445 577.588 430.557 578.843C434.659 581.281 437.86 583.889 440.286 586.197C437.305 585.859 433.399 585.862 429.452 587.391C425.564 588.898 423.889 590.987 421.437 590.579C419.867 590.32 417.887 589.02 416.157 584.346C419.249 582.784 421.095 579.85 420.89 576.823C420.644 573.305 417.667 570.246 413.572 569.441C414.316 568.162 416.566 564.69 421.327 562.65C428.523 559.579 435.45 562.367 436.395 562.772C435.405 563.616 433.939 565.031 432.83 567.081C431.52 569.486 431.752 570.807 430.482 572.443C429.639 573.52 428.004 574.905 424.493 575.714Z\",\n    fill: \"#E8AE86\"\n  })), _path310 || (_path310 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M424.614 575.735C431.764 577.934 437.928 582.481 443.024 587.403L440.152 587.117C435.482 586.649 430.849 587.322 426.764 589.482C420.53 593.396 417.761 589.502 415.809 584.458L415.71 584.203L415.985 584.061C420.756 581.775 421.744 575.555 417.669 572.381C416.146 571.022 414.042 570.439 411.965 570.143C414.904 563.814 422.265 559.343 430.097 560.19C433.005 560.402 435.776 561.319 438.345 562.526L437.163 563.479C434.787 565.363 433.199 567.697 432.279 570.449C431.362 573.436 427.999 575.492 424.614 575.724L424.614 575.735ZM424.373 575.705C424.672 575.542 425.249 575.343 425.609 575.221C428.142 574.317 430.387 572.562 430.877 570.103C431.469 567.162 433.17 564.198 435.64 562.078L435.924 563.675C432.159 562.279 427.719 561.915 423.815 563.027C419.862 564.108 416.505 566.644 414.566 569.899L413.838 568.51C419.951 569.655 423.656 576.215 420.398 581.054C419.451 582.559 418.044 583.813 416.366 584.643L416.542 584.246C416.903 585.256 417.337 586.253 417.902 587.175C420.175 590.861 422.441 590.866 425.955 588.307C429.985 585.572 435.469 584.537 440.444 585.279L439.546 586.825C437.364 584.696 435.014 582.696 432.485 580.87C429.932 578.947 427.141 577.401 424.397 575.694L424.373 575.705Z\",\n    fill: \"#3C3636\"\n  })), _path311 || (_path311 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M418.63 589.654C418.267 590.543 417.595 591.821 416.258 592.882C414.048 594.647 411.374 594.774 409.052 595.1C406.452 595.461 402.725 596.294 398.242 598.427C397.588 596.024 397.903 594.132 398.18 593.094C399.357 588.653 403.742 584.28 407.721 584.447C409.651 584.531 410.17 585.613 412.555 585.457C415.144 585.288 416.213 583.9 417.363 584.334C418.15 584.634 418.922 585.767 418.63 589.654Z\",\n    fill: \"#E8AE86\"\n  })), _path312 || (_path312 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M418.751 589.683C418.124 593.766 413.663 595.695 409.532 596.011C405.61 596.611 401.531 597.192 397.983 598.93C396.691 594.625 397.622 589.749 401.078 586.369C402.782 584.696 405.307 583.087 408.106 583.332C409.131 583.395 410.077 583.853 410.646 584.092C411.797 584.569 413.073 584.49 414.275 584.124C419.611 581.768 419.605 586.398 418.751 589.672L418.751 589.683ZM418.522 589.632C418.274 588.088 418.302 586.285 417.252 585.134C417.081 585.019 416.985 585.031 416.889 585.064C415.893 585.47 413.929 586.518 412.507 586.513C411.003 586.797 409.123 585.806 407.855 585.607C405.914 585.502 404.178 586.504 402.721 587.737C399.68 590.472 397.364 594.457 398.627 598.357L398.082 598.14C399.832 597.308 401.557 596.392 403.405 595.656C406.796 593.952 411.248 594.347 414.632 593.06C416.227 592.38 417.551 591.126 418.534 589.643L418.522 589.632Z\",\n    fill: \"#3C3636\"\n  })), _path313 || (_path313 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M412.561 585.99C417.553 585.932 421.558 582.302 421.506 577.884C421.454 573.466 417.365 569.931 412.373 569.99C407.381 570.048 403.377 573.678 403.428 578.096C403.48 582.514 407.569 586.049 412.561 585.99Z\",\n    fill: \"url(#paint1_radial_4_4)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path314 || (_path314 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M987.091 562.192C988.155 562.457 985.84 566.528 988.384 569.645C990.817 572.625 994.4 571.89 997.109 575.699C997.329 576.005 999.279 578.82 998.15 580.199C997.318 581.212 995.646 580.452 993.342 581.322C989.97 582.589 988.755 585.953 988.697 586.135C987.253 590.398 990.898 593.972 991.081 594.151C989.527 595.183 987.12 596.555 983.888 597.436C980.74 598.294 978.366 598.354 974.701 598.311C971.507 598.274 966.867 598.329 961.002 598.771C962.548 597.984 964.822 596.624 966.978 594.433C968.872 592.501 969.221 591.409 970.543 590.124C972.105 588.612 974.989 586.882 980.783 586.526C978.119 583.41 977.714 580.748 977.649 579.372C977.6 578.21 977.749 576.555 982.345 568.649C985.807 562.72 986.632 562.091 987.091 562.192Z\",\n    fill: \"#E8AE86\"\n  })), _path315 || (_path315 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M987.126 562.085C987.719 562.334 987.474 562.977 987.479 563.415C987.325 564.675 987.161 566.086 987.501 567.308C988.099 570.075 990.982 571.215 993.644 572.155C995.57 572.9 997.321 574.266 998.341 575.908C999.639 577.653 1000.5 581.196 997.179 581.683C994.154 581.739 992.042 582.49 990.381 584.803C988.041 587.711 989.172 591.698 991.733 594.207L991.35 594.446C988.12 596.49 984.4 597.92 980.477 598.457C976.589 598.94 972.657 598.741 968.78 599.053C964.89 599.301 960.446 599.695 956.546 600.103L960.462 597.955C963.001 596.571 965.295 594.794 967.017 592.651C968.652 590.168 970.911 587.559 974.166 586.593C976.279 585.822 978.493 585.529 980.673 585.397L979.754 587.168C976.049 582.698 975.505 578.405 978.811 573.566C981.154 569.805 983.375 566.002 986.179 562.512C986.406 562.328 986.631 562.006 987.102 562.064L987.126 562.085ZM987.068 562.299C986.562 562.327 986.173 563.014 985.863 563.37C983.516 566.736 981.8 570.458 980.155 574.105C979.534 575.616 978.841 577.182 978.703 578.752C978.733 581.323 980.016 583.793 981.8 585.864L983.168 587.448L980.892 587.634C977.111 587.935 973.084 588.846 970.79 591.636C968.562 594.831 965.366 597.813 961.542 599.575L960.943 597.864C966.135 597.558 971.403 597.657 976.577 597.863C979.145 597.961 981.698 597.749 984.136 597.038C986.575 596.359 988.853 595.254 990.837 593.844L990.784 594.442C988.297 592.071 986.797 588.493 988.157 585.309C989.492 581.901 992.793 579.76 996.868 579.819C997.253 579.751 997.229 579.751 997.348 579.611C997.736 578.764 997.156 577.65 996.699 576.727C995.489 574.256 993.151 573.227 990.471 571.861C987.681 570.379 986.622 567.436 987.084 564.721L987.25 563.407C987.258 563.065 987.432 562.487 987.092 562.31L987.068 562.299Z\",\n    fill: \"#3C3636\"\n  })), _path316 || (_path316 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1009.07 586.469C1010.97 587.311 1013.02 588.343 1015.13 589.599C1019.24 592.037 1022.44 594.645 1024.86 596.953C1021.88 596.614 1017.98 596.617 1014.03 598.147C1010.14 599.654 1008.47 601.743 1006.01 601.334C1004.44 601.075 1002.46 599.776 1000.73 595.102C1003.83 593.54 1005.67 590.606 1005.47 587.579C1005.22 584.061 1002.24 581.002 998.149 580.196C998.893 578.918 1001.14 575.446 1005.9 573.406C1013.1 570.334 1020.03 573.123 1020.97 573.528C1019.98 574.372 1018.52 575.786 1017.41 577.837C1016.1 580.242 1016.33 581.562 1015.06 583.199C1014.22 584.276 1012.58 585.66 1009.07 586.469Z\",\n    fill: \"#E8AE86\"\n  })), _path317 || (_path317 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1009.19 586.49C1016.34 588.689 1022.5 593.237 1027.6 598.159L1024.73 597.873C1020.06 597.405 1015.43 598.078 1011.34 600.238C1005.11 604.152 1002.34 600.258 1000.39 595.213L1000.29 594.959L1000.56 594.817C1005.33 592.531 1006.32 586.31 1002.25 583.136C1000.72 581.778 998.619 581.195 996.542 580.899C999.481 574.57 1006.84 570.099 1014.67 570.946C1017.58 571.157 1020.35 572.074 1022.92 573.282L1021.74 574.235C1019.36 576.119 1017.78 578.452 1016.86 581.205C1015.94 584.192 1012.58 586.248 1009.19 586.48L1009.19 586.49ZM1008.95 586.461C1009.25 586.297 1009.83 586.099 1010.19 585.977C1012.72 585.073 1014.96 583.318 1015.45 580.859C1016.05 577.918 1017.75 574.953 1020.22 572.833L1020.5 574.43C1016.74 573.034 1012.3 572.67 1008.39 573.783C1004.44 574.864 1001.08 577.4 999.143 580.655L998.415 579.266C1004.53 580.411 1008.23 586.971 1004.97 591.81C1004.03 593.314 1002.62 594.568 1000.94 595.399L1001.12 595.002C1001.48 596.011 1001.91 597.009 1002.48 597.931C1004.75 601.617 1007.02 601.622 1010.53 599.063C1014.56 596.328 1020.05 595.292 1025.02 596.034L1024.12 597.581C1021.94 595.452 1019.59 593.452 1017.06 591.625C1014.51 589.703 1011.72 588.157 1008.97 586.45L1008.95 586.461Z\",\n    fill: \"#3C3636\"\n  })), _path318 || (_path318 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1003.21 600.413C1002.84 601.303 1002.17 602.58 1000.84 603.641C998.626 605.406 995.952 605.534 993.629 605.859C991.03 606.221 987.303 607.054 982.82 609.187C982.165 606.783 982.481 604.891 982.758 603.853C983.935 599.412 988.319 595.04 992.299 595.207C994.229 595.291 994.748 596.373 997.132 596.217C999.722 596.048 1000.79 594.659 1001.94 595.094C1002.73 595.394 1003.5 596.526 1003.21 600.413Z\",\n    fill: \"#E8AE86\"\n  })), _path319 || (_path319 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1003.33 600.442C1002.7 604.525 998.241 606.455 994.11 606.77C990.188 607.371 986.108 607.952 982.561 609.69C981.269 605.384 982.2 600.509 985.656 597.129C987.36 595.455 989.884 593.847 992.684 594.091C993.709 594.154 994.654 594.612 995.224 594.851C996.374 595.328 997.651 595.249 998.852 594.883C1004.19 592.527 1004.18 597.157 1003.33 600.432L1003.33 600.442ZM1003.1 600.392C1002.85 598.848 1002.88 597.044 1001.83 595.894C1001.66 595.778 1001.56 595.79 1001.47 595.823C1000.47 596.23 998.507 597.277 997.084 597.272C995.581 597.557 993.701 596.565 992.433 596.367C990.491 596.261 988.755 597.263 987.299 598.496C984.258 601.231 981.942 605.216 983.205 609.117L982.66 608.899C984.41 608.068 986.135 607.151 987.983 606.415C991.374 604.711 995.826 605.107 999.21 603.819C1000.81 603.139 1002.13 601.886 1003.11 600.402L1003.1 600.392Z\",\n    fill: \"#3C3636\"\n  })), _path320 || (_path320 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M997.138 596.748C1002.13 596.689 1006.13 593.06 1006.08 588.642C1006.03 584.223 1001.94 580.689 996.951 580.748C991.959 580.806 987.954 584.435 988.005 588.854C988.057 593.272 992.146 596.806 997.138 596.748Z\",\n    fill: \"url(#paint2_radial_4_4)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path321 || (_path321 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M937.574 606.799C938.638 607.064 936.323 611.134 938.866 614.252C941.3 617.232 944.883 616.496 947.592 620.305C947.812 620.612 949.762 623.427 948.633 624.806C947.801 625.818 946.129 625.059 943.825 625.929C940.452 627.195 939.238 630.559 939.18 630.741C937.735 635.004 941.381 638.578 941.564 638.758C940.009 639.789 937.603 641.162 934.371 642.042C931.223 642.901 928.849 642.96 925.184 642.918C921.99 642.881 917.35 642.935 911.485 643.377C913.031 642.591 915.305 641.231 917.461 639.04C919.355 637.108 919.703 636.016 921.026 634.731C922.588 633.219 925.472 631.489 931.266 631.133C928.601 628.017 928.197 625.355 928.132 623.979C928.083 622.817 928.232 621.162 932.828 613.256C936.29 607.326 937.115 606.698 937.574 606.799Z\",\n    fill: \"#E8AE86\"\n  })), _path322 || (_path322 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M937.609 606.692C938.202 606.941 937.957 607.584 937.962 608.022C937.808 609.282 937.643 610.692 937.983 611.915C938.582 614.682 941.464 615.822 944.127 616.761C946.052 617.507 947.804 618.873 948.824 620.515C950.122 622.26 950.983 625.802 947.662 626.289C944.637 626.346 942.524 627.096 940.864 629.41C938.524 632.317 939.655 636.305 942.216 638.814L941.833 639.053C938.602 641.097 934.883 642.527 930.959 643.064C927.072 643.547 923.14 643.347 919.263 643.66C915.372 643.908 910.929 644.301 907.029 644.71L910.945 642.562C913.484 641.178 915.777 639.401 917.5 637.258C919.134 634.774 921.394 632.166 924.649 631.2C926.761 630.428 928.976 630.136 931.156 630.003L930.237 631.775C926.532 627.305 925.987 623.012 929.294 618.173C931.636 614.411 933.858 610.609 936.661 607.119C936.888 606.935 937.113 606.613 937.584 606.671L937.609 606.692ZM937.551 606.906C937.045 606.933 936.655 607.621 936.346 607.976C933.999 611.343 932.283 615.065 930.638 618.712C930.017 620.223 929.324 621.789 929.186 623.359C929.216 625.93 930.498 628.4 932.282 630.47L933.651 632.055L931.375 632.241C927.594 632.542 923.567 633.453 921.273 636.243C919.044 639.438 915.849 642.419 912.025 644.182L911.426 642.471C916.617 642.165 921.886 642.263 927.059 642.469C929.628 642.567 932.181 642.356 934.619 641.645C937.058 640.965 939.335 639.861 941.32 638.451L941.266 639.049C938.78 636.678 937.279 633.1 938.64 629.916C939.974 626.508 943.276 624.367 947.351 624.426C947.736 624.358 947.711 624.358 947.83 624.218C948.218 623.37 947.639 622.257 947.182 621.334C945.972 618.863 943.633 617.834 940.953 616.468C938.164 614.986 937.105 612.043 937.567 609.328L937.733 608.014C937.741 607.672 937.915 607.094 937.575 606.917L937.551 606.906Z\",\n    fill: \"#3C3636\"\n  })), _path323 || (_path323 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M959.555 631.076C961.457 631.918 963.506 632.95 965.618 634.206C969.721 636.643 972.922 639.252 975.347 641.559C972.366 641.221 968.461 641.224 964.513 642.753C960.626 644.26 958.95 646.35 956.499 645.941C954.929 645.682 952.949 644.382 951.219 639.709C954.31 638.147 956.156 635.213 955.952 632.185C955.706 628.668 952.729 625.609 948.633 624.803C949.378 623.525 951.627 620.053 956.389 618.013C963.585 614.941 970.512 617.73 971.457 618.135C970.466 618.978 969 620.393 967.891 622.444C966.581 624.849 966.814 626.169 965.543 627.805C964.7 628.882 963.065 630.267 959.555 631.076Z\",\n    fill: \"#E8AE86\"\n  })), _path324 || (_path324 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M959.676 631.097C966.825 633.296 972.99 637.843 978.086 642.766L975.214 642.479C970.543 642.011 965.911 642.684 961.826 644.845C955.592 648.758 952.822 644.865 950.871 639.82L950.771 639.565L951.047 639.423C955.817 637.138 956.805 630.917 952.73 627.743C951.208 626.385 949.103 625.801 947.027 625.506C949.966 619.177 957.326 614.706 965.159 615.553C968.066 615.764 970.837 616.681 973.407 617.889L972.225 618.841C969.848 620.725 968.26 623.059 967.34 625.812C966.423 628.799 963.06 630.855 959.676 631.086L959.676 631.097ZM959.435 631.068C959.734 630.904 960.31 630.705 960.67 630.584C963.203 629.679 965.449 627.925 965.938 625.465C966.53 622.525 968.231 619.56 970.702 617.44L970.985 619.037C967.22 617.641 962.781 617.277 958.876 618.39C954.923 619.471 951.566 622.006 949.627 625.262L948.9 623.873C955.012 625.017 958.717 631.578 955.459 636.416C954.513 637.921 953.105 639.175 951.427 640.006L951.604 639.609C951.965 640.618 952.398 641.616 952.964 642.537C955.237 646.223 957.503 646.229 961.017 643.67C965.047 640.934 970.531 639.899 975.505 640.641L974.608 642.188C972.425 640.058 970.075 638.059 967.547 636.232C964.993 634.31 962.203 632.764 959.459 631.057L959.435 631.068Z\",\n    fill: \"#3C3636\"\n  })), _path325 || (_path325 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M953.692 645.02C953.329 645.909 952.657 647.187 951.319 648.248C949.11 650.013 946.435 650.14 944.113 650.466C941.514 650.827 937.787 651.66 933.304 653.793C932.649 651.39 932.964 649.498 933.241 648.46C934.419 644.019 938.803 639.647 942.783 639.813C944.712 639.897 945.231 640.98 947.616 640.824C950.206 640.655 951.274 639.266 952.424 639.7C953.211 640.001 953.984 641.133 953.692 645.02Z\",\n    fill: \"#E8AE86\"\n  })), _path326 || (_path326 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M953.813 645.049C953.186 649.132 948.724 651.062 944.594 651.377C940.671 651.977 936.592 652.559 933.045 654.296C931.753 649.991 932.684 645.115 936.14 641.736C937.844 640.062 940.368 638.453 943.167 638.698C944.193 638.761 945.138 639.219 945.708 639.458C946.858 639.935 948.135 639.856 949.336 639.49C954.672 637.134 954.666 641.764 953.813 645.038L953.813 645.049ZM953.583 644.998C953.336 643.454 953.363 641.651 952.313 640.501C952.143 640.385 952.047 640.397 951.951 640.43C950.955 640.836 948.99 641.884 947.568 641.879C946.065 642.163 944.185 641.172 942.917 640.973C940.975 640.868 939.239 641.87 937.783 643.103C934.741 645.838 932.426 649.823 933.689 653.723L933.144 653.506C934.894 652.675 936.619 651.758 938.466 651.022C941.857 649.318 946.31 649.714 949.694 648.426C951.289 647.746 952.612 646.493 953.595 645.009L953.583 644.998Z\",\n    fill: \"#3C3636\"\n  })), _path327 || (_path327 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M947.622 641.357C952.614 641.298 956.619 637.669 956.567 633.251C956.515 628.832 952.426 625.298 947.434 625.356C942.442 625.415 938.437 629.044 938.489 633.463C938.541 637.881 942.63 641.415 947.622 641.357Z\",\n    fill: \"url(#paint3_radial_4_4)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path328 || (_path328 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M654.6 627.728C655.664 627.993 653.349 632.063 655.893 635.181C658.327 638.161 661.91 637.425 664.618 641.234C664.839 641.541 666.788 644.356 665.659 645.735C664.827 646.747 663.155 645.988 660.851 646.858C657.479 648.124 656.265 651.488 656.207 651.67C654.762 655.933 658.408 659.507 658.591 659.686C657.036 660.718 654.629 662.091 651.397 662.971C648.249 663.83 645.875 663.889 642.211 663.847C639.016 663.81 634.376 663.864 628.511 664.306C630.057 663.52 632.331 662.16 634.487 659.969C636.381 658.037 636.73 656.945 638.053 655.66C639.614 654.148 642.499 652.418 648.292 652.062C645.628 648.946 645.223 646.284 645.159 644.908C645.109 643.746 645.258 642.091 649.855 634.185C653.317 628.255 654.141 627.627 654.6 627.728Z\",\n    fill: \"#E8AE86\"\n  })), _path329 || (_path329 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M654.635 627.621C655.229 627.87 654.983 628.513 654.988 628.95C654.834 630.211 654.67 631.621 655.01 632.844C655.609 635.611 658.491 636.751 661.154 637.69C663.079 638.436 664.83 639.802 665.85 641.444C667.148 643.189 668.009 646.731 664.688 647.218C661.664 647.275 659.551 648.025 657.891 650.339C655.55 653.246 656.682 657.234 659.242 659.743L658.859 659.982C655.629 662.026 651.909 663.456 647.986 663.993C644.098 664.476 640.167 664.276 636.289 664.589C632.399 664.837 627.956 665.23 624.055 665.639L627.972 663.491C630.511 662.107 632.804 660.33 634.527 658.187C636.161 655.703 638.421 653.095 641.676 652.129C643.788 651.357 646.002 651.065 648.183 650.932L647.263 652.703C643.559 648.234 643.014 643.941 646.32 639.102C648.663 635.34 650.884 631.538 653.688 628.048C653.915 627.864 654.14 627.542 654.611 627.6L654.635 627.621ZM654.577 627.835C654.072 627.862 653.682 628.55 653.373 628.905C651.025 632.272 649.309 635.994 647.665 639.641C647.043 641.152 646.351 642.718 646.212 644.288C646.242 646.858 647.525 649.329 649.309 651.399L650.678 652.983L648.402 653.17C644.62 653.471 640.593 654.382 638.3 657.172C636.071 660.366 632.876 663.348 629.051 665.111L628.453 663.4C633.644 663.094 638.913 663.192 644.086 663.398C646.654 663.496 649.207 663.285 651.646 662.574C654.085 661.894 656.362 660.79 658.346 659.38L658.293 659.978C655.806 657.607 654.306 654.029 655.667 650.845C657.001 647.437 660.303 645.296 664.377 645.355C664.762 645.287 664.738 645.287 664.857 645.147C665.245 644.299 664.665 643.186 664.208 642.263C662.998 639.792 660.66 638.763 657.98 637.397C655.19 635.915 654.131 632.972 654.594 630.257L654.759 628.942C654.767 628.601 654.941 628.023 654.602 627.845L654.577 627.835Z\",\n    fill: \"#3C3636\"\n  })), _path330 || (_path330 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M676.581 652.009C678.483 652.851 680.532 653.883 682.644 655.138C686.747 657.576 689.948 660.184 692.373 662.492C689.392 662.154 685.487 662.157 681.539 663.686C677.652 665.193 675.977 667.282 673.525 666.874C671.955 666.615 669.975 665.315 668.245 660.641C671.336 659.08 673.182 656.145 672.978 653.118C672.732 649.6 669.755 646.541 665.66 645.736C666.404 644.458 668.653 640.985 673.415 638.945C680.611 635.874 687.538 638.662 688.483 639.067C687.492 639.911 686.026 641.326 684.917 643.377C683.608 645.782 683.84 647.102 682.569 648.738C681.726 649.815 680.091 651.2 676.581 652.009Z\",\n    fill: \"#E8AE86\"\n  })), _path331 || (_path331 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M676.702 652.03C683.851 654.229 690.016 658.776 695.112 663.699L692.24 663.412C687.57 662.944 682.937 663.617 678.852 665.777C672.618 669.691 669.848 665.798 667.897 660.753L667.797 660.498L668.073 660.356C672.844 658.071 673.831 651.85 669.756 648.676C668.234 647.317 666.13 646.734 664.053 646.438C666.992 640.11 674.353 635.639 682.185 636.486C685.092 636.697 687.863 637.614 690.433 638.821L689.251 639.774C686.874 641.658 685.286 643.992 684.366 646.744C683.449 649.732 680.086 651.787 676.702 652.019L676.702 652.03ZM676.461 652C676.76 651.837 677.336 651.638 677.697 651.517C680.229 650.612 682.475 648.858 682.964 646.398C683.557 643.457 685.257 640.493 687.728 638.373L688.012 639.97C684.247 638.574 679.807 638.21 675.902 639.322C671.949 640.403 668.592 642.939 666.654 646.194L665.926 644.805C672.039 645.95 675.743 652.51 672.486 657.349C671.539 658.854 670.131 660.108 668.454 660.938L668.63 660.542C668.991 661.551 669.425 662.549 669.99 663.47C672.263 667.156 674.529 667.162 678.043 664.603C682.073 661.867 687.557 660.832 692.532 661.574L691.634 663.121C689.451 660.991 687.101 658.992 684.573 657.165C682.019 655.243 679.229 653.696 676.485 651.99L676.461 652Z\",\n    fill: \"#3C3636\"\n  })), _path332 || (_path332 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M670.718 665.947C670.355 666.837 669.683 668.114 668.346 669.175C666.136 670.94 663.462 671.067 661.14 671.393C658.54 671.754 654.813 672.588 650.33 674.72C649.676 672.317 649.991 670.425 650.268 669.387C651.445 664.946 655.83 660.574 659.809 660.74C661.739 660.825 662.258 661.907 664.643 661.751C667.232 661.582 668.301 660.193 669.451 660.627C670.238 660.928 671.01 662.06 670.718 665.947Z\",\n    fill: \"#E8AE86\"\n  })), _path333 || (_path333 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M670.839 665.976C670.212 670.059 665.751 671.989 661.62 672.304C657.698 672.904 653.619 673.486 650.071 675.223C648.779 670.918 649.71 666.042 653.166 662.663C654.87 660.989 657.395 659.38 660.194 659.625C661.219 659.688 662.165 660.146 662.734 660.385C663.885 660.862 665.162 660.783 666.363 660.417C671.699 658.061 671.693 662.691 670.839 665.965L670.839 665.976ZM670.61 665.925C670.363 664.381 670.39 662.578 669.34 661.428C669.17 661.312 669.073 661.324 668.977 661.357C667.982 661.763 666.017 662.811 664.595 662.806C663.091 663.09 661.211 662.099 659.944 661.9C658.002 661.795 656.266 662.797 654.81 664.03C651.768 666.765 649.452 670.75 650.715 674.65L650.17 674.433C651.92 673.602 653.645 672.685 655.493 671.949C658.884 670.245 663.337 670.641 666.72 669.353C668.316 668.673 669.639 667.42 670.622 665.936L670.61 665.925Z\",\n    fill: \"#3C3636\"\n  })), _path334 || (_path334 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M664.648 662.282C669.64 662.224 673.645 658.595 673.593 654.176C673.542 649.758 669.453 646.223 664.461 646.282C659.469 646.34 655.464 649.97 655.516 654.388C655.568 658.806 659.656 662.341 664.648 662.282Z\",\n    fill: \"url(#paint4_radial_4_4)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path335 || (_path335 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M583.628 634.722C584.692 634.987 582.377 639.057 584.921 642.174C587.355 645.154 590.938 644.419 593.646 648.228C593.867 648.535 595.816 651.35 594.687 652.728C593.856 653.741 592.183 652.982 589.879 653.851C586.507 655.118 585.293 658.482 585.235 658.664C583.79 662.927 587.436 666.501 587.619 666.68C586.064 667.712 583.657 669.084 580.425 669.965C577.277 670.823 574.904 670.883 571.239 670.841C568.044 670.803 563.404 670.858 557.539 671.3C559.085 670.514 561.359 669.153 563.515 666.962C565.409 665.031 565.758 663.938 567.081 662.653C568.642 661.141 571.527 659.411 577.32 659.055C574.656 655.939 574.251 653.277 574.187 651.902C574.137 650.739 574.287 649.084 578.883 641.178C582.345 635.249 583.169 634.62 583.628 634.722Z\",\n    fill: \"#E8AE86\"\n  })), _path336 || (_path336 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M583.663 634.615C584.257 634.864 584.011 635.507 584.016 635.944C583.862 637.205 583.698 638.615 584.038 639.838C584.637 642.604 587.519 643.744 590.182 644.684C592.107 645.429 593.859 646.796 594.878 648.437C596.176 650.182 597.037 653.725 593.716 654.212C590.692 654.269 588.579 655.019 586.919 657.332C584.578 660.24 585.71 664.227 588.27 666.736L587.888 666.976C584.657 669.019 580.937 670.45 577.014 670.986C573.127 671.469 569.195 671.27 565.317 671.582C561.427 671.83 556.984 672.224 553.083 672.632L557 670.485C559.539 669.1 561.832 667.324 563.555 665.18C565.189 662.697 567.449 660.089 570.704 659.122C572.816 658.351 575.031 658.058 577.211 657.926L576.291 659.697C572.587 655.228 572.042 650.935 575.348 646.095C577.691 642.334 579.912 638.531 582.716 635.042C582.943 634.858 583.168 634.535 583.639 634.594L583.663 634.615ZM583.606 634.829C583.1 634.856 582.71 635.543 582.401 635.899C580.054 639.266 578.337 642.988 576.693 646.634C576.071 648.146 575.379 649.711 575.24 651.281C575.271 653.852 576.553 656.323 578.337 658.393L579.706 659.977L577.43 660.164C573.648 660.464 569.621 661.375 567.328 664.165C565.099 667.36 561.904 670.342 558.079 672.104L557.481 670.394C562.672 670.088 567.941 670.186 573.114 670.392C575.682 670.49 578.235 670.279 580.674 669.567C583.113 668.888 585.39 667.784 587.374 666.374L587.321 666.972C584.834 664.6 583.334 661.023 584.695 657.838C586.029 654.43 589.331 652.29 593.405 652.349C593.79 652.28 593.766 652.28 593.885 652.14C594.273 651.293 593.693 650.18 593.237 649.257C592.026 646.785 589.688 645.756 587.008 644.39C584.218 642.908 583.159 639.965 583.622 637.25L583.787 635.936C583.795 635.595 583.969 635.016 583.63 634.839L583.606 634.829Z\",\n    fill: \"#3C3636\"\n  })), _path337 || (_path337 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M605.609 659.001C607.511 659.842 609.56 660.875 611.672 662.13C615.775 664.568 618.975 667.176 621.401 669.484C618.42 669.145 614.515 669.149 610.567 670.678C606.679 672.185 605.004 674.274 602.553 673.865C600.983 673.606 599.003 672.307 597.272 667.633C600.364 666.071 602.21 663.137 602.006 660.11C601.76 656.592 598.783 653.533 594.687 652.728C595.432 651.449 597.681 647.977 602.442 645.937C609.638 642.865 616.566 645.654 617.51 646.059C616.52 646.903 615.054 648.318 613.945 650.368C612.635 652.773 612.868 654.093 611.597 655.73C610.754 656.807 609.119 658.191 605.609 659.001Z\",\n    fill: \"#E8AE86\"\n  })), _path338 || (_path338 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M605.73 659.021C612.879 661.221 619.043 665.768 624.139 670.69L621.267 670.404C616.597 669.936 611.965 670.609 607.88 672.769C601.646 676.683 598.876 672.789 596.924 667.745L596.825 667.49L597.101 667.348C601.871 665.062 602.859 658.842 598.784 655.667C597.261 654.309 595.157 653.726 593.08 653.43C596.02 647.101 603.38 642.63 611.213 643.477C614.12 643.689 616.891 644.606 619.46 645.813L618.278 646.766C615.902 648.65 614.314 650.983 613.394 653.736C612.477 656.723 609.114 658.779 605.73 659.011L605.73 659.021ZM605.488 658.992C605.788 658.829 606.364 658.63 606.724 658.508C609.257 657.604 611.502 655.849 611.992 653.39C612.584 650.449 614.285 647.485 616.755 645.365L617.039 646.962C613.274 645.565 608.834 645.201 604.93 646.314C600.977 647.395 597.62 649.931 595.681 653.186L594.954 651.797C601.066 652.942 604.771 659.502 601.513 664.341C600.566 665.846 599.159 667.1 597.481 667.93L597.657 667.533C598.019 668.543 598.452 669.54 599.017 670.462C601.291 674.148 603.557 674.153 607.07 671.594C611.1 668.859 616.585 667.824 621.559 668.565L620.661 670.112C618.479 667.983 616.129 665.983 613.601 664.157C611.047 662.234 608.256 660.688 605.512 658.981L605.488 658.992Z\",\n    fill: \"#3C3636\"\n  })), _path339 || (_path339 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M599.746 672.94C599.382 673.83 598.71 675.107 597.373 676.169C595.164 677.933 592.489 678.061 590.167 678.387C587.567 678.748 583.841 679.581 579.358 681.714C578.703 679.311 579.018 677.419 579.295 676.38C580.473 671.939 584.857 667.567 588.837 667.734C590.766 667.818 591.285 668.9 593.67 668.744C596.259 668.575 597.328 667.186 598.478 667.621C599.265 667.921 600.038 669.054 599.746 672.94Z\",\n    fill: \"#E8AE86\"\n  })), _path340 || (_path340 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M599.867 672.97C599.239 677.053 594.778 678.982 590.648 679.298C586.725 679.898 582.646 680.479 579.098 682.217C577.806 677.912 578.738 673.036 582.194 669.656C583.898 667.983 586.422 666.374 589.221 666.619C590.247 666.682 591.192 667.14 591.761 667.379C592.912 667.856 594.189 667.777 595.39 667.411C600.726 665.054 600.72 669.685 599.866 672.959L599.867 672.97ZM599.637 672.919C599.39 671.375 599.417 669.572 598.367 668.421C598.197 668.306 598.1 668.318 598.004 668.351C597.009 668.757 595.044 669.804 593.622 669.8C592.119 670.084 590.239 669.093 588.971 668.894C587.029 668.789 585.293 669.791 583.837 671.024C580.795 673.759 578.479 677.744 579.743 681.644L579.198 681.427C580.948 680.595 582.673 679.679 584.52 678.943C587.911 677.239 592.364 677.634 595.748 676.347C597.343 675.666 598.666 674.413 599.649 672.93L599.637 672.919Z\",\n    fill: \"#3C3636\"\n  })), _path341 || (_path341 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M593.676 669.278C598.668 669.22 602.672 665.59 602.621 661.172C602.569 656.754 598.48 653.219 593.488 653.278C588.496 653.336 584.491 656.965 584.543 661.384C584.595 665.802 588.684 669.337 593.676 669.278Z\",\n    fill: \"url(#paint5_radial_4_4)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path342 || (_path342 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M514.234 605.6C515.298 605.865 512.983 609.935 515.527 613.053C517.96 616.033 521.543 615.297 524.252 619.106C524.472 619.413 526.422 622.228 525.293 623.607C524.461 624.619 522.789 623.86 520.485 624.73C517.113 625.996 515.899 629.36 515.84 629.542C514.396 633.805 518.042 637.379 518.224 637.558C516.67 638.59 514.263 639.962 511.031 640.843C507.883 641.702 505.509 641.761 501.844 641.719C498.65 641.682 494.01 641.736 488.145 642.178C489.691 641.392 491.965 640.032 494.121 637.841C496.015 635.909 496.364 634.817 497.686 633.532C499.248 632.02 502.132 630.29 507.926 629.934C505.262 626.818 504.857 624.155 504.793 622.78C504.743 621.618 504.892 619.962 509.488 612.057C512.95 606.127 513.775 605.499 514.234 605.6Z\",\n    fill: \"#E8AE86\"\n  })), _path343 || (_path343 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M514.269 605.493C514.863 605.742 514.617 606.385 514.622 606.823C514.468 608.083 514.304 609.493 514.644 610.716C515.243 613.483 518.125 614.623 520.787 615.562C522.713 616.308 524.464 617.674 525.484 619.316C526.782 621.061 527.643 624.604 524.322 625.091C521.297 625.147 519.185 625.898 517.524 628.211C515.184 631.119 516.316 635.106 518.876 637.615L518.493 637.854C515.263 639.898 511.543 641.328 507.62 641.865C503.732 642.348 499.801 642.149 495.923 642.461C492.033 642.709 487.59 643.102 483.689 643.511L487.605 641.363C490.144 639.979 492.438 638.202 494.16 636.059C495.795 633.575 498.054 630.967 501.309 630.001C503.422 629.229 505.636 628.937 507.816 628.805L506.897 630.576C503.192 626.106 502.648 621.813 505.954 616.974C508.297 613.212 510.518 609.41 513.322 605.92C513.549 605.736 513.774 605.414 514.245 605.472L514.269 605.493ZM514.211 605.707C513.705 605.735 513.316 606.422 513.006 606.778C510.659 610.144 508.943 613.866 507.298 617.513C506.677 619.024 505.984 620.59 505.846 622.16C505.876 624.731 507.159 627.201 508.943 629.271L510.311 630.856L508.035 631.042C504.254 631.343 500.227 632.254 497.933 635.044C495.705 638.239 492.509 641.221 488.685 642.983L488.086 641.272C493.278 640.966 498.546 641.064 503.72 641.271C506.288 641.368 508.841 641.157 511.28 640.446C513.718 639.766 515.996 638.662 517.98 637.252L517.927 637.85C515.44 635.479 513.94 631.901 515.3 628.717C516.635 625.309 519.936 623.168 524.011 623.227C524.396 623.159 524.372 623.159 524.491 623.019C524.879 622.172 524.299 621.058 523.842 620.135C522.632 617.664 520.294 616.635 517.614 615.269C514.824 613.787 513.765 610.844 514.228 608.129L514.393 606.815C514.401 606.473 514.575 605.895 514.235 605.718L514.211 605.707Z\",\n    fill: \"#3C3636\"\n  })), _path344 || (_path344 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M536.214 629.873C538.116 630.715 540.165 631.747 542.277 633.003C546.38 635.44 549.58 638.049 552.006 640.357C549.025 640.018 545.12 640.021 541.172 641.55C537.284 643.057 535.609 645.147 533.158 644.738C531.588 644.479 529.608 643.179 527.878 638.506C530.969 636.944 532.815 634.01 532.611 630.982C532.365 627.465 529.388 624.406 525.292 623.6C526.037 622.322 528.286 618.85 533.047 616.81C540.243 613.738 547.171 616.527 548.116 616.932C547.125 617.775 545.659 619.19 544.55 621.241C543.24 623.646 543.473 624.966 542.202 626.603C541.359 627.679 539.724 629.064 536.214 629.873Z\",\n    fill: \"#E8AE86\"\n  })), _path345 || (_path345 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M536.334 629.894C543.484 632.093 549.648 636.64 554.744 641.563L551.872 641.276C547.202 640.808 542.569 641.481 538.484 643.642C532.25 647.555 529.481 643.662 527.529 638.617L527.43 638.362L527.705 638.22C532.476 635.935 533.464 629.714 529.388 626.54C527.866 625.182 525.762 624.598 523.685 624.303C526.624 617.974 533.985 613.503 541.817 614.35C544.725 614.561 547.496 615.478 550.065 616.686L548.883 617.638C546.506 619.522 544.919 621.856 543.999 624.609C543.081 627.596 539.719 629.652 536.334 629.883L536.334 629.894ZM536.093 629.865C536.392 629.701 536.969 629.502 537.329 629.381C539.861 628.476 542.107 626.722 542.596 624.262C543.189 621.322 544.89 618.357 547.36 616.237L547.644 617.834C543.879 616.438 539.439 616.074 535.535 617.187C531.582 618.268 528.224 620.803 526.286 624.059L525.558 622.67C531.671 623.814 535.376 630.375 532.118 635.214C531.171 636.718 529.763 637.972 528.086 638.803L528.262 638.406C528.623 639.415 529.057 640.413 529.622 641.334C531.895 645.02 534.161 645.026 537.675 642.467C541.705 639.731 547.189 638.696 552.164 639.438L551.266 640.985C549.083 638.855 546.734 636.856 544.205 635.029C541.651 633.107 538.861 631.561 536.117 629.854L536.093 629.865Z\",\n    fill: \"#3C3636\"\n  })), _path346 || (_path346 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M530.35 643.819C529.987 644.708 529.315 645.986 527.977 647.047C525.768 648.812 523.094 648.939 520.771 649.265C518.172 649.626 514.445 650.459 509.962 652.592C509.307 650.189 509.623 648.297 509.9 647.259C511.077 642.818 515.462 638.446 519.441 638.612C521.371 638.696 521.89 639.778 524.274 639.623C526.864 639.453 527.932 638.065 529.083 638.499C529.869 638.8 530.642 639.932 530.35 643.819Z\",\n    fill: \"#E8AE86\"\n  })), _path347 || (_path347 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M530.471 643.848C529.844 647.931 525.383 649.861 521.252 650.176C517.33 650.776 513.25 651.358 509.703 653.095C508.411 648.79 509.342 643.914 512.798 640.534C514.502 638.861 517.026 637.252 519.826 637.497C520.851 637.56 521.796 638.018 522.366 638.257C523.516 638.734 524.793 638.655 525.994 638.289C531.33 635.933 531.324 640.563 530.471 643.837L530.471 643.848ZM530.241 643.797C529.994 642.253 530.021 640.45 528.971 639.299C528.801 639.184 528.705 639.196 528.609 639.229C527.613 639.635 525.649 640.683 524.226 640.678C522.723 640.962 520.843 639.971 519.575 639.772C517.633 639.667 515.897 640.669 514.441 641.902C511.4 644.637 509.084 648.622 510.347 652.522L509.802 652.305C511.552 651.473 513.277 650.557 515.125 649.821C518.516 648.117 522.968 648.513 526.352 647.225C527.947 646.545 529.27 645.292 530.254 643.808L530.241 643.797Z\",\n    fill: \"#3C3636\"\n  })), _path348 || (_path348 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M524.281 640.152C529.273 640.093 533.278 636.464 533.226 632.046C533.174 627.627 529.086 624.093 524.094 624.152C519.102 624.21 515.097 627.839 515.149 632.258C515.2 636.676 519.289 640.21 524.281 640.152Z\",\n    fill: \"url(#paint6_radial_4_4)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint0_radial_4_4\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(338.214 561.25) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint1_radial_4_4\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(412.467 577.99) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint2_radial_4_4\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(997.044 588.748) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint3_radial_4_4\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(947.528 633.357) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint4_radial_4_4\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(664.555 654.282) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint5_radial_4_4\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(593.582 661.278) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint6_radial_4_4\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(524.187 632.152) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGameBackground);\nexport default __webpack_public_path__ + \"static/media/GameBackground.da3fa9568336c5cc5215313727bc4971.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103, _path104, _path105, _path106, _path107, _path108, _path109, _path110, _path111, _path112, _path113, _path114, _path115, _path116, _path117, _path118, _path119, _path120, _path121, _path122, _path123, _path124, _path125, _path126, _path127, _path128, _path129, _path130, _path131, _path132, _path133, _path134, _path135, _path136, _path137, _path138, _path139, _path140, _path141, _path142, _path143, _path144, _path145, _path146, _path147, _path148, _path149, _path150, _path151, _path152, _path153, _path154, _path155, _path156, _path157, _path158, _path159, _path160, _path161, _path162, _path163, _path164, _path165, _path166, _path167, _path168, _path169, _path170, _path171, _path172, _path173, _path174, _path175, _path176, _path177, _path178, _path179, _path180, _path181, _path182, _path183, _path184, _path185, _path186, _path187, _path188, _path189, _path190, _path191, _path192, _path193, _path194, _path195, _path196, _path197, _path198, _path199, _path200, _path201, _path202, _path203, _path204, _path205, _path206, _path207, _path208, _path209, _path210, _path211, _path212, _path213, _path214, _path215, _path216, _path217, _path218, _path219, _path220, _path221, _path222, _path223, _path224, _path225, _path226, _path227, _path228, _path229, _path230, _path231, _path232, _path233, _path234, _path235, _path236, _path237, _path238, _path239, _path240, _path241, _path242, _path243, _path244, _path245, _path246, _path247, _path248, _path249, _path250, _path251, _path252, _path253, _path254, _path255, _path256, _path257, _path258, _path259, _path260, _path261, _path262, _path263, _path264, _path265, _path266, _path267, _path268, _path269, _path270, _path271, _path272, _path273, _path274, _path275, _path276, _path277, _path278, _path279, _path280, _path281, _path282, _path283, _path284, _path285, _path286, _path287, _path288, _path289, _path290, _path291, _path292, _path293, _path294, _path295, _path296, _path297, _path298, _path299, _path300, _path301, _path302, _path303, _path304, _path305, _path306, _path307, _path308, _path309, _path310, _path311, _path312, _path313, _path314, _path315, _path316, _path317, _path318, _path319, _path320, _path321, _path322, _path323, _path324, _path325, _path326, _path327, _path328, _path329, _path330, _path331, _path332, _path333, _path334, _path335, _path336, _path337, _path338, _path339, _path340, _path341, _path342, _path343, _path344, _path345, _path346, _path347, _path348, _path349, _path350, _path351, _path352, _path353, _path354, _path355, _path356, _path357, _path358, _path359, _path360, _path361, _path362, _path363, _path364, _path365, _path366, _path367, _path368, _path369, _path370, _path371, _path372, _path373, _path374, _path375, _path376, _path377, _path378, _path379, _path380, _path381, _path382, _path383, _path384, _path385, _path386, _path387, _path388, _path389, _path390, _path391, _path392, _path393, _path394, _path395, _path396, _path397, _path398, _path399, _path400, _path401, _path402, _path403, _path404, _path405, _path406, _path407, _path408, _path409, _path410, _path411, _path412, _path413, _path414, _path415, _path416, _path417, _path418, _path419, _path420, _path421, _path422, _path423, _path424, _path425, _path426, _path427, _path428, _path429, _path430, _path431, _path432, _path433, _path434, _path435, _path436, _path437, _path438, _path439, _path440, _path441, _path442, _path443, _path444, _path445, _path446, _path447, _path448, _path449, _path450, _path451, _path452, _path453, _path454, _path455, _path456, _path457, _path458, _path459, _path460, _path461, _path462, _path463, _path464, _path465, _path466, _path467, _path468, _path469, _path470, _path471, _path472, _path473, _path474, _path475, _path476, _path477, _path478, _path479, _path480, _path481, _path482, _path483, _path484, _path485, _path486, _path487, _path488, _path489, _path490, _path491, _path492, _path493, _path494, _path495, _path496, _path497, _path498, _path499, _path500, _path501, _path502, _path503, _path504, _path505, _path506, _path507, _path508, _path509, _path510, _path511, _path512, _path513, _path514, _path515, _path516, _path517, _path518, _path519, _path520, _path521, _path522, _path523, _path524, _path525, _path526, _path527, _path528, _path529, _path530, _path531, _path532, _path533, _path534, _path535, _path536, _path537, _path538, _path539, _path540, _path541, _path542, _path543, _path544, _path545, _path546, _path547, _path548, _path549, _path550, _path551, _path552, _path553, _path554, _path555, _path556, _path557, _path558, _path559, _path560, _path561, _path562, _path563, _path564, _path565, _path566, _path567, _path568, _path569, _path570, _path571, _path572, _path573, _path574, _path575, _path576, _path577, _path578, _path579, _path580, _path581, _path582, _path583, _path584, _path585, _path586, _path587, _path588, _path589, _path590, _path591, _path592, _path593, _path594, _path595, _path596, _path597, _path598, _path599, _path600, _path601, _path602, _path603, _path604, _path605, _path606, _path607, _path608, _path609, _path610, _path611, _path612, _path613, _path614, _path615, _path616, _path617, _path618, _path619, _path620, _path621, _path622, _path623, _path624, _path625, _path626, _path627, _path628, _path629, _path630, _path631, _path632, _path633, _path634, _path635, _path636, _path637, _path638, _path639, _path640, _path641, _path642, _path643, _path644, _path645, _path646, _path647, _path648, _path649, _path650, _path651, _path652, _path653, _path654, _path655, _path656, _path657, _path658, _path659, _path660, _path661, _path662, _path663, _path664, _path665, _path666, _path667, _path668, _path669, _path670, _path671, _path672, _path673, _path674, _path675, _path676, _path677, _path678, _path679, _path680, _path681, _path682, _path683, _path684, _path685, _path686, _path687, _path688, _path689, _path690, _path691, _path692, _path693, _path694, _path695, _path696, _path697, _path698, _path699, _path700, _path701, _path702, _path703, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgGameBackgroundWide(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 2086,\n    height: 906,\n    viewBox: \"0 0 2086 906\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M750.998 62.5447C777.964 58.7882 782.624 81.2973 785.104 81.9622C790.505 82.9147 791.919 77.0914 797.669 76.1678C811.157 73.9976 821.806 82.5511 821.136 94.7713C822.118 96.798 833.74 97.7526 831.683 113.521C832.28 114.399 840.04 113.492 840.977 120.447C847.253 120.8 852.603 128.055 850.046 133.518C850.665 135.626 864.91 135.189 859.265 142.492L675.277 137.279C681.066 130.964 690.423 128.124 699.209 127.706C700.931 120.518 709.307 120.878 710.727 119.832C713.346 117.897 713.661 112.648 721.739 110.406C709.844 99.3674 715.006 87.4691 730.6 82.9804C729.324 74.5286 742.938 63.6694 750.998 62.5447ZM753.167 64.6562C745.196 65.4965 730.163 75.5671 735.05 84.1316C706.026 91.0279 721.225 110.022 726.843 109.013C729.206 108.588 740.456 76.32 761.341 102.303C744.448 86.3455 723.761 104.836 733.127 121.492C725.601 109.214 720.274 108.694 714.018 121.975C699.631 122.911 702.365 129.251 701.378 129.818C700.61 130.268 687.272 130.166 684.364 134.461C742.134 136.272 799.905 138.073 857.675 139.884C855.459 134.747 848.282 138.767 847.653 137.55C844.685 131.777 852.921 115.025 830.039 127.826C848.393 114.477 826.909 116.646 825.999 115.41C832.867 108.142 828.386 99.5178 818.78 97.7798C821.855 79.6823 797.24 69.7593 789.405 87.2093C775.222 80.1035 776.762 62.1881 753.167 64.6562Z\",\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M753.166 64.6575C776.761 62.1893 775.221 80.1048 789.405 87.2105C797.239 69.7605 821.854 79.6835 818.78 97.781C828.386 99.519 832.867 108.144 825.998 115.412C826.908 116.647 848.392 114.478 830.038 127.827C852.92 115.026 844.685 131.778 847.652 137.551C848.282 138.769 855.458 134.749 857.675 139.885C799.904 138.074 742.133 136.273 684.363 134.462C687.271 130.168 700.609 130.269 701.378 129.819C702.364 129.252 699.631 122.912 714.017 121.977C720.274 108.695 725.6 109.215 733.126 121.493C723.761 104.837 744.447 86.3467 761.34 102.304C740.455 76.3213 729.206 108.589 726.843 109.014C721.225 110.024 706.026 91.0292 735.049 84.1328C730.162 75.5683 745.196 65.4977 753.166 64.6575Z\",\n    fill: \"white\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M635.466 148.894C670.462 145.119 672.908 175.387 680.567 174.774C682.11 174.653 687.841 164.063 704.462 166.225C723.05 168.638 723.541 189.389 724.34 190.877C725.223 192.522 742.201 197.841 735.86 213.755C749.449 216.498 747.777 222.314 748.444 222.825C757.059 224.319 764.838 232.75 760.692 241.11C761.327 242.194 775.074 239.99 773.819 250.708C694.72 248.641 615.622 246.564 536.523 244.497C550.176 230.41 564.36 237.792 573.17 225.034C586.484 223.32 584.569 214.235 596.747 209.813C580.408 197.142 588.221 179.035 608.112 175.283C606.219 163.154 623.278 150.209 635.466 148.894ZM635.354 151.966C623.467 153.321 608.222 166.102 611.946 177.955C588.557 179.988 583.969 201.743 602.973 208.452C610.235 185.143 636.609 182.221 645.547 195.82C655.081 210.318 642.308 195.646 641.639 195.197C633.344 189.539 621.034 191.128 614.023 198.002C609.55 202.386 608.436 209.242 606.694 214.195C617.146 232.174 606.704 224.098 603.403 212.052C602.478 211.852 601.542 211.661 600.617 211.461C593.585 214.603 586.656 217.666 585.51 225.383C568.283 226.31 571.572 234.655 570.553 235.21C569.441 235.814 550.546 235.986 546.732 241.711C621.343 243.65 695.954 245.601 770.565 247.54C766.923 242.086 757.83 246.298 757.177 245.111C760.259 238.207 756.871 226.395 749.454 225.928C745.076 228.029 740.687 230.119 736.31 232.219C761.919 209.932 717.256 223.161 733.653 212.667C735.999 194.836 721.439 194.988 720.862 193.854C723.923 171.512 693.938 158.259 682.624 179.957C679.136 177.982 675.66 175.998 672.171 174.023C670.674 172.279 665.847 148.494 635.354 151.966Z\",\n    fill: \"black\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M635.354 151.964C665.848 148.492 670.675 172.277 672.172 174.021C675.66 175.995 679.137 177.98 682.625 179.955C693.938 158.257 723.923 171.51 720.863 193.852C721.439 194.985 735.999 194.834 733.654 212.665C717.257 223.158 761.919 209.929 736.31 232.216C740.688 230.116 745.077 228.026 749.454 225.926C756.872 226.392 760.26 238.205 757.178 245.108C757.831 246.296 766.924 242.084 770.566 247.538C695.955 245.598 621.344 243.648 546.733 241.708C550.546 235.984 569.442 235.812 570.553 235.208C571.573 234.652 568.283 226.307 585.511 225.381C586.657 217.664 593.585 214.601 600.618 211.458C601.543 211.659 602.479 211.849 603.404 212.05C606.705 224.095 617.146 232.171 606.695 214.193C608.436 209.24 609.551 202.383 614.023 198C621.035 191.125 633.345 189.537 641.64 195.194C642.309 195.644 655.082 210.316 645.548 195.818C636.61 182.218 610.236 185.141 602.974 208.45C583.969 201.74 588.558 179.985 611.946 177.952C608.223 166.099 623.468 153.318 635.354 151.964Z\",\n    fill: \"white\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1322.98 42.8999C1349.95 39.1434 1354.61 61.6526 1357.09 62.3174C1362.49 63.27 1363.9 57.4467 1369.65 56.523C1383.14 54.3528 1393.79 62.9063 1393.12 75.1265C1394.1 77.1532 1405.72 78.1078 1403.66 93.8765C1404.26 94.7545 1412.02 93.8468 1412.96 100.803C1419.23 101.155 1424.58 108.41 1422.03 113.873C1422.65 115.982 1436.89 115.545 1431.25 122.847L1247.26 117.634C1253.05 111.32 1262.4 108.479 1271.19 108.061C1272.91 100.873 1281.29 101.234 1282.71 100.187C1285.33 98.2524 1285.64 93.0028 1293.72 90.7613C1281.83 79.7226 1286.99 67.8244 1302.58 63.3357C1301.31 54.8838 1314.92 44.0246 1322.98 42.8999ZM1325.15 45.0115C1317.18 45.8517 1302.14 55.9223 1307.03 64.4868C1278.01 71.3832 1293.21 90.3777 1298.82 89.3683C1301.19 88.9432 1312.44 56.6753 1333.32 82.6578C1316.43 66.7007 1295.74 85.191 1305.11 101.847C1297.58 89.5689 1292.26 89.0489 1286 102.331C1271.61 103.266 1274.35 109.606 1273.36 110.173C1272.59 110.623 1259.25 110.522 1256.35 114.816C1314.12 116.627 1371.89 118.428 1429.66 120.24C1427.44 115.103 1420.26 119.123 1419.63 117.905C1416.67 112.132 1424.9 95.3803 1402.02 108.181C1420.37 94.8317 1398.89 97.0009 1397.98 95.7656C1404.85 88.4977 1400.37 79.873 1390.76 78.135C1393.84 60.0375 1369.22 50.1145 1361.39 67.5646C1347.2 60.4588 1348.74 42.5433 1325.15 45.0115Z\",\n    fill: \"black\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1325.15 45.0127C1348.74 42.5446 1347.2 60.46 1361.39 67.5658C1369.22 50.1157 1393.84 60.0387 1390.76 78.1362C1400.37 79.8742 1404.85 88.4989 1397.98 95.7668C1398.89 97.0021 1420.37 94.8329 1402.02 108.182C1424.9 95.3815 1416.67 112.133 1419.63 117.907C1420.26 119.124 1427.44 115.104 1429.66 120.241C1371.89 118.43 1314.12 116.629 1256.34 114.817C1259.25 110.523 1272.59 110.624 1273.36 110.174C1274.35 109.608 1271.61 103.267 1286 102.332C1292.26 89.0501 1297.58 89.5701 1305.11 101.848C1295.74 85.1922 1316.43 66.7019 1333.32 82.659C1312.44 56.6765 1301.19 88.9444 1298.82 89.3695C1293.21 90.3789 1278.01 71.3844 1307.03 64.488C1302.14 55.9235 1317.18 45.8529 1325.15 45.0127Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1025.53 29.3498C1043.44 27.418 1044.69 42.907 1048.61 42.5932C1049.4 42.5316 1052.33 37.1121 1060.84 38.2186C1070.35 39.4533 1070.6 50.0723 1071.01 50.834C1071.46 51.6756 1080.15 54.3977 1076.9 62.5413C1083.86 63.9449 1083 66.9211 1083.34 67.1826C1087.75 67.9475 1091.73 72.262 1089.61 76.54C1089.93 77.0947 1096.97 75.9669 1096.33 81.4513C1055.85 80.3936 1015.37 79.3306 974.895 78.2729C981.882 71.064 989.14 74.842 993.648 68.313C1000.46 67.436 999.482 62.7868 1005.71 60.5242C997.352 54.0398 1001.35 44.774 1011.53 42.854C1010.56 36.6472 1019.29 30.0228 1025.53 29.3498ZM1025.47 30.9218C1019.39 31.615 1011.59 38.1555 1013.49 44.221C1001.52 45.2614 999.174 56.3942 1008.9 59.8277C1012.62 47.8996 1026.11 46.4041 1030.69 53.3634C1035.57 60.7826 1029.03 53.2745 1028.69 53.0445C1024.44 50.1493 1018.14 50.9622 1014.55 54.48C1012.27 56.7232 1011.7 60.2321 1010.8 62.7667C1016.15 71.9669 1010.81 67.8341 1009.12 61.6699C1008.65 61.5673 1008.17 61.4698 1007.69 61.3672C1004.1 62.9753 1000.55 64.5429 999.963 68.492C991.147 68.9661 992.831 73.2365 992.309 73.5207C991.74 73.8298 982.071 73.9178 980.119 76.8472C1018.3 77.8399 1056.48 78.8378 1094.66 79.8305C1092.8 77.0395 1088.15 79.1947 1087.81 78.5872C1089.39 75.0544 1087.65 69.0096 1083.86 68.7709C1081.62 69.8457 1079.37 70.9151 1077.13 71.9899C1090.24 60.5849 1067.38 67.3546 1075.77 61.9848C1076.97 52.86 1069.52 52.9374 1069.23 52.3572C1070.79 40.9242 1055.45 34.1423 1049.66 45.2458C1047.87 44.2353 1046.1 43.2197 1044.31 42.2091C1043.54 41.3167 1041.07 29.1451 1025.47 30.9218Z\",\n    fill: \"black\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1025.47 30.9192C1041.07 29.1424 1043.54 41.314 1044.31 42.2065C1046.1 43.217 1047.87 44.2326 1049.66 45.2431C1055.45 34.1396 1070.79 40.9216 1069.23 52.3546C1069.52 52.9347 1076.97 52.8573 1075.77 61.9821C1067.38 67.3519 1090.24 60.5822 1077.13 71.9873C1079.37 70.9125 1081.62 69.8431 1083.86 68.7682C1087.65 69.0069 1089.39 75.0518 1087.81 78.5846C1088.14 79.1921 1092.8 77.0368 1094.66 79.8278C1056.48 78.8352 1018.3 77.8372 980.118 76.8446C982.07 73.9151 991.74 73.8272 992.308 73.518C992.83 73.2338 991.147 68.9634 999.963 68.4893C1000.55 64.5403 1004.09 62.9726 1007.69 61.3645C1008.17 61.4671 1008.65 61.5646 1009.12 61.6672C1010.81 67.8314 1016.15 71.9643 1010.8 62.7641C1011.69 60.2295 1012.26 56.7206 1014.55 54.4774C1018.14 50.9596 1024.44 50.1466 1028.69 53.0418C1029.03 53.2718 1035.56 60.7799 1030.69 53.3608C1026.11 46.4014 1012.62 47.8969 1008.9 59.825C999.174 56.3916 1001.52 45.2588 1013.49 44.2183C1011.59 38.1529 1019.39 31.6124 1025.47 30.9192Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M321.962 371.397C325.948 398.103 326.511 419.698 326.274 434.555C325.841 461.463 326.217 459.17 328.357 476C330.587 493.586 330.75 508.05 328.357 526.888C327.214 535.915 325.057 543.221 323.367 548.073L81.6182 548.073C81.8305 542.422 87.8829 433.778 186.306 388.27C230.976 367.618 300.325 369.18 321.97 371.404L321.962 371.397Z\",\n    fill: \"#7E7B74\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.504 518.242C141.284 515.204 147.622 515.276 158.347 512.713C165.045 511.115 163.746 510.806 169.398 509.604C180.147 507.315 186.73 508.027 195.813 507.675C202.306 507.423 209.086 506.235 222.636 503.852C246.535 499.656 246.364 497.597 258.46 496.834C268.989 496.172 280.873 495.574 291.271 502.089C293.46 503.464 300.354 507.783 302.779 515.233C304.266 519.789 303.171 522.741 302.395 531.386C301.799 538.023 301.775 543.767 301.93 548.28L108.033 548.28C108.964 546.301 110.41 543.299 112.296 539.642C114.583 535.208 114.975 534.74 115.278 533.257C116.356 527.988 113.064 525.663 114.428 522.741C115.523 520.387 118.757 519.53 125.512 518.234L125.504 518.242Z\",\n    fill: \"black\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.939 368.204C157.073 365.606 160.019 363.801 163.303 363.078L173.654 360.799C172.233 358.928 189.074 360.799 189.074 360.799C189.074 360.799 194.988 361.62 197.299 360.799C198.833 360.256 204.343 356.659 206.273 355.384C206.723 355.087 207.209 354.864 207.73 354.731C209.717 354.223 215.083 352.932 219.14 352.708C225.895 352.333 230.289 351.786 233.507 351.534C237.673 351.203 237.289 351.57 246.29 351.534C259.792 351.477 258.558 350.663 262.912 351.16C265.917 351.505 275.351 352.578 282.09 358.668C284.891 361.194 287.227 364.599 288.052 365.801C288.592 366.579 290.421 369.3 291.728 372.136C293.762 376.563 293.966 380.551 294.285 388.332C294.628 396.661 294.84 402.174 294.922 404.384C288.592 401.973 282.253 399.561 275.923 397.157C262.74 407.746 252.457 409.538 245.563 409.272C231.808 408.732 221.574 399.597 208.505 400.713C207.117 400.836 202.984 401.296 200.174 399.13C197.838 397.323 197.356 394.429 197.299 392.37C197.74 396.423 197.61 401.771 195.061 407.3C190.471 417.255 180.432 423.957 180.04 423.64C179.665 423.338 185.268 414.16 193.46 413.31C197.748 412.864 199.104 415.081 205.393 414.815C210.376 414.599 211.487 413.123 216.044 412.562C221.795 411.856 225.625 413.519 231.384 415.189C240.573 417.86 241.095 416.629 254.393 419.321C274.118 423.316 283.985 425.317 289.016 430.118C293.746 434.632 294.881 444.134 297.151 463.13C298.826 477.145 297.846 481.075 294.873 483.163C290.446 486.28 286.043 482.184 276.119 485.416C272.844 486.481 269.103 488.633 261.629 492.924C254.458 497.041 254.703 497.451 252.677 497.804C247.662 498.69 244.738 496.458 236.186 497.351C236.039 497.365 235.018 497.509 232.993 497.804C222.334 499.337 216.951 500.108 214.754 500.432C208.146 501.396 204.846 501.878 204.528 501.936C199.284 502.836 198.843 503.116 196.858 503.066C192.709 502.951 191.606 501.626 187.048 501.418C184.663 501.31 183.324 501.59 180.661 501.936C180.661 501.936 175.172 502.641 166.277 502.778C158.926 502.893 144.102 500.345 140.173 491.794C137.061 485.013 142.052 477.203 144.012 474.143C145.997 471.041 147.067 470.681 152.531 465.131C155.757 461.856 162.439 455.025 167.87 447.106C171.219 442.219 177.851 431.428 175.858 430.111C174.38 429.139 167.944 433.206 164.456 438.843C161.924 442.931 161.875 446.343 161.475 448.611C158.673 464.454 130.094 474.179 114.599 489.922C112.239 492.319 110.622 494.407 109.486 497.056C107.526 501.634 108.514 504.347 107.354 510.2C106.864 512.856 105.917 516.275 103.948 519.968C94.392 537.884 69.6352 545.543 66.8745 542.499C64.5385 539.922 77.6479 529.362 74.1194 525.223L54.3964 525.223L43.5322 529.596L19 525.223L23.2055 497.056L35.822 485.416L59.3028 483.163L55.0276 467.451C54.6287 465.985 54.9181 464.417 55.8143 463.189L67.6003 447.05C69.7091 444.162 72.7802 442.122 76.2599 441.299L83.0022 439.703C85.39 439.138 87.6028 437.996 89.4464 436.377L101.307 425.959C103.01 424.464 105.198 423.64 107.463 423.64V423.64C113.363 423.64 117.781 418.232 116.605 412.452L113.417 396.785C112.448 392.02 113.848 387.082 117.173 383.535L120.446 380.044C123.282 377.019 127.243 375.303 131.389 375.303L140.97 375.303C143.934 375.303 146.832 374.425 149.297 372.78L151.613 371.234C152.84 370.415 153.939 369.42 154.875 368.281L154.939 368.204Z\",\n    fill: \"#7E7B74\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M228.77 352.991C262.275 356.324 284.222 344.98 290.438 370.627C291.254 378.063 292.071 385.506 292.888 392.942C292.283 404.344 288.396 392.157 281.861 392.582C276.936 392.899 266.261 404.33 254.907 405.539C237.444 407.403 227.341 395.274 209.167 396.181C204.128 393.252 207.125 386.068 201.408 385.024C204.675 364.041 198.982 360.967 228.77 352.991Z\",\n    fill: \"black\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.932 354.537C261.705 357.665 282.518 347.016 288.413 371.092C289.188 378.072 289.962 385.059 290.737 392.039C290.163 402.742 286.476 391.302 280.28 391.701C275.609 391.998 265.485 402.729 254.719 403.864C238.158 405.614 228.577 394.228 211.342 395.08C206.563 392.329 209.406 385.586 203.984 384.606C207.082 364.909 201.683 362.024 229.932 354.537Z\",\n    fill: \"#939393\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M179.763 363.79C186.305 363.344 192.227 364.56 198.141 367.029C194.882 380.699 202.943 399.515 194.873 411.659C193.362 413.941 175.148 423.248 170.778 433.614C169.283 431.332 167.781 429.057 166.286 426.775C159.131 420.577 134.84 436.507 127.08 415.978L122.179 394.383C122.089 386.968 127.464 377.747 136.473 376.747C148.586 375.408 149.378 384.91 162.61 367.389C168.328 366.187 174.045 364.992 179.763 363.79ZM188.748 366.669C188.07 372.068 187.383 377.467 186.706 382.865C189.287 378.359 194.179 390.827 193.24 385.025C191.876 383.348 190.52 381.663 189.156 379.986C187.138 372.889 193.779 384.996 194.057 381.426C194.114 380.656 188.241 375.998 189.973 367.029C189.564 366.907 189.156 366.792 188.748 366.669ZM186.297 388.264C185.448 388.646 184.647 394.224 175.679 401.941C182.262 399.45 190.724 386.285 186.297 388.264ZM195.282 390.424C192.693 396.542 190.112 402.661 187.522 408.779C187.089 416.712 196.662 402.214 195.282 390.424ZM180.171 412.019C180.58 412.976 180.988 413.941 181.396 414.898C185.554 407.347 186.983 395.556 181.805 407.7C186.501 390.107 173.874 416.705 173.637 418.857C172.828 426.278 176.283 422.91 180.171 412.019ZM169.961 404.82C156.574 417.453 145.989 410.075 136.473 409.859C129.098 409.694 136.097 412.098 148.317 413.098C139.062 421.096 142.215 422.838 149.542 413.458C157.211 414.48 167.029 411.27 169.961 404.82ZM173.229 405.54C172.003 409.262 170.778 412.976 169.553 416.698C170.166 405.698 165.845 415.719 165.469 419.577C164.285 431.713 176.651 412.062 173.229 405.54Z\",\n    fill: \"black\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M188.748 366.669C189.156 366.791 189.564 366.906 189.973 367.029C188.241 375.998 194.114 380.655 194.057 381.426C193.779 384.996 187.138 372.888 189.156 379.986C190.52 381.663 191.876 383.347 193.24 385.025C194.179 390.827 189.287 378.359 186.706 382.865C187.384 377.466 188.07 372.068 188.748 366.669Z\",\n    fill: \"black\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M186.297 388.263C190.724 386.284 182.263 399.45 175.679 401.94C184.648 394.224 185.448 388.645 186.297 388.263Z\",\n    fill: \"black\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M195.282 390.423C196.662 402.214 187.09 416.711 187.523 408.779C190.112 402.66 192.693 396.542 195.282 390.423Z\",\n    fill: \"black\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.804 407.699C181.257 409.139 180.718 410.579 180.171 412.018C176.283 422.909 172.828 426.278 173.637 418.857C173.873 416.704 186.501 390.106 181.804 407.699Z\",\n    fill: \"black\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M180.171 412.019C180.718 410.579 181.257 409.14 181.804 407.7C186.983 395.557 185.554 407.347 181.396 414.898C180.988 413.941 180.579 412.976 180.171 412.019Z\",\n    fill: \"black\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M169.962 404.819C167.03 411.269 157.212 414.479 149.542 413.457C142.216 422.837 139.063 421.095 148.317 413.097C136.098 412.097 129.098 409.693 136.474 409.858C145.989 410.074 156.575 417.452 169.962 404.819Z\",\n    fill: \"black\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.228 405.54C176.65 412.062 164.284 431.713 165.468 419.577C165.844 415.718 170.165 405.698 169.552 416.697C170.778 412.976 172.003 409.261 173.228 405.54Z\",\n    fill: \"black\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M178.935 365.472C185.125 365.05 190.727 366.201 196.321 368.536C193.238 381.468 200.864 399.269 193.23 410.757C191.801 412.915 174.57 421.72 170.436 431.526C169.022 429.368 167.6 427.216 166.186 425.057C159.417 419.194 136.437 434.264 129.097 414.842L124.461 394.413C124.376 387.399 129.46 378.676 137.983 377.729C149.442 376.463 150.191 385.452 162.709 368.877C168.118 367.74 173.527 366.609 178.935 365.472ZM187.435 368.196C186.794 373.303 186.145 378.41 185.503 383.518C187.945 379.255 192.573 391.049 191.685 385.561C190.394 383.974 189.112 382.38 187.821 380.794C185.913 374.079 192.195 385.533 192.457 382.156C192.512 381.427 186.956 377.021 188.594 368.536C188.208 368.421 187.821 368.312 187.435 368.196ZM185.117 388.625C184.313 388.986 183.556 394.263 175.072 401.563C181.3 399.207 189.305 386.752 185.117 388.625ZM193.617 390.668C191.167 396.456 188.725 402.244 186.276 408.033C185.866 415.537 194.922 401.822 193.617 390.668ZM179.322 411.097C179.708 412.003 180.094 412.915 180.481 413.821C184.414 406.678 185.766 395.523 180.867 407.011C185.31 390.368 173.364 415.53 173.14 417.566C172.375 424.587 175.644 421.4 179.322 411.097ZM169.663 404.287C156.999 416.238 146.985 409.258 137.983 409.054C131.005 408.898 137.627 411.172 149.187 412.119C140.432 419.684 143.415 421.332 150.346 412.459C157.601 413.426 166.889 410.389 169.663 404.287ZM172.754 404.968C171.595 408.489 170.436 412.003 169.277 415.523C169.856 405.118 165.769 414.597 165.413 418.247C164.293 429.728 175.991 411.138 172.754 404.968Z\",\n    fill: \"#939393\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.436 368.196C187.822 368.312 188.208 368.421 188.595 368.537C186.957 377.022 192.512 381.428 192.458 382.156C192.195 385.534 185.913 374.08 187.822 380.794C189.112 382.381 190.395 383.974 191.685 385.561C192.574 391.05 187.946 379.255 185.504 383.518C186.145 378.411 186.794 373.304 187.436 368.196Z\",\n    fill: \"black\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M185.117 388.624C189.305 386.751 181.3 399.206 175.072 401.563C183.556 394.263 184.314 388.985 185.117 388.624Z\",\n    fill: \"black\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M193.616 390.667C194.922 401.822 185.866 415.536 186.276 408.032C188.725 402.244 191.167 396.455 193.616 390.667Z\",\n    fill: \"black\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M180.867 407.01C180.35 408.372 179.84 409.734 179.322 411.096C175.644 421.399 172.375 424.586 173.14 417.566C173.365 415.529 185.31 390.368 180.867 407.01Z\",\n    fill: \"black\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M179.322 411.097C179.839 409.736 180.349 408.374 180.867 407.012C185.766 395.524 184.414 406.678 180.481 413.821C180.094 412.916 179.708 412.003 179.322 411.097Z\",\n    fill: \"black\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M169.663 404.287C166.889 410.389 157.601 413.426 150.345 412.459C143.414 421.332 140.432 419.684 149.186 412.118C137.627 411.172 131.005 408.897 137.982 409.054C146.984 409.258 156.998 416.238 169.663 404.287Z\",\n    fill: \"black\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M172.754 404.968C175.992 411.137 164.293 429.728 165.414 418.247C165.769 414.597 169.857 405.117 169.277 415.523C170.436 412.002 171.595 408.488 172.754 404.968Z\",\n    fill: \"black\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M220.882 409.705C236.734 411.162 282.828 419.45 293.639 427.067C306.12 435.853 302.045 465.45 305.195 478.773C298.493 479.656 291.782 480.532 285.08 481.415C276.802 485.695 268.534 489.968 260.256 494.248L244.849 491.983C231.701 497.463 217.749 494.036 203.762 499.531C181.755 490.987 165.449 505.774 152.404 495.002C144.451 488.435 150.383 474.478 156.255 468.206C166.39 463.035 166.844 453.056 175.087 446.315C179.649 437.257 184.22 428.199 188.782 419.141C200.355 406.218 207.631 416.318 220.882 409.705Z\",\n    fill: \"black\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M112.786 427.853C129.375 431.092 145.466 434.842 161.793 428.573C178.252 454.573 133.892 473.857 115.236 489.039C108.13 478.047 95.0128 483.136 93.9999 478.241C89.9242 481.329 80.8905 476.449 69.4963 481.12C68.0016 475.959 66.4987 470.805 65.004 465.644C63.8196 455.379 71.5955 457.495 77.6642 445.849C92.1377 445.366 102.462 435.706 112.786 427.853ZM141.374 446.568C131.605 448.087 114.771 466.292 94.8167 461.685C94.6779 462.045 94.5472 462.405 94.4083 462.765C113.301 466.789 119.721 457.539 134.023 450.887C138.793 448.67 152.727 444.805 141.374 446.568ZM140.557 454.487C138.654 459.763 136.742 465.047 134.839 470.323C138.727 472.158 142.395 457.164 140.557 454.487ZM134.023 460.965C127.554 472.914 124.777 481.912 131.164 472.842C132.324 471.194 135.558 463.153 134.023 460.965ZM123.404 461.685C108.604 492.307 125.503 471.467 124.629 462.765L123.404 461.685ZM127.488 461.685C120.578 472.979 121.558 480.739 124.629 475.002C125.585 470.56 126.533 466.126 127.488 461.685ZM118.504 463.844C106.709 480.818 113.864 478.896 117.278 470.683C117.687 468.401 118.095 466.126 118.504 463.844Z\",\n    fill: \"black\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M141.374 446.569C152.727 444.805 138.793 448.671 134.023 450.888C119.721 457.539 113.301 466.789 94.4087 462.765C94.5475 462.405 94.6782 462.045 94.8171 461.685C114.771 466.292 131.605 448.087 141.374 446.569Z\",\n    fill: \"black\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.556 454.486C142.394 457.164 138.727 472.158 134.839 470.323C136.742 465.046 138.653 459.763 140.556 454.486Z\",\n    fill: \"black\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.023 460.965C135.558 463.154 132.324 471.194 131.164 472.843C124.777 481.913 127.554 472.915 134.023 460.965Z\",\n    fill: \"black\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.405 461.686L124.63 462.766C125.504 471.469 108.604 492.308 123.405 461.686Z\",\n    fill: \"black\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M127.489 461.686C126.533 466.127 125.586 470.562 124.63 475.003C121.559 480.74 120.579 472.98 127.489 461.686Z\",\n    fill: \"black\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M118.504 463.845C118.096 466.126 117.687 468.401 117.279 470.683C113.865 478.896 106.709 480.818 118.504 463.845Z\",\n    fill: \"black\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M113.409 429.352C129.054 432.407 144.229 435.943 159.628 430.03C175.15 454.552 133.314 472.739 115.72 487.056C109.018 476.69 96.6467 481.489 95.6915 476.873C91.8477 479.785 83.3279 475.183 72.582 479.589C71.1723 474.721 69.7549 469.86 68.3453 464.993C67.2283 455.312 74.5617 457.308 80.2852 446.324C93.9352 445.869 103.672 436.758 113.409 429.352ZM140.37 447.002C131.157 448.435 115.281 465.604 96.4619 461.259C96.3309 461.598 96.2077 461.938 96.0767 462.277C113.894 466.072 119.949 457.349 133.437 451.076C137.936 448.985 151.077 445.339 140.37 447.002ZM139.6 454.47C137.805 459.446 136.002 464.429 134.207 469.405C137.874 471.137 141.333 456.996 139.6 454.47ZM133.437 460.58C127.336 471.849 124.717 480.335 130.741 471.781C131.835 470.227 134.885 462.644 133.437 460.58ZM123.423 461.259C109.465 490.138 125.403 470.485 124.578 462.277L123.423 461.259ZM127.275 461.259C120.758 471.91 121.682 479.229 124.578 473.818C125.48 469.629 126.373 465.448 127.275 461.259ZM118.801 463.295C107.678 479.303 114.426 477.491 117.646 469.745C118.031 467.593 118.416 465.448 118.801 463.295Z\",\n    fill: \"#939393\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.37 447.004C151.077 445.341 137.936 448.986 133.437 451.077C119.949 457.35 113.894 466.074 96.0767 462.279C96.2076 461.939 96.3309 461.6 96.4618 461.26C115.281 465.605 131.157 448.436 140.37 447.004Z\",\n    fill: \"black\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M139.6 454.47C141.333 456.995 137.875 471.136 134.208 469.405C136.003 464.429 137.805 459.446 139.6 454.47Z\",\n    fill: \"black\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.438 460.579C134.886 462.643 131.835 470.226 130.741 471.781C124.718 480.335 127.337 471.849 133.438 460.579Z\",\n    fill: \"black\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.423 461.258L124.578 462.276C125.403 470.484 109.465 490.138 123.423 461.258Z\",\n    fill: \"black\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M127.275 461.258C126.374 465.447 125.48 469.629 124.579 473.817C121.683 479.228 120.758 471.91 127.275 461.258Z\",\n    fill: \"black\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M118.801 463.296C118.416 465.448 118.031 467.593 117.646 469.745C114.426 477.491 107.678 479.304 118.801 463.296Z\",\n    fill: \"black\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M82.5652 482.561C86.69 482.468 108.972 485.649 110.744 488.68C111.872 490.602 108.555 512.398 107.477 514.594C103.704 522.274 87.1474 518.301 79.298 521.432C66.0171 519.323 59.5073 516.386 49.8937 526.471C42.951 525.629 36.0083 524.794 29.0656 523.952C28.6654 504.531 27.4157 497.908 48.2601 488.32C60.0627 491.127 71.8163 482.799 82.5652 482.561ZM92.3666 496.238C90.7331 496.72 89.0995 497.196 87.4659 497.678C86.1182 497.764 65.4045 497.534 66.6378 499.477C82.7939 500.435 100.069 495.878 92.3666 496.238ZM35.1915 503.436L35.1915 504.876C61.0918 509.958 59.1642 507.647 35.1915 503.436ZM94.817 503.436C84.7133 514.04 80.5722 523.412 88.6911 515.314L94.817 503.436ZM87.4659 504.876C86.11 506.503 79.0693 516.149 80.9316 517.113C83.3738 516.516 88.879 505.51 87.4659 504.876ZM99.7177 504.876C87.6946 517.401 89.32 522.03 96.0422 513.154C97.2674 510.397 98.4925 507.633 99.7177 504.876ZM103.802 504.876C100.649 511.103 95.7481 515.854 98.0841 516.393C99.636 516.393 105.607 506.92 103.802 504.876ZM80.9316 508.475C79.4369 509.793 77.934 511.117 76.4393 512.434C69.5619 521.144 79.6002 515.011 80.9316 508.475ZM67.863 512.074C64.31 512.773 68.2306 515.112 68.2714 515.314C68.0019 516.271 67.7242 517.236 67.4546 518.193C69.8233 521.533 71.0648 511.448 67.863 512.074Z\",\n    fill: \"black\"\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M92.3667 496.238C100.069 495.878 82.794 500.435 66.6379 499.477C65.4045 497.534 86.1183 497.764 87.466 497.678C89.0996 497.196 90.7331 496.72 92.3667 496.238Z\",\n    fill: \"black\"\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.1919 503.436C59.1646 507.647 61.0922 509.958 35.1919 504.876L35.1919 503.436Z\",\n    fill: \"black\"\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M94.8168 503.436L88.6909 515.313C80.572 523.411 84.7132 514.039 94.8168 503.436Z\",\n    fill: \"black\"\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M87.4659 504.876C88.8789 505.509 83.3738 516.515 80.9316 517.113C79.0693 516.148 86.11 506.503 87.4659 504.876Z\",\n    fill: \"black\"\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M99.718 504.876C98.4929 507.633 97.2677 510.397 96.0425 513.154C89.3203 522.029 87.6949 517.401 99.718 504.876Z\",\n    fill: \"black\"\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.802 504.876C105.607 506.92 99.6365 516.393 98.0846 516.393C95.7486 515.853 100.649 511.102 103.802 504.876Z\",\n    fill: \"black\"\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80.9323 508.476C79.6009 515.012 69.5626 521.145 76.4399 512.435C77.9347 511.117 79.4375 509.793 80.9323 508.476Z\",\n    fill: \"black\"\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.8629 512.073C71.0647 511.447 69.8232 521.532 67.4545 518.192C67.7241 517.234 68.0018 516.27 68.2713 515.313C68.2305 515.111 64.3099 512.772 67.8629 512.073Z\",\n    fill: \"black\"\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M81.6818 483.94C85.6769 483.85 107.258 486.931 108.975 489.867C110.067 491.728 106.855 512.839 105.811 514.966C102.156 522.405 86.1199 518.557 78.5174 521.589C65.6539 519.547 59.3488 516.702 50.0374 526.47C43.313 525.654 36.5885 524.845 29.8641 524.03C29.4765 505.219 28.2661 498.805 48.4552 489.518C59.8867 492.237 71.2708 484.171 81.6818 483.94ZM91.1751 497.187C89.5929 497.654 88.0107 498.115 86.4285 498.582C85.1231 498.665 65.0606 498.442 66.2552 500.325C81.9033 501.252 98.6353 496.839 91.1751 497.187ZM35.7974 504.159L35.7974 505.554C60.8835 510.476 59.0165 508.238 35.7974 504.159ZM93.5484 504.159C83.7624 514.429 79.7515 523.507 87.6151 515.663L93.5484 504.159ZM86.4285 505.554C85.1152 507.129 78.2959 516.472 80.0996 517.406C82.465 516.827 87.7971 506.167 86.4285 505.554ZM98.2951 505.554C86.65 517.685 88.2243 522.168 94.7351 513.572C95.9218 510.901 97.1084 508.224 98.2951 505.554ZM102.251 505.554C99.197 511.585 94.4503 516.186 96.7129 516.709C98.216 516.709 103.999 507.534 102.251 505.554ZM80.0996 509.04C78.6519 510.316 77.1962 511.598 75.7485 512.874C69.0873 521.31 78.8101 515.37 80.0996 509.04ZM67.4418 512.526C64.0005 513.202 67.7978 515.468 67.8374 515.663C67.5763 516.59 67.3073 517.525 67.0463 518.452C69.3405 521.687 70.543 511.919 67.4418 512.526Z\",\n    fill: \"#939393\"\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M91.1753 497.187C98.6355 496.838 81.9035 501.252 66.2554 500.324C65.0608 498.442 85.1233 498.665 86.4287 498.581C88.0109 498.114 89.5931 497.654 91.1753 497.187Z\",\n    fill: \"#939393\"\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.7974 504.16C59.0164 508.239 60.8835 510.477 35.7974 505.555L35.7974 504.16Z\",\n    fill: \"#939393\"\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M93.5487 504.16L87.6154 515.664C79.7518 523.508 83.7627 514.43 93.5487 504.16Z\",\n    fill: \"#939393\"\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M86.4289 505.555C87.7975 506.168 82.4654 516.828 80.1 517.407C78.2963 516.473 85.1156 507.13 86.4289 505.555Z\",\n    fill: \"#939393\"\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M98.2951 505.555C97.1084 508.225 95.9217 510.902 94.7351 513.572C88.2242 522.169 86.6499 517.686 98.2951 505.555Z\",\n    fill: \"#939393\"\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M102.251 505.555C103.999 507.535 98.216 516.71 96.7129 516.71C94.4503 516.187 99.197 511.585 102.251 505.555Z\",\n    fill: \"#939393\"\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M80.0998 509.039C78.8103 515.369 69.0875 521.309 75.7487 512.873C77.1964 511.597 78.6521 510.314 80.0998 509.039Z\",\n    fill: \"#939393\"\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.4416 512.526C70.5428 511.92 69.3403 521.687 67.0461 518.452C67.3071 517.525 67.5761 516.591 67.8372 515.664C67.7976 515.468 64.0003 513.203 67.4416 512.526Z\",\n    fill: \"#939393\"\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M90.3248 548.065L60.9204 548.065C64.7593 541.45 70.9424 541.983 77.2562 535.468C88.1439 516.573 89.5815 526.686 107.886 525.031C116.944 539.982 107.142 537.671 100.535 540.867C97.1286 543.264 93.7308 545.668 90.3248 548.065Z\",\n    fill: \"#939393\"\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M297.789 548.065L247.965 548.065C241.725 543.523 233.737 543.221 227.545 548.065L121.363 548.065C123.07 540.334 115.033 543.142 114.012 548.065C112.501 548.512 111.864 548.325 111.562 548.065C109.765 546.532 116.944 540.111 117.696 530.739C117.9 528.212 117.589 526.103 117.279 524.671C132.659 513.744 154.565 519.567 171.595 511.354L223.053 507.035C233.671 504.638 244.29 502.234 254.908 499.837C268.793 498.404 292.088 499.57 298.606 512.434C305.001 525.045 296.294 535.245 297.789 548.065Z\",\n    fill: \"#939393\"\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.363 548.066L114.012 548.066C115.033 543.143 123.07 540.335 121.363 548.066Z\",\n    fill: \"black\"\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.965 548.065L227.545 548.065C233.736 543.22 241.724 543.522 247.965 548.065Z\",\n    fill: \"black\"\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M221.379 411.336C236.505 412.725 280.489 420.629 290.806 427.892C302.714 436.271 298.826 464.495 301.832 477.2C295.437 478.043 289.033 478.878 282.638 479.72C274.739 483.801 266.849 487.876 258.951 491.957L244.249 489.798C231.703 495.024 218.389 491.755 205.043 496.996C184.043 488.847 168.483 502.949 156.036 492.677C148.448 486.414 154.108 473.105 159.711 467.123C169.382 462.192 169.815 452.676 177.68 446.248C182.034 437.61 186.396 428.972 190.749 420.334C201.792 408.01 208.735 417.642 221.379 411.336Z\",\n    fill: \"#939393\"\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M311.249 371.343C307.74 398.049 307.244 419.644 307.452 434.501C307.833 461.408 307.502 459.116 305.618 475.946C303.655 493.531 303.511 507.996 305.618 526.834C306.625 535.861 308.524 543.167 310.012 548.019L522.876 548.018C522.689 542.368 517.36 433.723 430.697 388.215C391.364 367.564 330.301 369.126 311.242 371.35L311.249 371.343Z\",\n    fill: \"#7E7B74\"\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M484.234 518.187C470.339 515.15 464.758 515.222 455.315 512.659C449.418 511.061 450.561 510.751 445.584 509.549C436.12 507.26 430.323 507.973 422.326 507.62C416.608 507.368 410.639 506.181 398.707 503.798C377.664 499.601 377.815 497.543 367.163 496.78C357.893 496.117 347.428 495.52 338.273 502.034C336.346 503.409 330.276 507.728 328.14 515.178C326.831 519.735 327.794 522.686 328.478 531.331C329.003 537.968 329.024 543.713 328.888 548.226L499.618 548.226C498.798 546.246 497.525 543.245 495.863 539.588C493.85 535.154 493.505 534.686 493.238 533.203C492.289 527.934 495.187 525.609 493.986 522.686C493.023 520.332 490.175 519.476 484.227 518.18L484.234 518.187Z\",\n    fill: \"black\"\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M458.397 368.261C456.471 365.599 453.667 363.703 450.479 362.906L441.837 360.745C443.088 358.874 428.259 360.745 428.259 360.745C428.259 360.745 423.052 361.566 421.017 360.745C419.693 360.213 415.009 356.748 413.221 355.409C412.756 355.06 412.238 354.793 411.679 354.633C409.821 354.098 405.258 352.872 401.786 352.653C395.838 352.279 391.969 351.732 389.135 351.48C385.467 351.149 385.805 351.516 377.88 351.48C365.991 351.422 367.077 350.609 363.244 351.106C360.597 351.451 352.291 352.524 346.357 358.613C343.89 361.14 341.833 364.545 341.107 365.747C340.632 366.524 339.021 369.245 337.871 372.082C336.08 376.509 335.9 380.496 335.62 388.278C335.318 396.606 335.131 402.12 335.059 404.33C340.632 401.919 346.213 399.507 351.787 397.103C363.395 407.692 372.45 409.484 378.52 409.218C390.631 408.678 399.643 399.543 411.15 400.659C412.372 400.781 416.011 401.242 418.485 399.075C420.542 397.268 420.967 394.375 421.017 392.316C420.629 396.369 420.744 401.717 422.988 407.245C427.029 417.201 435.868 423.902 436.214 423.586C436.544 423.283 431.611 414.105 424.397 413.256C420.621 412.81 419.428 415.027 413.89 414.76C409.503 414.544 408.525 413.069 404.511 412.507C399.448 411.802 396.075 413.465 391.005 415.135C382.914 417.805 382.454 416.574 370.745 419.267C353.377 423.262 344.689 425.263 340.258 430.064C336.094 434.577 335.095 444.079 333.095 463.076C331.621 477.091 332.484 481.021 335.102 483.108C339 486.225 342.876 482.129 351.615 485.362C354.499 486.427 357.792 488.579 364.373 492.869C370.688 496.987 370.472 497.397 372.256 497.75C376.671 498.635 379.246 496.404 386.776 497.296C386.906 497.311 387.805 497.455 389.588 497.75C398.974 499.283 403.713 500.053 405.648 500.377C411.466 501.342 414.372 501.824 414.652 501.882C419.269 502.781 419.658 503.062 421.405 503.012C425.059 502.897 426.03 501.572 430.043 501.363C432.143 501.255 433.322 501.536 435.667 501.882C435.667 501.882 440.5 502.587 448.332 502.724C454.805 502.839 467.858 500.291 471.318 491.739C474.058 484.958 469.663 477.148 467.937 474.089C466.19 470.987 465.248 470.627 460.436 465.077C457.595 461.801 451.712 454.97 446.93 447.052C443.981 442.164 438.141 431.374 439.896 430.057C441.198 429.085 446.865 433.152 449.936 438.788C452.165 442.877 452.209 446.289 452.561 448.557C455.028 464.4 480.193 474.125 493.836 489.868C495.914 492.265 497.338 494.352 498.338 497.001C500.064 501.579 499.194 504.293 500.215 510.145C500.647 512.802 501.481 516.221 503.214 519.913C511.629 537.83 533.427 545.489 535.858 542.444C537.915 539.867 526.372 529.307 529.479 525.168L546.846 525.168L556.412 529.542L578.013 525.168L574.31 497.001L563.201 485.362L542.525 483.108L546.348 467.151C546.666 465.826 546.429 464.429 545.692 463.282L535.474 447.391C533.458 444.257 530.349 441.985 526.75 441.018L522.321 439.827C519.789 439.147 517.478 437.814 515.621 435.961L505.607 425.972C504.075 424.444 501.999 423.586 499.834 423.586V423.586C494.743 423.586 490.891 418.982 491.788 413.97L495.012 395.973C495.789 391.636 494.62 387.176 491.815 383.778L489.274 380.699C486.424 377.248 482.182 375.249 477.706 375.249L471.655 375.249C468.384 375.249 465.202 374.179 462.595 372.203L461.272 371.2C460.174 370.368 459.205 369.377 458.397 368.261V368.261Z\",\n    fill: \"#7E7B74\"\n  })), _path71 || (_path71 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M393.306 352.937C363.805 356.27 344.48 344.925 339.007 370.573C338.288 378.009 337.569 385.452 336.849 392.888C337.382 404.29 340.805 392.103 346.559 392.528C350.895 392.845 360.295 404.275 370.292 405.485C385.668 407.349 394.565 395.22 410.567 396.127C415.004 393.197 412.365 386.013 417.399 384.97C414.523 363.986 419.535 360.913 393.306 352.937Z\",\n    fill: \"black\"\n  })), _path72 || (_path72 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M392.283 354.482C364.306 357.611 345.98 346.962 340.79 371.037C340.108 378.018 339.426 385.004 338.744 391.985C339.249 402.688 342.495 391.248 347.951 391.647C352.064 391.944 360.978 402.674 370.458 403.81C385.04 405.56 393.477 394.174 408.652 395.025C412.86 392.275 410.357 385.532 415.131 384.552C412.403 364.855 417.157 361.969 392.283 354.482Z\",\n    fill: \"#939393\"\n  })), _path73 || (_path73 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M436.458 363.736C430.698 363.289 425.483 364.506 420.276 366.975C423.146 380.644 416.047 399.461 423.153 411.604C424.484 413.886 440.522 423.194 444.369 433.559C445.686 431.277 447.009 429.003 448.325 426.721C454.625 420.523 476.014 436.453 482.846 415.923L487.162 394.328C487.241 386.914 482.508 377.693 474.576 376.692C463.91 375.354 463.212 384.855 451.561 367.335C446.527 366.133 441.493 364.938 436.458 363.736ZM428.547 366.615C429.144 372.014 429.748 377.412 430.345 382.811C428.072 378.305 423.764 390.772 424.592 384.971C425.793 383.293 426.986 381.609 428.188 379.932C429.964 372.834 424.117 384.942 423.872 381.371C423.822 380.601 428.993 375.944 427.468 366.975C427.828 366.852 428.188 366.737 428.547 366.615ZM430.705 388.21C431.453 388.591 432.157 394.17 440.054 401.887C434.258 399.396 426.807 386.23 430.705 388.21ZM422.794 390.369C425.073 396.488 427.346 402.606 429.626 408.725C430.007 416.658 421.578 402.16 422.794 390.369ZM436.099 411.964C435.739 412.922 435.379 413.886 435.02 414.844C431.359 407.293 430.101 395.502 434.66 407.645C430.525 390.053 441.644 416.65 441.852 418.803C442.564 426.224 439.522 422.855 436.099 411.964ZM445.089 404.766C456.876 417.399 466.197 410.021 474.576 409.805C481.07 409.639 474.907 412.043 464.147 413.044C472.296 421.041 469.52 422.783 463.069 413.404C456.315 414.426 447.671 411.216 445.089 404.766ZM442.212 405.486C443.291 409.207 444.369 412.922 445.448 416.643C444.909 405.644 448.713 415.664 449.044 419.523C450.087 431.659 439.198 412.007 442.212 405.486Z\",\n    fill: \"black\"\n  })), _path74 || (_path74 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M428.547 366.615C428.188 366.737 427.828 366.852 427.468 366.975C428.993 375.944 423.822 380.601 423.872 381.371C424.117 384.942 429.964 372.834 428.188 379.932C426.987 381.609 425.793 383.293 424.592 384.97C423.765 390.772 428.073 378.305 430.345 382.811C429.748 377.412 429.144 372.013 428.547 366.615Z\",\n    fill: \"black\"\n  })), _path75 || (_path75 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M430.705 388.209C426.807 386.229 434.257 399.395 440.054 401.886C432.157 394.169 431.453 388.591 430.705 388.209Z\",\n    fill: \"black\"\n  })), _path76 || (_path76 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M422.793 390.369C421.578 402.16 430.007 416.657 429.626 408.725C427.346 402.606 425.073 396.487 422.793 390.369Z\",\n    fill: \"black\"\n  })), _path77 || (_path77 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M434.661 407.645C435.143 409.085 435.617 410.524 436.099 411.964C439.522 422.855 442.565 426.224 441.853 418.802C441.644 416.65 430.525 390.052 434.661 407.645Z\",\n    fill: \"black\"\n  })), _path78 || (_path78 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M436.099 411.965C435.617 410.525 435.143 409.085 434.661 407.646C430.101 395.502 431.36 407.293 435.02 414.844C435.38 413.887 435.74 412.922 436.099 411.965Z\",\n    fill: \"black\"\n  })), _path79 || (_path79 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M445.088 404.765C447.67 411.215 456.315 414.425 463.068 413.403C469.519 422.782 472.295 421.04 464.147 413.043C474.906 412.043 481.07 409.638 474.575 409.804C466.197 410.02 456.876 417.398 445.088 404.765Z\",\n    fill: \"black\"\n  })), _path80 || (_path80 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M442.212 405.486C439.199 412.007 450.087 431.659 449.045 419.522C448.714 415.664 444.909 405.644 445.449 416.643C444.37 412.921 443.291 409.207 442.212 405.486Z\",\n    fill: \"black\"\n  })), _path81 || (_path81 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M437.187 365.418C431.737 364.995 426.804 366.146 421.878 368.482C424.593 381.414 417.878 399.214 424.6 410.702C425.859 412.861 441.031 421.666 444.671 431.472C445.916 429.313 447.168 427.161 448.413 425.003C454.373 419.139 474.607 434.209 481.071 414.788L485.153 394.359C485.228 387.345 480.751 378.622 473.246 377.675C463.157 376.409 462.497 385.397 451.475 368.822C446.712 367.685 441.949 366.555 437.187 365.418ZM429.703 368.142C430.267 373.249 430.839 378.356 431.404 383.463C429.254 379.2 425.178 390.995 425.961 385.506C427.097 383.92 428.226 382.326 429.363 380.739C431.043 374.025 425.512 385.479 425.28 382.101C425.233 381.373 430.125 376.967 428.682 368.482C429.022 368.366 429.363 368.257 429.703 368.142ZM431.744 388.571C432.451 388.932 433.118 394.209 440.589 401.509C435.105 399.153 428.056 386.698 431.744 388.571ZM424.26 390.614C426.417 396.402 428.566 402.19 430.723 407.978C431.084 415.483 423.11 401.768 424.26 390.614ZM436.847 411.043C436.506 411.948 436.166 412.861 435.826 413.767C432.363 406.623 431.172 395.469 435.486 406.957C431.574 390.314 442.092 415.476 442.29 417.512C442.963 424.533 440.085 421.346 436.847 411.043ZM445.351 404.233C456.502 416.184 465.32 409.204 473.246 409C479.39 408.843 473.559 411.118 463.381 412.064C471.09 419.63 468.463 421.278 462.36 412.405C455.972 413.372 447.794 410.335 445.351 404.233ZM442.63 404.914C443.65 408.435 444.671 411.948 445.691 415.469C445.181 405.064 448.78 414.543 449.093 418.193C450.08 429.674 439.779 411.084 442.63 404.914Z\",\n    fill: \"#939393\"\n  })), _path82 || (_path82 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M429.702 368.142C429.362 368.258 429.022 368.367 428.682 368.482C430.124 376.967 425.232 381.373 425.28 382.102C425.511 385.48 431.043 374.026 429.362 380.74C428.226 382.327 427.097 383.92 425.96 385.507C425.178 390.995 429.253 379.201 431.403 383.464C430.839 378.357 430.267 373.249 429.702 368.142Z\",\n    fill: \"black\"\n  })), _path83 || (_path83 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M431.744 388.57C428.056 386.697 435.105 399.152 440.588 401.508C433.118 394.208 432.451 388.931 431.744 388.57Z\",\n    fill: \"black\"\n  })), _path84 || (_path84 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M424.26 390.613C423.11 401.767 431.084 415.482 430.723 407.978C428.567 402.189 426.417 396.401 424.26 390.613Z\",\n    fill: \"black\"\n  })), _path85 || (_path85 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M435.486 406.956C435.942 408.318 436.391 409.68 436.847 411.042C440.085 421.345 442.963 424.532 442.289 417.511C442.092 415.475 431.574 390.313 435.486 406.956Z\",\n    fill: \"black\"\n  })), _path86 || (_path86 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M436.847 411.043C436.391 409.681 435.942 408.319 435.486 406.957C431.172 395.469 432.363 406.624 435.826 413.767C436.166 412.861 436.506 411.949 436.847 411.043Z\",\n    fill: \"black\"\n  })), _path87 || (_path87 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M445.352 404.233C447.794 410.334 455.972 413.372 462.361 412.405C468.464 421.278 471.09 419.63 463.382 412.064C473.56 411.118 479.391 408.843 473.247 409C465.321 409.204 456.503 416.184 445.352 404.233Z\",\n    fill: \"black\"\n  })), _path88 || (_path88 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M442.629 404.913C439.779 411.083 450.079 429.673 449.093 418.192C448.78 414.542 445.181 405.063 445.691 415.468C444.67 411.948 443.65 408.434 442.629 404.913Z\",\n    fill: \"black\"\n  })), _path89 || (_path89 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M400.252 409.651C386.294 411.108 345.707 419.396 336.188 427.012C325.199 435.799 328.786 465.396 326.013 478.719C331.914 479.602 337.823 480.478 343.725 481.361C351.013 485.641 358.294 489.913 365.582 494.193L379.149 491.929C390.726 497.409 403.011 493.982 415.327 499.477C434.704 490.932 449.062 505.72 460.549 494.948C467.551 488.381 462.327 474.424 457.157 468.151C448.233 462.981 447.834 453.002 440.576 446.261C436.558 437.203 432.534 428.145 428.516 419.087C418.326 406.164 411.92 416.264 400.252 409.651Z\",\n    fill: \"black\"\n  })), _path90 || (_path90 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M495.433 427.798C480.826 431.038 466.658 434.788 452.281 428.518C437.789 454.519 476.849 473.803 493.275 488.984C499.532 477.992 511.082 483.082 511.974 478.187C515.563 481.275 523.517 476.394 533.55 481.066C534.866 475.905 536.189 470.751 537.506 465.59C538.548 455.325 531.702 457.441 526.358 445.794C513.614 445.312 504.523 435.652 495.433 427.798ZM470.261 446.514C478.862 448.033 493.685 466.238 511.255 461.631C511.377 461.99 511.492 462.35 511.614 462.71C494.979 466.734 489.327 457.484 476.733 450.833C472.533 448.616 460.264 444.751 470.261 446.514ZM470.98 454.432C472.656 459.709 474.339 464.992 476.014 470.269C472.591 472.104 469.362 457.11 470.98 454.432ZM476.733 460.911C482.429 472.86 484.875 481.858 479.251 472.788C478.229 471.14 475.381 463.099 476.733 460.911ZM486.083 461.631C499.115 492.252 484.235 471.413 485.004 462.71L486.083 461.631ZM482.487 461.631C488.571 472.925 487.708 480.685 485.004 474.947C484.163 470.506 483.328 466.072 482.487 461.631ZM490.398 463.79C500.783 480.764 494.483 478.842 491.477 470.628C491.117 468.347 490.758 466.072 490.398 463.79Z\",\n    fill: \"black\"\n  })), _path91 || (_path91 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M470.26 446.514C460.264 444.751 472.533 448.616 476.733 450.833C489.326 457.485 494.979 466.734 511.614 462.711C511.492 462.351 511.377 461.991 511.255 461.631C493.685 466.238 478.862 448.033 470.26 446.514Z\",\n    fill: \"black\"\n  })), _path92 || (_path92 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M470.98 454.432C469.362 457.11 472.591 472.104 476.015 470.268C474.339 464.992 472.656 459.708 470.98 454.432Z\",\n    fill: \"black\"\n  })), _path93 || (_path93 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M476.733 460.911C475.381 463.099 478.229 471.14 479.251 472.788C484.875 481.858 482.429 472.86 476.733 460.911Z\",\n    fill: \"black\"\n  })), _path94 || (_path94 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M486.083 461.632L485.004 462.711C484.235 471.414 499.115 492.253 486.083 461.632Z\",\n    fill: \"black\"\n  })), _path95 || (_path95 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M482.487 461.632C483.328 466.073 484.162 470.507 485.004 474.949C487.708 480.686 488.571 472.926 482.487 461.632Z\",\n    fill: \"black\"\n  })), _path96 || (_path96 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M490.398 463.79C490.758 466.072 491.117 468.347 491.477 470.629C494.483 478.842 500.783 480.764 490.398 463.79Z\",\n    fill: \"black\"\n  })), _path97 || (_path97 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M494.884 429.297C481.108 432.352 467.746 435.889 454.187 429.976C440.52 454.497 477.357 472.684 492.849 487.002C498.75 476.635 509.643 481.435 510.484 476.819C513.869 479.731 521.371 475.128 530.833 479.534C532.074 474.667 533.322 469.806 534.563 464.938C535.547 455.258 529.09 457.253 524.05 446.269C512.031 445.814 503.457 436.704 494.884 429.297ZM471.144 446.948C479.256 448.381 493.236 465.549 509.806 461.205C509.921 461.544 510.03 461.883 510.145 462.223C494.457 466.018 489.125 457.294 477.249 451.021C473.288 448.93 461.716 445.285 471.144 446.948ZM471.823 454.416C473.403 459.392 474.99 464.375 476.571 469.351C473.342 471.082 470.296 456.941 471.823 454.416ZM477.249 460.526C482.621 471.795 484.927 480.281 479.623 471.727C478.66 470.173 475.974 462.589 477.249 460.526ZM486.066 461.205C498.357 490.084 484.323 470.43 485.049 462.223L486.066 461.205ZM482.675 461.205C488.413 471.856 487.599 479.174 485.049 473.764C484.255 469.575 483.469 465.393 482.675 461.205ZM490.136 463.241C499.93 479.249 493.989 477.437 491.154 469.691C490.814 467.538 490.475 465.393 490.136 463.241Z\",\n    fill: \"#939393\"\n  })), _path98 || (_path98 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M471.144 446.95C461.716 445.286 473.288 448.932 477.249 451.023C489.126 457.296 494.457 466.019 510.146 462.224C510.03 461.885 509.922 461.545 509.806 461.206C493.236 465.551 479.257 448.382 471.144 446.95Z\",\n    fill: \"black\"\n  })), _path99 || (_path99 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M471.822 454.416C470.296 456.941 473.342 471.082 476.57 469.351C474.99 464.375 473.403 459.392 471.822 454.416Z\",\n    fill: \"black\"\n  })), _path100 || (_path100 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M477.249 460.525C475.974 462.589 478.66 470.172 479.623 471.727C484.927 480.281 482.621 471.795 477.249 460.525Z\",\n    fill: \"black\"\n  })), _path101 || (_path101 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M486.067 461.204L485.049 462.222C484.323 470.43 498.357 490.083 486.067 461.204Z\",\n    fill: \"black\"\n  })), _path102 || (_path102 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M482.675 461.204C483.468 465.392 484.255 469.574 485.049 473.763C487.599 479.174 488.413 471.855 482.675 461.204Z\",\n    fill: \"black\"\n  })), _path103 || (_path103 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M490.136 463.241C490.475 465.393 490.814 467.539 491.153 469.691C493.989 477.437 499.93 479.249 490.136 463.241Z\",\n    fill: \"black\"\n  })), _path104 || (_path104 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M522.043 482.507C518.411 482.413 498.791 485.595 497.23 488.626C496.238 490.548 499.158 512.344 500.107 514.54C503.43 522.22 518.008 518.247 524.919 521.378C536.613 519.269 542.345 516.332 550.81 526.417C556.924 525.575 563.037 524.74 569.15 523.897C569.502 504.476 570.603 497.854 552.249 488.266C541.856 491.073 531.507 482.745 522.043 482.507ZM513.412 496.184C514.851 496.666 516.289 497.141 517.727 497.623C518.914 497.71 537.153 497.48 536.067 499.423C521.841 500.38 506.63 495.824 513.412 496.184ZM563.756 503.382L563.756 504.822C540.95 509.904 542.648 507.593 563.756 503.382ZM511.255 503.382C520.151 513.985 523.797 523.358 516.649 515.259L511.255 503.382ZM517.727 504.822C518.921 506.449 525.121 516.094 523.481 517.059C521.331 516.462 516.483 505.455 517.727 504.822ZM506.939 504.822C517.526 517.347 516.095 521.975 510.176 513.1C509.097 510.343 508.018 507.579 506.939 504.822ZM503.343 504.822C506.12 511.048 510.435 515.799 508.378 516.339C507.011 516.339 501.754 506.866 503.343 504.822ZM523.481 508.421C524.797 509.738 526.12 511.063 527.437 512.38C533.492 521.09 524.653 514.957 523.481 508.421ZM534.988 512.02C538.117 512.718 534.664 515.058 534.629 515.259C534.866 516.217 535.11 517.181 535.348 518.139C533.262 521.479 532.169 511.394 534.988 512.02Z\",\n    fill: \"black\"\n  })), _path105 || (_path105 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M513.412 496.184C506.63 495.824 521.841 500.381 536.067 499.423C537.153 497.48 518.914 497.71 517.727 497.624C516.289 497.141 514.85 496.666 513.412 496.184Z\",\n    fill: \"black\"\n  })), _path106 || (_path106 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M563.756 503.382C542.647 507.593 540.95 509.903 563.756 504.821L563.756 503.382Z\",\n    fill: \"black\"\n  })), _path107 || (_path107 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M511.255 503.382L516.649 515.259C523.797 523.357 520.151 513.985 511.255 503.382Z\",\n    fill: \"black\"\n  })), _path108 || (_path108 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M517.728 504.821C516.483 505.455 521.331 516.461 523.481 517.059C525.121 516.094 518.921 506.448 517.728 504.821Z\",\n    fill: \"black\"\n  })), _path109 || (_path109 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M506.939 504.821C508.018 507.578 509.097 510.343 510.176 513.099C516.095 521.975 517.526 517.346 506.939 504.821Z\",\n    fill: \"black\"\n  })), _path110 || (_path110 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M503.343 504.821C501.754 506.866 507.011 516.339 508.377 516.339C510.434 515.799 506.119 511.048 503.343 504.821Z\",\n    fill: \"black\"\n  })), _path111 || (_path111 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M523.48 508.421C524.653 514.957 533.492 521.09 527.436 512.38C526.12 511.063 524.797 509.739 523.48 508.421Z\",\n    fill: \"black\"\n  })), _path112 || (_path112 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M534.988 512.019C532.169 511.393 533.262 521.478 535.348 518.138C535.11 517.18 534.866 516.216 534.629 515.258C534.665 515.057 538.117 512.717 534.988 512.019Z\",\n    fill: \"black\"\n  })), _path113 || (_path113 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M522.821 483.886C519.303 483.795 500.3 486.877 498.788 489.812C497.827 491.674 500.655 512.785 501.575 514.912C504.793 522.351 518.913 518.502 525.607 521.535C536.933 519.492 542.485 516.648 550.684 526.415C556.605 525.6 562.526 524.791 568.447 523.975C568.788 505.165 569.854 498.75 552.077 489.464C542.012 492.183 531.988 484.116 522.821 483.886ZM514.462 497.133C515.855 497.6 517.248 498.06 518.641 498.527C519.79 498.611 537.456 498.388 536.404 500.27C522.626 501.198 507.893 496.784 514.462 497.133ZM563.223 504.105L563.223 505.499C541.134 510.422 542.778 508.184 563.223 504.105ZM512.372 504.105C520.989 514.375 524.52 523.452 517.596 515.609L512.372 504.105ZM518.641 505.499C519.797 507.075 525.802 516.418 524.214 517.352C522.131 516.773 517.436 506.113 518.641 505.499ZM508.192 505.499C518.446 517.631 517.06 522.114 511.327 513.517C510.282 510.847 509.237 508.17 508.192 505.499ZM504.709 505.499C507.398 511.53 511.578 516.132 509.585 516.655C508.262 516.655 503.17 507.479 504.709 505.499ZM524.214 508.985C525.488 510.261 526.77 511.544 528.045 512.82C533.91 521.256 525.349 515.316 524.214 508.985ZM535.359 512.471C538.389 513.148 535.046 515.414 535.011 515.609C535.241 516.536 535.478 517.47 535.707 518.398C533.687 521.633 532.629 511.865 535.359 512.471Z\",\n    fill: \"#939393\"\n  })), _path114 || (_path114 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M514.461 497.133C507.892 496.784 522.625 501.197 536.404 500.27C537.455 498.388 519.79 498.611 518.641 498.527C517.247 498.06 515.854 497.6 514.461 497.133Z\",\n    fill: \"#939393\"\n  })), _path115 || (_path115 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M563.223 504.106C542.778 508.185 541.134 510.423 563.223 505.5L563.223 504.106Z\",\n    fill: \"#939393\"\n  })), _path116 || (_path116 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M512.371 504.106L517.596 515.61C524.52 523.453 520.988 514.376 512.371 504.106Z\",\n    fill: \"#939393\"\n  })), _path117 || (_path117 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M518.641 505.5C517.436 506.114 522.131 516.774 524.213 517.353C525.802 516.418 519.797 507.076 518.641 505.5Z\",\n    fill: \"#939393\"\n  })), _path118 || (_path118 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M508.192 505.5C509.237 508.171 510.282 510.848 511.327 513.518C517.06 522.115 518.446 517.632 508.192 505.5Z\",\n    fill: \"#939393\"\n  })), _path119 || (_path119 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M504.709 505.5C503.17 507.48 508.262 516.655 509.585 516.655C511.578 516.133 507.398 511.531 504.709 505.5Z\",\n    fill: \"#939393\"\n  })), _path120 || (_path120 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M524.213 508.984C525.349 515.315 533.91 521.255 528.045 512.819C526.77 511.543 525.488 510.26 524.213 508.984Z\",\n    fill: \"#939393\"\n  })), _path121 || (_path121 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M535.359 512.472C532.628 511.865 533.687 521.633 535.707 518.398C535.477 517.471 535.241 516.537 535.011 515.609C535.046 515.414 538.389 513.148 535.359 512.472Z\",\n    fill: \"#939393\"\n  })), _path122 || (_path122 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M515.21 548.011L541.101 548.011C537.721 541.396 532.277 541.928 526.717 535.414C517.13 516.518 515.864 526.632 499.747 524.976C491.771 539.927 500.402 537.617 506.22 540.813C509.219 543.21 512.211 545.614 515.21 548.011Z\",\n    fill: \"#939393\"\n  })), _path123 || (_path123 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M332.534 548.011L376.405 548.011C381.9 543.469 388.933 543.167 394.385 548.011L487.881 548.011C486.377 540.28 493.454 543.087 494.353 548.011C495.684 548.457 496.245 548.27 496.511 548.011C498.093 546.478 491.771 540.057 491.11 530.685C490.93 528.158 491.203 526.049 491.477 524.616C477.934 513.689 458.645 519.513 443.65 511.3L398.341 506.981C388.991 504.584 379.641 502.179 370.292 499.782C358.066 498.35 337.554 499.516 331.815 512.379C326.184 524.991 333.85 535.191 332.534 548.011Z\",\n    fill: \"#939393\"\n  })), _path124 || (_path124 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M487.88 548.012L494.353 548.012C493.454 543.088 486.377 540.281 487.88 548.012Z\",\n    fill: \"black\"\n  })), _path125 || (_path125 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M376.405 548.01L394.385 548.01C388.934 543.166 381.9 543.468 376.405 548.01Z\",\n    fill: \"black\"\n  })), _path126 || (_path126 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M399.815 411.281C386.495 412.671 347.767 420.575 338.683 427.838C328.197 436.216 331.621 464.441 328.974 477.146C334.605 477.988 340.244 478.823 345.875 479.666C352.83 483.747 359.777 487.821 366.732 491.903L379.677 489.743C390.724 494.969 402.447 491.701 414.199 496.942C432.689 488.793 446.39 502.895 457.351 492.623C464.032 486.36 459.048 473.05 454.114 467.068C445.599 462.138 445.218 452.621 438.292 446.193C434.459 437.555 430.618 428.917 426.785 420.279C417.061 407.956 410.948 417.587 399.815 411.281Z\",\n    fill: \"#939393\"\n  })), _path127 || (_path127 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2057 525L1660 525L1660 848L2057 848L2057 525Z\",\n    fill: \"#718B34\"\n  })), _path128 || (_path128 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M308.013 524.946L1749.01 524.946L1749.01 847.946L308.013 847.946L308.013 524.946Z\",\n    fill: \"#718B34\"\n  })), _path129 || (_path129 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M384 525L19 525L19 848L384 848L384 525Z\",\n    fill: \"#718B34\"\n  })), _path130 || (_path130 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1508.69 75.704L1490.44 505.713C1182.31 505.808 874.18 505.913 566.049 506.008C880.269 362.567 1194.48 219.135 1508.69 75.704Z\",\n    fill: \"#7B52AC\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path131 || (_path131 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M904.202 459.609C909.579 451.653 915.053 442.9 920.399 433.324C926.395 422.587 931.385 412.314 935.575 402.735C938.009 403.112 941.484 403.292 944.981 401.936C953.662 398.563 956.015 388.215 957.978 383.053C961.37 374.098 970.409 362.73 995.419 352.563C995.629 349.278 996.646 342.941 1001.82 337.768C1003.76 335.844 1006.7 332.894 1010.19 333.187C1014.1 333.524 1015.68 337.72 1019.81 342.552C1022.57 345.788 1027.19 350.132 1035.01 354.002C1034.77 355.533 1033.78 360.579 1028.96 364.738C1023.43 369.511 1016.8 369.692 1015.3 369.701C1016.13 371.334 1017.12 373.71 1017.64 376.677C1019.36 386.566 1014.23 394.406 1012.56 396.901C1007.18 404.877 999.502 408.493 996.264 409.806C999.352 408.591 1007.26 405.023 1012.56 396.901C1020.62 384.521 1016.05 371.66 1015.31 369.702C1016.81 369.693 1023.44 369.512 1028.97 364.738C1033.79 360.58 1034.79 355.523 1035.02 354.003C1036.55 350.192 1045.52 328.797 1064.62 325.381C1066.57 325.036 1068.73 324.852 1071.12 324.95C1072.13 320.427 1074.54 312.767 1080.94 305.25C1083.77 301.927 1088.93 294.97 1093 295.966C1095.77 296.639 1095.63 300.387 1098.55 304.416C1102.23 309.502 1108.72 312.177 1116.09 313.473C1127.93 334.391 1139.78 355.32 1151.61 376.239C1154.76 382.417 1158.48 386.203 1161.4 388.561C1164.24 390.866 1167.57 392.795 1168.1 396.295C1168.51 399.075 1166.68 399.648 1166.77 401.824C1167.06 408.7 1185.69 409.545 1192.15 420.994C1193.68 423.702 1194.11 426.246 1194.25 427.737C1170.68 452.829 1146.05 464.739 1131.76 470.351C1122.89 473.841 1071.82 493.07 1016.05 478.307C990.599 471.569 977.008 461.149 942.939 458.584C926.789 457.368 913.295 458.462 904.235 459.63L904.202 459.609Z\",\n    fill: \"#7B52AC\"\n  })), _path132 || (_path132 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1012.56 396.901C1014.23 394.406 1019.36 386.566 1017.64 376.677C1017.12 373.71 1016.13 371.334 1015.3 369.701C1016.8 369.692 1023.43 369.511 1028.96 364.738C1033.78 360.579 1034.77 355.533 1035.01 354.002C1027.19 350.132 1022.57 345.788 1019.81 342.552C1015.68 337.72 1014.1 333.524 1010.19 333.187C1006.7 332.894 1003.76 335.844 1001.82 337.768C996.646 342.941 995.629 349.278 995.419 352.563C970.409 362.73 961.37 374.098 957.978 383.053C956.015 388.215 953.662 398.563 944.981 401.936C941.484 403.292 938.009 403.112 935.575 402.735C931.385 412.314 926.395 422.587 920.399 433.324C915.053 442.9 909.579 451.653 904.202 459.609L904.235 459.63C913.295 458.462 926.789 457.368 942.939 458.584C977.008 461.149 990.599 471.569 1016.05 478.307C1071.82 493.07 1122.89 473.841 1131.76 470.351C1146.05 464.739 1170.68 452.829 1194.25 427.737C1194.11 426.246 1193.68 423.702 1192.15 420.994C1185.69 409.545 1167.06 408.7 1166.77 401.824C1166.68 399.648 1168.51 399.075 1168.1 396.295C1167.57 392.795 1164.24 390.866 1161.4 388.561C1158.48 386.203 1154.76 382.417 1151.61 376.239C1139.78 355.32 1127.93 334.391 1116.09 313.473C1108.72 312.177 1102.23 309.502 1098.55 304.416C1095.63 300.387 1095.77 296.639 1093 295.966C1088.93 294.97 1083.77 301.927 1080.94 305.25C1074.54 312.767 1072.13 320.427 1071.12 324.95C1068.73 324.852 1066.57 325.036 1064.62 325.381C1045.52 328.797 1036.55 350.192 1035.02 354.003C1034.79 355.523 1033.79 360.58 1028.97 364.738C1023.44 369.512 1016.81 369.693 1015.31 369.702C1016.05 371.66 1020.62 384.521 1012.56 396.901ZM1012.56 396.901C1007.18 404.877 999.502 408.493 996.264 409.806C999.352 408.591 1007.26 405.023 1012.56 396.901Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path133 || (_path133 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1008.49 358.939C1007.32 363.805 1005.6 369.322 1003.07 375.227C999.352 383.926 994.904 391.037 990.875 396.54\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path134 || (_path134 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M984.449 379.922C983.634 380.74 982.204 382.39 981.418 384.849C980.708 387.073 980.841 388.973 981.004 390.054\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path135 || (_path135 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M977.18 380.32C976.298 381.423 975.182 383.072 974.361 385.253C973.454 387.667 973.264 389.804 973.267 391.239\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path136 || (_path136 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M975.462 373.25C973.646 375.023 971.431 377.554 969.467 380.901C967.228 384.733 966.145 388.259 965.591 390.816\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path137 || (_path137 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M959.373 422.732C956.078 428.409 952.596 432.114 949.938 434.498C947.999 436.227 946.327 437.42 945.567 439.787C944.453 443.24 946.572 445.187 945.908 448.622C945.549 450.467 944.334 452.995 940.373 455.681\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path138 || (_path138 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M964.181 429.495C962.6 430.967 960.635 433.105 958.891 435.966C957.029 439.009 956.062 441.811 955.525 443.897\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path139 || (_path139 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M987.463 417.714C986.907 417.873 985.475 418.345 984.316 419.634C983.24 420.823 982.97 422.066 982.894 422.597\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path140 || (_path140 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1026.71 426.241C1024.43 428.657 1022.05 431.521 1019.8 434.871C1014.43 442.847 1011.81 450.502 1010.45 456.265\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path141 || (_path141 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1047.69 380.704C1046.38 383.362 1044.23 386.858 1040.75 390.337C1038.79 392.28 1036.84 393.804 1035.09 394.994\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path142 || (_path142 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1040.94 373.103C1041.2 372.455 1041.98 370.775 1043.92 369.58C1045.14 368.835 1046.32 368.571 1047.04 368.469C1047.11 365.888 1047.69 360.164 1051.94 354.565C1054.21 351.564 1056.81 349.578 1058.76 348.341\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path143 || (_path143 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1084.15 321.177C1080.82 322.63 1079.39 324.384 1078.71 325.636C1076.71 329.279 1079.22 331.811 1077.02 335.818C1075.99 337.695 1075.26 337.469 1072.67 340.707C1070.83 343.002 1069.64 345.06 1068.94 346.413\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path144 || (_path144 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1078.69 344.283C1078.75 344.92 1078.79 346.428 1077.89 348.073C1076.95 349.779 1075.53 350.671 1074.93 350.993\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path145 || (_path145 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1110.04 340.159C1110.44 347.642 1113.08 351.038 1115.51 352.747C1118.09 354.563 1119.61 353.889 1122.21 355.941C1125.63 358.661 1125.7 361.985 1127.71 367.731C1128.69 370.516 1130.34 374.488 1133.22 379.121\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path146 || (_path146 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1109.73 362.208C1110.06 363.232 1110.55 364.773 1111.05 366.663C1111.88 369.782 1111.77 370.056 1112.21 370.909C1113.69 373.77 1116.51 373.737 1118.4 375.697C1119.85 377.194 1120.96 380.075 1119.12 386.142\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path147 || (_path147 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1122.96 395.477C1123.03 396.248 1123.39 398.718 1125.62 400.769C1127.05 402.091 1128.64 402.649 1129.49 402.888\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path148 || (_path148 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M772.695 480.568C776.117 481.26 800.046 485.966 826.179 483.509C860.493 480.288 860.807 468.284 897.341 460.831C907.921 458.671 940.198 453.087 977.315 461.088C996.135 465.148 1001.04 469.428 1023.44 473.63C1045.66 477.796 1064.49 478.012 1076.91 477.554C1078.16 470.66 1081.15 461.037 1089.54 456.652C1101.02 450.663 1111.7 463.615 1131.96 462.672C1142.1 462.19 1152.42 456.056 1173.07 443.776C1198.97 428.386 1195.97 423.534 1210.88 414.26C1212.86 413.024 1218.11 409.882 1218.42 405.35C1218.59 402.741 1216.98 402.06 1216.91 398.491C1216.83 394.747 1218.58 394.069 1219.44 389.337C1220.38 384.105 1218.51 383.386 1219.75 380.92C1221.18 378.059 1224.43 377.546 1234.92 374.533C1247.98 370.772 1247.81 370.172 1250.9 370.168C1253.83 370.169 1260.48 370.726 1268.24 376.676C1277.61 371.55 1285.35 370.467 1291.71 371.365C1347.97 379.304 1358.16 550.225 1359.2 569.782C1218.22 565.203 1077.23 560.962 936.239 557.08C812.077 553.664 687.906 550.515 563.713 547.642C561.241 542.723 557.997 537.157 553.762 531.317C548.822 524.504 543.701 518.957 539.11 514.573C558.728 505.391 578.334 496.208 597.951 487.026C604.533 488.545 613.723 489.974 624.72 489.609C633.985 489.298 641.799 487.807 647.696 486.252C657.749 483.728 667.803 481.205 677.856 478.681C681.027 476.095 684.199 473.51 687.37 470.924C689.346 464.768 692.953 462.872 694.277 462.294C694.984 461.986 696.167 461.569 701.098 461.237C704.78 460.992 708 460.766 712.347 461.053C716.559 461.326 722.595 462.112 730.234 464.512C742.992 468.523 744.379 472.058 757.042 476.506C762.919 478.569 767.355 479.474 772.718 480.559L772.695 480.568Z\",\n    fill: \"black\"\n  })), _path149 || (_path149 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1331.95 570.74L1444.35 573.925C1457.77 557.658 1464.11 538.239 1456.23 525.182C1443.98 504.877 1402.41 508.332 1377.82 518.973C1344.57 533.345 1333.94 564.482 1331.95 570.74Z\",\n    fill: \"#409519\"\n  })), _path150 || (_path150 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1748.98 328.536C1753.07 366.681 1752.72 397.423 1751.63 418.55C1749.64 456.81 1745.49 458.169 1747.55 482.193C1749.71 507.296 1753.96 523.275 1749.7 549.98C1747.66 562.776 1744.32 573.086 1741.75 579.922L1444.82 571.509C1445.4 563.478 1459.35 409.161 1596.9 348.254C1659.32 320.614 1719.37 324.54 1748.99 328.546L1748.98 328.536Z\",\n    fill: \"#7E7B74\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path151 || (_path151 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1506.64 530.784C1528.47 527.076 1537.18 527.426 1552.04 524.197C1561.32 522.185 1559.55 521.694 1567.38 520.204C1582.26 517.366 1591.27 518.636 1603.76 518.488C1612.69 518.382 1622.07 516.956 1640.8 514.094C1673.85 509.054 1673.72 506.119 1690.37 505.504C1704.87 504.972 1721.22 504.584 1735.17 514.256C1738.1 516.297 1747.35 522.71 1750.29 533.403C1752.1 539.942 1750.44 544.098 1748.93 556.366C1747.76 565.784 1747.43 573.955 1747.41 580.382L1481.09 572.835C1482.47 570.056 1484.61 565.842 1487.39 560.713C1490.76 554.494 1491.33 553.844 1491.82 551.746C1493.57 544.293 1489.17 540.857 1491.2 536.753C1492.82 533.447 1497.31 532.354 1506.65 530.774L1506.64 530.784Z\",\n    fill: \"black\"\n  })), _path152 || (_path152 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1892.99 568.564L1800.99 571.748C1790 555.482 1784.81 536.062 1791.26 523.005C1801.29 502.7 1835.31 506.156 1855.44 516.796C1882.66 531.168 1891.36 562.306 1892.99 568.564Z\",\n    fill: \"#409519\"\n  })), _path153 || (_path153 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1551.63 326.359C1548.29 364.505 1548.57 395.247 1549.47 416.373C1551.09 454.633 1554.49 455.992 1552.8 480.016C1551.04 505.12 1547.55 521.098 1551.04 547.803C1552.71 560.6 1555.45 570.909 1557.55 577.745L1800.6 569.332C1800.12 561.302 1788.71 406.984 1676.12 346.077C1625.02 318.437 1575.87 322.363 1551.63 326.37L1551.63 326.359Z\",\n    fill: \"#7E7B74\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path154 || (_path154 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1750 528.607C1732.13 524.9 1725 525.249 1712.84 522.021C1705.24 520.008 1706.69 519.517 1700.28 518.027C1688.1 515.189 1680.73 516.459 1670.5 516.311C1663.19 516.205 1655.52 514.779 1640.18 511.917C1613.13 506.878 1613.24 503.942 1599.61 503.328C1587.74 502.795 1574.35 502.408 1562.94 512.08C1560.54 514.121 1552.97 520.533 1550.56 531.226C1549.08 537.766 1550.44 541.922 1551.68 554.19C1552.63 563.608 1552.9 571.778 1552.92 578.205L1770.91 570.659C1769.78 567.879 1768.03 563.665 1765.75 558.537C1763 552.318 1762.53 551.667 1762.13 549.57C1760.7 542.116 1764.3 538.68 1762.64 534.576C1761.31 531.27 1757.64 530.177 1749.99 528.597L1750 528.607Z\",\n    fill: \"black\"\n  })), _path155 || (_path155 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1667.35 298.196C1667.29 298.238 1667.06 298.431 1666.76 298.411C1664.01 298.178 1660.05 280.048 1663.86 273.715C1673.52 257.677 1743.62 302.403 1749.87 291.239C1751.39 288.521 1746.38 280.668 1736.34 264.953C1723.84 245.397 1718.62 242.697 1715.99 241.62C1713.86 240.75 1710.31 239.695 1694.96 242.512C1665.26 247.948 1652.1 256.747 1646.12 261.321C1638.54 267.119 1636.61 270.64 1635.95 273.974C1634.15 282.985 1641.45 291.107 1638.49 294.746C1637.81 295.589 1636.89 295.795 1631.18 295.593C1623.57 295.324 1618.61 294.717 1614.98 294.483C1610.28 294.174 1610.73 294.682 1600.6 294.981C1585.42 295.424 1586.77 294.219 1581.9 295.095C1578.54 295.704 1567.98 297.597 1560.66 306.522C1557.62 310.225 1555.13 315.16 1554.26 316.902C1553.68 318.029 1551.74 321.971 1550.39 326.056C1548.29 332.433 1548.23 338.114 1548.21 349.196C1548.17 361.057 1548.17 368.909 1548.17 372.056C1555.19 368.379 1562.21 364.702 1569.22 361.035C1584.5 375.586 1596.13 377.735 1603.87 377.088C1619.31 375.785 1630.43 362.392 1645.17 363.47C1646.74 363.59 1651.41 364.085 1654.47 360.893C1657.02 358.232 1657.44 354.097 1657.42 351.166C1657.09 356.948 1657.47 364.552 1660.57 372.317C1666.15 386.3 1677.72 395.443 1678.15 394.977C1678.56 394.532 1671.87 381.694 1662.62 380.805C1657.78 380.337 1656.35 383.543 1649.27 383.409C1643.66 383.296 1642.35 381.24 1637.2 380.619C1630.71 379.839 1626.47 382.354 1620.07 384.953C1609.85 389.11 1609.21 387.379 1594.37 391.727C1572.36 398.178 1561.36 401.408 1555.9 408.434C1550.78 415.039 1549.9 428.6 1548.16 455.712C1546.87 475.714 1548.14 481.267 1551.57 484.121C1556.68 488.383 1561.45 482.385 1572.75 486.596C1576.48 487.984 1580.77 490.9 1589.36 496.713C1597.6 502.291 1597.34 502.884 1599.63 503.307C1605.31 504.371 1608.5 501.083 1618.15 502.02C1618.32 502.035 1619.47 502.2 1621.76 502.541C1633.81 504.307 1639.9 505.193 1642.38 505.569C1649.85 506.684 1653.58 507.241 1653.94 507.311C1659.87 508.387 1660.38 508.769 1662.61 508.62C1667.27 508.295 1668.46 506.368 1673.57 505.893C1676.25 505.647 1677.77 505.994 1680.77 506.382C1680.77 506.382 1686.98 507.172 1696.98 507.02C1705.25 506.898 1721.81 502.696 1725.86 490.378C1729.08 480.611 1723.13 469.695 1720.8 465.419C1718.44 461.083 1717.22 460.612 1710.84 452.93C1707.07 448.396 1699.27 438.939 1692.83 427.886C1688.86 421.063 1680.94 405.971 1683.13 404.02C1684.75 402.58 1692.16 408.115 1696.32 415.997C1699.34 421.715 1699.54 426.567 1700.08 429.777C1703.9 452.206 1736.45 464.928 1754.54 486.72C1757.29 490.038 1759.2 492.945 1760.59 496.669C1762.99 503.106 1761.99 507.005 1763.54 515.285C1764.21 519.044 1765.42 523.871 1767.79 529.048C1779.29 554.163 1807.45 564.095 1810.43 559.656C1812.94 555.899 1797.76 541.387 1801.55 535.362C1803.01 533.036 1806.83 532.76 1813.44 532.275C1816.7 532.039 1819.58 531.827 1822.76 532.496C1832.32 534.492 1834.13 542.127 1844.58 547.239C1849.35 549.575 1849.54 548.267 1856.67 550.562C1876.5 556.959 1881.33 569.134 1888.18 566.272C1895.61 563.176 1893.27 547.471 1903.19 543.253C1905.18 542.405 1904.92 543.531 1912.03 542.342C1940.73 537.515 1937.26 534.078 1971.44 527.308C2029.4 515.83 2052.48 523.109 2055.3 513.335C2062.18 489.418 1929.86 425.872 1925.98 369.177C1925.7 365.22 1925.43 351.986 1917.34 345.1C1908.01 337.161 1892.93 341.619 1881.64 346.623C1881.39 338.933 1879.88 328.428 1873.11 322.061C1860.52 310.226 1842.11 324.354 1815.6 320.033C1793.87 316.501 1798.91 305.799 1770.73 295.283C1721.7 276.982 1670.27 295.88 1667.38 298.164L1667.35 298.196Z\",\n    fill: \"black\"\n  })), _path156 || (_path156 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1709.87 244.45C1687.16 241.331 1642.56 258.322 1640.55 278.114C1641.35 284.237 1642.14 290.36 1642.94 296.483L1658.5 309.782C1675.32 305.561 1694.48 304.488 1709.25 316.226C1718.57 310.091 1727.89 303.967 1737.2 297.832C1741.62 295.465 1751.81 293.442 1749.87 291.243C1734.52 279.997 1731.87 247.471 1709.87 244.45ZM1659.02 265.687C1663.24 265.828 1692.28 294.283 1657.66 266.246C1658.12 266.056 1658.57 265.876 1659.02 265.687ZM1648.98 268.084C1659.24 294.104 1652.8 307.151 1652.7 284.869C1650.18 280.015 1646.57 272.965 1648.98 268.084ZM1656.45 271.926C1661.3 273.029 1661.95 309.919 1658.39 290.822L1658.09 280.582C1658 280.093 1652.22 270.965 1656.45 271.926ZM1714.37 271.971C1711.35 273.439 1708.32 274.917 1705.31 276.385C1706.58 271.595 1697.46 280.972 1696.98 274.623C1691.63 274.983 1686.27 275.332 1680.92 275.692C1692.08 274.455 1703.22 273.208 1714.37 271.971ZM1663.86 273.72L1667.35 298.2C1663.66 301.065 1662.68 274.519 1663.86 273.72ZM1669.46 276.601C1672.55 277.673 1678.33 307.845 1672.32 295.465C1672.97 285.561 1666.38 275.539 1669.46 276.601ZM1686.08 279.101L1693.02 280.398C1689.66 280.853 1686.3 281.317 1682.94 281.772C1687.25 287.886 1691.65 304.053 1688.62 302.589C1686.85 295.803 1683.72 282.903 1679.24 280.875L1686.08 279.101ZM1675.98 279.45C1678.47 285.689 1680.95 291.917 1683.43 298.156C1685.79 310.16 1676.79 291.231 1675.98 279.45Z\",\n    fill: \"#939393\"\n  })), _path157 || (_path157 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1659.02 265.688C1658.57 265.878 1658.12 266.058 1657.66 266.248C1692.28 294.283 1663.24 265.829 1659.02 265.688Z\",\n    fill: \"#939393\"\n  })), _path158 || (_path158 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1648.98 268.082C1646.57 272.963 1650.19 280.013 1652.7 284.867C1652.8 307.148 1659.24 294.102 1648.98 268.082Z\",\n    fill: \"#939393\"\n  })), _path159 || (_path159 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1656.45 271.922C1652.22 270.962 1658 280.09 1658.09 280.578L1658.4 290.818C1661.95 309.915 1661.3 273.025 1656.45 271.922Z\",\n    fill: \"#939393\"\n  })), _path160 || (_path160 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1714.37 271.969C1703.22 273.206 1692.08 274.452 1680.93 275.689C1686.28 275.33 1691.63 274.98 1696.98 274.621C1697.47 280.97 1706.58 271.593 1705.31 276.383C1708.32 274.915 1711.35 273.437 1714.37 271.969Z\",\n    fill: \"#939393\"\n  })), _path161 || (_path161 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1663.86 273.718C1662.68 274.517 1663.67 301.062 1667.35 298.198L1663.86 273.718Z\",\n    fill: \"#939393\"\n  })), _path162 || (_path162 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1669.46 276.6C1666.38 275.539 1672.97 285.561 1672.32 295.465C1678.33 307.844 1672.55 277.672 1669.46 276.6Z\",\n    fill: \"#939393\"\n  })), _path163 || (_path163 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1686.08 279.103L1679.24 280.877C1683.72 282.905 1686.85 295.805 1688.62 302.591C1691.65 304.054 1687.25 287.888 1682.95 281.774C1686.31 281.319 1689.66 280.855 1693.02 280.4L1686.08 279.103Z\",\n    fill: \"#939393\"\n  })), _path164 || (_path164 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1675.98 279.45C1676.79 291.23 1685.79 310.159 1683.43 298.155C1680.95 291.916 1678.47 285.688 1675.98 279.45Z\",\n    fill: \"#939393\"\n  })), _path165 || (_path165 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1626.88 297.545C1589.35 303.59 1564.2 288.306 1558.3 325.033C1557.69 335.643 1557.09 346.263 1556.49 356.873C1557.65 373.07 1561.51 355.582 1568.87 355.932C1574.42 356.191 1586.91 372.036 1599.72 373.315C1619.44 375.287 1630.28 357.64 1650.75 358.223C1656.29 353.859 1652.62 343.756 1659 342.049C1654.44 312.326 1660.71 307.732 1626.88 297.545Z\",\n    fill: \"#939393\"\n  })), _path166 || (_path166 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1756.49 297.164C1749.5 294.167 1717.85 310.536 1717.99 316.435C1719.46 319.285 1720.92 322.146 1722.38 324.996C1742.07 322.49 1750.99 335.476 1752.72 355.723C1765.52 346.085 1778.89 337.032 1793.84 332.261C1788.32 299.199 1779.59 306.01 1756.49 297.164ZM1755.54 326.924C1757 329.661 1766.13 343.665 1764.35 345.07C1761.37 341.862 1754.19 346.057 1753.62 339.803C1753.28 336.033 1757.34 344.011 1755.81 336.14C1761.47 339.244 1753.12 328.391 1755.54 326.924Z\",\n    fill: \"#939393\"\n  })), _path167 || (_path167 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1792.73 310.258C1792.27 310.448 1791.82 310.628 1791.37 310.818C1793.05 315.885 1794.73 320.952 1796.42 326.019C1797.31 326.941 1813.52 323.069 1792.73 310.258Z\",\n    fill: \"#939393\"\n  })), _path168 || (_path168 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1868.4 319.941C1862.55 318.913 1838.7 325.254 1837.33 326.142C1832.23 329.444 1839.75 331.9 1838.32 344.046C1848.69 348.238 1871.75 369.294 1878.94 349.815C1882.45 340.294 1879.2 321.853 1868.4 319.941ZM1840.17 329.118C1844.28 333.414 1848.4 337.721 1852.51 342.017C1879.2 333.897 1879.9 336.774 1852.57 344.065C1846.97 338.928 1836.39 328.491 1840.17 329.118Z\",\n    fill: \"#939393\"\n  })), _path169 || (_path169 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1807.85 324.081C1799.5 333.421 1809.99 327.881 1820.95 331.828C1830.64 335.316 1837.73 349.984 1835.32 335.943C1833.15 323.277 1816.28 325.029 1807.85 324.081Z\",\n    fill: \"#939393\"\n  })), _path170 || (_path170 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1804.21 325.236C1802.09 325.996 1799.96 326.746 1797.84 327.506C1793.31 334.059 1808.33 327.481 1804.21 325.236Z\",\n    fill: \"#939393\"\n  })), _path171 || (_path171 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1755.53 326.919C1753.11 328.386 1761.47 339.239 1755.81 336.134C1757.34 344.005 1753.28 336.027 1753.62 339.798C1754.18 346.052 1761.37 341.857 1764.35 345.064C1766.13 343.66 1757 329.656 1755.53 326.919Z\",\n    fill: \"#939393\"\n  })), _path172 || (_path172 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1840.17 329.114C1836.39 328.487 1846.97 338.924 1852.57 344.061C1879.9 336.77 1879.2 333.893 1852.51 342.013C1848.4 337.717 1844.28 333.41 1840.17 329.114Z\",\n    fill: \"#939393\"\n  })), _path173 || (_path173 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1815.47 333.044L1804.45 333.425C1793.3 335 1761.11 354.361 1751.57 363.445C1749.69 375.893 1749.66 391.495 1739.78 399.73C1747.24 397.935 1754.68 396.139 1762.14 394.344C1769.38 400.582 1776.61 406.83 1783.84 413.068C1790.97 415.559 1798.08 418.039 1805.21 420.529C1810.94 391.465 1850.05 413.042 1874.39 397.633C1876.31 394.225 1861.09 381.683 1855.8 375.213C1846.36 363.68 1829.56 335.221 1815.47 333.044ZM1838.36 360.953C1832.64 364.226 1826.91 367.5 1821.19 370.773C1815.17 374.446 1817.17 380.548 1807.95 373.794C1817.28 377.315 1822.44 363.688 1838.36 360.953ZM1760.58 372.871C1765.03 384.557 1766.52 398.159 1762.49 390.744C1762.06 389.939 1758.44 371.479 1760.58 372.871ZM1786.36 374.029C1795.63 395.183 1794.57 408.32 1789.25 393.918C1788.29 387.288 1787.32 380.659 1786.36 374.029ZM1753.3 375.174C1760.26 386.116 1759.99 397.821 1754.93 383.83C1754.39 380.948 1753.84 378.056 1753.3 375.174ZM1784.58 376.141C1787 386.707 1789.8 397.486 1785.54 393.021C1784.93 392.376 1782.21 374.777 1784.58 376.141ZM1810.45 380.371C1817.94 394.134 1815.71 409.075 1812.27 395.171C1811.66 390.241 1811.05 385.301 1810.45 380.371ZM1801.38 400.161C1800.64 400.873 1799.89 401.576 1799.15 402.288C1791.02 381.248 1792.03 374.56 1801.38 400.161C1798.78 372.779 1801.49 378.743 1807.83 400.45C1807.08 400.988 1806.32 401.527 1805.58 402.066C1803.06 394.219 1803.48 400.754 1802.79 401.137C1802.32 400.815 1801.85 400.483 1801.38 400.161ZM1805.95 383.602C1814.48 404.515 1812.6 410.043 1807.77 398.402C1807.16 393.472 1806.55 388.532 1805.95 383.602Z\",\n    fill: \"#939393\"\n  })), _path174 || (_path174 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1906.78 343.212C1898.38 344.354 1890 345.505 1881.6 346.646C1881.34 348.019 1881.07 349.402 1880.81 350.774C1870.18 365.626 1881.88 361.705 1875.89 386.309C1891.7 388.55 1895.78 377.533 1903.14 375.115C1922.82 368.642 1925.75 381.303 1916.59 348.51C1913.32 346.748 1910.05 344.975 1906.78 343.212ZM1903.44 354.603C1915.21 364.58 1913.33 367.812 1903.5 356.651C1878.3 360.281 1876.17 356.685 1903.44 354.603Z\",\n    fill: \"#939393\"\n  })), _path175 || (_path175 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1841.64 347.515L1840.31 349.099C1850.78 362.021 1859.13 377.404 1872.25 387.457C1883.62 353.278 1867.04 362.667 1853.85 356.318C1849.79 353.383 1845.71 350.449 1841.64 347.515Z\",\n    fill: \"#939393\"\n  })), _path176 || (_path176 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1903.44 354.603C1876.17 356.685 1878.3 360.281 1903.5 356.651C1913.33 367.812 1915.21 364.579 1903.44 354.603Z\",\n    fill: \"#939393\"\n  })), _path177 || (_path177 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1838.36 360.953C1822.44 363.687 1817.28 377.315 1807.95 373.794C1817.17 380.547 1815.17 374.446 1821.19 370.773C1826.91 367.5 1832.64 364.226 1838.36 360.953Z\",\n    fill: \"#939393\"\n  })), _path178 || (_path178 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1682.44 310.994C1675.06 310.614 1668.46 312.575 1661.91 316.318C1666.16 335.637 1657.89 362.718 1667.48 379.679C1669.28 382.866 1690.15 395.397 1695.5 409.973C1697.09 406.669 1698.68 403.374 1700.26 400.07C1708.04 390.975 1736.03 412.691 1743.88 383.184L1748.48 352.273C1748.26 341.723 1741.83 328.814 1731.66 327.742C1717.98 326.308 1717.49 339.856 1701.87 315.447C1695.4 313.959 1688.92 312.482 1682.44 310.994ZM1672.46 315.44C1673.45 323.094 1674.45 330.747 1675.44 338.401C1672.35 332.091 1667.38 350.017 1668.19 341.727C1669.65 339.288 1671.1 336.839 1672.56 334.4C1674.53 324.225 1667.58 341.707 1667.12 336.639C1667.02 335.545 1673.42 328.691 1671.1 316C1671.55 315.81 1672 315.63 1672.46 315.44ZM1676.13 346.065C1677.1 346.574 1678.24 354.479 1688.65 365.108C1681.14 361.821 1671.07 343.421 1676.13 346.065ZM1666.12 349.486C1669.29 358.09 1672.45 366.693 1675.62 375.297C1676.45 386.564 1665.07 366.313 1666.12 349.486ZM1684.02 379.619C1683.61 380.996 1683.19 382.384 1682.77 383.762C1677.77 373.182 1675.67 356.465 1682 373.538C1675.98 348.694 1691.3 386.04 1691.66 389.092C1692.89 399.618 1688.86 394.96 1684.02 379.619ZM1695.2 368.981C1710.79 386.431 1722.37 375.523 1733.06 374.846C1741.35 374.323 1733.58 378.016 1719.88 379.915C1730.63 390.931 1727.16 393.532 1718.52 380.474C1709.94 382.227 1698.77 378.042 1695.2 368.981ZM1691.56 370.132C1693.09 375.379 1694.63 380.615 1696.16 385.861C1695.01 370.238 1700.29 384.324 1700.88 389.798C1702.72 407.017 1687.98 379.543 1691.56 370.132Z\",\n    fill: \"#939393\"\n  })), _path179 || (_path179 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1672.46 315.44C1672 315.63 1671.55 315.81 1671.1 316C1673.42 328.691 1667.02 335.545 1667.12 336.638C1667.58 341.706 1674.53 324.225 1672.56 334.4C1671.1 336.839 1669.65 339.287 1668.19 341.726C1667.38 350.016 1672.35 332.091 1675.44 338.4C1674.45 330.747 1673.45 323.094 1672.46 315.44Z\",\n    fill: \"#939393\"\n  })), _path180 || (_path180 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1676.13 346.067C1671.07 343.424 1681.14 361.823 1688.65 365.11C1678.24 354.482 1677.1 346.577 1676.13 346.067Z\",\n    fill: \"#939393\"\n  })), _path181 || (_path181 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1666.12 349.486C1665.07 366.312 1676.44 386.563 1675.62 375.295C1672.45 366.692 1669.29 358.089 1666.12 349.486Z\",\n    fill: \"#939393\"\n  })), _path182 || (_path182 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1682 373.539C1682.68 375.566 1683.35 377.593 1684.02 379.619C1688.86 394.961 1692.88 399.619 1691.66 389.093C1691.3 386.04 1675.98 348.696 1682 373.539Z\",\n    fill: \"#939393\"\n  })), _path183 || (_path183 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1684.02 379.617C1683.35 377.59 1682.68 375.563 1682 373.536C1675.67 356.463 1677.77 373.181 1682.77 383.76C1683.19 382.382 1683.61 380.994 1684.02 379.617Z\",\n    fill: \"#939393\"\n  })), _path184 || (_path184 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1695.2 368.982C1698.77 378.043 1709.94 382.228 1718.52 380.475C1727.16 393.533 1730.63 390.932 1719.89 379.915C1733.58 378.017 1741.35 374.324 1733.06 374.847C1722.37 375.524 1710.79 386.432 1695.2 368.982Z\",\n    fill: \"#939393\"\n  })), _path185 || (_path185 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1691.56 370.133C1687.99 379.543 1702.72 407.017 1700.88 389.799C1700.29 384.325 1695.01 370.239 1696.16 385.862C1694.63 380.615 1693.09 375.379 1691.56 370.133Z\",\n    fill: \"#939393\"\n  })), _path186 || (_path186 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1760.58 372.873C1758.44 371.481 1762.06 389.94 1762.49 390.745C1766.52 398.16 1765.03 384.559 1760.58 372.873Z\",\n    fill: \"#939393\"\n  })), _path187 || (_path187 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1786.36 374.03C1787.32 380.66 1788.29 387.289 1789.25 393.918C1794.57 408.321 1795.63 395.184 1786.36 374.03Z\",\n    fill: \"#939393\"\n  })), _path188 || (_path188 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1753.3 375.175C1753.84 378.057 1754.39 380.949 1754.93 383.831C1759.99 397.822 1760.26 386.117 1753.3 375.175Z\",\n    fill: \"#939393\"\n  })), _path189 || (_path189 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1784.58 376.144C1782.21 374.781 1784.93 392.379 1785.54 393.024C1789.8 397.489 1787 386.711 1784.58 376.144Z\",\n    fill: \"#939393\"\n  })), _path190 || (_path190 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1640.47 383.181C1623.52 385.746 1574.4 398.702 1563.11 409.435C1550.08 421.818 1555.65 461.818 1552.81 480.009C1560.03 480.958 1567.27 481.897 1574.5 482.846C1583.55 488.345 1592.59 493.833 1601.65 499.332L1618.08 495.688C1632.41 502.634 1647.24 497.467 1662.47 504.402C1685.73 491.993 1703.83 511.448 1717.38 496.351C1725.65 487.147 1718.72 468.433 1712.17 460.142C1701.09 453.504 1700.19 439.983 1691.08 431.145C1685.82 419.026 1680.55 406.908 1675.29 394.789C1662.35 377.688 1654.95 391.66 1640.47 383.181Z\",\n    fill: \"#939393\"\n  })), _path191 || (_path191 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1810.45 380.372C1811.05 385.302 1811.66 390.243 1812.27 395.172C1815.71 409.076 1817.94 394.135 1810.45 380.372Z\",\n    fill: \"#939393\"\n  })), _path192 || (_path192 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1801.39 400.16C1801.85 400.482 1802.32 400.814 1802.79 401.136C1803.48 400.754 1803.06 394.218 1805.58 402.065C1806.33 401.526 1807.08 400.988 1807.83 400.449C1801.49 378.743 1798.79 372.779 1801.39 400.16Z\",\n    fill: \"#939393\"\n  })), _path193 || (_path193 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1801.38 400.161C1792.04 374.562 1791.02 381.249 1799.15 402.289C1799.89 401.576 1800.64 400.874 1801.38 400.161Z\",\n    fill: \"#939393\"\n  })), _path194 || (_path194 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1805.95 383.607C1806.55 388.536 1807.16 393.477 1807.77 398.407C1812.6 410.048 1814.48 404.519 1805.95 383.607Z\",\n    fill: \"#939393\"\n  })), _path195 || (_path195 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1906.2 400.633C1905.22 399.918 1897.31 388.373 1901.73 389.512C1903.02 389.846 1902.51 401.672 1917.2 399.739C1915.46 402.546 1911.41 401.087 1908.06 401.593C1912.4 402.919 1914.61 407.148 1921.47 404.204C1926.85 401.896 1920.02 388.458 1912.66 386.058C1902.3 382.675 1878.25 393.686 1884.49 397.284C1891.94 396.257 1899.03 398.718 1906.2 400.633Z\",\n    fill: \"#939393\"\n  })), _path196 || (_path196 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1906.2 400.633L1908.06 401.594C1911.41 401.088 1915.46 402.547 1917.2 399.74C1902.51 401.673 1903.01 389.847 1901.73 389.513C1897.31 388.374 1905.22 399.919 1906.2 400.633Z\",\n    fill: \"#939393\"\n  })), _path197 || (_path197 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1879.96 399.495C1872.98 401.786 1866.01 404.078 1859.02 406.37C1846.14 408.815 1814.05 404.308 1809.39 421.926C1806.31 433.585 1820.59 432.424 1820.76 448.697C1834.19 432.518 1865.55 446.439 1884.95 443.4C1897.18 441.48 1902.08 429.799 1914.21 438.286C1925.23 445.993 1921.95 471.312 1956.47 452.712C1941.16 437.692 1925.85 422.682 1910.54 407.662C1904.05 403.458 1887.32 399.055 1879.96 399.495ZM1816.2 419.128C1819.33 431.105 1817.99 418.348 1820.5 424.617C1821.4 429.198 1822.31 433.78 1823.21 438.361C1820.06 432.433 1814.96 426.551 1816.2 419.128ZM1864.1 422.595C1872.4 423.722 1881.45 434.757 1876.44 435.494C1874.99 435.708 1867.7 419.887 1850.93 427.664C1860.54 447.453 1847.19 431.053 1849.92 424.624C1854.65 423.947 1859.37 423.271 1864.1 422.595ZM1823.7 423.994C1824.88 427.54 1826.05 431.088 1827.23 434.634C1828.23 444.769 1822.86 436.867 1823.7 423.994Z\",\n    fill: \"#939393\"\n  })), _path198 || (_path198 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1816.2 419.128C1814.96 426.551 1820.06 432.432 1823.21 438.361C1822.31 433.78 1821.4 429.198 1820.5 424.617C1817.99 418.348 1819.33 431.105 1816.2 419.128Z\",\n    fill: \"#939393\"\n  })), _path199 || (_path199 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1864.11 422.596C1859.37 423.272 1854.65 423.948 1849.92 424.625C1847.2 431.054 1860.54 447.454 1850.93 427.665C1867.7 419.888 1874.99 435.709 1876.44 435.495C1881.45 434.758 1872.4 423.723 1864.11 422.596Z\",\n    fill: \"#939393\"\n  })), _path200 || (_path200 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1823.7 423.997C1822.86 436.87 1828.23 444.772 1827.23 434.638C1826.05 431.091 1824.88 427.544 1823.7 423.997Z\",\n    fill: \"#939393\"\n  })), _path201 || (_path201 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1760.46 399.527C1741.95 404.781 1724.01 410.742 1705.39 402.458C1687.99 440.086 1738.68 465.793 1760.3 486.663C1767.82 470.75 1782.79 477.479 1783.72 470.476C1788.43 474.711 1798.38 467.416 1811.39 473.619C1812.85 466.218 1814.32 458.828 1815.78 451.428C1816.68 436.779 1808.03 440.093 1800.71 423.76C1784.42 423.638 1772.4 410.297 1760.46 399.527ZM1729.11 427.264C1740.16 429.044 1759.86 454.286 1782.1 446.956C1782.27 447.463 1782.43 447.97 1782.6 448.476C1761.53 454.936 1753.92 442.027 1737.56 433.122C1732.1 430.153 1716.27 425.197 1729.11 427.264ZM1730.37 438.496C1732.73 445.928 1735.1 453.37 1737.47 460.802C1733.17 463.564 1728.41 442.377 1730.37 438.496ZM1737.99 447.458C1745.77 464.205 1749.27 476.896 1741.71 464.243C1740.33 461.943 1736.35 450.631 1737.99 447.458ZM1749.96 448.069C1767.9 491.054 1748.01 462.066 1748.63 449.652L1749.96 448.069ZM1745.37 448.228C1753.61 464.025 1752.84 475.102 1749.14 467.06C1747.88 460.779 1746.63 454.508 1745.37 448.228ZM1755.56 450.95C1769.54 474.637 1761.41 472.181 1757.23 460.63C1756.67 457.4 1756.11 454.18 1755.56 450.95Z\",\n    fill: \"#939393\"\n  })), _path202 || (_path202 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1729.11 427.26C1716.27 425.193 1732.1 430.15 1737.56 433.118C1753.92 442.023 1761.53 454.932 1782.6 448.472C1782.43 447.966 1782.27 447.459 1782.1 446.952C1759.86 454.282 1740.16 429.04 1729.11 427.26Z\",\n    fill: \"#939393\"\n  })), _path203 || (_path203 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1730.37 438.497C1728.41 442.377 1733.17 463.564 1737.47 460.802C1735.1 453.37 1732.73 445.928 1730.37 438.497Z\",\n    fill: \"#939393\"\n  })), _path204 || (_path204 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1737.99 447.456C1736.36 450.629 1740.33 461.941 1741.71 464.241C1749.27 476.894 1745.77 464.202 1737.99 447.456Z\",\n    fill: \"#939393\"\n  })), _path205 || (_path205 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1749.96 448.074L1748.63 449.658C1748.01 462.072 1767.9 491.058 1749.96 448.074Z\",\n    fill: \"#939393\"\n  })), _path206 || (_path206 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1745.37 448.227C1746.63 454.508 1747.88 460.778 1749.14 467.059C1752.84 475.101 1753.61 464.024 1745.37 448.227Z\",\n    fill: \"#939393\"\n  })), _path207 || (_path207 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1755.56 450.951C1756.11 454.181 1756.67 457.401 1757.23 460.631C1761.41 472.182 1769.54 474.637 1755.56 450.951Z\",\n    fill: \"#939393\"\n  })), _path208 || (_path208 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1905.95 438.567C1902.52 438.357 1888.78 451.892 1875.06 450.911C1867.06 445.397 1832.61 443.227 1826.24 447.476C1820.09 451.584 1814.84 473.169 1815.57 475.01C1816.34 476.972 1828.58 478.096 1829.88 477.077C1830.63 476.487 1833.75 455.827 1832.16 476.485C1837.1 478.929 1833.13 471.942 1835.94 464.566L1837.73 478.343L1839.57 478.279C1842.79 455.36 1840.26 483.995 1843.18 476.104L1843.36 482.248C1860.29 493.85 1858.21 498.771 1854 484.442C1857.55 490.47 1861.1 496.498 1864.65 502.525C1870.32 504.738 1891.56 490.738 1898.23 488.037C1905.74 484.999 1922.09 484.433 1923.23 478.458C1924.56 471.432 1917.37 439.278 1905.95 438.567ZM1834.78 456.406C1840.87 460.121 1846.95 463.847 1853.04 467.562C1852.31 474.527 1822.93 455.145 1834.78 456.406ZM1875.61 469.344C1872.82 475.119 1855.82 476.671 1860.12 473.98C1865.29 472.438 1870.45 470.886 1875.61 469.344ZM1871.3 494.094C1873.02 502.768 1868.48 494.479 1862.85 488.237C1872.18 508.835 1853.55 481.188 1855.72 480.283C1857.46 482.273 1859.21 484.262 1860.95 486.252C1854.65 474.405 1863.32 483.812 1867.44 488.078C1865.82 485.233 1864.21 482.377 1862.59 479.532C1863.04 479.343 1863.5 479.163 1863.95 478.973C1875.76 492.207 1878.9 502.104 1871.3 494.094Z\",\n    fill: \"#939393\"\n  })), _path209 || (_path209 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1834.78 456.401C1822.93 455.141 1852.31 474.522 1853.04 467.557C1846.95 463.842 1840.87 460.117 1834.78 456.401Z\",\n    fill: \"#939393\"\n  })), _path210 || (_path210 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1875.61 469.345C1870.45 470.887 1865.29 472.439 1860.12 473.981C1855.82 476.672 1872.82 475.12 1875.61 469.345Z\",\n    fill: \"#939393\"\n  })), _path211 || (_path211 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1867.44 488.081C1868.72 490.087 1870.01 492.092 1871.3 494.098C1878.9 502.107 1875.76 492.211 1863.95 478.977C1863.5 479.167 1863.04 479.346 1862.59 479.536C1864.21 482.381 1865.82 485.236 1867.44 488.081Z\",\n    fill: \"#939393\"\n  })), _path212 || (_path212 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1860.95 486.252C1861.59 486.917 1862.21 487.572 1862.85 488.236C1868.48 494.479 1873.03 502.768 1871.3 494.094C1870.01 492.089 1868.72 490.083 1867.44 488.077C1863.32 483.812 1854.65 474.405 1860.95 486.252Z\",\n    fill: \"#939393\"\n  })), _path213 || (_path213 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1862.85 488.241C1862.21 487.576 1861.58 486.921 1860.95 486.256C1859.21 484.266 1857.46 482.277 1855.72 480.287C1853.55 481.193 1872.18 508.839 1862.85 488.241Z\",\n    fill: \"#939393\"\n  })), _path214 || (_path214 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1987.28 453.171C1970.37 450.804 1951.31 462.534 1935.3 467.27C1942.55 473.857 1949.79 480.433 1957.04 487.019C1957.27 487.073 1957.99 482.148 1959.79 486.924C1963.4 478.404 1964.03 491.236 1965.58 495.949C1966.13 493.726 1966.83 479.433 1968.79 480.462C1966.01 512.827 1974.21 505.471 1985.23 507.57C2006.96 511.717 2029 518.304 2051.18 515.025C2031.7 495.557 2028.59 474.62 2004.05 460.79C1998.46 458.247 1992.87 455.714 1987.28 453.171ZM1974.82 466.928C1977.34 469.229 1979.86 471.54 1982.38 473.841C1984.65 475.054 2005.39 480.938 2004.28 483.846C1993.29 479.737 1980.53 477.432 1972.54 467.519C1973.3 467.319 1974.06 467.128 1974.82 466.928ZM1978.86 479.088L1978.08 499.104L1976.24 499.168C1976.01 496.613 1975.79 494.058 1975.55 491.504C1974.99 491.523 1975.82 501.848 1973.04 499.791C1971.5 498.645 1975.13 477.147 1977.65 484.768C1978.05 482.878 1978.46 480.978 1978.86 479.088ZM1972.46 480.335C1973.27 502.12 1968.49 506.089 1969.54 490.174C1970.52 486.891 1971.49 483.618 1972.46 480.335ZM1981.8 485.137C1983.78 500.055 1977.8 508.37 1979.7 491.873C1980.4 489.624 1981.1 487.386 1981.8 485.137Z\",\n    fill: \"#939393\"\n  })), _path215 || (_path215 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1974.82 466.928C1974.06 467.129 1973.3 467.319 1972.54 467.52C1980.53 477.432 1993.29 479.737 2004.28 483.847C2005.39 480.938 1984.65 475.055 1982.38 473.842C1979.86 471.541 1977.34 469.229 1974.82 466.928Z\",\n    fill: \"#939393\"\n  })), _path216 || (_path216 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1978.86 479.087C1978.46 480.977 1978.05 482.877 1977.65 484.767C1975.13 477.146 1971.5 498.643 1973.04 499.789C1975.82 501.846 1974.99 491.521 1975.55 491.502C1975.79 494.057 1976.01 496.611 1976.24 499.166L1978.08 499.102L1978.86 479.087Z\",\n    fill: \"#939393\"\n  })), _path217 || (_path217 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1972.46 480.335C1971.49 483.618 1970.52 486.89 1969.54 490.174C1968.49 506.088 1973.27 502.12 1972.46 480.335Z\",\n    fill: \"#939393\"\n  })), _path218 || (_path218 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1981.8 485.14C1981.1 487.388 1980.4 489.627 1979.7 491.875C1977.8 508.372 1983.78 500.057 1981.8 485.14Z\",\n    fill: \"#939393\"\n  })), _path219 || (_path219 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1937.51 479.505C1933.27 481.364 1929.04 483.212 1924.8 485.071C1915.98 487.426 1907.17 489.781 1898.35 492.136C1887.41 496.472 1877.64 505.472 1865.69 506.593C1859.89 545.766 1860.24 522.731 1903.19 530.921C1932.84 531.002 1936.79 518.288 1963.43 516.535C1959.84 504.666 1950.69 480.044 1937.51 479.505ZM1938.03 496.914C1930.17 500.599 1922.32 504.295 1914.46 507.98C1923.91 520.937 1913.19 506.353 1903.94 509.882C1915.3 505.562 1926.66 501.233 1938.03 496.914Z\",\n    fill: \"#939393\"\n  })), _path220 || (_path220 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1938.03 496.913C1926.66 501.233 1915.3 505.562 1903.94 509.881C1913.19 506.353 1923.92 520.937 1914.46 507.98C1922.32 504.294 1930.17 500.599 1938.03 496.913Z\",\n    fill: \"#939393\"\n  })), _path221 || (_path221 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1796.76 476.172C1792.12 476.2 1767.2 481.593 1765.34 485.973C1764.15 488.751 1768.8 519.629 1770.11 522.71C1774.68 533.489 1793.12 527.192 1802.08 531.341C1816.92 527.824 1824.12 523.393 1835.35 537.365C1843.12 535.897 1850.89 534.438 1858.66 532.97C1858.29 505.327 1859.41 495.858 1835.57 483.029C1822.42 487.482 1808.85 476.092 1796.76 476.172ZM1786.32 496.01C1788.18 496.632 1790.03 497.244 1791.89 497.867C1793.41 497.937 1816.69 496.804 1815.38 499.616C1797.26 501.607 1777.64 495.797 1786.32 496.01ZM1850.91 504.025L1850.97 506.073C1822.06 514.31 1824.13 510.948 1850.91 504.025ZM1783.87 506.345C1795.68 521.035 1800.73 534.207 1791.26 523.003L1783.87 506.345ZM1792.19 508.107C1793.79 510.368 1802.11 523.816 1800.06 525.261C1797.29 524.506 1790.63 509.063 1792.19 508.107ZM1778.42 508.584C1792.47 525.934 1790.84 532.581 1782.9 520.217C1781.41 516.343 1779.91 512.458 1778.42 508.584ZM1773.83 508.743C1777.64 517.478 1783.35 524.045 1780.75 524.904C1779 524.965 1771.89 511.721 1773.83 508.743ZM1799.69 512.973C1801.43 514.788 1803.18 516.614 1804.91 518.43C1813.01 530.553 1801.47 522.219 1799.69 512.973ZM1814.54 517.584C1818.56 518.439 1814.26 521.92 1814.22 522.208C1814.56 523.559 1814.92 524.921 1815.26 526.272C1812.74 531.116 1810.91 516.818 1814.54 517.584Z\",\n    fill: \"#939393\"\n  })), _path222 || (_path222 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1786.32 496.011C1777.65 495.799 1797.26 501.609 1815.38 499.618C1816.69 496.805 1793.41 497.939 1791.89 497.869C1790.03 497.246 1788.18 496.634 1786.32 496.011Z\",\n    fill: \"#939393\"\n  })), _path223 || (_path223 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1850.91 504.023C1824.13 510.946 1822.06 514.308 1850.97 506.071L1850.91 504.023Z\",\n    fill: \"#939393\"\n  })), _path224 || (_path224 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1783.87 506.347L1791.26 523.005C1800.73 534.209 1795.68 521.038 1783.87 506.347Z\",\n    fill: \"#939393\"\n  })), _path225 || (_path225 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1792.19 508.11C1790.63 509.066 1797.29 524.508 1800.06 525.263C1802.11 523.818 1793.79 510.371 1792.19 508.11Z\",\n    fill: \"#939393\"\n  })), _path226 || (_path226 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1778.42 508.586C1779.91 512.46 1781.41 516.344 1782.9 520.218C1790.84 532.582 1792.47 525.935 1778.42 508.586Z\",\n    fill: \"#939393\"\n  })), _path227 || (_path227 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1773.83 508.739C1771.89 511.718 1779 524.961 1780.75 524.9C1783.35 524.041 1777.64 517.474 1773.83 508.739Z\",\n    fill: \"#939393\"\n  })), _path228 || (_path228 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1799.69 512.973C1801.47 522.219 1813.01 530.553 1804.91 518.43C1803.18 516.615 1801.43 514.789 1799.69 512.973Z\",\n    fill: \"#939393\"\n  })), _path229 || (_path229 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1814.54 517.583C1810.91 516.816 1812.74 531.113 1815.26 526.27C1814.92 524.919 1814.56 523.557 1814.22 522.206C1814.26 521.918 1818.56 518.438 1814.54 517.583Z\",\n    fill: \"#939393\"\n  })), _path230 || (_path230 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1790.81 569.661L1823.87 568.517C1819.28 559.256 1812.35 560.254 1804.97 551.233C1791.93 524.776 1790.74 539.219 1770.09 537.577C1760.54 559.198 1771.46 555.529 1779.03 559.819C1782.96 563.096 1786.88 566.384 1790.81 569.661Z\",\n    fill: \"#939393\"\n  })), _path231 || (_path231 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1557.56 577.738L1613.58 575.799C1620.4 569.094 1629.37 568.353 1636.54 575.004L1755.92 570.872C1753.67 559.94 1762.82 563.621 1764.18 570.586C1765.9 571.162 1766.61 570.871 1766.94 570.49C1768.89 568.239 1760.55 559.384 1759.3 546.081C1758.97 542.495 1759.23 539.482 1759.52 537.433C1741.76 522.487 1717.38 531.623 1697.88 520.602L1639.85 516.461C1627.81 513.464 1615.77 510.457 1603.73 507.461C1588.05 505.963 1561.91 508.529 1555.13 527.081C1548.47 545.271 1558.7 559.442 1557.56 577.738Z\",\n    fill: \"#939393\"\n  })), _path232 || (_path232 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1755.92 570.87L1764.18 570.584C1762.82 563.62 1753.67 559.94 1755.92 570.87Z\",\n    fill: \"#939393\"\n  })), _path233 || (_path233 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1613.58 575.799L1636.53 575.005C1629.37 568.354 1620.4 569.095 1613.58 575.799Z\",\n    fill: \"#939393\"\n  })), _path234 || (_path234 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1709.87 244.45C1687.16 241.331 1642.56 258.322 1640.55 278.114C1641.35 284.237 1642.14 290.36 1642.94 296.483L1658.5 309.782C1675.32 305.561 1694.48 304.488 1709.25 316.226C1718.57 310.091 1727.89 303.967 1737.2 297.832C1741.62 295.465 1751.81 293.442 1749.87 291.243C1734.52 279.997 1731.87 247.471 1709.87 244.45ZM1659.02 265.687C1663.24 265.828 1692.28 294.283 1657.66 266.246C1658.12 266.056 1658.57 265.876 1659.02 265.687ZM1648.98 268.084C1659.24 294.104 1652.8 307.151 1652.7 284.869C1650.18 280.015 1646.57 272.965 1648.98 268.084ZM1656.45 271.926C1661.3 273.029 1661.95 309.919 1658.39 290.822L1658.09 280.582C1658 280.093 1652.22 270.965 1656.45 271.926ZM1714.37 271.971C1711.35 273.439 1708.32 274.917 1705.31 276.385C1706.58 271.595 1697.46 280.972 1696.98 274.623C1691.63 274.983 1686.27 275.332 1680.92 275.692C1692.08 274.455 1703.22 273.208 1714.37 271.971ZM1663.86 273.72L1667.35 298.2C1663.66 301.065 1662.68 274.519 1663.86 273.72ZM1669.46 276.601C1672.55 277.673 1678.33 307.845 1672.32 295.465C1672.97 285.561 1666.38 275.539 1669.46 276.601ZM1686.08 279.101L1693.02 280.398C1689.66 280.853 1686.3 281.317 1682.94 281.772C1687.25 287.886 1691.65 304.053 1688.62 302.589C1686.85 295.803 1683.72 282.903 1679.24 280.875L1686.08 279.101ZM1675.98 279.45C1678.47 285.689 1680.95 291.917 1683.43 298.156C1685.79 310.16 1676.79 291.231 1675.98 279.45Z\",\n    fill: \"#939393\"\n  })), _path235 || (_path235 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1659.02 265.688C1658.57 265.878 1658.12 266.058 1657.66 266.248C1692.28 294.283 1663.24 265.829 1659.02 265.688Z\",\n    fill: \"#939393\"\n  })), _path236 || (_path236 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1648.98 268.082C1646.57 272.963 1650.19 280.013 1652.7 284.867C1652.8 307.148 1659.24 294.102 1648.98 268.082Z\",\n    fill: \"#939393\"\n  })), _path237 || (_path237 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1656.45 271.922C1652.22 270.962 1658 280.09 1658.09 280.578L1658.4 290.818C1661.95 309.915 1661.3 273.025 1656.45 271.922Z\",\n    fill: \"#939393\"\n  })), _path238 || (_path238 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1714.37 271.969C1703.22 273.206 1692.08 274.452 1680.93 275.689C1686.28 275.33 1691.63 274.98 1696.98 274.621C1697.47 280.97 1706.58 271.593 1705.31 276.383C1708.32 274.915 1711.35 273.437 1714.37 271.969Z\",\n    fill: \"#939393\"\n  })), _path239 || (_path239 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1663.86 273.718C1662.68 274.517 1663.67 301.062 1667.35 298.198L1663.86 273.718Z\",\n    fill: \"#939393\"\n  })), _path240 || (_path240 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1669.46 276.6C1666.38 275.539 1672.97 285.561 1672.32 295.465C1678.33 307.844 1672.55 277.672 1669.46 276.6Z\",\n    fill: \"#939393\"\n  })), _path241 || (_path241 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1686.08 279.103L1679.24 280.877C1683.72 282.905 1686.85 295.805 1688.62 302.591C1691.65 304.054 1687.25 287.888 1682.95 281.774C1686.31 281.319 1689.66 280.855 1693.02 280.4L1686.08 279.103Z\",\n    fill: \"#939393\"\n  })), _path242 || (_path242 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1675.98 279.45C1676.79 291.23 1685.79 310.159 1683.43 298.155C1680.95 291.916 1678.47 285.688 1675.98 279.45Z\",\n    fill: \"#939393\"\n  })), _path243 || (_path243 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1626.88 297.545C1589.35 303.59 1564.2 288.306 1558.3 325.033C1557.69 335.643 1557.09 346.263 1556.49 356.873C1557.65 373.07 1561.51 355.582 1568.87 355.932C1574.42 356.191 1586.91 372.036 1599.72 373.315C1619.44 375.287 1630.28 357.64 1650.75 358.223C1656.29 353.859 1652.62 343.756 1659 342.049C1654.44 312.326 1660.71 307.732 1626.88 297.545Z\",\n    fill: \"#939393\"\n  })), _path244 || (_path244 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1756.49 297.164C1749.5 294.167 1717.85 310.536 1717.99 316.435C1719.46 319.285 1720.92 322.146 1722.38 324.996C1742.07 322.49 1750.99 335.476 1752.72 355.723C1765.52 346.085 1778.89 337.032 1793.84 332.261C1788.32 299.199 1779.59 306.01 1756.49 297.164ZM1755.54 326.924C1757 329.661 1766.13 343.665 1764.35 345.07C1761.37 341.862 1754.19 346.057 1753.62 339.803C1753.28 336.033 1757.34 344.011 1755.81 336.14C1761.47 339.244 1753.12 328.391 1755.54 326.924Z\",\n    fill: \"#939393\"\n  })), _path245 || (_path245 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1792.73 310.258C1792.27 310.448 1791.82 310.628 1791.37 310.818C1793.05 315.885 1794.73 320.952 1796.42 326.019C1797.31 326.941 1813.52 323.069 1792.73 310.258Z\",\n    fill: \"#939393\"\n  })), _path246 || (_path246 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1868.4 319.941C1862.55 318.913 1838.7 325.254 1837.33 326.142C1832.23 329.444 1839.75 331.9 1838.32 344.046C1848.69 348.238 1871.75 369.294 1878.94 349.815C1882.45 340.294 1879.2 321.853 1868.4 319.941ZM1840.17 329.118C1844.28 333.414 1848.4 337.721 1852.51 342.017C1879.2 333.897 1879.9 336.774 1852.57 344.065C1846.97 338.928 1836.39 328.491 1840.17 329.118Z\",\n    fill: \"#939393\"\n  })), _path247 || (_path247 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1807.85 324.081C1799.5 333.421 1809.99 327.881 1820.95 331.828C1830.64 335.316 1837.73 349.984 1835.32 335.943C1833.15 323.277 1816.28 325.029 1807.85 324.081Z\",\n    fill: \"#939393\"\n  })), _path248 || (_path248 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1804.21 325.236C1802.09 325.996 1799.96 326.746 1797.84 327.506C1793.31 334.059 1808.33 327.481 1804.21 325.236Z\",\n    fill: \"#939393\"\n  })), _path249 || (_path249 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1755.53 326.919C1753.11 328.386 1761.47 339.239 1755.81 336.134C1757.34 344.005 1753.28 336.027 1753.62 339.798C1754.18 346.052 1761.37 341.857 1764.35 345.064C1766.13 343.66 1757 329.656 1755.53 326.919Z\",\n    fill: \"#939393\"\n  })), _path250 || (_path250 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1840.17 329.114C1836.39 328.487 1846.97 338.924 1852.57 344.061C1879.9 336.77 1879.2 333.893 1852.51 342.013C1848.4 337.717 1844.28 333.41 1840.17 329.114Z\",\n    fill: \"#939393\"\n  })), _path251 || (_path251 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1815.47 333.044L1804.45 333.425C1793.3 335 1761.11 354.361 1751.57 363.445C1749.69 375.893 1749.66 391.495 1739.78 399.73C1747.24 397.935 1754.68 396.139 1762.14 394.344C1769.38 400.582 1776.61 406.83 1783.84 413.068C1790.97 415.559 1798.08 418.039 1805.21 420.529C1810.94 391.465 1850.05 413.042 1874.39 397.633C1876.31 394.225 1861.09 381.683 1855.8 375.213C1846.36 363.68 1829.56 335.221 1815.47 333.044ZM1838.36 360.953C1832.64 364.226 1826.91 367.5 1821.19 370.773C1815.17 374.446 1817.17 380.548 1807.95 373.794C1817.28 377.315 1822.44 363.688 1838.36 360.953ZM1760.58 372.871C1765.03 384.557 1766.52 398.159 1762.49 390.744C1762.06 389.939 1758.44 371.479 1760.58 372.871ZM1786.36 374.029C1795.63 395.183 1794.57 408.32 1789.25 393.918C1788.29 387.288 1787.32 380.659 1786.36 374.029ZM1753.3 375.174C1760.26 386.116 1759.99 397.821 1754.93 383.83C1754.39 380.948 1753.84 378.056 1753.3 375.174ZM1784.58 376.141C1787 386.707 1789.8 397.486 1785.54 393.021C1784.93 392.376 1782.21 374.777 1784.58 376.141ZM1810.45 380.371C1817.94 394.134 1815.71 409.075 1812.27 395.171C1811.66 390.241 1811.05 385.301 1810.45 380.371ZM1801.38 400.161C1800.64 400.873 1799.89 401.576 1799.15 402.288C1791.02 381.248 1792.03 374.56 1801.38 400.161C1798.78 372.779 1801.49 378.743 1807.83 400.45C1807.08 400.988 1806.32 401.527 1805.58 402.066C1803.06 394.219 1803.48 400.754 1802.79 401.137C1802.32 400.815 1801.85 400.483 1801.38 400.161ZM1805.95 383.602C1814.48 404.515 1812.6 410.043 1807.77 398.402C1807.16 393.472 1806.55 388.532 1805.95 383.602Z\",\n    fill: \"#939393\"\n  })), _path252 || (_path252 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1906.78 343.212C1898.38 344.354 1890 345.505 1881.6 346.646C1881.34 348.019 1881.07 349.402 1880.81 350.774C1870.18 365.626 1881.88 361.705 1875.89 386.309C1891.7 388.55 1895.78 377.533 1903.14 375.115C1922.82 368.642 1925.75 381.303 1916.59 348.51C1913.32 346.748 1910.05 344.975 1906.78 343.212ZM1903.44 354.603C1915.21 364.58 1913.33 367.812 1903.5 356.651C1878.3 360.281 1876.17 356.685 1903.44 354.603Z\",\n    fill: \"#939393\"\n  })), _path253 || (_path253 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1841.64 347.515L1840.31 349.099C1850.78 362.021 1859.13 377.404 1872.25 387.457C1883.62 353.278 1867.04 362.667 1853.85 356.318C1849.79 353.383 1845.71 350.449 1841.64 347.515Z\",\n    fill: \"#939393\"\n  })), _path254 || (_path254 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1903.44 354.603C1876.17 356.685 1878.3 360.281 1903.5 356.651C1913.33 367.812 1915.21 364.579 1903.44 354.603Z\",\n    fill: \"#939393\"\n  })), _path255 || (_path255 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1838.36 360.953C1822.44 363.687 1817.28 377.315 1807.95 373.794C1817.17 380.547 1815.17 374.446 1821.19 370.773C1826.91 367.5 1832.64 364.226 1838.36 360.953Z\",\n    fill: \"#939393\"\n  })), _path256 || (_path256 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1682.44 310.994C1675.06 310.614 1668.46 312.575 1661.91 316.318C1666.16 335.637 1657.89 362.718 1667.48 379.679C1669.28 382.866 1690.15 395.397 1695.5 409.973C1697.09 406.669 1698.68 403.374 1700.26 400.07C1708.04 390.975 1736.03 412.691 1743.88 383.184L1748.48 352.273C1748.26 341.723 1741.83 328.814 1731.66 327.742C1717.98 326.308 1717.49 339.856 1701.87 315.447C1695.4 313.959 1688.92 312.482 1682.44 310.994ZM1672.46 315.44C1673.45 323.094 1674.45 330.747 1675.44 338.401C1672.35 332.091 1667.38 350.017 1668.19 341.727C1669.65 339.288 1671.1 336.839 1672.56 334.4C1674.53 324.225 1667.58 341.707 1667.12 336.639C1667.02 335.545 1673.42 328.691 1671.1 316C1671.55 315.81 1672 315.63 1672.46 315.44ZM1676.13 346.065C1677.1 346.574 1678.24 354.479 1688.65 365.108C1681.14 361.821 1671.07 343.421 1676.13 346.065ZM1666.12 349.486C1669.29 358.09 1672.45 366.693 1675.62 375.297C1676.45 386.564 1665.07 366.313 1666.12 349.486ZM1684.02 379.619C1683.61 380.996 1683.19 382.384 1682.77 383.762C1677.77 373.182 1675.67 356.465 1682 373.538C1675.98 348.694 1691.3 386.04 1691.66 389.092C1692.89 399.618 1688.86 394.96 1684.02 379.619ZM1695.2 368.981C1710.79 386.431 1722.37 375.523 1733.06 374.846C1741.35 374.323 1733.58 378.016 1719.88 379.915C1730.63 390.931 1727.16 393.532 1718.52 380.474C1709.94 382.227 1698.77 378.042 1695.2 368.981ZM1691.56 370.132C1693.09 375.379 1694.63 380.615 1696.16 385.861C1695.01 370.238 1700.29 384.324 1700.88 389.798C1702.72 407.017 1687.98 379.543 1691.56 370.132Z\",\n    fill: \"#939393\"\n  })), _path257 || (_path257 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1672.46 315.44C1672 315.63 1671.55 315.81 1671.1 316C1673.42 328.691 1667.02 335.545 1667.12 336.638C1667.58 341.706 1674.53 324.225 1672.56 334.4C1671.1 336.839 1669.65 339.287 1668.19 341.726C1667.38 350.016 1672.35 332.091 1675.44 338.4C1674.45 330.747 1673.45 323.094 1672.46 315.44Z\",\n    fill: \"#939393\"\n  })), _path258 || (_path258 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1676.13 346.067C1671.07 343.424 1681.14 361.823 1688.65 365.11C1678.24 354.482 1677.1 346.577 1676.13 346.067Z\",\n    fill: \"#939393\"\n  })), _path259 || (_path259 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1666.12 349.486C1665.07 366.312 1676.44 386.563 1675.62 375.295C1672.45 366.692 1669.29 358.089 1666.12 349.486Z\",\n    fill: \"#939393\"\n  })), _path260 || (_path260 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1682 373.539C1682.68 375.566 1683.35 377.593 1684.02 379.619C1688.86 394.961 1692.88 399.619 1691.66 389.093C1691.3 386.04 1675.98 348.696 1682 373.539Z\",\n    fill: \"#939393\"\n  })), _path261 || (_path261 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1684.02 379.617C1683.35 377.59 1682.68 375.563 1682 373.536C1675.67 356.463 1677.77 373.181 1682.77 383.76C1683.19 382.382 1683.61 380.994 1684.02 379.617Z\",\n    fill: \"#939393\"\n  })), _path262 || (_path262 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1695.2 368.982C1698.77 378.043 1709.94 382.228 1718.52 380.475C1727.16 393.533 1730.63 390.932 1719.89 379.915C1733.58 378.017 1741.35 374.324 1733.06 374.847C1722.37 375.524 1710.79 386.432 1695.2 368.982Z\",\n    fill: \"#939393\"\n  })), _path263 || (_path263 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1691.56 370.133C1687.99 379.543 1702.72 407.017 1700.88 389.799C1700.29 384.325 1695.01 370.239 1696.16 385.862C1694.63 380.615 1693.09 375.379 1691.56 370.133Z\",\n    fill: \"#939393\"\n  })), _path264 || (_path264 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1760.58 372.873C1758.44 371.481 1762.06 389.94 1762.49 390.745C1766.52 398.16 1765.03 384.559 1760.58 372.873Z\",\n    fill: \"#939393\"\n  })), _path265 || (_path265 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1786.36 374.03C1787.32 380.66 1788.29 387.289 1789.25 393.918C1794.57 408.321 1795.63 395.184 1786.36 374.03Z\",\n    fill: \"#939393\"\n  })), _path266 || (_path266 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1753.3 375.175C1753.84 378.057 1754.39 380.949 1754.93 383.831C1759.99 397.822 1760.26 386.117 1753.3 375.175Z\",\n    fill: \"#939393\"\n  })), _path267 || (_path267 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1784.58 376.144C1782.21 374.781 1784.93 392.379 1785.54 393.024C1789.8 397.489 1787 386.711 1784.58 376.144Z\",\n    fill: \"#939393\"\n  })), _path268 || (_path268 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1640.47 383.181C1623.52 385.746 1574.4 398.702 1563.11 409.435C1550.08 421.818 1555.65 461.818 1552.81 480.009C1560.03 480.958 1567.27 481.897 1574.5 482.846C1583.55 488.345 1592.59 493.833 1601.65 499.332L1618.08 495.688C1632.41 502.634 1647.24 497.467 1662.47 504.402C1685.73 491.993 1703.83 511.448 1717.38 496.351C1725.65 487.147 1718.72 468.433 1712.17 460.142C1701.09 453.504 1700.19 439.983 1691.08 431.145C1685.82 419.026 1680.55 406.908 1675.29 394.789C1662.35 377.688 1654.95 391.66 1640.47 383.181Z\",\n    fill: \"#939393\"\n  })), _path269 || (_path269 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1810.45 380.372C1811.05 385.302 1811.66 390.243 1812.27 395.172C1815.71 409.076 1817.94 394.135 1810.45 380.372Z\",\n    fill: \"#939393\"\n  })), _path270 || (_path270 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1801.39 400.16C1801.85 400.482 1802.32 400.814 1802.79 401.136C1803.48 400.754 1803.06 394.218 1805.58 402.065C1806.33 401.526 1807.08 400.988 1807.83 400.449C1801.49 378.743 1798.79 372.779 1801.39 400.16Z\",\n    fill: \"#939393\"\n  })), _path271 || (_path271 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1801.38 400.161C1792.04 374.562 1791.02 381.249 1799.15 402.289C1799.89 401.576 1800.64 400.874 1801.38 400.161Z\",\n    fill: \"#939393\"\n  })), _path272 || (_path272 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1805.95 383.607C1806.55 388.536 1807.16 393.477 1807.77 398.407C1812.6 410.048 1814.48 404.519 1805.95 383.607Z\",\n    fill: \"#939393\"\n  })), _path273 || (_path273 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1906.2 400.633C1905.22 399.918 1897.31 388.373 1901.73 389.512C1903.02 389.846 1902.51 401.672 1917.2 399.739C1915.46 402.546 1911.41 401.087 1908.06 401.593C1912.4 402.919 1914.61 407.148 1921.47 404.204C1926.85 401.896 1920.02 388.458 1912.66 386.058C1902.3 382.675 1878.25 393.686 1884.49 397.284C1891.94 396.257 1899.03 398.718 1906.2 400.633Z\",\n    fill: \"#939393\"\n  })), _path274 || (_path274 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1906.2 400.633L1908.06 401.594C1911.41 401.088 1915.46 402.547 1917.2 399.74C1902.51 401.673 1903.01 389.847 1901.73 389.513C1897.31 388.374 1905.22 399.919 1906.2 400.633Z\",\n    fill: \"#939393\"\n  })), _path275 || (_path275 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1879.96 399.495C1872.98 401.786 1866.01 404.078 1859.02 406.37C1846.14 408.815 1814.05 404.308 1809.39 421.926C1806.31 433.585 1820.59 432.424 1820.76 448.697C1834.19 432.518 1865.55 446.439 1884.95 443.4C1897.18 441.48 1902.08 429.799 1914.21 438.286C1925.23 445.993 1921.95 471.312 1956.47 452.712C1941.16 437.692 1925.85 422.682 1910.54 407.662C1904.05 403.458 1887.32 399.055 1879.96 399.495ZM1816.2 419.128C1819.33 431.105 1817.99 418.348 1820.5 424.617C1821.4 429.198 1822.31 433.78 1823.21 438.361C1820.06 432.433 1814.96 426.551 1816.2 419.128ZM1864.1 422.595C1872.4 423.722 1881.45 434.757 1876.44 435.494C1874.99 435.708 1867.7 419.887 1850.93 427.664C1860.54 447.453 1847.19 431.053 1849.92 424.624C1854.65 423.947 1859.37 423.271 1864.1 422.595ZM1823.7 423.994C1824.88 427.54 1826.05 431.088 1827.23 434.634C1828.23 444.769 1822.86 436.867 1823.7 423.994Z\",\n    fill: \"#939393\"\n  })), _path276 || (_path276 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1816.2 419.128C1814.96 426.551 1820.06 432.432 1823.21 438.361C1822.31 433.78 1821.4 429.198 1820.5 424.617C1817.99 418.348 1819.33 431.105 1816.2 419.128Z\",\n    fill: \"#939393\"\n  })), _path277 || (_path277 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1864.11 422.596C1859.37 423.272 1854.65 423.948 1849.92 424.625C1847.2 431.054 1860.54 447.454 1850.93 427.665C1867.7 419.888 1874.99 435.709 1876.44 435.495C1881.45 434.758 1872.4 423.723 1864.11 422.596Z\",\n    fill: \"#939393\"\n  })), _path278 || (_path278 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1823.7 423.997C1822.86 436.87 1828.23 444.772 1827.23 434.638C1826.05 431.091 1824.88 427.544 1823.7 423.997Z\",\n    fill: \"#939393\"\n  })), _path279 || (_path279 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1760.46 399.527C1741.95 404.781 1724.01 410.742 1705.39 402.458C1687.99 440.086 1738.68 465.793 1760.3 486.663C1767.82 470.75 1782.79 477.479 1783.72 470.476C1788.43 474.711 1798.38 467.416 1811.39 473.619C1812.85 466.218 1814.32 458.828 1815.78 451.428C1816.68 436.779 1808.03 440.093 1800.71 423.76C1784.42 423.638 1772.4 410.297 1760.46 399.527ZM1729.11 427.264C1740.16 429.044 1759.86 454.286 1782.1 446.956C1782.27 447.463 1782.43 447.97 1782.6 448.476C1761.53 454.936 1753.92 442.027 1737.56 433.122C1732.1 430.153 1716.27 425.197 1729.11 427.264ZM1730.37 438.496C1732.73 445.928 1735.1 453.37 1737.47 460.802C1733.17 463.564 1728.41 442.377 1730.37 438.496ZM1737.99 447.458C1745.77 464.205 1749.27 476.896 1741.71 464.243C1740.33 461.943 1736.35 450.631 1737.99 447.458ZM1749.96 448.069C1767.9 491.054 1748.01 462.066 1748.63 449.652L1749.96 448.069ZM1745.37 448.228C1753.61 464.025 1752.84 475.102 1749.14 467.06C1747.88 460.779 1746.63 454.508 1745.37 448.228ZM1755.56 450.95C1769.54 474.637 1761.41 472.181 1757.23 460.63C1756.67 457.4 1756.11 454.18 1755.56 450.95Z\",\n    fill: \"#939393\"\n  })), _path280 || (_path280 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1729.11 427.26C1716.27 425.193 1732.1 430.15 1737.56 433.118C1753.92 442.023 1761.53 454.932 1782.6 448.472C1782.43 447.966 1782.27 447.459 1782.1 446.952C1759.86 454.282 1740.16 429.04 1729.11 427.26Z\",\n    fill: \"#939393\"\n  })), _path281 || (_path281 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1730.37 438.497C1728.41 442.377 1733.17 463.564 1737.47 460.802C1735.1 453.37 1732.73 445.928 1730.37 438.497Z\",\n    fill: \"#939393\"\n  })), _path282 || (_path282 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1737.99 447.456C1736.36 450.629 1740.33 461.941 1741.71 464.241C1749.27 476.894 1745.77 464.202 1737.99 447.456Z\",\n    fill: \"#939393\"\n  })), _path283 || (_path283 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1749.96 448.074L1748.63 449.658C1748.01 462.072 1767.9 491.058 1749.96 448.074Z\",\n    fill: \"#939393\"\n  })), _path284 || (_path284 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1745.37 448.227C1746.63 454.508 1747.88 460.778 1749.14 467.059C1752.84 475.101 1753.61 464.024 1745.37 448.227Z\",\n    fill: \"#939393\"\n  })), _path285 || (_path285 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1755.56 450.951C1756.11 454.181 1756.67 457.401 1757.23 460.631C1761.41 472.182 1769.54 474.637 1755.56 450.951Z\",\n    fill: \"#939393\"\n  })), _path286 || (_path286 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1905.95 438.567C1902.52 438.357 1888.78 451.892 1875.06 450.911C1867.06 445.397 1832.61 443.227 1826.24 447.476C1820.09 451.584 1814.84 473.169 1815.57 475.01C1816.34 476.972 1828.58 478.096 1829.88 477.077C1830.63 476.487 1833.75 455.827 1832.16 476.485C1837.1 478.929 1833.13 471.942 1835.94 464.566L1837.73 478.343L1839.57 478.279C1842.79 455.36 1840.26 483.995 1843.18 476.104L1843.36 482.248C1860.29 493.85 1858.21 498.771 1854 484.442C1857.55 490.47 1861.1 496.498 1864.65 502.525C1870.32 504.738 1891.56 490.738 1898.23 488.037C1905.74 484.999 1922.09 484.433 1923.23 478.458C1924.56 471.432 1917.37 439.278 1905.95 438.567ZM1834.78 456.406C1840.87 460.121 1846.95 463.847 1853.04 467.562C1852.31 474.527 1822.93 455.145 1834.78 456.406ZM1875.61 469.344C1872.82 475.119 1855.82 476.671 1860.12 473.98C1865.29 472.438 1870.45 470.886 1875.61 469.344ZM1871.3 494.094C1873.02 502.768 1868.48 494.479 1862.85 488.237C1872.18 508.835 1853.55 481.188 1855.72 480.283C1857.46 482.273 1859.21 484.262 1860.95 486.252C1854.65 474.405 1863.32 483.812 1867.44 488.078C1865.82 485.233 1864.21 482.377 1862.59 479.532C1863.04 479.343 1863.5 479.163 1863.95 478.973C1875.76 492.207 1878.9 502.104 1871.3 494.094Z\",\n    fill: \"#939393\"\n  })), _path287 || (_path287 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1834.78 456.401C1822.93 455.141 1852.31 474.522 1853.04 467.557C1846.95 463.842 1840.87 460.117 1834.78 456.401Z\",\n    fill: \"#939393\"\n  })), _path288 || (_path288 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1875.61 469.345C1870.45 470.887 1865.29 472.439 1860.12 473.981C1855.82 476.672 1872.82 475.12 1875.61 469.345Z\",\n    fill: \"#939393\"\n  })), _path289 || (_path289 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1867.44 488.081C1868.72 490.087 1870.01 492.092 1871.3 494.098C1878.9 502.107 1875.76 492.211 1863.95 478.977C1863.5 479.167 1863.04 479.346 1862.59 479.536C1864.21 482.381 1865.82 485.236 1867.44 488.081Z\",\n    fill: \"#939393\"\n  })), _path290 || (_path290 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1860.95 486.252C1861.59 486.917 1862.21 487.572 1862.85 488.236C1868.48 494.479 1873.03 502.768 1871.3 494.094C1870.01 492.089 1868.72 490.083 1867.44 488.077C1863.32 483.812 1854.65 474.405 1860.95 486.252Z\",\n    fill: \"#939393\"\n  })), _path291 || (_path291 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1862.85 488.241C1862.21 487.576 1861.58 486.921 1860.95 486.256C1859.21 484.266 1857.46 482.277 1855.72 480.287C1853.55 481.193 1872.18 508.839 1862.85 488.241Z\",\n    fill: \"#939393\"\n  })), _path292 || (_path292 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1987.28 453.171C1970.37 450.804 1951.31 462.534 1935.3 467.27C1942.55 473.857 1949.79 480.433 1957.04 487.019C1957.27 487.073 1957.99 482.148 1959.79 486.924C1963.4 478.404 1964.03 491.236 1965.58 495.949C1966.13 493.726 1966.83 479.433 1968.79 480.462C1966.01 512.827 1974.21 505.471 1985.23 507.57C2006.96 511.717 2029 518.304 2051.18 515.025C2031.7 495.557 2028.59 474.62 2004.05 460.79C1998.46 458.247 1992.87 455.714 1987.28 453.171ZM1974.82 466.928C1977.34 469.229 1979.86 471.54 1982.38 473.841C1984.65 475.054 2005.39 480.938 2004.28 483.846C1993.29 479.737 1980.53 477.432 1972.54 467.519C1973.3 467.319 1974.06 467.128 1974.82 466.928ZM1978.86 479.088L1978.08 499.104L1976.24 499.168C1976.01 496.613 1975.79 494.058 1975.55 491.504C1974.99 491.523 1975.82 501.848 1973.04 499.791C1971.5 498.645 1975.13 477.147 1977.65 484.768C1978.05 482.878 1978.46 480.978 1978.86 479.088ZM1972.46 480.335C1973.27 502.12 1968.49 506.089 1969.54 490.174C1970.52 486.891 1971.49 483.618 1972.46 480.335ZM1981.8 485.137C1983.78 500.055 1977.8 508.37 1979.7 491.873C1980.4 489.624 1981.1 487.386 1981.8 485.137Z\",\n    fill: \"#939393\"\n  })), _path293 || (_path293 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1974.82 466.928C1974.06 467.129 1973.3 467.319 1972.54 467.52C1980.53 477.432 1993.29 479.737 2004.28 483.847C2005.39 480.938 1984.65 475.055 1982.38 473.842C1979.86 471.541 1977.34 469.229 1974.82 466.928Z\",\n    fill: \"#939393\"\n  })), _path294 || (_path294 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1978.86 479.087C1978.46 480.977 1978.05 482.877 1977.65 484.767C1975.13 477.146 1971.5 498.643 1973.04 499.789C1975.82 501.846 1974.99 491.521 1975.55 491.502C1975.79 494.057 1976.01 496.611 1976.24 499.166L1978.08 499.102L1978.86 479.087Z\",\n    fill: \"#939393\"\n  })), _path295 || (_path295 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1972.46 480.335C1971.49 483.618 1970.52 486.89 1969.54 490.174C1968.49 506.088 1973.27 502.12 1972.46 480.335Z\",\n    fill: \"#939393\"\n  })), _path296 || (_path296 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1981.8 485.14C1981.1 487.388 1980.4 489.627 1979.7 491.875C1977.8 508.372 1983.78 500.057 1981.8 485.14Z\",\n    fill: \"#939393\"\n  })), _path297 || (_path297 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1937.51 479.505C1933.27 481.364 1929.04 483.212 1924.8 485.071C1915.98 487.426 1907.17 489.781 1898.35 492.136C1887.41 496.472 1877.64 505.472 1865.69 506.593C1859.89 545.766 1860.24 522.731 1903.19 530.921C1932.84 531.002 1936.79 518.288 1963.43 516.535C1959.84 504.666 1950.69 480.044 1937.51 479.505ZM1938.03 496.914C1930.17 500.599 1922.32 504.295 1914.46 507.98C1923.91 520.937 1913.19 506.353 1903.94 509.882C1915.3 505.562 1926.66 501.233 1938.03 496.914Z\",\n    fill: \"#939393\"\n  })), _path298 || (_path298 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1938.03 496.913C1926.66 501.233 1915.3 505.562 1903.94 509.881C1913.19 506.353 1923.92 520.937 1914.46 507.98C1922.32 504.294 1930.17 500.599 1938.03 496.913Z\",\n    fill: \"#939393\"\n  })), _path299 || (_path299 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1796.76 476.172C1792.12 476.2 1767.2 481.593 1765.34 485.973C1764.15 488.751 1768.8 519.629 1770.11 522.71C1774.68 533.489 1793.12 527.192 1802.08 531.341C1816.92 527.824 1824.12 523.393 1835.35 537.365C1843.12 535.897 1850.89 534.438 1858.66 532.97C1858.29 505.327 1859.41 495.858 1835.57 483.029C1822.42 487.482 1808.85 476.092 1796.76 476.172ZM1786.32 496.01C1788.18 496.632 1790.03 497.244 1791.89 497.867C1793.41 497.937 1816.69 496.804 1815.38 499.616C1797.26 501.607 1777.64 495.797 1786.32 496.01ZM1850.91 504.025L1850.97 506.073C1822.06 514.31 1824.13 510.948 1850.91 504.025ZM1783.87 506.345C1795.68 521.035 1800.73 534.207 1791.26 523.003L1783.87 506.345ZM1792.19 508.107C1793.79 510.368 1802.11 523.816 1800.06 525.261C1797.29 524.506 1790.63 509.063 1792.19 508.107ZM1778.42 508.584C1792.47 525.934 1790.84 532.581 1782.9 520.217C1781.41 516.343 1779.91 512.458 1778.42 508.584ZM1773.83 508.743C1777.64 517.478 1783.35 524.045 1780.75 524.904C1779 524.965 1771.89 511.721 1773.83 508.743ZM1799.69 512.973C1801.43 514.788 1803.18 516.614 1804.91 518.43C1813.01 530.553 1801.47 522.219 1799.69 512.973ZM1814.54 517.584C1818.56 518.439 1814.26 521.92 1814.22 522.208C1814.56 523.559 1814.92 524.921 1815.26 526.272C1812.74 531.116 1810.91 516.818 1814.54 517.584Z\",\n    fill: \"#939393\"\n  })), _path300 || (_path300 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1786.32 496.011C1777.65 495.799 1797.26 501.609 1815.38 499.618C1816.69 496.805 1793.41 497.939 1791.89 497.869C1790.03 497.246 1788.18 496.634 1786.32 496.011Z\",\n    fill: \"#939393\"\n  })), _path301 || (_path301 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1850.91 504.023C1824.13 510.946 1822.06 514.308 1850.97 506.071L1850.91 504.023Z\",\n    fill: \"#939393\"\n  })), _path302 || (_path302 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1783.87 506.347L1791.26 523.005C1800.73 534.209 1795.68 521.038 1783.87 506.347Z\",\n    fill: \"#939393\"\n  })), _path303 || (_path303 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1792.19 508.11C1790.63 509.066 1797.29 524.508 1800.06 525.263C1802.11 523.818 1793.79 510.371 1792.19 508.11Z\",\n    fill: \"#939393\"\n  })), _path304 || (_path304 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1778.42 508.586C1779.91 512.46 1781.41 516.344 1782.9 520.218C1790.84 532.582 1792.47 525.935 1778.42 508.586Z\",\n    fill: \"#939393\"\n  })), _path305 || (_path305 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1773.83 508.739C1771.89 511.718 1779 524.961 1780.75 524.9C1783.35 524.041 1777.64 517.474 1773.83 508.739Z\",\n    fill: \"#939393\"\n  })), _path306 || (_path306 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1799.69 512.973C1801.47 522.219 1813.01 530.553 1804.91 518.43C1803.18 516.615 1801.43 514.789 1799.69 512.973Z\",\n    fill: \"#939393\"\n  })), _path307 || (_path307 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1814.54 517.583C1810.91 516.816 1812.74 531.113 1815.26 526.27C1814.92 524.919 1814.56 523.557 1814.22 522.206C1814.26 521.918 1818.56 518.438 1814.54 517.583Z\",\n    fill: \"#939393\"\n  })), _path308 || (_path308 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1790.81 569.661L1823.87 568.517C1819.28 559.256 1812.35 560.254 1804.97 551.233C1791.93 524.776 1790.74 539.219 1770.09 537.577C1760.54 559.198 1771.46 555.529 1779.03 559.819C1782.96 563.096 1786.88 566.384 1790.81 569.661Z\",\n    fill: \"#939393\"\n  })), _path309 || (_path309 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1557.56 577.738L1613.58 575.799C1620.4 569.094 1629.37 568.353 1636.54 575.004L1755.92 570.872C1753.67 559.94 1762.82 563.621 1764.18 570.586C1765.9 571.162 1766.61 570.871 1766.94 570.49C1768.89 568.239 1760.55 559.384 1759.3 546.081C1758.97 542.495 1759.23 539.482 1759.52 537.433C1741.76 522.487 1717.38 531.623 1697.88 520.602L1639.85 516.461C1627.81 513.464 1615.77 510.457 1603.73 507.461C1588.05 505.963 1561.91 508.529 1555.13 527.081C1548.47 545.271 1558.7 559.442 1557.56 577.738Z\",\n    fill: \"#939393\"\n  })), _path310 || (_path310 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1755.92 570.87L1764.18 570.584C1762.82 563.62 1753.67 559.94 1755.92 570.87Z\",\n    fill: \"#939393\"\n  })), _path311 || (_path311 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1613.58 575.799L1636.53 575.005C1629.37 568.354 1620.4 569.095 1613.58 575.799Z\",\n    fill: \"#939393\"\n  })), _path312 || (_path312 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1659.03 265.683C1658.57 265.873 1658.12 266.052 1657.66 266.242C1692.28 294.278 1663.24 265.824 1659.03 265.683Z\",\n    fill: \"black\"\n  })), _path313 || (_path313 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1648.99 268.075C1646.58 272.956 1650.19 280.006 1652.7 284.86C1652.8 307.141 1659.24 294.094 1648.99 268.075Z\",\n    fill: \"black\"\n  })), _path314 || (_path314 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1656.45 271.921C1652.22 270.96 1658 280.088 1658.09 280.577L1658.4 290.817C1661.95 309.913 1661.3 273.024 1656.45 271.921Z\",\n    fill: \"black\"\n  })), _path315 || (_path315 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1714.37 271.964C1703.22 273.2 1692.08 274.447 1680.93 275.684C1686.28 275.324 1691.63 274.975 1696.98 274.615C1697.47 280.964 1706.58 271.587 1705.31 276.377C1708.32 274.91 1711.35 273.431 1714.37 271.964Z\",\n    fill: \"black\"\n  })), _path316 || (_path316 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1669.46 276.591C1666.38 275.529 1672.97 285.551 1672.32 295.455C1678.33 307.835 1672.56 277.663 1669.46 276.591Z\",\n    fill: \"black\"\n  })), _path317 || (_path317 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1686.09 279.089L1679.24 280.864C1683.73 282.892 1686.85 295.792 1688.62 302.577C1691.66 304.041 1687.25 287.875 1682.95 281.761C1686.31 281.306 1689.66 280.841 1693.02 280.387L1686.09 279.089Z\",\n    fill: \"black\"\n  })), _path318 || (_path318 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1675.98 279.444C1676.79 291.225 1685.79 310.153 1683.43 298.149C1680.95 291.911 1678.47 285.683 1675.98 279.444Z\",\n    fill: \"black\"\n  })), _path319 || (_path319 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1755.54 326.917C1753.12 328.385 1761.47 339.237 1755.81 336.133C1757.34 344.003 1753.28 336.026 1753.62 339.796C1754.19 346.05 1761.37 341.855 1764.35 345.063C1766.13 343.658 1757 329.655 1755.54 326.917Z\",\n    fill: \"black\"\n  })), _path320 || (_path320 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1840.17 329.112C1836.39 328.485 1846.98 338.922 1852.57 344.059C1879.9 336.768 1879.2 333.891 1852.51 342.011C1848.4 337.715 1844.28 333.409 1840.17 329.112Z\",\n    fill: \"black\"\n  })), _path321 || (_path321 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1903.44 354.599C1876.17 356.681 1878.3 360.277 1903.51 356.647C1913.33 367.808 1915.21 364.576 1903.44 354.599Z\",\n    fill: \"black\"\n  })), _path322 || (_path322 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1838.37 360.951C1822.44 363.686 1817.28 377.313 1807.95 373.792C1817.17 380.546 1815.17 374.444 1821.19 370.771C1826.91 367.498 1832.64 364.224 1838.37 360.951Z\",\n    fill: \"black\"\n  })), _path323 || (_path323 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1672.46 315.441C1672.01 315.631 1671.55 315.811 1671.1 316.001C1673.42 328.693 1667.02 335.546 1667.12 336.64C1667.58 341.708 1674.53 324.226 1672.57 334.401C1671.1 336.84 1669.65 339.289 1668.19 341.728C1667.38 350.018 1672.35 332.092 1675.44 338.402C1674.45 330.748 1673.45 323.095 1672.46 315.441Z\",\n    fill: \"black\"\n  })), _path324 || (_path324 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1676.13 346.069C1671.07 343.425 1681.14 361.824 1688.65 365.111C1678.24 354.483 1677.1 346.578 1676.13 346.069Z\",\n    fill: \"black\"\n  })), _path325 || (_path325 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1666.12 349.485C1665.07 366.311 1676.45 386.562 1675.62 375.294C1672.45 366.691 1669.29 358.088 1666.12 349.485Z\",\n    fill: \"black\"\n  })), _path326 || (_path326 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1682.01 373.544C1682.68 375.571 1683.35 377.598 1684.03 379.625C1688.86 394.966 1692.89 399.624 1691.66 389.098C1691.3 386.046 1675.98 348.701 1682.01 373.544Z\",\n    fill: \"black\"\n  })), _path327 || (_path327 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1684.03 379.618C1683.35 377.591 1682.68 375.564 1682.01 373.538C1675.67 356.465 1677.78 373.182 1682.77 383.762C1683.19 382.384 1683.61 380.996 1684.03 379.618Z\",\n    fill: \"black\"\n  })), _path328 || (_path328 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1695.2 368.983C1698.77 378.044 1709.94 382.229 1718.52 380.476C1727.16 393.534 1730.63 390.933 1719.89 379.917C1733.58 378.018 1741.35 374.325 1733.06 374.848C1722.38 375.525 1710.79 386.433 1695.2 368.983Z\",\n    fill: \"black\"\n  })), _path329 || (_path329 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1691.56 370.138C1687.99 379.549 1702.72 407.022 1700.88 389.804C1700.29 384.33 1695.01 370.244 1696.16 385.867C1694.63 380.621 1693.09 375.385 1691.56 370.138Z\",\n    fill: \"black\"\n  })), _path330 || (_path330 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1760.58 372.866C1758.45 371.474 1762.06 389.933 1762.5 390.738C1766.52 398.153 1765.03 384.551 1760.58 372.866Z\",\n    fill: \"black\"\n  })), _path331 || (_path331 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1786.36 374.029C1787.32 380.658 1788.29 387.287 1789.25 393.917C1794.57 408.319 1795.63 395.182 1786.36 374.029Z\",\n    fill: \"black\"\n  })), _path332 || (_path332 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1753.3 375.177C1753.84 378.059 1754.39 380.951 1754.94 383.833C1759.99 397.824 1760.26 386.119 1753.3 375.177Z\",\n    fill: \"black\"\n  })), _path333 || (_path333 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1784.58 376.145C1782.22 374.781 1784.93 392.38 1785.55 393.024C1789.81 397.49 1787 386.711 1784.58 376.145Z\",\n    fill: \"black\"\n  })), _path334 || (_path334 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1810.45 380.369C1811.05 385.299 1811.66 390.239 1812.27 395.169C1815.71 409.072 1817.95 394.132 1810.45 380.369Z\",\n    fill: \"black\"\n  })), _path335 || (_path335 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1801.39 400.162C1801.85 400.484 1802.32 400.817 1802.79 401.139C1803.48 400.756 1803.07 394.22 1805.58 402.067C1806.33 401.529 1807.08 400.99 1807.83 400.452C1801.49 378.745 1798.79 372.781 1801.39 400.162Z\",\n    fill: \"black\"\n  })), _path336 || (_path336 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1801.39 400.158C1792.04 374.558 1791.02 381.246 1799.15 402.285C1799.89 401.573 1800.65 400.87 1801.39 400.158Z\",\n    fill: \"black\"\n  })), _path337 || (_path337 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1805.95 383.599C1806.55 388.529 1807.16 393.469 1807.77 398.399C1812.6 410.04 1814.48 404.512 1805.95 383.599Z\",\n    fill: \"black\"\n  })), _path338 || (_path338 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1906.2 400.632L1908.06 401.592C1911.41 401.087 1915.46 402.546 1917.2 399.738C1902.51 401.671 1903.02 389.846 1901.73 389.511C1897.31 388.372 1905.22 399.917 1906.2 400.632Z\",\n    fill: \"black\"\n  })), _path339 || (_path339 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1816.2 419.128C1814.96 426.551 1820.06 432.433 1823.21 438.361C1822.31 433.78 1821.4 429.198 1820.5 424.617C1817.99 418.349 1819.33 431.105 1816.2 419.128Z\",\n    fill: \"black\"\n  })), _path340 || (_path340 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1864.11 422.594C1859.37 423.271 1854.65 423.947 1849.92 424.623C1847.2 431.052 1860.55 447.452 1850.93 427.663C1867.7 419.887 1875 435.707 1876.44 435.493C1881.45 434.756 1872.4 423.722 1864.11 422.594Z\",\n    fill: \"black\"\n  })), _path341 || (_path341 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1823.7 423.994C1822.86 436.866 1828.23 444.768 1827.23 434.634C1826.05 431.087 1824.88 427.54 1823.7 423.994Z\",\n    fill: \"black\"\n  })), _path342 || (_path342 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1729.11 427.265C1716.27 425.198 1732.1 430.155 1737.56 433.123C1753.92 442.028 1761.53 454.937 1782.6 448.478C1782.43 447.971 1782.27 447.464 1782.1 446.957C1759.86 454.288 1740.16 429.046 1729.11 427.265Z\",\n    fill: \"black\"\n  })), _path343 || (_path343 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1730.37 438.502C1728.42 442.383 1733.17 463.57 1737.47 460.807C1735.1 453.375 1732.73 445.934 1730.37 438.502Z\",\n    fill: \"black\"\n  })), _path344 || (_path344 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1737.99 447.46C1736.36 450.632 1740.33 461.944 1741.71 464.244C1749.27 476.898 1745.77 464.206 1737.99 447.46Z\",\n    fill: \"black\"\n  })), _path345 || (_path345 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1749.96 448.072L1748.63 449.655C1748.01 462.069 1767.9 491.056 1749.96 448.072Z\",\n    fill: \"black\"\n  })), _path346 || (_path346 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1745.37 448.226C1746.63 454.507 1747.88 460.778 1749.14 467.059C1752.84 475.1 1753.61 464.024 1745.37 448.226Z\",\n    fill: \"black\"\n  })), _path347 || (_path347 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1755.56 450.954C1756.12 454.184 1756.67 457.404 1757.23 460.634C1761.41 472.185 1769.54 474.641 1755.56 450.954Z\",\n    fill: \"black\"\n  })), _path348 || (_path348 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1834.78 456.404C1822.93 455.143 1852.31 474.524 1853.04 467.56C1846.95 463.844 1840.86 460.119 1834.78 456.404Z\",\n    fill: \"black\"\n  })), _path349 || (_path349 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1875.61 469.341C1870.44 470.883 1865.29 472.435 1860.12 473.978C1855.82 476.669 1872.82 475.117 1875.61 469.341Z\",\n    fill: \"black\"\n  })), _path350 || (_path350 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1867.44 488.074C1868.72 490.08 1870.01 492.085 1871.29 494.091C1878.9 502.1 1875.76 492.204 1863.95 478.969C1863.5 479.159 1863.04 479.339 1862.59 479.529C1864.21 482.374 1865.82 485.229 1867.44 488.074Z\",\n    fill: \"black\"\n  })), _path351 || (_path351 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1860.95 486.256C1861.58 486.921 1862.21 487.576 1862.85 488.241C1868.48 494.483 1873.02 502.772 1871.29 494.098C1870.01 492.093 1868.72 490.087 1867.44 488.082C1863.32 483.817 1854.65 474.41 1860.95 486.256Z\",\n    fill: \"black\"\n  })), _path352 || (_path352 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1862.85 488.231C1862.21 487.567 1861.58 486.912 1860.95 486.247C1859.21 484.257 1857.46 482.268 1855.71 480.278C1853.54 481.183 1872.17 508.829 1862.85 488.231Z\",\n    fill: \"black\"\n  })), _path353 || (_path353 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1974.82 466.939C1977.34 469.24 1979.86 471.552 1982.38 473.853C1984.65 475.066 2005.39 480.949 2004.28 483.858C1993.29 479.748 1980.53 477.443 1972.54 467.531C1973.3 467.33 1974.06 467.14 1974.82 466.939ZM1978.86 479.1L1978.08 499.115L1976.24 499.179C1976.01 496.624 1975.79 494.07 1975.55 491.515C1974.99 491.534 1975.82 501.859 1973.04 499.802C1971.5 498.656 1975.13 477.159 1977.65 484.78C1978.06 482.89 1978.46 480.99 1978.86 479.1ZM1972.46 480.347C1973.27 502.131 1968.49 506.1 1969.54 490.186C1970.52 486.902 1971.49 483.63 1972.46 480.347ZM1981.8 485.149C1983.78 500.066 1977.8 508.381 1979.7 491.884C1980.4 489.636 1981.1 487.397 1981.8 485.149Z\",\n    fill: \"black\"\n  })), _path354 || (_path354 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1974.82 466.939C1974.06 467.14 1973.3 467.33 1972.54 467.531C1980.53 477.443 1993.29 479.748 2004.28 483.858C2005.39 480.949 1984.65 475.066 1982.38 473.853C1979.86 471.552 1977.34 469.24 1974.82 466.939Z\",\n    fill: \"black\"\n  })), _path355 || (_path355 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1978.86 479.1C1978.46 480.99 1978.05 482.89 1977.65 484.78C1975.13 477.159 1971.5 498.656 1973.04 499.802C1975.82 501.859 1974.99 491.534 1975.55 491.515C1975.79 494.07 1976.01 496.624 1976.24 499.179L1978.08 499.115L1978.86 479.1Z\",\n    fill: \"black\"\n  })), _path356 || (_path356 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1972.46 480.344C1971.48 483.627 1970.52 486.9 1969.54 490.183C1968.49 506.097 1973.27 502.129 1972.46 480.344Z\",\n    fill: \"black\"\n  })), _path357 || (_path357 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1981.8 485.149C1981.1 487.397 1980.4 489.636 1979.7 491.884C1977.8 508.381 1983.78 500.066 1981.8 485.149Z\",\n    fill: \"black\"\n  })), _path358 || (_path358 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1938.03 496.91C1926.66 501.229 1915.3 505.558 1903.94 509.877C1913.19 506.349 1923.91 520.933 1914.46 507.976C1922.32 504.29 1930.17 500.595 1938.03 496.91Z\",\n    fill: \"black\"\n  })), _path359 || (_path359 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1786.32 496.016C1777.65 495.804 1797.26 501.613 1815.38 499.622C1816.69 496.81 1793.41 497.943 1791.89 497.873C1790.03 497.25 1788.18 496.638 1786.32 496.016Z\",\n    fill: \"black\"\n  })), _path360 || (_path360 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1850.91 504.029C1824.13 510.953 1822.07 514.315 1850.97 506.077L1850.91 504.029Z\",\n    fill: \"black\"\n  })), _path361 || (_path361 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1783.87 506.352L1791.26 523.009C1800.73 534.213 1795.68 521.042 1783.87 506.352Z\",\n    fill: \"black\"\n  })), _path362 || (_path362 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1792.2 508.114C1790.63 509.07 1797.29 524.512 1800.06 525.267C1802.11 523.823 1793.79 510.375 1792.2 508.114Z\",\n    fill: \"black\"\n  })), _path363 || (_path363 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1778.42 508.588C1779.92 512.462 1781.41 516.347 1782.9 520.221C1790.84 532.585 1792.47 525.937 1778.42 508.588Z\",\n    fill: \"black\"\n  })), _path364 || (_path364 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1773.83 508.747C1771.89 511.726 1779 524.969 1780.75 524.909C1783.35 524.05 1777.64 517.482 1773.83 508.747Z\",\n    fill: \"black\"\n  })), _path365 || (_path365 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1799.7 512.976C1801.47 522.222 1813.02 530.555 1804.91 518.433C1803.18 516.617 1801.43 514.791 1799.7 512.976Z\",\n    fill: \"black\"\n  })), _path366 || (_path366 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1814.54 517.591C1810.92 516.825 1812.74 531.121 1815.26 526.278C1814.92 524.927 1814.56 523.566 1814.22 522.214C1814.26 521.926 1818.57 518.446 1814.54 517.591Z\",\n    fill: \"black\"\n  })), _path367 || (_path367 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1607.61 300.372C1607.68 300.415 1607.96 300.608 1608.34 300.588C1611.69 300.355 1616.53 282.225 1611.87 275.892C1600.07 259.853 1514.43 304.579 1506.79 293.415C1504.94 290.698 1511.06 282.845 1523.33 267.13C1538.6 247.574 1544.97 244.874 1548.19 243.797C1550.79 242.927 1555.13 241.871 1573.87 244.688C1610.16 250.124 1626.24 258.924 1633.54 263.497C1642.81 269.295 1645.16 272.817 1645.97 276.15C1648.17 285.162 1639.25 293.284 1642.87 296.923C1643.7 297.766 1644.82 297.972 1651.8 297.77C1661.1 297.501 1667.16 296.893 1671.59 296.66C1677.33 296.351 1676.79 296.858 1689.15 297.158C1707.7 297.601 1706.05 296.396 1712 297.272C1716.11 297.881 1729.01 299.773 1737.95 308.699C1741.67 312.402 1744.7 317.336 1745.77 319.079C1746.47 320.206 1748.84 324.148 1750.49 328.233C1753.06 334.61 1753.13 340.291 1753.16 351.373C1753.2 363.234 1753.21 371.086 1753.21 374.233C1744.64 370.556 1736.06 366.879 1727.49 363.212C1708.83 377.762 1694.61 379.912 1685.16 379.265C1666.29 377.961 1652.71 364.568 1634.7 365.647C1632.79 365.767 1627.09 366.262 1623.34 363.07C1620.23 360.409 1619.71 356.274 1619.74 353.343C1620.14 359.125 1619.68 366.728 1615.9 374.493C1609.07 388.477 1594.94 397.62 1594.42 397.154C1593.92 396.709 1602.09 383.871 1613.38 382.982C1619.3 382.514 1621.04 385.72 1629.7 385.586C1636.55 385.473 1638.15 383.417 1644.44 382.796C1652.38 382.016 1657.55 384.53 1665.38 387.13C1677.86 391.287 1678.64 389.556 1696.77 393.903C1723.65 400.354 1737.1 403.585 1743.76 410.611C1750.02 417.215 1751.09 430.777 1753.22 457.888C1754.8 477.891 1753.25 483.444 1749.06 486.298C1742.81 490.559 1736.98 484.561 1723.18 488.773C1718.63 490.161 1713.38 493.077 1702.89 498.889C1692.83 504.468 1693.14 505.061 1690.34 505.484C1683.41 506.548 1679.51 503.26 1667.71 504.197C1667.51 504.212 1666.1 504.377 1663.3 504.718C1648.58 506.484 1641.15 507.37 1638.11 507.745C1628.99 508.86 1624.43 509.418 1623.99 509.488C1616.74 510.564 1616.12 510.946 1613.4 510.797C1607.7 510.471 1606.26 508.544 1600.01 508.07C1596.74 507.824 1594.88 508.171 1591.21 508.559C1591.21 508.559 1583.63 509.349 1571.41 509.197C1561.31 509.075 1541.08 504.873 1536.12 492.555C1532.2 482.788 1539.46 471.871 1542.31 467.596C1545.2 463.259 1546.69 462.789 1554.48 455.107C1559.08 450.573 1568.61 441.115 1576.48 430.063C1581.34 423.24 1591.01 408.148 1588.34 406.197C1586.36 404.757 1577.31 410.292 1572.22 418.174C1568.53 423.892 1568.29 428.744 1567.62 431.954C1562.95 454.383 1523.19 467.105 1501.1 488.897C1497.73 492.215 1495.4 495.122 1493.7 498.846C1490.77 505.282 1491.99 509.181 1490.09 517.461C1489.28 521.221 1487.8 526.048 1484.91 531.225C1470.85 556.34 1436.45 566.272 1432.82 561.833C1429.74 558.076 1448.3 543.564 1443.66 537.539C1441.87 535.212 1437.21 534.937 1429.13 534.452C1425.15 534.216 1421.64 534.004 1417.75 534.672C1406.07 536.669 1403.86 544.304 1391.09 549.416C1385.27 551.752 1385.03 550.444 1376.32 552.739C1352.1 559.136 1346.2 571.31 1337.83 568.449C1328.75 565.352 1331.62 549.648 1319.49 545.429C1317.05 544.581 1317.37 545.708 1308.69 544.519C1273.63 539.691 1277.87 536.255 1236.12 529.485C1165.3 518.007 1137.11 525.285 1133.67 515.511C1125.26 491.594 1286.91 428.049 1291.65 371.354C1291.99 367.397 1292.33 354.162 1302.2 347.277C1313.6 339.338 1332.02 343.796 1345.82 348.8C1346.12 341.11 1347.97 330.604 1356.24 324.237C1371.62 312.403 1394.11 326.53 1426.49 322.21C1453.05 318.677 1446.89 307.975 1481.31 297.46C1541.22 279.158 1604.05 298.057 1607.57 300.34L1607.61 300.372Z\",\n    fill: \"black\"\n  })), _path368 || (_path368 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M989.646 135.044C990.263 133.851 990.877 132.393 991.499 130.75C991.292 130.888 991.063 130.984 990.847 131.08C990.472 132.412 990.087 133.734 989.646 135.044Z\",\n    fill: \"white\"\n  })), _path369 || (_path369 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1025.9 144.769C1025.71 144.24 1025.54 143.713 1025.38 143.175C1025.39 143.432 1025.4 143.699 1025.42 143.955C1025.54 144.779 1025.7 145.562 1025.85 146.325C1025.86 145.803 1025.89 145.291 1025.9 144.769Z\",\n    fill: \"white\"\n  })), _path370 || (_path370 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M824.886 359.985C822.58 364.399 822.131 369.327 820.226 373.844C820.686 373.55 821.169 373.236 821.663 372.922C822.261 367.629 823.412 363.459 824.898 359.975L824.886 359.985Z\",\n    fill: \"white\"\n  })), _path371 || (_path371 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M836.515 343.475C839.655 339.576 842.567 335.169 844.414 328.548C844.181 329.085 843.904 329.62 843.592 330.155C843.017 331.143 842.344 332.047 841.605 332.917C840.433 336.718 838.634 340.162 836.515 343.475Z\",\n    fill: \"white\"\n  })), _path372 || (_path372 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1227.75 169.167C1227.81 169.394 1228.66 170.453 1229.76 171.858C1229.38 170.74 1229.03 169.603 1228.72 168.436C1228.47 167.435 1228.23 166.423 1228 165.413C1227.93 167.542 1227.63 168.702 1227.75 169.177L1227.75 169.167Z\",\n    fill: \"white\"\n  })), _path373 || (_path373 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1233.56 180.111L1212.93 160.029C1186.1 157.147 1187.76 136.345 1185.74 135.683C1170.59 147.441 1176.1 155.634 1175.4 157.429C1152.64 176.178 1157.85 140.428 1156.14 131.256C1154.7 123.558 1133.82 132.418 1134.08 151.132C1120.64 155.334 1112.24 181.737 1094.61 171.028C1070.88 170.499 1072.85 175.526 1059.59 192.074C1066.27 198.926 1072.94 205.778 1079.62 212.63C1086.49 201.744 1099.91 198.219 1108.56 188.849C1109.11 189.039 1109.67 189.219 1110.22 189.409C1105.51 195.21 1099.68 201.657 1091.21 202.708C1087.51 206.529 1083.82 210.361 1080.12 214.182C1087.81 225.645 1078.86 243.238 1098.69 243.923C1100.55 244.898 1098.05 248.538 1091.85 246.804C1078.01 242.937 1083.35 224.719 1078.96 215.175C1075.83 208.372 1056.7 197.425 1051.42 185.18C1046.42 190.061 1046.08 182.005 1045.38 181.421C1037.32 174.684 1022.28 181.341 1019.52 166.85C1020.17 174.556 1020.83 182.263 1021.48 189.969C994.443 203.452 1003.55 220.941 990.781 200.375C989.944 197.789 989.095 195.202 988.257 192.616C976.355 196.543 969.264 205.926 959.987 213.341L957.668 215.325C952.945 223.525 944.429 227.005 935.741 229.957C935.521 230.135 935.302 230.314 935.06 230.481C932.108 232.581 928.726 233.561 925.149 234.024C921.693 236.417 918.172 238.736 914.824 241.214C913.485 242.211 912.157 243.219 910.839 244.248C909.367 246.738 908.349 249.713 907.99 253.393C907.622 253.639 907.265 253.885 906.92 254.121C905.359 257.808 900.985 261.026 895.846 263.679C891.3 268.255 887.65 271.637 875.805 274.007C874.363 290.48 855.725 297.743 848.621 311.164C851.052 340.929 831.633 348.979 827.87 356.704C826.154 362.806 824.427 368.907 822.711 375.009C821.882 376.185 819.347 377.927 816.595 379.5C814.185 382.148 811.1 384.213 807.781 385.903C807.78 385.954 807.766 386.015 807.753 386.066C950.739 318.876 1093.74 251.696 1236.72 184.505C1235.54 183.098 1234.49 181.634 1233.57 180.121L1233.56 180.111ZM937.553 258.833C938.202 267.821 928.811 275.273 921.063 279.892C926.963 272.382 933.804 268.004 937.553 258.833ZM898.384 301.288L917.622 281.845C917.794 282.362 917.955 282.879 918.127 283.397C908.15 295.24 898.172 307.094 888.194 318.938C891.587 313.058 894.991 307.168 898.384 301.288ZM851.249 346.593C851.396 347.797 851.533 348.99 851.68 350.193C849.8 355.542 833.197 362.452 851.249 346.593ZM857.045 341.632C859.809 332.659 862.563 323.676 865.327 314.703C877.022 305.019 879.576 289.798 891.856 280.09C886.466 289.337 881.075 298.574 875.685 307.821C859.075 318.902 869.634 328.099 857.045 341.632ZM919.774 299.844C911.629 307.64 903.483 315.445 895.337 323.241L891.468 336.97C881.936 356.299 884.781 338.963 895.337 323.241C895.776 321.377 896.226 319.504 896.665 317.641C910.267 307.099 927.18 286.154 919.774 299.844ZM950.753 251.007C943.652 265.566 938.123 280.786 924.018 291.252C920.768 290.432 929.891 283.546 930.505 282.722C937.258 272.151 944 261.578 950.753 251.007L954.51 240.35C964.764 219.094 971.136 217.429 950.753 251.007ZM1033.21 222.591C1032.56 212.394 1029.04 203.12 1025.28 193.665C1032.37 201.543 1035.63 212.522 1033.21 222.591ZM1015.78 238.498C1018.92 244.153 1018.24 250.336 1017.93 256.498C1020.1 265.078 1025.6 267.396 1026.46 269.04C1031.79 279.206 1011.54 268.74 1015.78 238.498ZM1033.13 224.639C1036.04 223.399 1034.69 236.881 1038.5 246.83C1042.94 253.619 1047.36 260.407 1051.8 267.196C1037.68 255.694 1031.68 242.167 1033.13 224.639ZM1049.1 248.668C1051.83 250.97 1054.55 253.261 1057.28 255.563C1065.76 268.165 1055.55 262.751 1049.1 248.668ZM1123.24 171.326C1113.01 190.338 1105.2 183.649 1123.93 167.758C1123.69 168.951 1123.47 170.134 1123.24 171.326ZM1189.97 173.73C1192.95 179.114 1195.94 184.488 1198.93 189.872C1205.2 209.26 1185.72 175.547 1189.97 173.73ZM1214.16 187.741C1208.1 179.369 1202.05 170.997 1195.99 162.625C1201.66 165.778 1218.11 186.459 1214.16 187.741Z\",\n    fill: \"#A68FC8\"\n  })), _path374 || (_path374 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M846.455 310.47C845.818 312.533 845.495 314.604 845.644 316.679C845.763 318.353 845.861 319.976 845.826 321.553C846.258 318.327 846.493 314.664 846.455 310.47Z\",\n    fill: \"white\"\n  })), _path375 || (_path375 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M701.075 461.247C713.551 466.193 718.164 463.485 720.072 463.836C737.272 467.05 762.009 482.245 760.293 484.964C757.457 485.735 754.621 486.515 751.785 487.286C751.235 486.983 750.196 476.662 747.634 477.943C754.727 503.955 725.856 483.558 735.069 483.737C736.422 493.144 737.783 482.922 740.641 484.92C741.43 485.475 741.637 494.881 744.044 483.991C747.936 494.291 747.202 479.929 745.353 478.903C744.472 478.417 743.56 483.721 739.594 482.84C736.315 480.359 733.037 477.867 729.758 475.386C718.269 472.324 706.768 469.271 695.279 466.209C704.591 473.525 701.822 472.493 705.9 482.91C703.512 466.175 708.099 469.114 709.808 483.534C703.331 485.605 698.301 478.185 688.716 476.786C691.254 468.79 691.979 464.618 701.075 461.247Z\",\n    fill: \"#939393\"\n  })), _path376 || (_path376 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M710.761 472.791C715.973 470.919 715.341 493.175 716.333 473.974C721.141 475.473 725.96 476.983 730.768 478.483C731.353 496.017 735.614 484.483 712.594 484.118C711.98 480.339 711.376 476.57 710.761 472.791Z\",\n    fill: \"#939393\"\n  })), _path377 || (_path377 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1123.92 167.753C1123.69 168.946 1123.47 170.129 1123.23 171.321C1113 190.333 1105.2 183.644 1123.92 167.753Z\",\n    fill: \"black\"\n  })), _path378 || (_path378 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1189.97 173.719C1192.95 179.103 1195.94 184.477 1198.92 189.861C1205.2 209.248 1185.72 175.536 1189.97 173.719Z\",\n    fill: \"black\"\n  })), _path379 || (_path379 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1195.99 162.617C1201.66 165.771 1218.11 186.45 1214.16 187.733C1208.1 179.361 1202.05 170.989 1195.99 162.617Z\",\n    fill: \"black\"\n  })), _path380 || (_path380 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1025.28 193.66C1032.37 201.539 1035.63 212.517 1033.21 222.586C1032.56 212.389 1029.04 203.115 1025.28 193.66Z\",\n    fill: \"black\"\n  })), _path381 || (_path381 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1033.13 224.637C1036.04 223.397 1034.68 236.879 1038.5 246.827C1042.93 253.615 1047.36 260.404 1051.79 267.192C1037.68 255.691 1031.67 242.164 1033.13 224.637Z\",\n    fill: \"black\"\n  })), _path382 || (_path382 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M950.751 250.999L954.508 240.342C964.761 219.087 971.133 217.422 950.751 250.999Z\",\n    fill: \"black\"\n  })), _path383 || (_path383 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1015.78 238.499C1018.92 244.154 1018.25 250.336 1017.93 256.498C1020.1 265.078 1025.6 267.396 1026.46 269.04C1031.78 279.206 1011.53 268.74 1015.78 238.499Z\",\n    fill: \"black\"\n  })), _path384 || (_path384 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1049.1 248.663C1051.83 250.965 1054.55 253.256 1057.27 255.558C1065.75 268.16 1055.55 262.746 1049.1 248.663Z\",\n    fill: \"black\"\n  })), _path385 || (_path385 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M950.75 251.004C943.65 265.564 938.12 280.783 924.016 291.248C920.766 290.429 929.889 283.543 930.503 282.719C937.256 272.148 943.997 261.576 950.75 251.004Z\",\n    fill: \"black\"\n  })), _path386 || (_path386 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M937.548 258.829C938.198 267.817 928.808 275.269 921.059 279.888C926.959 272.378 933.8 268 937.548 258.829Z\",\n    fill: \"black\"\n  })), _path387 || (_path387 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M891.854 280.092C886.463 289.339 881.073 298.576 875.682 307.823C859.073 318.905 869.631 328.102 857.043 341.635C859.807 332.662 862.56 323.678 865.324 314.705C877.02 305.022 879.573 289.8 891.854 280.092Z\",\n    fill: \"black\"\n  })), _path388 || (_path388 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M917.618 281.843C917.79 282.361 917.95 282.878 918.123 283.395C908.145 295.239 898.168 307.092 888.191 318.936C891.583 313.056 894.987 307.166 898.38 301.286L917.618 281.843Z\",\n    fill: \"black\"\n  })), _path389 || (_path389 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M895.334 323.241C895.772 321.378 896.222 319.505 896.661 317.641C910.262 307.1 927.174 286.155 919.769 299.845C911.624 307.64 903.479 315.446 895.334 323.241Z\",\n    fill: \"black\"\n  })), _path390 || (_path390 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M895.334 323.238L891.464 336.967C881.933 356.295 884.777 338.961 895.334 323.238Z\",\n    fill: \"black\"\n  })), _path391 || (_path391 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M851.246 346.589C851.393 347.792 851.529 348.985 851.676 350.188C849.797 355.537 833.196 362.446 851.246 346.589Z\",\n    fill: \"black\"\n  })), _path392 || (_path392 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M959.986 213.338C971.141 195.07 980.605 194.538 991.92 184.516C992.474 184.706 993.029 184.886 993.584 185.076C994.447 186.648 987.956 193.742 997.942 204.163C1011.09 188.565 1025.7 195.109 1014.3 171.312C1018.49 147.906 1024.72 170.746 1027.18 172.19C1033.68 173.573 1040.19 174.946 1046.69 176.33C1048.57 172.478 1039.54 170.285 1038.51 169.435C1017.93 152.523 1023.49 124.994 1020.8 116.143C1018.66 113.345 1016.51 110.558 1014.37 107.76C1013.64 106.53 1009.8 86.2172 998.477 112.435C993.08 124.932 999.511 133.673 974.622 150.712C972.071 176.635 969.886 177.414 950.579 194.108C955.835 207.06 928.618 237.102 957.667 215.323C945.929 235.717 910.605 226.915 907.99 253.38C892.604 263.543 895.195 270.115 875.793 273.994C874.351 290.467 855.713 297.729 848.609 311.151C851.039 340.916 831.621 348.966 827.858 356.691C826.142 362.792 824.414 368.894 822.698 374.996C819.536 379.488 791.573 392.103 821.651 372.916C825.16 341.966 847.249 349.388 846.44 309.039C855.01 295.126 871.147 289.002 873.624 271.882C893.423 266.949 889.588 262.494 904.661 252.26C908.921 227.523 940.582 228.974 942.728 224.637C941.676 212.215 951.942 206.314 948.373 193.02C966.532 176.386 969.803 174.767 972.415 149.624C977.816 145.339 983.206 141.042 988.607 136.757C993.581 129.989 997.867 102.998 1006.27 98.8178C1014.91 94.5317 1013.43 104.402 1024.17 116.238C1024.58 125.476 1024.99 134.713 1025.4 143.95C1029.31 168.806 1047.8 165.178 1051.32 172.361C1054.17 188.761 1055.63 194.378 1066.84 177.926C1068.47 174.21 1070.11 170.505 1071.74 166.789C1072.69 165.473 1077.9 163.735 1085.26 150.259C1090.87 150.848 1100.68 152.684 1104.14 155.919C1112.99 157.492 1117.46 152.34 1115.23 144.445C1120.76 136.576 1126.28 128.696 1131.81 120.826C1127.03 128.717 1122.25 136.618 1117.47 144.509C1117.72 177.789 1081.06 136.035 1083.11 163.011C1080.44 164.299 1077.77 165.597 1075.11 166.885C1070.78 172.779 1078.17 168.529 1078.98 168.532C1088.69 169.145 1098.39 169.769 1108.11 170.382C1114.74 164.225 1122.91 159.516 1126.77 151.435C1138.08 152.258 1130.92 141.702 1138.08 133.817C1140.5 131.148 1155.43 121.659 1158.46 129.269C1159.21 131.166 1158.93 159.419 1165.73 160.739C1168.21 159.61 1170.68 158.491 1173.16 157.362C1173.78 156.181 1173.66 140.34 1181.91 133.009C1192.61 123.481 1184.98 153.382 1217.53 157.082C1230.39 174.104 1221.35 153.643 1219.64 145.353C1194.05 134.234 1206.43 108.999 1187.32 76.7837C1174.34 54.91 1174.79 70.3397 1164.4 89.46C1152.97 94.9994 1151.91 100.843 1145.84 105.847C1149.41 101.397 1151.43 92.9261 1162.27 86.3244C1174.45 55.3027 1181.72 54.6578 1194.88 85.1982C1207.22 113.85 1198.94 133.235 1223.08 143.401C1230.29 161.492 1227.39 167.868 1227.76 169.16C1227.97 169.935 1237.44 180.638 1234.62 181.142C1227.38 174.1 1220.16 167.069 1212.93 160.027C1186.1 157.145 1187.76 136.342 1185.74 135.68C1170.59 147.438 1176.09 155.631 1175.4 157.426C1152.64 176.175 1157.85 140.425 1156.14 131.253C1154.7 123.555 1133.82 132.415 1134.08 151.129C1120.64 155.331 1112.24 181.734 1094.61 171.025C1070.87 170.496 1072.85 175.523 1059.59 192.071C1066.27 198.924 1072.94 205.775 1079.61 212.628C1086.49 201.742 1099.91 198.216 1108.56 188.846C1109.11 189.036 1109.67 189.216 1110.22 189.406C1105.51 195.207 1099.68 201.654 1091.21 202.705C1087.51 206.527 1083.82 210.358 1080.12 214.179C1087.81 225.642 1078.86 243.235 1098.69 243.92C1100.55 244.895 1098.06 248.535 1091.85 246.801C1078 242.934 1083.35 224.716 1078.96 215.172C1075.83 208.369 1056.7 197.422 1051.42 185.177C1046.42 190.058 1046.07 182.002 1045.38 181.418C1037.32 174.681 1022.28 181.338 1019.52 166.847C1020.17 174.553 1020.83 182.26 1021.48 189.967C994.441 203.449 1003.55 220.938 990.78 200.372C989.942 197.786 989.093 195.199 988.255 192.613C976.354 196.54 969.263 205.923 959.986 213.338Z\",\n    fill: \"black\"\n  })), _path393 || (_path393 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1131.81 120.825L1145.83 105.847C1151.91 100.842 1152.97 94.9985 1164.4 89.4591C1174.79 70.3388 1174.34 54.9092 1187.32 76.7828C1206.43 108.999 1194.05 134.233 1219.64 145.352C1221.35 153.642 1230.39 174.103 1217.53 157.081C1184.98 153.381 1192.61 123.481 1181.91 133.008C1173.66 140.339 1173.78 156.18 1173.16 157.361C1170.68 158.49 1168.21 159.609 1165.73 160.739C1158.93 159.418 1159.21 131.165 1158.46 129.268C1155.43 121.658 1140.5 131.148 1138.08 133.816C1130.92 141.701 1138.08 152.257 1126.77 151.434C1122.91 159.515 1114.74 164.224 1108.11 170.381C1098.39 169.768 1088.69 169.144 1078.98 168.531C1078.17 168.529 1070.78 172.778 1075.1 166.884C1077.77 165.596 1080.44 164.298 1083.11 163.01C1081.06 136.034 1117.72 177.788 1117.47 144.508C1122.25 136.617 1127.03 128.716 1131.81 120.825Z\",\n    fill: \"white\"\n  })), _path394 || (_path394 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M959.985 213.34C959.208 214.005 958.443 214.659 957.666 215.324C928.617 237.104 955.834 207.062 950.578 194.11C969.885 177.415 972.07 176.637 974.621 150.713C999.51 133.675 993.079 124.933 998.476 112.437C1009.8 86.2188 1013.64 106.532 1014.37 107.762C1016.51 110.56 1018.66 113.347 1020.8 116.145C1023.49 124.995 1017.93 152.525 1038.51 169.437C1039.54 170.286 1048.57 172.479 1046.68 176.332C1040.19 174.948 1033.68 173.575 1027.18 172.191C1024.72 170.748 1018.49 147.907 1014.3 171.314C1025.7 195.11 1011.09 188.567 997.941 204.165C987.955 193.744 994.446 186.65 993.583 185.078C993.028 184.888 992.473 184.708 991.919 184.518C980.604 194.54 971.14 195.072 959.985 213.34Z\",\n    fill: \"white\"\n  })), _path395 || (_path395 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1503.34 80.1009L1508.33 81.7799C1506.27 128.188 1504.19 174.605 1502.13 221.013C1486.53 211.827 1491.81 210.142 1491.32 209.431C1485.73 201.246 1480.38 206.486 1479.51 194.745C1463.56 188.256 1482.39 174.418 1475.59 163.37C1473.69 169.292 1471.79 175.225 1469.89 181.147C1467.78 185.587 1460.37 190.143 1461.48 196.284C1451.66 202.074 1454.45 211.338 1452.96 214.494L1439.16 223.329C1435.78 226.636 1437.1 239.589 1420.46 212.548C1423 199.51 1415.48 198.333 1410.1 188.678C1413.33 177.986 1402.18 171.93 1408.79 163.014C1409.81 161.629 1420.81 156.395 1419.91 150.516C1414.34 154.633 1408.75 158.739 1403.18 162.856C1399.06 182.891 1368.25 200.48 1353.58 214.241C1347.33 201.701 1356.61 194.522 1347.57 178.706C1349.32 176.88 1351.42 174.192 1352.85 170.614C1356.61 161.259 1353.08 152.774 1351.92 150.271C1402.39 126.884 1452.86 103.487 1503.34 80.1009ZM1432.96 131.41C1429.77 136.783 1426.58 142.167 1423.39 147.54C1427.31 149.106 1441.77 129.435 1432.96 131.41Z\",\n    fill: \"white\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path396 || (_path396 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1432.96 131.411C1441.77 129.436 1427.31 149.107 1423.39 147.54C1426.58 142.167 1429.77 136.784 1432.96 131.411Z\",\n    fill: \"black\"\n  })), _path397 || (_path397 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1291.7 371.376C1298.24 371.561 1294.58 376.234 1301.57 377.806C1305.96 378.791 1318.06 375.341 1334.85 389C1355.71 390.718 1361.09 388.359 1346.82 399.589C1341.67 385.256 1304.98 381.152 1295.94 393.535C1284.59 409.101 1301.86 408.894 1302.08 410.11C1302.75 413.901 1253.86 444.528 1250.57 452.215C1239.38 451.211 1228.18 450.218 1216.99 449.214C1202.63 450.713 1181.53 467.285 1169.44 475.03C1160.31 486.396 1144.63 507.232 1133.71 515.533C1125.68 520.093 1117.66 524.642 1109.63 529.202C1080.56 537.563 1097.22 509.609 1058.49 499.563L1079.02 490.919C1079.39 488.152 1058.17 473.528 1097.81 483.764C1108.05 485.704 1111.13 478.186 1121.52 480.336C1140.94 469.815 1129.29 471.033 1132.06 468.334C1143.12 462.835 1154.17 457.346 1165.23 451.847C1180.97 441.551 1216.89 406.558 1224.2 405.34C1248.49 401.293 1281.86 438.167 1281.14 399.266C1275.3 391.914 1279.47 387.717 1279.34 386.914C1276.07 384.085 1272.81 381.265 1269.54 378.436L1291.7 371.376Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path398 || (_path398 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1244.47 373.117C1282.61 377.888 1273.84 390.617 1274.59 393.959C1275.29 397.044 1282.36 402.493 1274.39 414.967C1257.31 414.012 1248.97 404.888 1232.13 403.519C1221.6 402.668 1216.25 410.204 1219.58 393.426C1220.73 392.771 1221.88 392.127 1223.02 391.473C1216.7 375.037 1236.74 380.904 1244.47 373.117ZM1265.59 381.291L1255.15 390.221C1217.4 383.892 1243.34 393.689 1253.96 392.237C1256.53 391.879 1269.04 381.614 1265.59 381.291Z\",\n    fill: \"#939393\"\n  })), _path399 || (_path399 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1267.65 384.023C1271.11 384.346 1258.6 394.611 1256.02 394.969C1245.4 396.421 1219.47 386.624 1257.22 392.953L1267.65 384.023Z\",\n    fill: \"#939393\"\n  })), _path400 || (_path400 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1095.38 458.07C1105.21 456.565 1125.25 462.976 1127.69 465.136C1139.06 475.237 1111.43 477.724 1106.89 480.948C1098.33 479.68 1089.77 478.412 1081.2 477.145C1082.16 469.002 1085.12 459.635 1095.38 458.07Z\",\n    fill: \"#939393\"\n  })), _path401 || (_path401 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M923.505 459.349C959.27 457.913 986.798 464.003 1019.5 475.395C1010.27 476.589 987.081 474.733 993.718 489.528C995.443 493.359 1031.2 492.21 1033.17 485.521C1035.11 478.933 1020.21 477.865 1048.52 480.318C1032.07 483.88 1037.95 484.641 1031.1 496.225C1009.84 492.947 988.19 494.845 967.037 497.485C943.322 497.684 917.287 487.608 881.923 490.973C867.913 496.665 855.314 504.949 839.779 507.205C832.861 524.456 819.609 496.742 809.936 494.059C802.076 491.878 766.843 501.51 769.887 514.45C750.507 512.189 731.115 509.938 711.736 507.677C691.569 501.13 671.413 494.572 651.246 488.025C660.888 485.397 670.53 482.759 680.171 480.131C688.338 466.207 686.26 478.858 686.94 479.298C687.741 479.813 693.573 478.184 704.666 485.951C723.396 483.867 747.278 500.012 751.748 488.31C770.003 489.688 760.326 482.187 762.106 481.428C765.425 480.025 801.175 488.849 834.991 484.518C868.953 480.171 883.365 460.969 923.505 459.349Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path402 || (_path402 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1002.56 477.989C1006.43 477.237 1027.73 478.948 1029.95 481.327C1036.52 488.371 1020.48 485.456 1018.98 489.729C1014.04 486.535 999.33 490.833 996.541 489.093C994.059 487.547 996.792 479.117 1002.56 477.989ZM1019.28 481.537C1013.45 482.223 1007.63 482.919 1001.79 483.605C998.941 487.931 1031.76 481.983 1019.28 481.537Z\",\n    fill: \"#939393\"\n  })), _path403 || (_path403 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1061.98 480.699C1071.27 478.759 1076.36 490.24 1075.07 491.32C1067.12 493.832 1059.17 496.333 1051.21 498.845C1035.3 499.849 1025.12 489.936 1043.01 492.974C1025.97 480.325 1050.54 485.51 1056.22 484.636C1058.15 483.327 1060.06 482.008 1061.98 480.699ZM1070.73 487.097C1063.36 489.113 1055.99 491.118 1048.62 493.133C1049.51 495.188 1080.23 488.104 1070.73 487.097Z\",\n    fill: \"#939393\"\n  })), _path404 || (_path404 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1019.28 481.537C1031.76 481.983 998.943 487.932 1001.8 483.605C1007.63 482.919 1013.45 482.223 1019.28 481.537Z\",\n    fill: \"black\"\n  })), _path405 || (_path405 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1070.73 487.095C1080.23 488.102 1049.51 495.186 1048.62 493.131C1055.99 491.116 1063.36 489.11 1070.73 487.095Z\",\n    fill: \"black\"\n  })), _path406 || (_path406 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M597.939 487.026C613.628 492.554 630.828 492.078 647.264 489.448C666.978 495.183 686.742 500.448 704.93 509.533C726.554 511.858 748.189 514.172 769.813 516.497C769.985 517.014 770.145 517.531 770.318 518.049C728.806 522.172 687.283 526.285 645.771 530.408C615.809 531.322 584.87 520.831 555.909 530.937C551.04 519.718 538.8 515.681 539.099 514.573C558.716 505.39 578.322 496.208 597.939 487.026Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path407 || (_path407 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M799.765 495.819C811.959 494.34 822.267 506.092 828.842 514.581C811.958 524.261 791.817 515.777 774.151 520.72C763.553 507.381 795.467 496.343 799.765 495.819ZM811.733 506.409C808.429 507.074 808.169 515.431 810.312 514.569C810.72 513.555 811.139 512.542 811.546 511.529C812.248 512.912 812.938 514.305 813.641 515.688C816.756 516.781 817.016 505.349 811.733 506.409Z\",\n    fill: \"#939393\"\n  })), _path408 || (_path408 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M811.733 506.409C817.015 505.35 816.756 516.781 813.64 515.688C812.939 514.305 812.248 512.912 811.546 511.529C811.139 512.542 810.72 513.555 810.313 514.569C808.17 515.43 808.43 507.074 811.733 506.409Z\",\n    fill: \"black\"\n  })), _path409 || (_path409 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1082.07 561.219L1020.26 563.726C987.176 565.068 954.079 562.523 921.65 556.142V556.142C944.96 554.019 981.845 541.56 1004.99 534.434C1015.81 535.765 1026.61 537.096 1037.42 538.428C1047.93 537.362 1058.46 536.287 1068.98 535.222C1088.47 533.877 1106.41 538.558 1132.44 519.594C1160.37 526.341 1188.71 517.508 1216.73 517.882C1223.78 519.445 1230.84 521.019 1237.9 522.582C1261.32 526.464 1274.97 523.181 1249.94 531.123C1220.83 538.837 1191.73 546.562 1162.62 554.276C1147.17 553.869 1148.95 528.652 1115.61 549.869C1103 551.797 1090.19 550.747 1082.07 561.219Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path410 || (_path410 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M914.913 556.487L896.963 555.978C852.495 539.824 812.376 545.682 766.384 552.877L699.006 560.605L588.433 561.901L566.008 546.6C563.169 542.245 560.34 537.901 557.5 533.546C582.696 524.737 617.264 533.353 649.064 532.553L743.749 522.935C779.841 521.784 814.963 527.813 847.522 510.499C887.212 526.149 929.387 536.19 972.127 542.732C954.24 550.682 934.486 554.058 914.913 556.487Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path411 || (_path411 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1037.54 533.649C1035.08 532.042 1034.67 527.418 1037.43 522.555C1036.88 522.365 1036.33 522.186 1035.77 521.996C1030.87 543.598 1029.29 536.911 1033.86 512.716C1029.02 515.572 1030.57 533.124 1027.47 534.061C1020.95 533.231 1014.44 532.4 1007.92 531.57C1008.62 529.693 1009.31 527.817 1010 525.95C1013.98 518.703 1014.56 516.987 1014.28 516.846C1013.94 516.662 1012.12 518.835 1010.95 520.534C1009.54 522.575 1008.68 524.467 1008.24 525.572C1006.72 529.322 1007.06 530.807 1005.35 532.01C1004.45 532.64 1002.79 533.341 1002.08 532.819C999.683 531.049 1009.89 516.608 1009.03 516.123C1008.75 515.961 1007.4 517.368 1006.36 518.743C1004.06 521.794 1004.11 523.62 1001.52 528.487C1000.36 530.669 999.278 532.309 997.77 532.389C997.309 532.417 996.909 532.283 996.644 532.173C1002.75 520.127 1005.59 514.006 1005.19 513.82C1004.57 513.536 1000 520.449 993.26 532.589C995.327 532.556 997.384 532.512 999.452 532.478C999.985 532.319 1000.57 532.182 1001.23 532.077C1003.21 531.764 1004.94 531.906 1006.2 532.126C996.539 534.743 986.887 537.36 977.223 539.977C958.595 537.717 937.767 534.226 915.345 528.834C889.818 522.698 867.345 515.337 848.162 507.967C880.624 495.468 876.858 490.964 915.492 493.986C956.286 504.009 999.236 496.482 1040.41 502.138C1014.69 508.442 989.196 501.425 1011.56 507.984C1032.54 508.066 1055.03 497.561 1073.81 510.26C1064.7 523.605 1061.99 526.439 1061.39 526.145C1060.78 525.841 1061.77 521.882 1063.42 518.597C1064.87 515.706 1066.85 513.292 1065.95 512.354C1065.77 512.154 1065.47 512.033 1065.2 512.035C1061.99 511.986 1059.96 528.288 1057.03 528.154C1056.77 528.146 1056.6 528.008 1056.38 527.838C1054.03 525.988 1058.5 519.944 1056.08 517.805C1055.83 517.582 1055.48 517.275 1055 517.272C1052.15 517.273 1053 528.163 1045.99 532.556C1043.56 534.076 1039.74 535.116 1037.52 533.659L1037.54 533.649ZM897.33 499.612C895.924 499.992 897.64 504.971 889.907 502.989C896.807 507.182 880.567 514.307 884.392 515.646C890.727 510.68 895.002 504.312 896.377 510.348C884.447 525.242 901.009 506.819 901.912 512.555C902.041 513.337 894.059 521.875 904.698 513.146C900.845 524.261 907.497 513.994 908.026 514.265L907.877 518.361C909.321 518.802 912.542 514.557 914.103 517C914.465 517.554 910.097 523.693 916.889 517.592C934.727 521.183 940.198 517.75 919.208 515.607C918.382 515.153 924.55 507.999 917.768 508.904C920.828 515.212 911.047 518.287 916.103 508.344C914.351 507.731 906.976 519.966 912.775 507.225C898.821 519.417 911.879 504.073 907.24 505.018C903.687 512.226 900.587 511.933 901.668 503.835C892.061 512.911 900.779 498.664 897.33 499.612ZM992.242 514.602C969.521 551.024 994.017 519.818 993.869 516.185L992.242 514.602ZM996.655 516.777C984.288 537.778 988.312 539.86 998.319 517.336C997.764 517.146 997.209 516.967 996.655 516.777Z\",\n    fill: \"#939393\"\n  })), _path412 || (_path412 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1075.45 511.834C1076.43 511.677 1087.37 520.392 1074.93 526.169C1072.26 524.433 1081.66 515.843 1076.42 515.961C1060.16 540.553 1073.05 512.206 1075.45 511.834Z\",\n    fill: \"#939393\"\n  })), _path413 || (_path413 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1337.86 568.471L1166.21 563.607C1166.71 560.772 1160.85 558.863 1163.67 556.36C1182.91 552.118 1202.16 547.887 1221.41 543.645C1238.08 538.305 1254.73 532.975 1271.4 527.635C1295.21 545.07 1328.23 538.379 1356.44 536.195C1422.01 550.785 1387.47 533.179 1337.86 568.471Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path414 || (_path414 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M847.627 546.98C865.933 547.544 892.663 555.26 910.984 555.046V555.046L938.922 558.256V558.256C957.534 562.039 976.442 564.264 995.449 564.908L997.338 564.972L1039.93 563.085L1167.68 556.037L1239 538.086L1270.31 526.618L1292.76 537.456L1326.78 540.295L1358.19 536.689L1391.25 543.703L1363.46 553.281L1339.26 566.516L1332.22 571.687L1210.55 578.201L1148.72 583.088L1102.61 587.329L1066.67 594.226L1002.88 605.15L955.269 611.259L898.526 617.475L824.473 618.343L700.043 605.924L608.806 590.105C589.873 586.823 571.888 579.545 556.047 568.756V568.756L579.647 548.125V548.125C581.835 556.537 589.462 562.35 598.175 562.248L624.957 561.935L699.517 561.061L774.677 552.509C794.063 548.93 824.746 546.275 847.627 546.98Z\",\n    fill: \"#64C359\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path415 || (_path415 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1555.67 246.627C1583.41 243.507 1637.89 260.499 1640.35 280.291C1639.38 286.414 1638.41 292.537 1637.44 298.659L1618.42 311.959C1597.88 307.738 1574.47 306.664 1556.42 318.403C1545.04 312.268 1533.65 306.144 1522.28 300.009C1516.88 297.642 1504.43 295.619 1506.79 293.42C1525.55 282.174 1528.78 249.648 1555.67 246.627ZM1617.78 267.863C1612.63 268.004 1577.15 296.459 1619.45 268.423C1618.89 268.233 1618.34 268.053 1617.78 267.863ZM1630.05 270.261C1617.52 296.281 1625.39 309.327 1625.51 287.046C1628.58 282.192 1632.99 275.142 1630.05 270.261ZM1620.92 274.103C1615 275.206 1614.21 312.096 1618.55 292.999L1618.92 282.759C1619.03 282.27 1626.09 273.142 1620.92 274.103ZM1550.17 274.148C1553.86 275.616 1557.55 277.094 1561.24 278.562C1559.69 273.772 1570.82 283.149 1571.41 276.8C1577.95 277.159 1584.49 277.509 1591.03 277.868C1577.4 276.631 1563.79 275.385 1550.17 274.148ZM1611.87 275.896L1607.61 300.377C1612.11 303.241 1613.32 276.696 1611.87 275.896ZM1605.03 278.778C1601.25 279.849 1594.2 310.022 1601.54 297.642C1600.74 287.738 1608.8 277.716 1605.03 278.778ZM1584.73 281.277L1576.26 282.575C1580.36 283.03 1584.45 283.494 1588.56 283.949C1583.3 290.063 1577.92 306.229 1581.62 304.766C1583.79 297.98 1587.61 285.08 1593.08 283.052L1584.73 281.277ZM1597.07 281.627C1594.03 287.866 1591 294.094 1587.96 300.333C1585.09 312.337 1596.08 293.408 1597.07 281.627Z\",\n    fill: \"#939393\"\n  })), _path416 || (_path416 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1617.78 267.865C1618.34 268.055 1618.89 268.234 1619.45 268.424C1577.15 296.46 1612.63 268.006 1617.78 267.865Z\",\n    fill: \"#939393\"\n  })), _path417 || (_path417 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1630.05 270.259C1632.99 275.14 1628.58 282.19 1625.51 287.044C1625.39 309.325 1617.52 296.278 1630.05 270.259Z\",\n    fill: \"#939393\"\n  })), _path418 || (_path418 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1620.92 274.099C1626.09 273.138 1619.03 282.266 1618.92 282.755L1618.55 292.995C1614.2 312.091 1615 275.202 1620.92 274.099Z\",\n    fill: \"#939393\"\n  })), _path419 || (_path419 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1550.17 274.146C1563.79 275.382 1577.4 276.629 1591.02 277.866C1584.49 277.506 1577.94 277.157 1571.41 276.797C1570.82 283.146 1559.68 273.769 1561.24 278.559C1557.55 277.092 1553.86 275.613 1550.17 274.146Z\",\n    fill: \"#939393\"\n  })), _path420 || (_path420 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1611.87 275.895C1613.32 276.694 1612.11 303.239 1607.61 300.375L1611.87 275.895Z\",\n    fill: \"#939393\"\n  })), _path421 || (_path421 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1605.03 278.777C1608.8 277.715 1600.74 287.737 1601.54 297.641C1594.2 310.021 1601.25 279.849 1605.03 278.777Z\",\n    fill: \"#939393\"\n  })), _path422 || (_path422 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1584.72 281.279L1593.08 283.054C1587.61 285.082 1583.79 297.981 1581.62 304.767C1577.92 306.231 1583.3 290.065 1588.56 283.95C1584.45 283.496 1580.36 283.031 1576.25 282.577L1584.72 281.279Z\",\n    fill: \"#939393\"\n  })), _path423 || (_path423 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1597.06 281.626C1596.07 293.407 1585.09 312.335 1587.96 300.332C1591 294.093 1594.03 287.865 1597.06 281.626Z\",\n    fill: \"#939393\"\n  })), _path424 || (_path424 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1657.05 299.722C1702.9 305.767 1733.63 290.483 1740.84 327.21C1741.57 337.82 1742.31 348.44 1743.05 359.049C1741.63 375.246 1736.92 357.758 1727.92 358.108C1721.14 358.367 1705.88 374.213 1690.23 375.491C1666.14 377.464 1652.9 359.816 1627.89 360.399C1621.12 356.035 1625.61 345.932 1617.81 344.225C1623.38 314.503 1615.72 309.909 1657.05 299.722Z\",\n    fill: \"#939393\"\n  })), _path425 || (_path425 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1498.72 299.341C1507.25 296.343 1545.91 312.712 1545.74 318.612C1543.95 321.462 1542.16 324.322 1540.38 327.173C1516.32 324.667 1505.43 337.653 1503.32 357.9C1487.68 348.262 1471.34 339.209 1453.08 334.437C1459.83 301.376 1470.49 308.187 1498.72 299.341ZM1499.88 329.1C1498.09 331.838 1486.94 345.842 1489.11 347.246C1492.75 344.039 1501.53 348.234 1502.22 341.98C1502.63 338.209 1497.67 346.187 1499.54 338.316C1492.62 341.421 1502.83 330.568 1499.88 329.1Z\",\n    fill: \"#939393\"\n  })), _path426 || (_path426 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1454.44 312.435C1455 312.625 1455.55 312.805 1456.1 312.995C1454.04 318.062 1452 323.129 1449.94 328.195C1448.85 329.118 1429.04 325.246 1454.44 312.435Z\",\n    fill: \"#939393\"\n  })), _path427 || (_path427 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1362 322.117C1369.14 321.09 1398.28 327.43 1399.96 328.318C1406.18 331.621 1396.99 334.077 1398.74 346.222C1386.07 350.415 1357.9 371.471 1349.12 351.992C1344.83 342.47 1348.8 324.029 1362 322.117ZM1396.48 331.295C1391.46 335.591 1386.43 339.897 1381.41 344.194C1348.8 336.074 1347.94 338.95 1381.33 346.242C1388.17 341.105 1401.11 330.667 1396.48 331.295Z\",\n    fill: \"#939393\"\n  })), _path428 || (_path428 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1435.97 326.257C1446.17 335.598 1433.35 330.058 1419.96 334.004C1408.12 337.492 1399.46 352.161 1402.41 338.12C1405.06 325.453 1425.67 327.206 1435.97 326.257Z\",\n    fill: \"#939393\"\n  })), _path429 || (_path429 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1440.42 327.413C1443.01 328.173 1445.61 328.923 1448.2 329.683C1453.73 336.235 1435.37 329.658 1440.42 327.413Z\",\n    fill: \"#939393\"\n  })), _path430 || (_path430 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1499.88 329.095C1502.83 330.563 1492.62 341.416 1499.54 338.311C1497.67 346.182 1502.63 338.204 1502.22 341.974C1501.53 348.228 1492.75 344.033 1489.11 347.241C1486.94 345.836 1498.09 331.833 1499.88 329.095Z\",\n    fill: \"#939393\"\n  })), _path431 || (_path431 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1396.48 331.291C1401.1 330.663 1388.17 341.101 1381.33 346.237C1347.94 338.946 1348.8 336.07 1381.41 344.189C1386.43 339.893 1391.46 335.587 1396.48 331.291Z\",\n    fill: \"#939393\"\n  })), _path432 || (_path432 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1426.66 335.221L1440.12 335.602C1453.74 337.177 1493.07 356.538 1504.72 365.622C1507.02 378.07 1507.05 393.672 1519.12 401.907C1510.01 400.111 1500.92 398.316 1491.81 396.52C1482.97 402.758 1474.14 409.007 1465.29 415.245C1456.59 417.735 1447.9 420.216 1439.19 422.706C1432.19 393.642 1384.41 415.219 1354.68 399.81C1352.33 396.402 1370.92 383.859 1377.39 377.39C1388.92 365.856 1409.44 337.398 1426.66 335.221ZM1398.69 363.13C1405.68 366.403 1412.68 369.677 1419.67 372.95C1427.02 376.623 1424.58 382.725 1435.84 375.971C1424.45 379.492 1418.14 365.864 1398.69 363.13ZM1493.71 375.048C1488.28 386.733 1486.46 400.336 1491.38 392.92C1491.91 392.115 1496.32 373.656 1493.71 375.048ZM1462.22 376.206C1450.9 397.36 1452.19 410.497 1458.69 396.094C1459.87 389.465 1461.05 382.835 1462.22 376.206ZM1502.61 377.35C1494.11 388.293 1494.43 399.998 1500.61 386.007C1501.28 383.124 1501.95 380.232 1502.61 377.35ZM1464.39 378.317C1461.44 388.884 1458.01 399.663 1463.22 395.198C1463.97 394.553 1467.29 376.954 1464.39 378.317ZM1432.79 382.547C1423.63 396.311 1426.37 411.252 1430.57 397.348C1431.31 392.418 1432.05 387.477 1432.79 382.547ZM1443.87 402.337C1444.77 403.05 1445.69 403.752 1446.6 404.465C1456.53 383.425 1455.29 376.737 1443.87 402.337C1447.04 374.956 1443.74 380.92 1435.99 402.627C1436.91 403.165 1437.83 403.704 1438.74 404.242C1441.81 396.395 1441.31 402.931 1442.15 403.314C1442.72 402.991 1443.29 402.659 1443.87 402.337ZM1438.29 385.778C1427.87 406.692 1430.16 412.22 1436.07 400.579C1436.81 395.649 1437.55 390.708 1438.29 385.778Z\",\n    fill: \"#939393\"\n  })), _path433 || (_path433 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1315.11 345.389C1325.36 346.53 1335.61 347.682 1345.86 348.823C1346.19 350.195 1346.52 351.578 1346.84 352.951C1359.82 367.803 1345.53 363.882 1352.84 388.486C1333.53 390.727 1328.54 379.709 1319.56 377.292C1295.51 370.819 1291.93 383.479 1303.12 350.687C1307.12 348.924 1311.11 347.152 1315.11 345.389ZM1319.18 356.78C1304.8 366.756 1307.1 369.989 1319.11 358.828C1349.9 362.458 1352.51 358.862 1319.18 356.78Z\",\n    fill: \"#939393\"\n  })), _path434 || (_path434 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1394.68 349.692L1396.31 351.275C1383.52 364.197 1373.31 379.581 1357.29 389.634C1343.4 355.455 1363.65 364.844 1379.76 358.494C1384.73 355.56 1389.71 352.626 1394.68 349.692Z\",\n    fill: \"#939393\"\n  })), _path435 || (_path435 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1319.18 356.78C1352.51 358.862 1349.9 362.457 1319.11 358.828C1307.1 369.988 1304.8 366.756 1319.18 356.78Z\",\n    fill: \"#939393\"\n  })), _path436 || (_path436 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1398.69 363.13C1418.14 365.864 1424.45 379.491 1435.84 375.97C1424.58 382.724 1427.02 376.622 1419.67 372.949C1412.68 369.676 1405.68 366.403 1398.69 363.13Z\",\n    fill: \"#939393\"\n  })), _path437 || (_path437 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1589.18 313.171C1598.19 312.791 1606.26 314.752 1614.25 318.494C1609.07 337.813 1619.17 364.894 1607.45 381.855C1605.26 385.043 1579.76 397.574 1573.22 412.15C1571.28 408.845 1569.34 405.551 1567.4 402.247C1557.9 393.152 1523.71 414.868 1514.11 385.361L1508.5 354.45C1508.76 343.899 1516.62 330.991 1529.05 329.918C1545.75 328.485 1546.35 342.033 1565.43 317.623C1573.35 316.136 1581.26 314.659 1589.18 313.171ZM1601.37 317.617C1600.16 325.27 1598.94 332.924 1597.73 340.577C1601.5 334.267 1607.58 352.194 1606.59 343.904C1604.8 341.465 1603.03 339.016 1601.24 336.577C1598.84 326.401 1607.33 343.884 1607.9 338.815C1608.02 337.722 1600.19 330.868 1603.03 318.176C1602.48 317.986 1601.92 317.807 1601.37 317.617ZM1596.88 348.241C1595.7 348.751 1594.31 356.656 1581.59 367.284C1590.76 363.997 1603.07 345.598 1596.88 348.241ZM1609.11 351.663C1605.24 360.266 1601.38 368.87 1597.5 377.473C1596.5 388.741 1610.4 368.49 1609.11 351.663ZM1587.24 381.795C1587.75 383.173 1588.26 384.561 1588.77 385.939C1594.87 375.359 1597.45 358.641 1589.71 375.715C1597.07 350.871 1578.35 388.216 1577.91 391.269C1576.41 401.795 1581.33 397.137 1587.24 381.795ZM1573.59 371.158C1554.55 388.608 1540.39 377.7 1527.33 377.022C1517.21 376.5 1526.7 380.193 1543.43 382.091C1530.3 393.108 1534.54 395.709 1545.09 382.651C1555.58 384.404 1569.23 380.219 1573.59 371.158ZM1578.04 372.309C1576.16 377.555 1574.29 382.792 1572.41 388.038C1573.82 372.415 1567.37 386.501 1566.65 391.975C1564.4 409.194 1582.4 381.72 1578.04 372.309Z\",\n    fill: \"#939393\"\n  })), _path438 || (_path438 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1601.37 317.617C1601.92 317.807 1602.48 317.986 1603.03 318.176C1600.19 330.868 1608.01 337.722 1607.9 338.815C1607.33 343.883 1598.84 326.401 1601.24 336.576C1603.03 339.015 1604.8 341.464 1606.59 343.903C1607.58 352.193 1601.5 334.267 1597.73 340.577C1598.94 332.923 1600.16 325.27 1601.37 317.617Z\",\n    fill: \"#939393\"\n  })), _path439 || (_path439 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1596.88 348.244C1603.07 345.6 1590.76 364 1581.59 367.286C1594.31 356.658 1595.7 348.754 1596.88 348.244Z\",\n    fill: \"#939393\"\n  })), _path440 || (_path440 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1609.11 351.662C1610.4 368.489 1596.5 388.739 1597.51 377.472C1601.38 368.869 1605.24 360.265 1609.11 351.662Z\",\n    fill: \"#939393\"\n  })), _path441 || (_path441 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1589.71 375.716C1588.88 377.742 1588.07 379.769 1587.24 381.796C1581.34 397.138 1576.42 401.795 1577.91 391.27C1578.35 388.217 1597.07 350.872 1589.71 375.716Z\",\n    fill: \"#939393\"\n  })), _path442 || (_path442 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1587.24 381.793C1588.07 379.767 1588.88 377.74 1589.71 375.713C1597.45 358.64 1594.87 375.357 1588.77 385.937C1588.26 384.559 1587.75 383.171 1587.24 381.793Z\",\n    fill: \"#939393\"\n  })), _path443 || (_path443 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1573.59 371.158C1569.23 380.219 1555.57 384.404 1545.09 382.652C1534.54 395.709 1530.3 393.109 1543.43 382.092C1526.7 380.193 1517.21 376.501 1527.33 377.023C1540.39 377.701 1554.55 388.609 1573.59 371.158Z\",\n    fill: \"#939393\"\n  })), _path444 || (_path444 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1578.04 372.31C1582.4 381.72 1564.4 409.194 1566.65 391.975C1567.37 386.501 1573.82 372.416 1572.41 388.038C1574.29 382.792 1576.16 377.556 1578.04 372.31Z\",\n    fill: \"#939393\"\n  })), _path445 || (_path445 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1493.71 375.05C1496.32 373.658 1491.91 392.117 1491.38 392.922C1486.46 400.337 1488.28 386.735 1493.71 375.05Z\",\n    fill: \"#939393\"\n  })), _path446 || (_path446 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1462.22 376.207C1461.05 382.836 1459.87 389.466 1458.69 396.095C1452.19 410.497 1450.9 397.361 1462.22 376.207Z\",\n    fill: \"#939393\"\n  })), _path447 || (_path447 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1502.61 377.351C1501.95 380.233 1501.28 383.125 1500.61 386.007C1494.43 399.998 1494.11 388.293 1502.61 377.351Z\",\n    fill: \"#939393\"\n  })), _path448 || (_path448 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1464.39 378.321C1467.28 376.958 1463.97 394.556 1463.22 395.201C1458.01 399.666 1461.44 388.887 1464.39 378.321Z\",\n    fill: \"#939393\"\n  })), _path449 || (_path449 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1640.45 385.358C1661.16 387.923 1721.16 400.878 1734.95 411.612C1750.88 423.995 1744.07 463.995 1747.54 482.185C1738.71 483.135 1729.88 484.073 1721.05 485.022C1709.99 490.521 1698.94 496.01 1687.88 501.509L1667.8 497.864C1650.29 504.81 1632.18 499.643 1613.57 506.579C1585.15 494.17 1563.05 513.624 1546.48 498.527C1536.39 489.323 1544.85 470.61 1552.86 462.318C1566.4 455.68 1567.49 442.16 1578.62 433.321C1585.05 421.203 1591.49 409.085 1597.92 396.966C1613.72 379.865 1622.76 393.836 1640.45 385.358Z\",\n    fill: \"#939393\"\n  })), _path450 || (_path450 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1432.79 382.549C1432.05 387.479 1431.31 392.419 1430.57 397.349C1426.37 411.253 1423.63 396.312 1432.79 382.549Z\",\n    fill: \"#939393\"\n  })), _path451 || (_path451 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1443.86 402.337C1443.29 402.659 1442.72 402.991 1442.14 403.313C1441.3 402.93 1441.81 396.395 1438.74 404.241C1437.83 403.703 1436.9 403.164 1435.99 402.626C1443.73 380.92 1447.04 374.955 1443.86 402.337Z\",\n    fill: \"#939393\"\n  })), _path452 || (_path452 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1443.86 402.338C1455.29 376.738 1456.53 383.426 1446.59 404.465C1445.69 403.753 1444.77 403.05 1443.86 402.338Z\",\n    fill: \"#939393\"\n  })), _path453 || (_path453 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1438.29 385.783C1437.55 390.713 1436.81 395.653 1436.07 400.583C1430.16 412.224 1427.87 406.696 1438.29 385.783Z\",\n    fill: \"#939393\"\n  })), _path454 || (_path454 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1315.82 402.809C1317.01 402.095 1326.68 390.55 1321.28 391.688C1319.71 392.023 1320.32 403.849 1302.38 401.916C1304.5 404.723 1309.45 403.264 1313.54 403.77C1308.25 405.096 1305.54 409.324 1297.16 406.381C1290.58 404.072 1298.94 390.635 1307.93 388.235C1320.58 384.852 1349.95 395.863 1342.33 399.46C1333.24 398.434 1324.57 400.894 1315.82 402.809Z\",\n    fill: \"#939393\"\n  })), _path455 || (_path455 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1315.82 402.81L1313.54 403.77C1309.45 403.265 1304.5 404.724 1302.38 401.917C1320.32 403.85 1319.71 392.024 1321.28 391.689C1326.68 390.551 1317.01 402.096 1315.82 402.81Z\",\n    fill: \"#939393\"\n  })), _path456 || (_path456 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1347.87 401.671C1356.4 403.963 1364.92 406.255 1373.45 408.546C1389.19 410.991 1428.39 406.485 1434.09 424.103C1437.85 435.762 1420.4 434.601 1420.2 450.873C1403.78 434.694 1365.47 448.616 1341.78 445.576C1326.83 443.656 1320.84 431.975 1306.03 440.463C1292.56 448.169 1296.57 473.489 1254.4 454.889C1273.11 439.869 1291.8 424.858 1310.51 409.838C1318.45 405.635 1338.88 401.232 1347.87 401.671ZM1425.77 421.304C1421.94 433.281 1423.58 420.525 1420.51 426.793C1419.41 431.375 1418.3 435.956 1417.2 440.538C1421.05 434.609 1427.28 428.728 1425.77 421.304ZM1367.24 424.772C1357.1 425.899 1346.06 436.933 1352.17 437.67C1353.94 437.884 1362.85 422.064 1383.34 429.84C1371.59 449.629 1387.9 433.229 1384.57 426.8C1378.79 426.124 1373.02 425.448 1367.24 424.772ZM1416.6 426.17C1415.16 429.717 1413.73 433.264 1412.29 436.811C1411.07 446.945 1417.63 439.043 1416.6 426.17Z\",\n    fill: \"#939393\"\n  })), _path457 || (_path457 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1425.77 421.305C1427.28 428.728 1421.05 434.609 1417.2 440.538C1418.3 435.956 1419.41 431.375 1420.51 426.793C1423.58 420.525 1421.94 433.281 1425.77 421.305Z\",\n    fill: \"#939393\"\n  })), _path458 || (_path458 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1367.24 424.773C1373.02 425.449 1378.79 426.125 1384.57 426.801C1387.9 433.23 1371.59 449.63 1383.34 429.842C1362.85 422.065 1353.94 437.885 1352.17 437.671C1346.06 436.934 1357.1 425.9 1367.24 424.773Z\",\n    fill: \"#939393\"\n  })), _path459 || (_path459 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1416.6 426.174C1417.63 439.047 1411.07 446.949 1412.29 436.815C1413.73 433.268 1415.16 429.721 1416.6 426.174Z\",\n    fill: \"#939393\"\n  })), _path460 || (_path460 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1493.86 401.704C1516.48 406.957 1538.39 412.919 1561.14 404.635C1582.4 442.263 1520.47 467.969 1494.06 488.839C1484.86 472.926 1466.58 479.656 1465.45 472.653C1459.69 476.887 1447.53 469.593 1431.64 475.795C1429.86 468.395 1428.06 461.005 1426.27 453.604C1425.18 438.956 1435.75 442.269 1444.69 425.937C1464.59 425.814 1479.27 412.474 1493.86 401.704ZM1532.16 429.44C1518.66 431.221 1494.6 456.463 1467.43 449.133C1467.22 449.639 1467.02 450.146 1466.81 450.653C1492.55 457.112 1501.85 444.204 1521.84 435.298C1528.5 432.33 1547.84 427.374 1532.16 429.44ZM1530.62 440.673C1527.74 448.105 1524.84 455.546 1521.95 462.978C1527.2 465.741 1533.01 444.554 1530.62 440.673ZM1521.31 449.634C1511.81 466.381 1507.53 479.073 1516.77 466.419C1518.45 464.119 1523.31 452.807 1521.31 449.634ZM1506.69 450.245C1484.78 493.23 1509.07 464.243 1508.32 451.829L1506.69 450.245ZM1512.3 450.404C1502.22 466.202 1503.17 477.279 1507.68 469.237C1509.23 462.956 1510.76 456.685 1512.3 450.404ZM1499.85 453.126C1482.77 476.813 1492.7 474.358 1497.81 462.807C1498.49 459.577 1499.17 456.357 1499.85 453.126Z\",\n    fill: \"#939393\"\n  })), _path461 || (_path461 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1532.16 429.437C1547.84 427.37 1528.5 432.326 1521.84 435.295C1501.85 444.2 1492.55 457.108 1466.81 450.649C1467.02 450.142 1467.22 449.635 1467.43 449.129C1494.59 456.459 1518.66 431.217 1532.16 429.437Z\",\n    fill: \"#939393\"\n  })), _path462 || (_path462 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1530.62 440.673C1533.01 444.554 1527.2 465.741 1521.95 462.978C1524.84 455.547 1527.74 448.105 1530.62 440.673Z\",\n    fill: \"#939393\"\n  })), _path463 || (_path463 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1521.31 449.633C1523.31 452.805 1518.45 464.117 1516.77 466.417C1507.53 479.071 1511.81 466.379 1521.31 449.633Z\",\n    fill: \"#939393\"\n  })), _path464 || (_path464 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1506.69 450.251L1508.32 451.834C1509.07 464.248 1484.78 493.235 1506.69 450.251Z\",\n    fill: \"#939393\"\n  })), _path465 || (_path465 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1512.3 450.403C1510.76 456.684 1509.23 462.955 1507.68 469.236C1503.17 477.277 1502.22 466.201 1512.3 450.403Z\",\n    fill: \"#939393\"\n  })), _path466 || (_path466 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1499.85 453.127C1499.17 456.357 1498.49 459.577 1497.81 462.807C1492.7 474.358 1482.77 476.814 1499.85 453.127Z\",\n    fill: \"#939393\"\n  })), _path467 || (_path467 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1316.12 440.743C1320.31 440.534 1337.1 454.069 1353.85 453.088C1363.63 447.574 1405.72 445.404 1413.5 449.653C1421.01 453.761 1427.42 475.346 1426.53 477.186C1425.6 479.148 1410.64 480.272 1409.05 479.254C1408.14 478.664 1404.32 458.003 1406.27 478.662C1400.24 481.105 1405.08 474.118 1401.65 466.743L1399.46 480.519L1397.22 480.456C1393.28 457.537 1396.37 486.172 1392.8 478.281L1392.58 484.425C1371.9 496.027 1374.45 500.947 1379.58 486.619C1375.24 492.646 1370.91 498.674 1366.57 504.702C1359.65 506.914 1333.7 492.915 1325.55 490.213C1316.38 487.176 1296.4 486.61 1295.01 480.635C1293.38 473.608 1302.17 441.455 1316.12 440.743ZM1403.07 458.583C1395.63 462.298 1388.2 466.024 1380.76 469.739C1381.65 476.704 1417.54 457.322 1403.07 458.583ZM1353.18 471.52C1356.59 477.295 1377.36 478.848 1372.1 476.157C1365.79 474.614 1359.49 473.062 1353.18 471.52ZM1358.46 496.271C1356.34 504.945 1361.89 496.655 1368.78 490.413C1357.38 511.012 1380.14 483.365 1377.49 482.46C1375.36 484.449 1373.22 486.439 1371.1 488.429C1378.79 476.582 1368.2 485.989 1363.17 490.254C1365.15 487.409 1367.12 484.554 1369.09 481.709C1368.54 481.519 1367.99 481.339 1367.43 481.149C1353 494.384 1349.17 504.28 1358.46 496.271Z\",\n    fill: \"#939393\"\n  })), _path468 || (_path468 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1403.07 458.578C1417.54 457.317 1381.65 476.699 1380.76 469.734C1388.2 466.019 1395.63 462.293 1403.07 458.578Z\",\n    fill: \"#939393\"\n  })), _path469 || (_path469 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1353.18 471.521C1359.49 473.063 1365.79 474.616 1372.1 476.158C1377.36 478.849 1356.59 477.297 1353.18 471.521Z\",\n    fill: \"#939393\"\n  })), _path470 || (_path470 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1363.17 490.258C1361.6 492.264 1360.02 494.269 1358.46 496.275C1349.17 504.284 1353 494.388 1367.43 481.153C1367.98 481.343 1368.54 481.523 1369.09 481.713C1367.11 484.558 1365.15 487.413 1363.17 490.258Z\",\n    fill: \"#939393\"\n  })), _path471 || (_path471 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1371.1 488.429C1370.32 489.093 1369.55 489.748 1368.78 490.413C1361.89 496.655 1356.34 504.944 1358.46 496.271C1360.02 494.265 1361.6 492.26 1363.17 490.254C1368.2 485.989 1378.79 476.582 1371.1 488.429Z\",\n    fill: \"#939393\"\n  })), _path472 || (_path472 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1368.78 490.417C1369.55 489.752 1370.32 489.098 1371.1 488.433C1373.22 486.443 1375.36 484.454 1377.49 482.464C1380.14 483.369 1357.38 511.015 1368.78 490.417Z\",\n    fill: \"#939393\"\n  })), _path473 || (_path473 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1216.76 455.347C1237.42 452.98 1260.7 464.711 1280.26 469.447C1271.41 476.033 1262.56 482.61 1253.71 489.196C1253.43 489.25 1252.54 484.325 1250.35 489.101C1245.94 480.581 1245.17 493.413 1243.28 498.126C1242.6 495.903 1241.75 481.61 1239.35 482.639C1242.75 515.004 1232.73 507.647 1219.27 509.747C1192.72 513.894 1165.79 520.481 1138.7 517.202C1162.49 497.733 1166.3 476.797 1196.27 462.967C1203.1 460.424 1209.93 457.891 1216.76 455.347ZM1231.98 469.104C1228.9 471.405 1225.83 473.717 1222.75 476.018C1219.97 477.231 1194.64 483.114 1195.99 486.023C1209.41 481.914 1225.01 479.608 1234.77 469.696C1233.84 469.495 1232.91 469.305 1231.98 469.104ZM1227.05 481.265L1228 501.281L1230.25 501.344C1230.53 498.79 1230.8 496.235 1231.09 493.68C1231.77 493.7 1230.77 504.024 1234.15 501.968C1236.04 500.822 1231.61 479.324 1228.52 486.945C1228.03 485.055 1227.54 483.155 1227.05 481.265ZM1234.86 482.512C1233.88 504.297 1239.72 508.266 1238.43 492.351C1237.24 489.068 1236.06 485.795 1234.86 482.512ZM1223.46 487.314C1221.04 502.232 1228.34 510.547 1226.02 494.049C1225.17 491.801 1224.31 489.562 1223.46 487.314Z\",\n    fill: \"#939393\"\n  })), _path474 || (_path474 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1231.98 469.105C1232.91 469.305 1233.84 469.496 1234.77 469.696C1225.01 479.609 1209.41 481.914 1195.99 486.023C1194.64 483.115 1219.97 477.231 1222.75 476.018C1225.83 473.717 1228.9 471.406 1231.98 469.105Z\",\n    fill: \"#939393\"\n  })), _path475 || (_path475 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1227.05 481.264C1227.54 483.153 1228.03 485.053 1228.52 486.943C1231.61 479.322 1236.04 500.82 1234.15 501.966C1230.77 504.022 1231.77 493.698 1231.09 493.679C1230.8 496.233 1230.53 498.788 1230.25 501.343L1228 501.279L1227.05 481.264Z\",\n    fill: \"#939393\"\n  })), _path476 || (_path476 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1234.86 482.511C1236.06 485.794 1237.24 489.067 1238.43 492.35C1239.72 508.265 1233.88 504.296 1234.86 482.511Z\",\n    fill: \"#939393\"\n  })), _path477 || (_path477 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1223.46 487.316C1224.31 489.565 1225.17 491.803 1226.02 494.052C1228.34 510.549 1221.04 502.234 1223.46 487.316Z\",\n    fill: \"#939393\"\n  })), _path478 || (_path478 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1277.57 481.682C1282.75 483.541 1287.91 485.389 1293.09 487.247C1303.86 489.603 1314.62 491.958 1325.4 494.313C1338.77 498.649 1350.71 507.649 1365.3 508.769C1372.39 547.943 1371.96 524.908 1319.49 533.098C1283.27 533.179 1278.45 520.465 1245.9 518.712C1250.28 506.843 1261.47 482.22 1277.57 481.682ZM1276.93 499.09C1286.54 502.776 1296.13 506.471 1305.73 510.157C1294.17 523.114 1307.27 508.53 1318.58 512.058C1304.69 507.739 1290.81 503.409 1276.93 499.09Z\",\n    fill: \"#939393\"\n  })), _path479 || (_path479 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1276.93 499.09C1290.81 503.409 1304.69 507.739 1318.57 512.058C1307.27 508.529 1294.17 523.113 1305.73 510.156C1296.13 506.471 1286.54 502.776 1276.93 499.09Z\",\n    fill: \"#939393\"\n  })), _path480 || (_path480 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1449.52 478.349C1455.19 478.376 1485.63 483.769 1487.9 488.149C1489.35 490.927 1483.67 521.805 1482.07 524.886C1476.49 535.666 1453.96 529.369 1443.01 533.518C1424.88 530.001 1416.09 525.569 1402.37 539.541C1392.87 538.073 1383.38 536.615 1373.89 535.147C1374.35 507.504 1372.97 498.034 1402.1 485.206C1418.17 489.659 1434.74 478.268 1449.52 478.349ZM1462.27 498.186C1460 498.809 1457.73 499.421 1455.46 500.044C1453.61 500.114 1425.17 498.98 1426.76 501.793C1448.9 503.784 1472.87 497.974 1462.27 498.186ZM1383.37 506.201L1383.29 508.249C1418.6 516.487 1416.07 513.125 1383.37 506.201ZM1465.26 508.522C1450.84 523.212 1444.66 536.383 1456.23 525.179L1465.26 508.522ZM1455.09 510.284C1453.14 512.545 1442.97 525.993 1445.48 527.437C1448.87 526.682 1457 511.24 1455.09 510.284ZM1471.92 510.76C1454.76 528.11 1456.75 534.758 1466.44 522.393C1468.27 518.519 1470.09 514.635 1471.92 510.76ZM1477.53 510.919C1472.88 519.654 1465.9 526.222 1469.08 527.081C1471.21 527.141 1479.9 513.898 1477.53 510.919ZM1445.93 515.149C1443.81 516.965 1441.68 518.791 1439.55 520.606C1429.66 532.729 1443.76 524.395 1445.93 515.149ZM1427.79 519.761C1422.88 520.616 1428.14 524.096 1428.19 524.385C1427.77 525.736 1427.33 527.097 1426.91 528.449C1430 533.292 1432.22 518.994 1427.79 519.761Z\",\n    fill: \"#939393\"\n  })), _path481 || (_path481 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1462.27 498.188C1472.87 497.976 1448.9 503.785 1426.76 501.795C1425.17 498.982 1453.61 500.116 1455.46 500.045C1457.73 499.423 1460 498.81 1462.27 498.188Z\",\n    fill: \"#939393\"\n  })), _path482 || (_path482 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1383.37 506.2C1416.07 513.123 1418.6 516.485 1383.29 508.248L1383.37 506.2Z\",\n    fill: \"#939393\"\n  })), _path483 || (_path483 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1465.26 508.524L1456.23 525.181C1444.66 536.385 1450.84 523.214 1465.26 508.524Z\",\n    fill: \"#939393\"\n  })), _path484 || (_path484 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1455.09 510.286C1457 511.242 1448.87 526.685 1445.48 527.44C1442.97 525.995 1453.15 512.548 1455.09 510.286Z\",\n    fill: \"#939393\"\n  })), _path485 || (_path485 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1471.92 510.762C1470.09 514.636 1468.27 518.521 1466.44 522.395C1456.75 534.759 1454.76 528.112 1471.92 510.762Z\",\n    fill: \"#939393\"\n  })), _path486 || (_path486 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1477.53 510.916C1479.9 513.894 1471.21 527.137 1469.08 527.077C1465.9 526.218 1472.88 519.651 1477.53 510.916Z\",\n    fill: \"#939393\"\n  })), _path487 || (_path487 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1445.93 515.15C1443.76 524.396 1429.66 532.73 1439.55 520.607C1441.68 518.791 1443.81 516.966 1445.93 515.15Z\",\n    fill: \"#939393\"\n  })), _path488 || (_path488 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1427.79 519.759C1432.22 518.993 1429.99 533.289 1426.91 528.446C1427.33 527.095 1427.77 525.734 1428.19 524.383C1428.14 524.094 1422.88 520.614 1427.79 519.759Z\",\n    fill: \"#939393\"\n  })), _path489 || (_path489 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1456.78 571.838L1416.39 570.694C1422.01 561.432 1430.47 562.431 1439.48 553.409C1455.42 526.953 1456.87 541.396 1482.09 539.753C1493.76 561.374 1480.42 557.706 1471.17 561.995C1466.37 565.273 1461.58 568.561 1456.78 571.838Z\",\n    fill: \"#939393\"\n  })), _path490 || (_path490 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1741.74 579.914L1673.3 577.975C1664.97 571.271 1654.01 570.53 1645.26 577.181L1499.41 573.048C1502.16 562.117 1490.97 565.798 1489.31 572.762C1487.22 573.338 1486.35 573.047 1485.95 572.667C1483.56 570.416 1493.75 561.561 1495.27 548.258C1495.68 544.671 1495.37 541.659 1495.01 539.609C1516.71 524.663 1546.49 533.8 1570.31 522.779L1641.21 518.638C1655.92 515.641 1670.63 512.634 1685.34 509.637C1704.48 508.14 1736.42 510.705 1744.71 529.258C1752.84 547.447 1740.35 561.619 1741.74 579.914Z\",\n    fill: \"#939393\"\n  })), _path491 || (_path491 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1499.41 573.047L1489.31 572.761C1490.97 565.797 1502.16 562.116 1499.41 573.047Z\",\n    fill: \"#939393\"\n  })), _path492 || (_path492 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1673.3 577.976L1645.26 577.181C1654.01 570.531 1664.97 571.272 1673.3 577.976Z\",\n    fill: \"#939393\"\n  })), _path493 || (_path493 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1555.67 246.627C1583.41 243.507 1637.89 260.499 1640.35 280.291C1639.38 286.414 1638.41 292.537 1637.44 298.659L1618.42 311.959C1597.88 307.738 1574.47 306.664 1556.42 318.403C1545.04 312.268 1533.65 306.144 1522.28 300.009C1516.88 297.642 1504.43 295.619 1506.79 293.42C1525.55 282.174 1528.78 249.648 1555.67 246.627ZM1617.78 267.863C1612.63 268.004 1577.15 296.459 1619.45 268.423C1618.89 268.233 1618.34 268.053 1617.78 267.863ZM1630.05 270.261C1617.52 296.281 1625.39 309.327 1625.51 287.046C1628.58 282.192 1632.99 275.142 1630.05 270.261ZM1620.92 274.103C1615 275.206 1614.21 312.096 1618.55 292.999L1618.92 282.759C1619.03 282.27 1626.09 273.142 1620.92 274.103ZM1550.17 274.148C1553.86 275.616 1557.55 277.094 1561.24 278.562C1559.69 273.772 1570.82 283.149 1571.41 276.8C1577.95 277.159 1584.49 277.509 1591.03 277.868C1577.4 276.631 1563.79 275.385 1550.17 274.148ZM1611.87 275.896L1607.61 300.377C1612.11 303.241 1613.32 276.696 1611.87 275.896ZM1605.03 278.778C1601.25 279.849 1594.2 310.022 1601.54 297.642C1600.74 287.738 1608.8 277.716 1605.03 278.778ZM1584.73 281.277L1576.26 282.575C1580.36 283.03 1584.45 283.494 1588.56 283.949C1583.3 290.063 1577.92 306.229 1581.62 304.766C1583.79 297.98 1587.61 285.08 1593.08 283.052L1584.73 281.277ZM1597.07 281.627C1594.03 287.866 1591 294.094 1587.96 300.333C1585.09 312.337 1596.08 293.408 1597.07 281.627Z\",\n    fill: \"#939393\"\n  })), _path494 || (_path494 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1617.78 267.865C1618.34 268.055 1618.89 268.234 1619.45 268.424C1577.15 296.46 1612.63 268.006 1617.78 267.865Z\",\n    fill: \"#939393\"\n  })), _path495 || (_path495 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1630.05 270.259C1632.99 275.14 1628.58 282.19 1625.51 287.044C1625.39 309.325 1617.52 296.278 1630.05 270.259Z\",\n    fill: \"#939393\"\n  })), _path496 || (_path496 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1620.92 274.099C1626.09 273.138 1619.03 282.266 1618.92 282.755L1618.55 292.995C1614.2 312.091 1615 275.202 1620.92 274.099Z\",\n    fill: \"#939393\"\n  })), _path497 || (_path497 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1550.17 274.146C1563.79 275.382 1577.4 276.629 1591.02 277.866C1584.49 277.506 1577.94 277.157 1571.41 276.797C1570.82 283.146 1559.68 273.769 1561.24 278.559C1557.55 277.092 1553.86 275.613 1550.17 274.146Z\",\n    fill: \"#939393\"\n  })), _path498 || (_path498 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1611.87 275.895C1613.32 276.694 1612.11 303.239 1607.61 300.375L1611.87 275.895Z\",\n    fill: \"#939393\"\n  })), _path499 || (_path499 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1605.03 278.777C1608.8 277.715 1600.74 287.737 1601.54 297.641C1594.2 310.021 1601.25 279.849 1605.03 278.777Z\",\n    fill: \"#939393\"\n  })), _path500 || (_path500 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1584.72 281.279L1593.08 283.054C1587.61 285.082 1583.79 297.981 1581.62 304.767C1577.92 306.231 1583.3 290.065 1588.56 283.95C1584.45 283.496 1580.36 283.031 1576.25 282.577L1584.72 281.279Z\",\n    fill: \"#939393\"\n  })), _path501 || (_path501 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1597.06 281.626C1596.07 293.407 1585.09 312.335 1587.96 300.332C1591 294.093 1594.03 287.865 1597.06 281.626Z\",\n    fill: \"#939393\"\n  })), _path502 || (_path502 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1657.05 299.722C1702.9 305.767 1733.63 290.483 1740.84 327.21C1741.57 337.82 1742.31 348.44 1743.05 359.049C1741.63 375.246 1736.92 357.758 1727.92 358.108C1721.14 358.367 1705.88 374.213 1690.23 375.491C1666.14 377.464 1652.9 359.816 1627.89 360.399C1621.12 356.035 1625.61 345.932 1617.81 344.225C1623.38 314.503 1615.72 309.909 1657.05 299.722Z\",\n    fill: \"#939393\"\n  })), _path503 || (_path503 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1498.72 299.341C1507.25 296.343 1545.91 312.712 1545.74 318.612C1543.95 321.462 1542.16 324.322 1540.38 327.173C1516.32 324.667 1505.43 337.653 1503.32 357.9C1487.68 348.262 1471.34 339.209 1453.08 334.437C1459.83 301.376 1470.49 308.187 1498.72 299.341ZM1499.88 329.1C1498.09 331.838 1486.94 345.842 1489.11 347.246C1492.75 344.039 1501.53 348.234 1502.22 341.98C1502.63 338.209 1497.67 346.187 1499.54 338.316C1492.62 341.421 1502.83 330.568 1499.88 329.1Z\",\n    fill: \"#939393\"\n  })), _path504 || (_path504 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1454.44 312.435C1455 312.625 1455.55 312.805 1456.1 312.995C1454.04 318.062 1452 323.129 1449.94 328.195C1448.85 329.118 1429.04 325.246 1454.44 312.435Z\",\n    fill: \"#939393\"\n  })), _path505 || (_path505 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1362 322.117C1369.14 321.09 1398.28 327.43 1399.96 328.318C1406.18 331.621 1396.99 334.077 1398.74 346.222C1386.07 350.415 1357.9 371.471 1349.12 351.992C1344.83 342.47 1348.8 324.029 1362 322.117ZM1396.48 331.295C1391.46 335.591 1386.43 339.897 1381.41 344.194C1348.8 336.074 1347.94 338.95 1381.33 346.242C1388.17 341.105 1401.11 330.667 1396.48 331.295Z\",\n    fill: \"#939393\"\n  })), _path506 || (_path506 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1435.97 326.257C1446.17 335.598 1433.35 330.058 1419.96 334.004C1408.12 337.492 1399.46 352.161 1402.41 338.12C1405.06 325.453 1425.67 327.206 1435.97 326.257Z\",\n    fill: \"#939393\"\n  })), _path507 || (_path507 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1440.42 327.413C1443.01 328.173 1445.61 328.923 1448.2 329.683C1453.73 336.235 1435.37 329.658 1440.42 327.413Z\",\n    fill: \"#939393\"\n  })), _path508 || (_path508 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1499.88 329.095C1502.83 330.563 1492.62 341.416 1499.54 338.311C1497.67 346.182 1502.63 338.204 1502.22 341.974C1501.53 348.228 1492.75 344.033 1489.11 347.241C1486.94 345.836 1498.09 331.833 1499.88 329.095Z\",\n    fill: \"#939393\"\n  })), _path509 || (_path509 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1396.48 331.291C1401.1 330.663 1388.17 341.101 1381.33 346.237C1347.94 338.946 1348.8 336.07 1381.41 344.189C1386.43 339.893 1391.46 335.587 1396.48 331.291Z\",\n    fill: \"#939393\"\n  })), _path510 || (_path510 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1426.66 335.221L1440.12 335.602C1453.74 337.177 1493.07 356.538 1504.72 365.622C1507.02 378.07 1507.05 393.672 1519.12 401.907C1510.01 400.111 1500.92 398.316 1491.81 396.52C1482.97 402.758 1474.14 409.007 1465.29 415.245C1456.59 417.735 1447.9 420.216 1439.19 422.706C1432.19 393.642 1384.41 415.219 1354.68 399.81C1352.33 396.402 1370.92 383.859 1377.39 377.39C1388.92 365.856 1409.44 337.398 1426.66 335.221ZM1398.69 363.13C1405.68 366.403 1412.68 369.677 1419.67 372.95C1427.02 376.623 1424.58 382.725 1435.84 375.971C1424.45 379.492 1418.14 365.864 1398.69 363.13ZM1493.71 375.048C1488.28 386.733 1486.46 400.336 1491.38 392.92C1491.91 392.115 1496.32 373.656 1493.71 375.048ZM1462.22 376.206C1450.9 397.36 1452.19 410.497 1458.69 396.094C1459.87 389.465 1461.05 382.835 1462.22 376.206ZM1502.61 377.35C1494.11 388.293 1494.43 399.998 1500.61 386.007C1501.28 383.124 1501.95 380.232 1502.61 377.35ZM1464.39 378.317C1461.44 388.884 1458.01 399.663 1463.22 395.198C1463.97 394.553 1467.29 376.954 1464.39 378.317ZM1432.79 382.547C1423.63 396.311 1426.37 411.252 1430.57 397.348C1431.31 392.418 1432.05 387.477 1432.79 382.547ZM1443.87 402.337C1444.77 403.05 1445.69 403.752 1446.6 404.465C1456.53 383.425 1455.29 376.737 1443.87 402.337C1447.04 374.956 1443.74 380.92 1435.99 402.627C1436.91 403.165 1437.83 403.704 1438.74 404.242C1441.81 396.395 1441.31 402.931 1442.15 403.314C1442.72 402.991 1443.29 402.659 1443.87 402.337ZM1438.29 385.778C1427.87 406.692 1430.16 412.22 1436.07 400.579C1436.81 395.649 1437.55 390.708 1438.29 385.778Z\",\n    fill: \"#939393\"\n  })), _path511 || (_path511 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1315.11 345.389C1325.36 346.53 1335.61 347.682 1345.86 348.823C1346.19 350.195 1346.52 351.578 1346.84 352.951C1359.82 367.803 1345.53 363.882 1352.84 388.486C1333.53 390.727 1328.54 379.709 1319.56 377.292C1295.51 370.819 1291.93 383.479 1303.12 350.687C1307.12 348.924 1311.11 347.152 1315.11 345.389ZM1319.18 356.78C1304.8 366.756 1307.1 369.989 1319.11 358.828C1349.9 362.458 1352.51 358.862 1319.18 356.78Z\",\n    fill: \"#939393\"\n  })), _path512 || (_path512 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1394.68 349.692L1396.31 351.275C1383.52 364.197 1373.31 379.581 1357.29 389.634C1343.4 355.455 1363.65 364.844 1379.76 358.494C1384.73 355.56 1389.71 352.626 1394.68 349.692Z\",\n    fill: \"#939393\"\n  })), _path513 || (_path513 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1319.18 356.78C1352.51 358.862 1349.9 362.457 1319.11 358.828C1307.1 369.988 1304.8 366.756 1319.18 356.78Z\",\n    fill: \"#939393\"\n  })), _path514 || (_path514 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1398.69 363.13C1418.14 365.864 1424.45 379.491 1435.84 375.97C1424.58 382.724 1427.02 376.622 1419.67 372.949C1412.68 369.676 1405.68 366.403 1398.69 363.13Z\",\n    fill: \"#939393\"\n  })), _path515 || (_path515 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1589.18 313.171C1598.19 312.791 1606.26 314.752 1614.25 318.494C1609.07 337.813 1619.17 364.894 1607.45 381.855C1605.26 385.043 1579.76 397.574 1573.22 412.15C1571.28 408.845 1569.34 405.551 1567.4 402.247C1557.9 393.152 1523.71 414.868 1514.11 385.361L1508.5 354.45C1508.76 343.899 1516.62 330.991 1529.05 329.918C1545.75 328.485 1546.35 342.033 1565.43 317.623C1573.35 316.136 1581.26 314.659 1589.18 313.171ZM1601.37 317.617C1600.16 325.27 1598.94 332.924 1597.73 340.577C1601.5 334.267 1607.58 352.194 1606.59 343.904C1604.8 341.465 1603.03 339.016 1601.24 336.577C1598.84 326.401 1607.33 343.884 1607.9 338.815C1608.02 337.722 1600.19 330.868 1603.03 318.176C1602.48 317.986 1601.92 317.807 1601.37 317.617ZM1596.88 348.241C1595.7 348.751 1594.31 356.656 1581.59 367.284C1590.76 363.997 1603.07 345.598 1596.88 348.241ZM1609.11 351.663C1605.24 360.266 1601.38 368.87 1597.5 377.473C1596.5 388.741 1610.4 368.49 1609.11 351.663ZM1587.24 381.795C1587.75 383.173 1588.26 384.561 1588.77 385.939C1594.87 375.359 1597.45 358.641 1589.71 375.715C1597.07 350.871 1578.35 388.216 1577.91 391.269C1576.41 401.795 1581.33 397.137 1587.24 381.795ZM1573.59 371.158C1554.55 388.608 1540.39 377.7 1527.33 377.022C1517.21 376.5 1526.7 380.193 1543.43 382.091C1530.3 393.108 1534.54 395.709 1545.09 382.651C1555.58 384.404 1569.23 380.219 1573.59 371.158ZM1578.04 372.309C1576.16 377.555 1574.29 382.792 1572.41 388.038C1573.82 372.415 1567.37 386.501 1566.65 391.975C1564.4 409.194 1582.4 381.72 1578.04 372.309Z\",\n    fill: \"#939393\"\n  })), _path516 || (_path516 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1601.37 317.617C1601.92 317.807 1602.48 317.986 1603.03 318.176C1600.19 330.868 1608.01 337.722 1607.9 338.815C1607.33 343.883 1598.84 326.401 1601.24 336.576C1603.03 339.015 1604.8 341.464 1606.59 343.903C1607.58 352.193 1601.5 334.267 1597.73 340.577C1598.94 332.923 1600.16 325.27 1601.37 317.617Z\",\n    fill: \"#939393\"\n  })), _path517 || (_path517 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1596.88 348.244C1603.07 345.6 1590.76 364 1581.59 367.286C1594.31 356.658 1595.7 348.754 1596.88 348.244Z\",\n    fill: \"#939393\"\n  })), _path518 || (_path518 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1609.11 351.662C1610.4 368.489 1596.5 388.739 1597.51 377.472C1601.38 368.869 1605.24 360.265 1609.11 351.662Z\",\n    fill: \"#939393\"\n  })), _path519 || (_path519 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1589.71 375.716C1588.88 377.742 1588.07 379.769 1587.24 381.796C1581.34 397.138 1576.42 401.795 1577.91 391.27C1578.35 388.217 1597.07 350.872 1589.71 375.716Z\",\n    fill: \"#939393\"\n  })), _path520 || (_path520 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1587.24 381.793C1588.07 379.767 1588.88 377.74 1589.71 375.713C1597.45 358.64 1594.87 375.357 1588.77 385.937C1588.26 384.559 1587.75 383.171 1587.24 381.793Z\",\n    fill: \"#939393\"\n  })), _path521 || (_path521 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1573.59 371.158C1569.23 380.219 1555.57 384.404 1545.09 382.652C1534.54 395.709 1530.3 393.109 1543.43 382.092C1526.7 380.193 1517.21 376.501 1527.33 377.023C1540.39 377.701 1554.55 388.609 1573.59 371.158Z\",\n    fill: \"#939393\"\n  })), _path522 || (_path522 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1578.04 372.31C1582.4 381.72 1564.4 409.194 1566.65 391.975C1567.37 386.501 1573.82 372.416 1572.41 388.038C1574.29 382.792 1576.16 377.556 1578.04 372.31Z\",\n    fill: \"#939393\"\n  })), _path523 || (_path523 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1493.71 375.05C1496.32 373.658 1491.91 392.117 1491.38 392.922C1486.46 400.337 1488.28 386.735 1493.71 375.05Z\",\n    fill: \"#939393\"\n  })), _path524 || (_path524 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1462.22 376.207C1461.05 382.836 1459.87 389.466 1458.69 396.095C1452.19 410.497 1450.9 397.361 1462.22 376.207Z\",\n    fill: \"#939393\"\n  })), _path525 || (_path525 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1502.61 377.351C1501.95 380.233 1501.28 383.125 1500.61 386.007C1494.43 399.998 1494.11 388.293 1502.61 377.351Z\",\n    fill: \"#939393\"\n  })), _path526 || (_path526 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1464.39 378.321C1467.28 376.958 1463.97 394.556 1463.22 395.201C1458.01 399.666 1461.44 388.887 1464.39 378.321Z\",\n    fill: \"#939393\"\n  })), _path527 || (_path527 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1640.45 385.358C1661.16 387.923 1721.16 400.878 1734.95 411.612C1750.88 423.995 1744.07 463.995 1747.54 482.185C1738.71 483.135 1729.88 484.073 1721.05 485.022C1709.99 490.521 1698.94 496.01 1687.88 501.509L1667.8 497.864C1650.29 504.81 1632.18 499.643 1613.57 506.579C1585.15 494.17 1563.05 513.624 1546.48 498.527C1536.39 489.323 1544.85 470.61 1552.86 462.318C1566.4 455.68 1567.49 442.16 1578.62 433.321C1585.05 421.203 1591.49 409.085 1597.92 396.966C1613.72 379.865 1622.76 393.836 1640.45 385.358Z\",\n    fill: \"#939393\"\n  })), _path528 || (_path528 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1432.79 382.549C1432.05 387.479 1431.31 392.419 1430.57 397.349C1426.37 411.253 1423.63 396.312 1432.79 382.549Z\",\n    fill: \"#939393\"\n  })), _path529 || (_path529 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1443.86 402.337C1443.29 402.659 1442.72 402.991 1442.14 403.313C1441.3 402.93 1441.81 396.395 1438.74 404.241C1437.83 403.703 1436.9 403.164 1435.99 402.626C1443.73 380.92 1447.04 374.955 1443.86 402.337Z\",\n    fill: \"#939393\"\n  })), _path530 || (_path530 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1443.86 402.338C1455.29 376.738 1456.53 383.426 1446.59 404.465C1445.69 403.753 1444.77 403.05 1443.86 402.338Z\",\n    fill: \"#939393\"\n  })), _path531 || (_path531 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1438.29 385.783C1437.55 390.713 1436.81 395.653 1436.07 400.583C1430.16 412.224 1427.87 406.696 1438.29 385.783Z\",\n    fill: \"#939393\"\n  })), _path532 || (_path532 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1315.82 402.809C1317.01 402.095 1326.68 390.55 1321.28 391.688C1319.71 392.023 1320.32 403.849 1302.38 401.916C1304.5 404.723 1309.45 403.264 1313.54 403.77C1308.25 405.096 1305.54 409.324 1297.16 406.381C1290.58 404.072 1298.94 390.635 1307.93 388.235C1320.58 384.852 1349.95 395.863 1342.33 399.46C1333.24 398.434 1324.57 400.894 1315.82 402.809Z\",\n    fill: \"#939393\"\n  })), _path533 || (_path533 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1315.82 402.81L1313.54 403.77C1309.45 403.265 1304.5 404.724 1302.38 401.917C1320.32 403.85 1319.71 392.024 1321.28 391.689C1326.68 390.551 1317.01 402.096 1315.82 402.81Z\",\n    fill: \"#939393\"\n  })), _path534 || (_path534 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1347.87 401.671C1356.4 403.963 1364.92 406.255 1373.45 408.546C1389.19 410.991 1428.39 406.485 1434.09 424.103C1437.85 435.762 1420.4 434.601 1420.2 450.873C1403.78 434.694 1365.47 448.616 1341.78 445.576C1326.83 443.656 1320.84 431.975 1306.03 440.463C1292.56 448.169 1296.57 473.489 1254.4 454.889C1273.11 439.869 1291.8 424.858 1310.51 409.838C1318.45 405.635 1338.88 401.232 1347.87 401.671ZM1425.77 421.304C1421.94 433.281 1423.58 420.525 1420.51 426.793C1419.41 431.375 1418.3 435.956 1417.2 440.538C1421.05 434.609 1427.28 428.728 1425.77 421.304ZM1367.24 424.772C1357.1 425.899 1346.06 436.933 1352.17 437.67C1353.94 437.884 1362.85 422.064 1383.34 429.84C1371.59 449.629 1387.9 433.229 1384.57 426.8C1378.79 426.124 1373.02 425.448 1367.24 424.772ZM1416.6 426.17C1415.16 429.717 1413.73 433.264 1412.29 436.811C1411.07 446.945 1417.63 439.043 1416.6 426.17Z\",\n    fill: \"#939393\"\n  })), _path535 || (_path535 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1425.77 421.305C1427.28 428.728 1421.05 434.609 1417.2 440.538C1418.3 435.956 1419.41 431.375 1420.51 426.793C1423.58 420.525 1421.94 433.281 1425.77 421.305Z\",\n    fill: \"#939393\"\n  })), _path536 || (_path536 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1367.24 424.773C1373.02 425.449 1378.79 426.125 1384.57 426.801C1387.9 433.23 1371.59 449.63 1383.34 429.842C1362.85 422.065 1353.94 437.885 1352.17 437.671C1346.06 436.934 1357.1 425.9 1367.24 424.773Z\",\n    fill: \"#939393\"\n  })), _path537 || (_path537 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1416.6 426.174C1417.63 439.047 1411.07 446.949 1412.29 436.815C1413.73 433.268 1415.16 429.721 1416.6 426.174Z\",\n    fill: \"#939393\"\n  })), _path538 || (_path538 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1493.86 401.704C1516.48 406.957 1538.39 412.919 1561.14 404.635C1582.4 442.263 1520.47 467.969 1494.06 488.839C1484.86 472.926 1466.58 479.656 1465.45 472.653C1459.69 476.887 1447.53 469.593 1431.64 475.795C1429.86 468.395 1428.06 461.005 1426.27 453.604C1425.18 438.956 1435.75 442.269 1444.69 425.937C1464.59 425.814 1479.27 412.474 1493.86 401.704ZM1532.16 429.44C1518.66 431.221 1494.6 456.463 1467.43 449.133C1467.22 449.639 1467.02 450.146 1466.81 450.653C1492.55 457.112 1501.85 444.204 1521.84 435.298C1528.5 432.33 1547.84 427.374 1532.16 429.44ZM1530.62 440.673C1527.74 448.105 1524.84 455.546 1521.95 462.978C1527.2 465.741 1533.01 444.554 1530.62 440.673ZM1521.31 449.634C1511.81 466.381 1507.53 479.073 1516.77 466.419C1518.45 464.119 1523.31 452.807 1521.31 449.634ZM1506.69 450.245C1484.78 493.23 1509.07 464.243 1508.32 451.829L1506.69 450.245ZM1512.3 450.404C1502.22 466.202 1503.17 477.279 1507.68 469.237C1509.23 462.956 1510.76 456.685 1512.3 450.404ZM1499.85 453.126C1482.77 476.813 1492.7 474.358 1497.81 462.807C1498.49 459.577 1499.17 456.357 1499.85 453.126Z\",\n    fill: \"#939393\"\n  })), _path539 || (_path539 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1532.16 429.437C1547.84 427.37 1528.5 432.326 1521.84 435.295C1501.85 444.2 1492.55 457.108 1466.81 450.649C1467.02 450.142 1467.22 449.635 1467.43 449.129C1494.59 456.459 1518.66 431.217 1532.16 429.437Z\",\n    fill: \"#939393\"\n  })), _path540 || (_path540 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1530.62 440.673C1533.01 444.554 1527.2 465.741 1521.95 462.978C1524.84 455.547 1527.74 448.105 1530.62 440.673Z\",\n    fill: \"#939393\"\n  })), _path541 || (_path541 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1521.31 449.633C1523.31 452.805 1518.45 464.117 1516.77 466.417C1507.53 479.071 1511.81 466.379 1521.31 449.633Z\",\n    fill: \"#939393\"\n  })), _path542 || (_path542 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1506.69 450.251L1508.32 451.834C1509.07 464.248 1484.78 493.235 1506.69 450.251Z\",\n    fill: \"#939393\"\n  })), _path543 || (_path543 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1512.3 450.403C1510.76 456.684 1509.23 462.955 1507.68 469.236C1503.17 477.277 1502.22 466.201 1512.3 450.403Z\",\n    fill: \"#939393\"\n  })), _path544 || (_path544 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1499.85 453.127C1499.17 456.357 1498.49 459.577 1497.81 462.807C1492.7 474.358 1482.77 476.814 1499.85 453.127Z\",\n    fill: \"#939393\"\n  })), _path545 || (_path545 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1316.12 440.743C1320.31 440.534 1337.1 454.069 1353.85 453.088C1363.63 447.574 1405.72 445.404 1413.5 449.653C1421.01 453.761 1427.42 475.346 1426.53 477.186C1425.6 479.148 1410.64 480.272 1409.05 479.254C1408.14 478.664 1404.32 458.003 1406.27 478.662C1400.24 481.105 1405.08 474.118 1401.65 466.743L1399.46 480.519L1397.22 480.456C1393.28 457.537 1396.37 486.172 1392.8 478.281L1392.58 484.425C1371.9 496.027 1374.45 500.947 1379.58 486.619C1375.24 492.646 1370.91 498.674 1366.57 504.702C1359.65 506.914 1333.7 492.915 1325.55 490.213C1316.38 487.176 1296.4 486.61 1295.01 480.635C1293.38 473.608 1302.17 441.455 1316.12 440.743ZM1403.07 458.583C1395.63 462.298 1388.2 466.024 1380.76 469.739C1381.65 476.704 1417.54 457.322 1403.07 458.583ZM1353.18 471.52C1356.59 477.295 1377.36 478.848 1372.1 476.157C1365.79 474.614 1359.49 473.062 1353.18 471.52ZM1358.46 496.271C1356.34 504.945 1361.89 496.655 1368.78 490.413C1357.38 511.012 1380.14 483.365 1377.49 482.46C1375.36 484.449 1373.22 486.439 1371.1 488.429C1378.79 476.582 1368.2 485.989 1363.17 490.254C1365.15 487.409 1367.12 484.554 1369.09 481.709C1368.54 481.519 1367.99 481.339 1367.43 481.149C1353 494.384 1349.17 504.28 1358.46 496.271Z\",\n    fill: \"#939393\"\n  })), _path546 || (_path546 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1403.07 458.578C1417.54 457.317 1381.65 476.699 1380.76 469.734C1388.2 466.019 1395.63 462.293 1403.07 458.578Z\",\n    fill: \"#939393\"\n  })), _path547 || (_path547 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1353.18 471.521C1359.49 473.063 1365.79 474.616 1372.1 476.158C1377.36 478.849 1356.59 477.297 1353.18 471.521Z\",\n    fill: \"#939393\"\n  })), _path548 || (_path548 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1363.17 490.258C1361.6 492.264 1360.02 494.269 1358.46 496.275C1349.17 504.284 1353 494.388 1367.43 481.153C1367.98 481.343 1368.54 481.523 1369.09 481.713C1367.11 484.558 1365.15 487.413 1363.17 490.258Z\",\n    fill: \"#939393\"\n  })), _path549 || (_path549 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1371.1 488.429C1370.32 489.093 1369.55 489.748 1368.78 490.413C1361.89 496.655 1356.34 504.944 1358.46 496.271C1360.02 494.265 1361.6 492.26 1363.17 490.254C1368.2 485.989 1378.79 476.582 1371.1 488.429Z\",\n    fill: \"#939393\"\n  })), _path550 || (_path550 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1368.78 490.417C1369.55 489.752 1370.32 489.098 1371.1 488.433C1373.22 486.443 1375.36 484.454 1377.49 482.464C1380.14 483.369 1357.38 511.015 1368.78 490.417Z\",\n    fill: \"#939393\"\n  })), _path551 || (_path551 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1216.76 455.347C1237.42 452.98 1260.7 464.711 1280.26 469.447C1271.41 476.033 1262.56 482.61 1253.71 489.196C1253.43 489.25 1252.54 484.325 1250.35 489.101C1245.94 480.581 1245.17 493.413 1243.28 498.126C1242.6 495.903 1241.75 481.61 1239.35 482.639C1242.75 515.004 1232.73 507.647 1219.27 509.747C1192.72 513.894 1165.79 520.481 1138.7 517.202C1162.49 497.733 1166.3 476.797 1196.27 462.967C1203.1 460.424 1209.93 457.891 1216.76 455.347ZM1231.98 469.104C1228.9 471.405 1225.83 473.717 1222.75 476.018C1219.97 477.231 1194.64 483.114 1195.99 486.023C1209.41 481.914 1225.01 479.608 1234.77 469.696C1233.84 469.495 1232.91 469.305 1231.98 469.104ZM1227.05 481.265L1228 501.281L1230.25 501.344C1230.53 498.79 1230.8 496.235 1231.09 493.68C1231.77 493.7 1230.77 504.024 1234.15 501.968C1236.04 500.822 1231.61 479.324 1228.52 486.945C1228.03 485.055 1227.54 483.155 1227.05 481.265ZM1234.86 482.512C1233.88 504.297 1239.72 508.266 1238.43 492.351C1237.24 489.068 1236.06 485.795 1234.86 482.512ZM1223.46 487.314C1221.04 502.232 1228.34 510.547 1226.02 494.049C1225.17 491.801 1224.31 489.562 1223.46 487.314Z\",\n    fill: \"#939393\"\n  })), _path552 || (_path552 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1231.98 469.105C1232.91 469.305 1233.84 469.496 1234.77 469.696C1225.01 479.609 1209.41 481.914 1195.99 486.023C1194.64 483.115 1219.97 477.231 1222.75 476.018C1225.83 473.717 1228.9 471.406 1231.98 469.105Z\",\n    fill: \"#939393\"\n  })), _path553 || (_path553 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1227.05 481.264C1227.54 483.153 1228.03 485.053 1228.52 486.943C1231.61 479.322 1236.04 500.82 1234.15 501.966C1230.77 504.022 1231.77 493.698 1231.09 493.679C1230.8 496.233 1230.53 498.788 1230.25 501.343L1228 501.279L1227.05 481.264Z\",\n    fill: \"#939393\"\n  })), _path554 || (_path554 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1234.86 482.511C1236.06 485.794 1237.24 489.067 1238.43 492.35C1239.72 508.265 1233.88 504.296 1234.86 482.511Z\",\n    fill: \"#939393\"\n  })), _path555 || (_path555 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1223.46 487.316C1224.31 489.565 1225.17 491.803 1226.02 494.052C1228.34 510.549 1221.04 502.234 1223.46 487.316Z\",\n    fill: \"#939393\"\n  })), _path556 || (_path556 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1277.57 481.682C1282.75 483.541 1287.91 485.389 1293.09 487.247C1303.86 489.603 1314.62 491.958 1325.4 494.313C1338.77 498.649 1350.71 507.649 1365.3 508.769C1372.39 547.943 1371.96 524.908 1319.49 533.098C1283.27 533.179 1278.45 520.465 1245.9 518.712C1250.28 506.843 1261.47 482.22 1277.57 481.682ZM1276.93 499.09C1286.54 502.776 1296.13 506.471 1305.73 510.157C1294.17 523.114 1307.27 508.53 1318.58 512.058C1304.69 507.739 1290.81 503.409 1276.93 499.09Z\",\n    fill: \"#939393\"\n  })), _path557 || (_path557 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1276.93 499.09C1290.81 503.409 1304.69 507.739 1318.57 512.058C1307.27 508.529 1294.17 523.113 1305.73 510.156C1296.13 506.471 1286.54 502.776 1276.93 499.09Z\",\n    fill: \"#939393\"\n  })), _path558 || (_path558 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1449.52 478.349C1455.19 478.376 1485.63 483.769 1487.9 488.149C1489.35 490.927 1483.67 521.805 1482.07 524.886C1476.49 535.666 1453.96 529.369 1443.01 533.518C1424.88 530.001 1416.09 525.569 1402.37 539.541C1392.87 538.073 1383.38 536.615 1373.89 535.147C1374.35 507.504 1372.97 498.034 1402.1 485.206C1418.17 489.659 1434.74 478.268 1449.52 478.349ZM1462.27 498.186C1460 498.809 1457.73 499.421 1455.46 500.044C1453.61 500.114 1425.17 498.98 1426.76 501.793C1448.9 503.784 1472.87 497.974 1462.27 498.186ZM1383.37 506.201L1383.29 508.249C1418.6 516.487 1416.07 513.125 1383.37 506.201ZM1465.26 508.522C1450.84 523.212 1444.66 536.383 1456.23 525.179L1465.26 508.522ZM1455.09 510.284C1453.14 512.545 1442.97 525.993 1445.48 527.437C1448.87 526.682 1457 511.24 1455.09 510.284ZM1471.92 510.76C1454.76 528.11 1456.75 534.758 1466.44 522.393C1468.27 518.519 1470.09 514.635 1471.92 510.76ZM1477.53 510.919C1472.88 519.654 1465.9 526.222 1469.08 527.081C1471.21 527.141 1479.9 513.898 1477.53 510.919ZM1445.93 515.149C1443.81 516.965 1441.68 518.791 1439.55 520.606C1429.66 532.729 1443.76 524.395 1445.93 515.149ZM1427.79 519.761C1422.88 520.616 1428.14 524.096 1428.19 524.385C1427.77 525.736 1427.33 527.097 1426.91 528.449C1430 533.292 1432.22 518.994 1427.79 519.761Z\",\n    fill: \"#939393\"\n  })), _path559 || (_path559 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1462.27 498.188C1472.87 497.976 1448.9 503.785 1426.76 501.795C1425.17 498.982 1453.61 500.116 1455.46 500.045C1457.73 499.423 1460 498.81 1462.27 498.188Z\",\n    fill: \"#939393\"\n  })), _path560 || (_path560 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1383.37 506.2C1416.07 513.123 1418.6 516.485 1383.29 508.248L1383.37 506.2Z\",\n    fill: \"#939393\"\n  })), _path561 || (_path561 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1465.26 508.524L1456.23 525.181C1444.66 536.385 1450.84 523.214 1465.26 508.524Z\",\n    fill: \"#939393\"\n  })), _path562 || (_path562 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1455.09 510.286C1457 511.242 1448.87 526.685 1445.48 527.44C1442.97 525.995 1453.15 512.548 1455.09 510.286Z\",\n    fill: \"#939393\"\n  })), _path563 || (_path563 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1471.92 510.762C1470.09 514.636 1468.27 518.521 1466.44 522.395C1456.75 534.759 1454.76 528.112 1471.92 510.762Z\",\n    fill: \"#939393\"\n  })), _path564 || (_path564 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1477.53 510.916C1479.9 513.894 1471.21 527.137 1469.08 527.077C1465.9 526.218 1472.88 519.651 1477.53 510.916Z\",\n    fill: \"#939393\"\n  })), _path565 || (_path565 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1445.93 515.15C1443.76 524.396 1429.66 532.73 1439.55 520.607C1441.68 518.791 1443.81 516.966 1445.93 515.15Z\",\n    fill: \"#939393\"\n  })), _path566 || (_path566 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1427.79 519.759C1432.22 518.993 1429.99 533.289 1426.91 528.446C1427.33 527.095 1427.77 525.734 1428.19 524.383C1428.14 524.094 1422.88 520.614 1427.79 519.759Z\",\n    fill: \"#939393\"\n  })), _path567 || (_path567 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1456.78 571.838L1416.39 570.694C1422.01 561.432 1430.47 562.431 1439.48 553.409C1455.42 526.953 1456.87 541.396 1482.09 539.753C1493.76 561.374 1480.42 557.706 1471.17 561.995C1466.37 565.273 1461.58 568.561 1456.78 571.838Z\",\n    fill: \"#939393\"\n  })), _path568 || (_path568 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1741.74 579.914L1673.3 577.975C1664.97 571.271 1654.01 570.53 1645.26 577.181L1499.41 573.048C1502.16 562.117 1490.97 565.798 1489.31 572.762C1487.22 573.338 1486.35 573.047 1485.95 572.667C1483.56 570.416 1493.75 561.561 1495.27 548.258C1495.68 544.671 1495.37 541.659 1495.01 539.609C1516.71 524.663 1546.49 533.8 1570.31 522.779L1641.21 518.638C1655.92 515.641 1670.63 512.634 1685.34 509.637C1704.48 508.14 1736.42 510.705 1744.71 529.258C1752.84 547.447 1740.35 561.619 1741.74 579.914Z\",\n    fill: \"#939393\"\n  })), _path569 || (_path569 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1499.41 573.047L1489.31 572.761C1490.97 565.797 1502.16 562.116 1499.41 573.047Z\",\n    fill: \"#939393\"\n  })), _path570 || (_path570 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1673.3 577.976L1645.26 577.181C1654.01 570.531 1664.97 571.272 1673.3 577.976Z\",\n    fill: \"#939393\"\n  })), _path571 || (_path571 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1617.78 267.859C1618.33 268.049 1618.89 268.229 1619.44 268.419C1577.15 296.455 1612.63 268 1617.78 267.859Z\",\n    fill: \"black\"\n  })), _path572 || (_path572 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1630.05 270.252C1632.99 275.132 1628.58 282.183 1625.5 287.036C1625.39 309.317 1617.52 296.271 1630.05 270.252Z\",\n    fill: \"black\"\n  })), _path573 || (_path573 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1620.92 274.097C1626.09 273.137 1619.03 282.265 1618.92 282.754L1618.55 292.993C1614.2 312.09 1615 275.201 1620.92 274.097Z\",\n    fill: \"black\"\n  })), _path574 || (_path574 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1550.17 274.14C1563.79 275.377 1577.4 276.624 1591.02 277.86C1584.49 277.501 1577.94 277.151 1571.41 276.792C1570.82 283.141 1559.68 273.764 1561.24 278.554C1557.55 277.086 1553.86 275.608 1550.17 274.14Z\",\n    fill: \"black\"\n  })), _path575 || (_path575 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1605.03 278.768C1608.8 277.706 1600.74 287.728 1601.53 297.632C1594.2 310.012 1601.25 279.839 1605.03 278.768Z\",\n    fill: \"black\"\n  })), _path576 || (_path576 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1584.72 281.266L1593.08 283.04C1587.6 285.069 1583.79 297.968 1581.62 304.754C1577.92 306.217 1583.3 290.051 1588.55 283.937C1584.45 283.483 1580.36 283.018 1576.25 282.564L1584.72 281.266Z\",\n    fill: \"black\"\n  })), _path577 || (_path577 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1597.06 281.621C1596.07 293.401 1585.09 312.33 1587.96 300.326C1590.99 294.088 1594.03 287.859 1597.06 281.621Z\",\n    fill: \"black\"\n  })), _path578 || (_path578 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1499.88 329.094C1502.83 330.561 1492.62 341.414 1499.54 338.309C1497.67 346.18 1502.63 338.202 1502.21 341.973C1501.53 348.227 1492.75 344.032 1489.11 347.239C1486.94 345.835 1498.09 331.831 1499.88 329.094Z\",\n    fill: \"black\"\n  })), _path579 || (_path579 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1396.48 331.289C1401.1 330.662 1388.17 341.099 1381.33 346.236C1347.94 338.945 1348.8 336.068 1381.41 344.188C1386.43 339.891 1391.46 335.585 1396.48 331.289Z\",\n    fill: \"black\"\n  })), _path580 || (_path580 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1319.18 356.776C1352.5 358.858 1349.9 362.454 1319.11 358.824C1307.1 369.985 1304.8 366.752 1319.18 356.776Z\",\n    fill: \"black\"\n  })), _path581 || (_path581 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1398.69 363.128C1418.14 365.862 1424.45 379.49 1435.84 375.969C1424.58 382.722 1427.02 376.621 1419.66 372.948C1412.68 369.675 1405.68 366.401 1398.69 363.128Z\",\n    fill: \"black\"\n  })), _path582 || (_path582 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1601.37 317.618C1601.92 317.808 1602.48 317.988 1603.03 318.178C1600.19 330.869 1608.01 337.723 1607.89 338.816C1607.33 343.884 1598.84 326.403 1601.24 336.578C1603.03 339.017 1604.8 341.465 1606.59 343.904C1607.58 352.194 1601.5 334.268 1597.72 340.578C1598.93 332.925 1600.16 325.272 1601.37 317.618Z\",\n    fill: \"black\"\n  })), _path583 || (_path583 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1596.88 348.245C1603.06 345.602 1590.76 364.001 1581.59 367.288C1594.31 356.66 1595.7 348.755 1596.88 348.245Z\",\n    fill: \"black\"\n  })), _path584 || (_path584 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1609.11 351.662C1610.4 368.488 1596.5 388.739 1597.5 377.471C1601.38 368.868 1605.24 360.265 1609.11 351.662Z\",\n    fill: \"black\"\n  })), _path585 || (_path585 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1589.71 375.721C1588.88 377.748 1588.06 379.775 1587.24 381.801C1581.33 397.143 1576.41 401.801 1577.91 391.275C1578.35 388.222 1597.07 350.878 1589.71 375.721Z\",\n    fill: \"black\"\n  })), _path586 || (_path586 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1587.24 381.795C1588.06 379.768 1588.88 377.741 1589.7 375.714C1597.45 358.641 1594.87 375.358 1588.77 385.938C1588.26 384.56 1587.75 383.172 1587.24 381.795Z\",\n    fill: \"black\"\n  })), _path587 || (_path587 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1573.59 371.16C1569.22 380.221 1555.57 384.406 1545.09 382.653C1534.54 395.711 1530.3 393.11 1543.43 382.093C1526.7 380.195 1517.21 376.502 1527.33 377.025C1540.39 377.702 1554.54 388.61 1573.59 371.16Z\",\n    fill: \"black\"\n  })), _path588 || (_path588 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1578.04 372.315C1582.4 381.725 1564.4 409.199 1566.65 391.981C1567.37 386.507 1573.82 372.421 1572.41 388.044C1574.29 382.797 1576.16 377.561 1578.04 372.315Z\",\n    fill: \"black\"\n  })), _path589 || (_path589 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1493.71 375.042C1496.32 373.651 1491.91 392.11 1491.37 392.914C1486.45 400.33 1488.27 386.728 1493.71 375.042Z\",\n    fill: \"black\"\n  })), _path590 || (_path590 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1462.22 376.205C1461.05 382.835 1459.86 389.464 1458.69 396.094C1452.19 410.496 1450.9 397.359 1462.22 376.205Z\",\n    fill: \"black\"\n  })), _path591 || (_path591 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1502.61 377.354C1501.94 380.236 1501.28 383.128 1500.61 386.01C1494.43 400.001 1494.1 388.296 1502.61 377.354Z\",\n    fill: \"black\"\n  })), _path592 || (_path592 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1464.39 378.321C1467.28 376.958 1463.97 394.556 1463.21 395.201C1458.01 399.666 1461.43 388.888 1464.39 378.321Z\",\n    fill: \"black\"\n  })), _path593 || (_path593 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1432.79 382.546C1432.05 387.475 1431.31 392.416 1430.57 397.346C1426.37 411.249 1423.63 396.309 1432.79 382.546Z\",\n    fill: \"black\"\n  })), _path594 || (_path594 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1443.86 402.339C1443.29 402.661 1442.72 402.993 1442.14 403.315C1441.3 402.933 1441.81 396.397 1438.74 404.244C1437.83 403.705 1436.9 403.167 1435.99 402.628C1443.73 380.922 1447.04 374.958 1443.86 402.339Z\",\n    fill: \"black\"\n  })), _path595 || (_path595 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1443.86 402.334C1455.28 376.735 1456.52 383.422 1446.59 404.462C1445.69 403.749 1444.77 403.047 1443.86 402.334Z\",\n    fill: \"black\"\n  })), _path596 || (_path596 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1438.29 385.776C1437.55 390.706 1436.81 395.646 1436.07 400.576C1430.16 412.217 1427.87 406.689 1438.29 385.776Z\",\n    fill: \"black\"\n  })), _path597 || (_path597 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1315.82 402.808L1313.54 403.769C1309.45 403.263 1304.5 404.722 1302.38 401.915C1320.32 403.848 1319.7 392.022 1321.28 391.688C1326.68 390.549 1317.01 402.094 1315.82 402.808Z\",\n    fill: \"black\"\n  })), _path598 || (_path598 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1425.76 421.305C1427.28 428.728 1421.04 434.609 1417.2 440.538C1418.3 435.956 1419.41 431.375 1420.51 426.794C1423.58 420.525 1421.94 433.281 1425.76 421.305Z\",\n    fill: \"black\"\n  })), _path599 || (_path599 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1367.24 424.771C1373.02 425.447 1378.79 426.123 1384.57 426.8C1387.9 433.229 1371.59 449.628 1383.34 429.84C1362.85 422.063 1353.94 437.883 1352.17 437.669C1346.05 436.932 1357.1 425.898 1367.24 424.771Z\",\n    fill: \"black\"\n  })), _path600 || (_path600 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1416.6 426.17C1417.63 439.043 1411.07 446.945 1412.28 436.811C1413.73 433.264 1415.16 429.717 1416.6 426.17Z\",\n    fill: \"black\"\n  })), _path601 || (_path601 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1532.16 429.442C1547.84 427.375 1528.5 432.332 1521.84 435.3C1501.85 444.205 1492.55 457.114 1466.81 450.654C1467.02 450.148 1467.22 449.641 1467.43 449.134C1494.59 456.464 1518.66 431.222 1532.16 429.442Z\",\n    fill: \"black\"\n  })), _path602 || (_path602 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1530.62 440.679C1533.01 444.559 1527.19 465.746 1521.95 462.984C1524.84 455.552 1527.74 448.11 1530.62 440.679Z\",\n    fill: \"black\"\n  })), _path603 || (_path603 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1521.31 449.636C1523.31 452.809 1518.45 464.121 1516.77 466.421C1507.53 479.074 1511.81 466.383 1521.31 449.636Z\",\n    fill: \"black\"\n  })), _path604 || (_path604 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1506.69 450.248L1508.32 451.832C1509.07 464.246 1484.77 493.232 1506.69 450.248Z\",\n    fill: \"black\"\n  })), _path605 || (_path605 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1512.3 450.403C1510.76 456.684 1509.23 462.955 1507.68 469.235C1503.17 477.277 1502.22 466.2 1512.3 450.403Z\",\n    fill: \"black\"\n  })), _path606 || (_path606 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1499.85 453.131C1499.17 456.361 1498.49 459.581 1497.81 462.811C1492.7 474.362 1482.77 476.817 1499.85 453.131Z\",\n    fill: \"black\"\n  })), _path607 || (_path607 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1403.07 458.58C1417.54 457.32 1381.65 476.701 1380.76 469.736C1388.2 466.021 1395.63 462.296 1403.07 458.58Z\",\n    fill: \"black\"\n  })), _path608 || (_path608 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1353.18 471.518C1359.5 473.06 1365.8 474.612 1372.11 476.154C1377.36 478.845 1356.59 477.293 1353.18 471.518Z\",\n    fill: \"black\"\n  })), _path609 || (_path609 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1363.17 490.251C1361.6 492.256 1360.02 494.262 1358.46 496.267C1349.17 504.276 1353 494.38 1367.43 481.146C1367.99 481.336 1368.54 481.516 1369.09 481.706C1367.12 484.55 1365.15 487.406 1363.17 490.251Z\",\n    fill: \"black\"\n  })), _path610 || (_path610 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1371.1 488.433C1370.32 489.098 1369.56 489.753 1368.78 490.417C1361.89 496.659 1356.35 504.949 1358.46 496.275C1360.03 494.269 1361.6 492.264 1363.17 490.258C1368.2 485.993 1378.8 476.586 1371.1 488.433Z\",\n    fill: \"black\"\n  })), _path611 || (_path611 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1368.78 490.408C1369.56 489.743 1370.32 489.088 1371.1 488.424C1373.23 486.434 1375.36 484.444 1377.49 482.454C1380.14 483.36 1357.38 511.006 1368.78 490.408Z\",\n    fill: \"black\"\n  })), _path612 || (_path612 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1231.98 469.116C1228.9 471.417 1225.83 473.729 1222.75 476.03C1219.97 477.243 1194.64 483.126 1195.99 486.034C1209.41 481.925 1225.01 479.62 1234.77 469.708C1233.84 469.507 1232.91 469.317 1231.98 469.116ZM1227.05 481.277L1228 501.292L1230.24 501.356C1230.53 498.801 1230.8 496.246 1231.09 493.692C1231.77 493.711 1230.76 504.035 1234.15 501.979C1236.04 500.833 1231.61 479.335 1228.52 486.956C1228.03 485.066 1227.54 483.166 1227.05 481.277ZM1234.86 482.523C1233.88 504.308 1239.72 508.277 1238.43 492.362C1237.24 489.079 1236.06 485.806 1234.86 482.523ZM1223.46 487.325C1221.04 502.243 1228.34 510.558 1226.02 494.061C1225.17 491.812 1224.31 489.574 1223.46 487.325Z\",\n    fill: \"black\"\n  })), _path613 || (_path613 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1231.98 469.116C1232.91 469.317 1233.84 469.507 1234.77 469.708C1225.01 479.62 1209.41 481.925 1195.99 486.034C1194.64 483.126 1219.97 477.243 1222.75 476.03C1225.83 473.729 1228.9 471.417 1231.98 469.116Z\",\n    fill: \"black\"\n  })), _path614 || (_path614 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1227.05 481.277C1227.54 483.167 1228.03 485.067 1228.53 486.956C1231.61 479.335 1236.04 500.833 1234.15 501.979C1230.77 504.035 1231.77 493.711 1231.09 493.692C1230.8 496.246 1230.53 498.801 1230.25 501.356L1228 501.292L1227.05 481.277Z\",\n    fill: \"black\"\n  })), _path615 || (_path615 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1234.86 482.521C1236.06 485.804 1237.24 489.076 1238.44 492.36C1239.72 508.274 1233.88 504.305 1234.86 482.521Z\",\n    fill: \"black\"\n  })), _path616 || (_path616 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1223.46 487.326C1224.31 489.574 1225.17 491.812 1226.02 494.061C1228.34 510.558 1221.04 502.243 1223.46 487.326Z\",\n    fill: \"black\"\n  })), _path617 || (_path617 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1276.93 499.086C1290.81 503.405 1304.69 507.735 1318.57 512.054C1307.27 508.525 1294.17 523.11 1305.73 510.153C1296.13 506.467 1286.54 502.772 1276.93 499.086Z\",\n    fill: \"black\"\n  })), _path618 || (_path618 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1462.27 498.192C1472.86 497.98 1448.9 503.79 1426.76 501.799C1425.17 498.986 1453.61 500.12 1455.46 500.05C1457.73 499.427 1460 498.815 1462.27 498.192Z\",\n    fill: \"black\"\n  })), _path619 || (_path619 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1383.36 506.206C1416.07 513.129 1418.6 516.491 1383.29 508.254L1383.36 506.206Z\",\n    fill: \"black\"\n  })), _path620 || (_path620 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1465.26 508.528L1456.23 525.186C1444.66 536.39 1450.83 523.218 1465.26 508.528Z\",\n    fill: \"black\"\n  })), _path621 || (_path621 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1455.09 510.29C1457 511.247 1448.86 526.689 1445.48 527.444C1442.97 525.999 1453.14 512.552 1455.09 510.29Z\",\n    fill: \"black\"\n  })), _path622 || (_path622 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1471.92 510.765C1470.09 514.639 1468.27 518.523 1466.44 522.397C1456.75 534.761 1454.75 528.114 1471.92 510.765Z\",\n    fill: \"black\"\n  })), _path623 || (_path623 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1477.53 510.924C1479.9 513.902 1471.21 527.146 1469.08 527.085C1465.9 526.226 1472.87 519.659 1477.53 510.924Z\",\n    fill: \"black\"\n  })), _path624 || (_path624 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1445.93 515.152C1443.76 524.398 1429.65 532.732 1439.55 520.609C1441.67 518.794 1443.81 516.968 1445.93 515.152Z\",\n    fill: \"black\"\n  })), _path625 || (_path625 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1427.79 519.768C1432.22 519.001 1429.99 533.298 1426.91 528.455C1427.33 527.103 1427.76 525.742 1428.18 524.391C1428.14 524.103 1422.88 520.622 1427.79 519.768Z\",\n    fill: \"black\"\n  })), _path626 || (_path626 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M791.332 442.859C801.746 439.371 808.582 434.839 812.839 431.434C824.14 422.395 824.654 415.398 835.583 410.419C843.405 406.858 846.212 409.039 855.077 406.153C862.601 403.701 871.73 398.496 880.388 386.81\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path627 || (_path627 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M856.299 420.632C860.297 415.692 866.195 409.463 874.498 403.496C884.565 396.268 894.339 392.168 901.365 389.815\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path628 || (_path628 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1249.74 260.105C1237.3 263.545 1232.11 268.574 1229.93 273.177C1227.38 278.578 1230.09 281.074 1227.61 288.354C1225.11 295.725 1221.65 295.165 1213.77 306.413C1213.77 306.413 1212.36 308.433 1202.5 326.154C1199.81 329.286 1196.97 332.947 1194.2 337.153C1191.04 341.953 1188.58 346.507 1186.68 350.573\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path629 || (_path629 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1201.57 279.599C1204.11 276.278 1207.94 272.01 1213.42 267.901C1219.77 263.14 1225.98 260.374 1230.45 258.758\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path630 || (_path630 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1243.04 251.088C1246.1 247.7 1249.15 244.312 1252.21 240.924\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path631 || (_path631 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1266.57 232.509C1272.57 226.938 1277.24 222.304 1280.24 219.263C1291.75 207.595 1295.37 202.583 1303.89 197.474C1309.29 194.234 1314.22 192.416 1317.29 191.436\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path632 || (_path632 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1372.54 218.654C1354.59 227.761 1350.71 235.247 1350.66 240.493C1350.61 244.941 1353.31 246.883 1352.86 252.59C1352.28 259.831 1347.39 263.7 1342.55 269.949C1338.18 275.597 1338.91 276.673 1330.15 296.875C1327.01 304.125 1322.24 314.753 1315.84 327.754\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path633 || (_path633 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1401.75 213.065C1402.2 227.931 1406.81 236.642 1411.19 241.922C1413.47 244.682 1417.41 248.576 1417.83 254.431C1418.18 259.331 1415.92 263.52 1413.88 266.353\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path634 || (_path634 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1413.29 282.388C1412.53 287.184 1411.77 291.97 1411 296.766\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path635 || (_path635 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1408 307.107L1407.73 314.316\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path636 || (_path636 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1396.43 286.723C1395.77 288.846 1395.11 290.959 1394.44 293.082\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path637 || (_path637 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1398.07 274.199C1402.5 269.127 1402.87 265.315 1402.73 263.271C1402.66 262.233 1402.4 260.914 1401.87 258.255C1401.31 255.42 1400.76 253.098 1400.35 251.528\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path638 || (_path638 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1464.28 225.806C1463.94 228.707 1463.98 232.89 1466.33 236.965C1467.45 238.893 1468.34 239.513 1469.28 241.19C1470.68 243.679 1471.74 247.717 1469.68 254.301\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path639 || (_path639 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1468.81 206.143C1468.63 206.907 1468.33 208.794 1469.21 210.972C1470.08 213.098 1471.62 214.32 1472.3 214.8\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path640 || (_path640 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1475.77 223.993C1475.71 226.216 1475.91 229.543 1477.49 233.134C1479.65 238.075 1482.12 238.339 1484.46 242.957C1487.57 249.103 1486.78 255.703 1486.57 257.46C1485.98 262.343 1484.29 265.001 1485.86 268.941C1486.66 270.973 1487.96 272.424 1488.92 273.302\",\n    stroke: \"black\",\n    strokeWidth: 1.5,\n    strokeMiterlimit: 10\n  })), _path641 || (_path641 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1164.72 563.008L1138.02 566.855C1132.53 567.646 1127.12 568.886 1121.82 570.563L1119.53 571.29C1113.24 573.281 1106.74 574.505 1100.18 574.934L1093.79 575.352C1093.15 575.394 1092.52 575.493 1091.89 575.649L1089.51 576.246C1084.96 577.383 1080.41 574.54 1079.46 569.972V569.972C1078.87 567.138 1079.81 564.191 1081.94 562.204L1083.53 560.721C1088.53 552.847 1101.99 553.063 1109.79 551.162C1120.01 548.038 1125.84 545.189 1136.07 542.065C1141.62 539.687 1159.06 556.135 1164.72 563.008Z\",\n    fill: \"#939393\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path642 || (_path642 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1090.62 608.112C1090.46 608.829 1089.72 609.199 1088.99 609.17L1071.91 608.505L1063.6 610.158C1060.13 610.849 1056.81 612.141 1053.77 613.976V613.976C1049.12 616.792 1043.8 618.311 1038.38 618.375L1021.41 618.574L1010.01 617.113C1007.78 616.827 1005.71 615.81 1004.12 614.221V614.221C999.243 609.332 1000.58 601.07 1006.77 597.888L1015.43 593.439C1020.43 585.565 1029.39 591.847 1037.2 589.946C1047.42 586.822 1054.43 588.348 1064.65 585.225C1069.94 582.957 1092.44 600.058 1090.62 608.112Z\",\n    fill: \"#939393\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeMiterlimit: 10\n  })), _path643 || (_path643 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1042.03 601.402C1043.04 602.597 1044.04 603.8 1045.04 604.995C1045.76 598.565 1056.06 612.534 1054.62 613.952C1052.03 616.499 1050.02 608.795 1049.37 608.999C1049.84 610.916 1050.31 612.83 1050.78 614.747L1048.65 615.414L1042.03 601.402Z\",\n    fill: \"black\"\n  })), _path644 || (_path644 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1049.72 599.809C1051.78 601.778 1053.83 603.743 1055.89 605.712C1061.64 616.686 1055.03 615.703 1049.72 599.809Z\",\n    fill: \"black\"\n  })), _path645 || (_path645 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1040.39 606.866C1041.84 608.204 1043.28 609.532 1044.72 610.87C1051.62 621.933 1042.39 618.304 1040.39 606.866Z\",\n    fill: \"black\"\n  })), _path646 || (_path646 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1061.76 599.281C1062.38 600.17 1063 601.065 1063.62 601.954C1066.15 597.72 1072.01 607.986 1070.22 608.805C1067.01 610.274 1067.3 604.943 1066.62 605.021C1066.51 606.344 1066.42 607.666 1066.31 608.99L1064.08 609.245L1061.76 599.281Z\",\n    fill: \"black\"\n  })), _path647 || (_path647 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1069.59 598.909C1071 600.41 1072.39 601.908 1073.8 603.41C1076.17 611.265 1070.11 610.012 1069.59 598.909Z\",\n    fill: \"black\"\n  })), _path648 || (_path648 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1058.62 602.787C1059.62 603.811 1060.63 604.829 1061.62 605.854C1065.06 613.87 1057.25 610.613 1058.62 602.787Z\",\n    fill: \"black\"\n  })), _path649 || (_path649 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1109.5 558.055C1110.5 559.25 1111.51 560.452 1112.51 561.648C1113.23 555.217 1123.53 569.187 1122.09 570.604C1119.5 573.151 1117.49 565.448 1116.84 565.651C1117.3 567.568 1117.78 569.482 1118.24 571.4L1116.12 572.067L1109.5 558.055Z\",\n    fill: \"black\"\n  })), _path650 || (_path650 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1117.19 556.462C1119.25 558.431 1121.3 560.395 1123.35 562.364C1129.11 573.339 1122.5 572.356 1117.19 556.462Z\",\n    fill: \"black\"\n  })), _path651 || (_path651 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1107.86 563.518C1109.3 564.857 1110.75 566.184 1112.19 567.522C1119.08 578.585 1109.86 574.956 1107.86 563.518Z\",\n    fill: \"black\"\n  })), _path652 || (_path652 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1129.23 555.933C1129.85 556.823 1130.46 557.717 1131.08 558.606C1133.61 554.372 1139.48 564.639 1137.69 565.457C1134.48 566.926 1134.76 561.595 1134.08 561.673C1133.98 562.997 1133.88 564.319 1133.78 565.642L1131.55 565.897L1129.23 555.933Z\",\n    fill: \"black\"\n  })), _path653 || (_path653 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1137.06 555.561C1138.46 557.063 1139.86 558.561 1141.27 560.062C1143.64 567.918 1137.58 566.664 1137.06 555.561Z\",\n    fill: \"black\"\n  })), _path654 || (_path654 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1126.09 559.439C1127.09 560.464 1128.09 561.482 1129.09 562.506C1132.52 570.523 1124.72 567.266 1126.09 559.439Z\",\n    fill: \"black\"\n  })), _path655 || (_path655 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M636.273 543.639C637.337 543.904 635.022 547.974 637.565 551.092C639.999 554.072 643.582 553.336 646.291 557.145C646.511 557.452 648.461 560.267 647.332 561.646C646.5 562.658 644.828 561.899 642.524 562.769C639.151 564.035 637.937 567.399 637.879 567.581C636.435 571.844 640.08 575.418 640.263 575.597C638.708 576.629 636.302 578.002 633.07 578.882C629.922 579.741 627.548 579.8 623.883 579.758C620.689 579.721 616.049 579.775 610.184 580.217C611.73 579.431 614.004 578.071 616.16 575.88C618.054 573.948 618.402 572.856 619.725 571.571C621.287 570.059 624.171 568.329 629.965 567.973C627.301 564.857 626.896 562.195 626.831 560.819C626.782 559.657 626.931 558.001 631.527 550.096C634.989 544.166 635.814 543.538 636.273 543.639Z\",\n    fill: \"#E8AE86\"\n  })), _path656 || (_path656 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M636.308 543.532C636.901 543.781 636.656 544.424 636.661 544.861C636.507 546.122 636.343 547.532 636.682 548.755C637.281 551.522 640.163 552.662 642.826 553.601C644.751 554.347 646.503 555.713 647.523 557.355C648.821 559.1 649.682 562.642 646.361 563.129C643.336 563.186 641.224 563.936 639.563 566.25C637.223 569.157 638.354 573.145 640.915 575.654L640.532 575.893C637.301 577.937 633.582 579.367 629.659 579.904C625.771 580.387 621.839 580.187 617.962 580.5C614.071 580.748 609.628 581.141 605.728 581.55L609.644 579.402C612.183 578.018 614.477 576.241 616.199 574.098C617.833 571.614 620.093 569.006 623.348 568.04C625.461 567.268 627.675 566.976 629.855 566.843L628.936 568.614C625.231 564.145 624.687 559.852 627.993 555.013C630.335 551.251 632.557 547.449 635.36 543.959C635.587 543.775 635.813 543.452 636.283 543.511L636.308 543.532ZM636.25 543.746C635.744 543.773 635.354 544.461 635.045 544.816C632.698 548.183 630.982 551.905 629.337 555.552C628.716 557.063 628.023 558.629 627.885 560.199C627.915 562.769 629.197 565.24 630.981 567.31L632.35 568.894L630.074 569.081C626.293 569.381 622.266 570.293 619.972 573.083C617.743 576.277 614.548 579.259 610.724 581.022L610.125 579.311C615.317 579.005 620.585 579.103 625.758 579.309C628.327 579.407 630.88 579.196 633.318 578.485C635.757 577.805 638.034 576.701 640.019 575.291L639.965 575.889C637.479 573.518 635.978 569.94 637.339 566.756C638.673 563.347 641.975 561.207 646.05 561.266C646.435 561.198 646.411 561.198 646.529 561.058C646.917 560.21 646.338 559.097 645.881 558.174C644.671 555.703 642.332 554.674 639.653 553.308C636.863 551.826 635.804 548.883 636.266 546.168L636.432 544.853C636.44 544.512 636.614 543.934 636.274 543.756L636.25 543.746Z\",\n    fill: \"#3C3636\"\n  })), _path657 || (_path657 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M658.253 567.916C660.155 568.758 662.204 569.79 664.316 571.045C668.419 573.483 671.62 576.091 674.045 578.399C671.064 578.061 667.159 578.064 663.211 579.593C659.324 581.1 657.649 583.19 655.197 582.781C653.627 582.522 651.647 581.222 649.917 576.548C653.008 574.987 654.854 572.052 654.65 569.025C654.404 565.507 651.427 562.448 647.332 561.643C648.076 560.365 650.325 556.892 655.087 554.852C662.283 551.781 669.21 554.57 670.155 554.975C669.164 555.818 667.698 557.233 666.589 559.284C665.28 561.689 665.512 563.009 664.241 564.645C663.398 565.722 661.763 567.107 658.253 567.916Z\",\n    fill: \"#E8AE86\"\n  })), _path658 || (_path658 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M658.374 567.937C665.524 570.136 671.688 574.683 676.784 579.606L673.912 579.319C669.242 578.851 664.609 579.524 660.524 581.685C654.29 585.598 651.52 581.705 649.569 576.66L649.47 576.405L649.745 576.263C654.516 573.978 655.503 567.757 651.428 564.583C649.906 563.225 647.802 562.641 645.725 562.345C648.664 556.017 656.025 551.546 663.857 552.393C666.765 552.604 669.536 553.521 672.105 554.729L670.923 555.681C668.546 557.565 666.959 559.899 666.039 562.652C665.121 565.639 661.758 567.694 658.374 567.926L658.374 567.937ZM658.133 567.908C658.432 567.744 659.008 567.545 659.369 567.424C661.901 566.519 664.147 564.765 664.636 562.305C665.229 559.364 666.93 556.4 669.4 554.28L669.684 555.877C665.919 554.481 661.479 554.117 657.574 555.23C653.622 556.311 650.264 558.846 648.326 562.102L647.598 560.713C653.711 561.857 657.416 568.417 654.158 573.256C653.211 574.761 651.803 576.015 650.126 576.846L650.302 576.449C650.663 577.458 651.097 578.456 651.662 579.377C653.935 583.063 656.201 583.069 659.715 580.51C663.745 577.774 669.229 576.739 674.204 577.481L673.306 579.028C671.123 576.898 668.774 574.899 666.245 573.072C663.691 571.15 660.901 569.604 658.157 567.897L658.133 567.908Z\",\n    fill: \"#3C3636\"\n  })), _path659 || (_path659 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M652.39 581.856C652.027 582.746 651.355 584.023 650.017 585.084C647.808 586.849 645.134 586.976 642.811 587.302C640.212 587.663 636.485 588.497 632.002 590.629C631.347 588.226 631.663 586.334 631.94 585.296C633.117 580.855 637.502 576.483 641.481 576.649C643.411 576.734 643.93 577.816 646.314 577.66C648.904 577.491 649.973 576.102 651.123 576.536C651.91 576.837 652.682 577.969 652.39 581.856Z\",\n    fill: \"#E8AE86\"\n  })), _path660 || (_path660 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M652.511 581.885C651.884 585.968 647.422 587.898 643.292 588.213C639.369 588.813 635.29 589.395 631.743 591.132C630.451 586.827 631.382 581.951 634.838 578.572C636.542 576.898 639.066 575.289 641.865 575.534C642.891 575.597 643.836 576.055 644.406 576.294C645.556 576.771 646.833 576.692 648.034 576.326C653.37 573.97 653.364 578.6 652.511 581.874L652.511 581.885ZM652.281 581.834C652.034 580.29 652.061 578.487 651.011 577.337C650.841 577.221 650.745 577.233 650.649 577.266C649.653 577.672 647.688 578.72 646.266 578.715C644.763 578.999 642.883 578.008 641.615 577.809C639.673 577.704 637.937 578.706 636.481 579.939C633.439 582.674 631.124 586.659 632.387 590.559L631.842 590.342C633.592 589.511 635.317 588.594 637.164 587.858C640.556 586.154 645.008 586.55 648.392 585.262C649.987 584.582 651.31 583.329 652.293 581.845L652.281 581.834Z\",\n    fill: \"#3C3636\"\n  })), _path661 || (_path661 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M646.32 578.196C651.312 578.137 655.317 574.508 655.265 570.09C655.213 565.671 651.125 562.137 646.133 562.196C641.141 562.254 637.136 565.883 637.187 570.302C637.239 574.72 641.328 578.254 646.32 578.196Z\",\n    fill: \"url(#paint0_radial_95_226)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path662 || (_path662 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M710.527 560.381C711.59 560.646 709.276 564.716 711.819 567.833C714.253 570.813 717.836 570.078 720.545 573.887C720.765 574.194 722.715 577.009 721.586 578.387C720.754 579.4 719.082 578.641 716.778 579.511C713.405 580.777 712.191 584.141 712.133 584.323C710.688 588.586 714.334 592.16 714.517 592.339C712.962 593.371 710.556 594.743 707.324 595.624C704.176 596.482 701.802 596.542 698.137 596.5C694.943 596.462 690.303 596.517 684.438 596.959C685.983 596.173 688.258 594.812 690.414 592.622C692.308 590.69 692.656 589.597 693.979 588.312C695.54 586.801 698.425 585.07 704.219 584.715C701.554 581.599 701.15 578.936 701.085 577.561C701.035 576.399 701.185 574.743 705.781 566.837C709.243 560.908 710.067 560.279 710.527 560.381Z\",\n    fill: \"#E8AE86\"\n  })), _path663 || (_path663 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M710.562 560.273C711.155 560.523 710.91 561.166 710.915 561.603C710.761 562.864 710.596 564.274 710.936 565.497C711.535 568.263 714.417 569.403 717.08 570.343C719.005 571.088 720.757 572.455 721.777 574.096C723.075 575.841 723.936 579.384 720.615 579.871C717.59 579.928 715.477 580.678 713.817 582.991C711.477 585.899 712.608 589.886 715.169 592.395L714.786 592.635C711.555 594.678 707.836 596.108 703.912 596.645C700.025 597.128 696.093 596.929 692.216 597.241C688.325 597.489 683.882 597.883 679.982 598.291L683.898 596.144C686.437 594.759 688.73 592.982 690.453 590.839C692.087 588.356 694.347 585.748 697.602 584.781C699.714 584.01 701.929 583.717 704.109 583.585L703.19 585.356C699.485 580.887 698.94 576.594 702.247 571.754C704.589 567.993 706.811 564.19 709.614 560.701C709.841 560.517 710.066 560.194 710.537 560.252L710.562 560.273ZM710.504 560.488C709.998 560.515 709.608 561.202 709.299 561.558C706.952 564.925 705.236 568.647 703.591 572.293C702.97 573.805 702.277 575.37 702.139 576.94C702.169 579.511 703.451 581.982 705.235 584.052L706.604 585.636L704.328 585.823C700.547 586.123 696.52 587.034 694.226 589.824C691.997 593.019 688.802 596.001 684.978 597.763L684.379 596.053C689.57 595.746 694.839 595.845 700.012 596.051C702.581 596.149 705.134 595.937 707.572 595.226C710.011 594.547 712.288 593.443 714.273 592.032L714.219 592.63C711.733 590.259 710.232 586.682 711.593 583.497C712.927 580.089 716.229 577.949 720.304 578.008C720.689 577.939 720.664 577.939 720.783 577.799C721.171 576.952 720.592 575.838 720.135 574.916C718.925 572.444 716.586 571.415 713.906 570.049C711.117 568.567 710.058 565.624 710.52 562.909L710.686 561.595C710.694 561.253 710.868 560.675 710.528 560.498L710.504 560.488Z\",\n    fill: \"#3C3636\"\n  })), _path664 || (_path664 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M732.506 584.66C734.408 585.502 736.457 586.534 738.569 587.789C742.672 590.227 745.873 592.835 748.298 595.143C745.317 594.805 741.412 594.808 737.464 596.337C733.577 597.844 731.902 599.933 729.45 599.525C727.88 599.266 725.9 597.966 724.17 593.292C727.261 591.73 729.107 588.796 728.903 585.769C728.657 582.251 725.68 579.192 721.584 578.387C722.329 577.108 724.578 573.636 729.34 571.596C736.536 568.525 743.463 571.313 744.408 571.718C743.417 572.562 741.951 573.977 740.842 576.027C739.533 578.432 739.765 579.753 738.494 581.389C737.651 582.466 736.016 583.85 732.506 584.66Z\",\n    fill: \"#E8AE86\"\n  })), _path665 || (_path665 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M732.627 584.68C739.777 586.88 745.941 591.427 751.037 596.349L748.165 596.063C743.495 595.595 738.862 596.268 734.777 598.428C728.543 602.342 725.773 598.448 723.822 593.404L723.723 593.149L723.998 593.007C728.769 590.721 729.756 584.501 725.681 581.327C724.159 579.968 722.055 579.385 719.978 579.089C722.917 572.76 730.278 568.289 738.11 569.136C741.017 569.348 743.788 570.265 746.358 571.472L745.176 572.425C742.799 574.309 741.211 576.643 740.291 579.395C739.374 582.382 736.011 584.438 732.627 584.67L732.627 584.68ZM732.386 584.651C732.685 584.488 733.261 584.289 733.622 584.167C736.154 583.263 738.4 581.508 738.889 579.049C739.482 576.108 741.183 573.144 743.653 571.024L743.937 572.621C740.172 571.224 735.732 570.86 731.827 571.973C727.874 573.054 724.517 575.59 722.579 578.845L721.851 577.456C727.964 578.601 731.669 585.161 728.411 590C727.464 591.505 726.056 592.759 724.379 593.589L724.555 593.192C724.916 594.202 725.35 595.199 725.915 596.121C728.188 599.807 730.454 599.812 733.968 597.253C737.998 594.518 743.482 593.483 748.457 594.224L747.559 595.771C745.376 593.642 743.026 591.642 740.498 589.816C737.944 587.893 735.154 586.347 732.41 584.64L732.386 584.651Z\",\n    fill: \"#3C3636\"\n  })), _path666 || (_path666 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M726.643 598.599C726.28 599.489 725.608 600.767 724.27 601.828C722.061 603.593 719.387 603.72 717.064 604.046C714.465 604.407 710.738 605.24 706.255 607.373C705.6 604.97 705.916 603.078 706.193 602.04C707.37 597.598 711.755 593.226 715.734 593.393C717.664 593.477 718.183 594.559 720.567 594.403C723.157 594.234 724.225 592.846 725.376 593.28C726.163 593.58 726.935 594.713 726.643 598.599Z\",\n    fill: \"#E8AE86\"\n  })), _path667 || (_path667 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M726.764 598.629C726.137 602.711 721.676 604.641 717.545 604.956C713.623 605.557 709.543 606.138 705.996 607.876C704.704 603.571 705.635 598.695 709.091 595.315C710.795 593.642 713.32 592.033 716.119 592.278C717.144 592.34 718.09 592.799 718.659 593.037C719.81 593.515 721.086 593.436 722.287 593.07C727.624 590.713 727.618 595.343 726.764 598.618L726.764 598.629ZM726.535 598.578C726.287 597.034 726.315 595.231 725.264 594.08C725.094 593.965 724.998 593.977 724.902 594.01C723.906 594.416 721.942 595.463 720.519 595.459C719.016 595.743 717.136 594.751 715.868 594.553C713.926 594.448 712.19 595.45 710.734 596.683C707.693 599.418 705.377 603.403 706.64 607.303L706.095 607.085C707.845 606.254 709.57 605.338 711.418 604.601C714.809 602.897 719.261 603.293 722.645 602.005C724.24 601.325 725.564 600.072 726.547 598.589L726.535 598.578Z\",\n    fill: \"#3C3636\"\n  })), _path668 || (_path668 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M720.573 594.936C725.565 594.877 729.57 591.248 729.519 586.83C729.467 582.411 725.378 578.877 720.386 578.936C715.394 578.994 711.389 582.623 711.441 587.042C711.493 591.46 715.581 594.994 720.573 594.936Z\",\n    fill: \"url(#paint1_radial_95_226)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path669 || (_path669 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1295.1 571.138C1296.17 571.403 1293.85 575.474 1296.4 578.591C1298.83 581.571 1302.41 580.836 1305.12 584.644C1305.34 584.951 1307.29 587.766 1306.16 589.145C1305.33 590.158 1303.66 589.398 1301.35 590.268C1297.98 591.535 1296.77 594.899 1296.71 595.081C1295.27 599.344 1298.91 602.917 1299.09 603.097C1297.54 604.128 1295.13 605.501 1291.9 606.381C1288.75 607.24 1286.38 607.3 1282.71 607.257C1279.52 607.22 1274.88 607.274 1269.01 607.716C1270.56 606.93 1272.83 605.57 1274.99 603.379C1276.88 601.447 1277.23 600.355 1278.56 599.07C1280.12 597.558 1283 595.828 1288.8 595.472C1286.13 592.356 1285.73 589.694 1285.66 588.318C1285.61 587.156 1285.76 585.501 1290.36 577.595C1293.82 571.665 1294.64 571.037 1295.1 571.138Z\",\n    fill: \"#E8AE86\"\n  })), _path670 || (_path670 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1295.14 571.031C1295.73 571.28 1295.49 571.923 1295.49 572.361C1295.34 573.621 1295.17 575.031 1295.51 576.254C1296.11 579.021 1298.99 580.161 1301.66 581.1C1303.58 581.846 1305.33 583.212 1306.35 584.854C1307.65 586.599 1308.51 590.142 1305.19 590.629C1302.17 590.685 1300.05 591.436 1298.39 593.749C1296.05 596.657 1297.19 600.644 1299.75 603.153L1299.36 603.392C1296.13 605.436 1292.41 606.866 1288.49 607.403C1284.6 607.886 1280.67 607.687 1276.79 607.999C1272.9 608.247 1268.46 608.64 1264.56 609.049L1268.48 606.901C1271.01 605.517 1273.31 603.74 1275.03 601.597C1276.66 599.113 1278.92 596.505 1282.18 595.539C1284.29 594.767 1286.51 594.475 1288.69 594.342L1287.77 596.114C1284.06 591.644 1283.52 587.351 1286.82 582.512C1289.17 578.75 1291.39 574.948 1294.19 571.458C1294.42 571.274 1294.64 570.952 1295.11 571.01L1295.14 571.031ZM1295.08 571.245C1294.58 571.272 1294.19 571.96 1293.88 572.315C1291.53 575.682 1289.81 579.404 1288.17 583.051C1287.55 584.562 1286.85 586.128 1286.72 587.698C1286.75 590.269 1288.03 592.739 1289.81 594.809L1291.18 596.394L1288.91 596.58C1285.12 596.881 1281.1 597.792 1278.8 600.582C1276.57 603.777 1273.38 606.758 1269.55 608.521L1268.96 606.81C1274.15 606.504 1279.42 606.602 1284.59 606.808C1287.16 606.906 1289.71 606.695 1292.15 605.984C1294.59 605.304 1296.87 604.2 1298.85 602.79L1298.8 603.388C1296.31 601.017 1294.81 597.439 1296.17 594.255C1297.5 590.847 1300.81 588.706 1304.88 588.765C1305.27 588.697 1305.24 588.697 1305.36 588.557C1305.75 587.71 1305.17 586.596 1304.71 585.673C1303.5 583.202 1301.16 582.173 1298.48 580.807C1295.69 579.325 1294.63 576.382 1295.1 573.667L1295.26 572.353C1295.27 572.011 1295.44 571.433 1295.11 571.256L1295.08 571.245Z\",\n    fill: \"#3C3636\"\n  })), _path671 || (_path671 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1317.08 595.415C1318.99 596.257 1321.03 597.289 1323.15 598.545C1327.25 600.982 1330.45 603.591 1332.88 605.899C1329.89 605.56 1325.99 605.563 1322.04 607.092C1318.15 608.6 1316.48 610.689 1314.03 610.28C1312.46 610.021 1310.48 608.721 1308.75 604.048C1311.84 602.486 1313.68 599.552 1313.48 596.524C1313.23 593.007 1310.26 589.948 1306.16 589.142C1306.91 587.864 1309.16 584.392 1313.92 582.352C1321.11 579.28 1328.04 582.069 1328.98 582.474C1327.99 583.318 1326.53 584.732 1325.42 586.783C1324.11 589.188 1324.34 590.508 1323.07 592.145C1322.23 593.221 1320.59 594.606 1317.08 595.415Z\",\n    fill: \"#E8AE86\"\n  })), _path672 || (_path672 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1317.2 595.436C1324.35 597.635 1330.52 602.182 1335.61 607.105L1332.74 606.818C1328.07 606.35 1323.44 607.023 1319.35 609.184C1313.12 613.097 1310.35 609.204 1308.4 604.159L1308.3 603.904L1308.57 603.762C1313.35 601.477 1314.33 595.256 1310.26 592.082C1308.74 590.724 1306.63 590.14 1304.55 589.845C1307.49 583.516 1314.85 579.045 1322.69 579.892C1325.59 580.103 1328.37 581.02 1330.93 582.228L1329.75 583.18C1327.38 585.064 1325.79 587.398 1324.87 590.151C1323.95 593.138 1320.59 595.194 1317.2 595.425L1317.2 595.436ZM1316.96 595.407C1317.26 595.243 1317.84 595.044 1318.2 594.923C1320.73 594.018 1322.98 592.264 1323.47 589.804C1324.06 586.864 1325.76 583.899 1328.23 581.779L1328.51 583.376C1324.75 581.98 1320.31 581.616 1316.4 582.729C1312.45 583.81 1309.09 586.346 1307.16 589.601L1306.43 588.212C1312.54 589.356 1316.25 595.917 1312.99 600.756C1312.04 602.26 1310.63 603.514 1308.96 604.345L1309.13 603.948C1309.49 604.957 1309.93 605.955 1310.49 606.876C1312.76 610.562 1315.03 610.568 1318.54 608.009C1322.57 605.273 1328.06 604.238 1333.03 604.98L1332.14 606.527C1329.95 604.397 1327.6 602.398 1325.07 600.571C1322.52 598.649 1319.73 597.103 1316.99 595.396L1316.96 595.407Z\",\n    fill: \"#3C3636\"\n  })), _path673 || (_path673 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1311.22 609.359C1310.86 610.249 1310.19 611.526 1308.85 612.587C1306.64 614.352 1303.96 614.479 1301.64 614.805C1299.04 615.166 1295.32 616 1290.83 618.132C1290.18 615.729 1290.49 613.837 1290.77 612.799C1291.95 608.358 1296.33 603.986 1300.31 604.152C1302.24 604.237 1302.76 605.319 1305.15 605.163C1307.73 604.994 1308.8 603.605 1309.95 604.04C1310.74 604.34 1311.51 605.472 1311.22 609.359Z\",\n    fill: \"#E8AE86\"\n  })), _path674 || (_path674 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1311.34 609.388C1310.71 613.471 1306.25 615.401 1302.12 615.716C1298.2 616.316 1294.12 616.898 1290.57 618.636C1289.28 614.33 1290.21 609.454 1293.67 606.075C1295.37 604.401 1297.9 602.793 1300.7 603.037C1301.72 603.1 1302.67 603.558 1303.24 603.797C1304.39 604.274 1305.66 604.195 1306.87 603.829C1312.2 601.473 1312.2 606.103 1311.34 609.377L1311.34 609.388ZM1311.11 609.337C1310.87 607.793 1310.89 605.99 1309.84 604.84C1309.67 604.724 1309.58 604.736 1309.48 604.769C1308.48 605.176 1306.52 606.223 1305.1 606.218C1303.59 606.502 1301.71 605.511 1300.45 605.312C1298.5 605.207 1296.77 606.209 1295.31 607.442C1292.27 610.177 1289.95 614.162 1291.22 618.063L1290.67 617.845C1292.42 617.014 1294.15 616.097 1296 615.361C1299.39 613.657 1303.84 614.053 1307.22 612.765C1308.82 612.085 1310.14 610.832 1311.12 609.348L1311.11 609.337Z\",\n    fill: \"#3C3636\"\n  })), _path675 || (_path675 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1305.15 605.694C1310.14 605.635 1314.15 602.006 1314.1 597.588C1314.04 593.169 1309.96 589.635 1304.96 589.693C1299.97 589.752 1295.97 593.381 1296.02 597.799C1296.07 602.218 1300.16 605.752 1305.15 605.694Z\",\n    fill: \"url(#paint2_radial_95_226)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path676 || (_path676 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1245.59 615.745C1246.65 616.01 1244.34 620.08 1246.88 623.198C1249.31 626.178 1252.9 625.442 1255.6 629.251C1255.82 629.558 1257.77 632.373 1256.65 633.752C1255.81 634.764 1254.14 634.005 1251.84 634.875C1248.47 636.141 1247.25 639.505 1247.19 639.687C1245.75 643.95 1249.39 647.524 1249.58 647.703C1248.02 648.735 1245.62 650.107 1242.38 650.988C1239.24 651.846 1236.86 651.906 1233.2 651.864C1230 651.827 1225.36 651.881 1219.5 652.323C1221.04 651.537 1223.32 650.177 1225.47 647.986C1227.37 646.054 1227.72 644.962 1229.04 643.677C1230.6 642.165 1233.48 640.435 1239.28 640.079C1236.61 636.963 1236.21 634.3 1236.15 632.925C1236.1 631.763 1236.24 630.107 1240.84 622.202C1244.3 616.272 1245.13 615.644 1245.59 615.745Z\",\n    fill: \"#E8AE86\"\n  })), _path677 || (_path677 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1245.62 615.638C1246.21 615.887 1245.97 616.53 1245.97 616.967C1245.82 618.228 1245.66 619.638 1246 620.861C1246.59 623.628 1249.48 624.767 1252.14 625.707C1254.06 626.453 1255.82 627.819 1256.84 629.461C1258.13 631.206 1259 634.748 1255.67 635.235C1252.65 635.292 1250.54 636.042 1248.88 638.355C1246.54 641.263 1247.67 645.251 1250.23 647.76L1249.85 647.999C1246.62 650.042 1242.9 651.473 1238.97 652.01C1235.08 652.493 1231.15 652.293 1227.28 652.605C1223.39 652.854 1218.94 653.247 1215.04 653.656L1218.96 651.508C1221.5 650.123 1223.79 648.347 1225.51 646.204C1227.15 643.72 1229.41 641.112 1232.66 640.146C1234.77 639.374 1236.99 639.081 1239.17 638.949L1238.25 640.72C1234.54 636.251 1234 631.958 1237.31 627.118C1239.65 623.357 1241.87 619.554 1244.67 616.065C1244.9 615.881 1245.13 615.558 1245.6 615.617L1245.62 615.638ZM1245.56 615.852C1245.06 615.879 1244.67 616.567 1244.36 616.922C1242.01 620.289 1240.3 624.011 1238.65 627.657C1238.03 629.169 1237.34 630.735 1237.2 632.305C1237.23 634.875 1238.51 637.346 1240.3 639.416L1241.66 641L1239.39 641.187C1235.61 641.487 1231.58 642.399 1229.29 645.189C1227.06 648.383 1223.86 651.365 1220.04 653.128L1219.44 651.417C1224.63 651.111 1229.9 651.209 1235.07 651.415C1237.64 651.513 1240.19 651.302 1242.63 650.59C1245.07 649.911 1247.35 648.807 1249.33 647.397L1249.28 647.995C1246.79 645.624 1245.29 642.046 1246.65 638.861C1247.99 635.453 1251.29 633.313 1255.36 633.372C1255.75 633.303 1255.72 633.304 1255.84 633.164C1256.23 632.316 1255.65 631.203 1255.19 630.28C1253.98 627.808 1251.65 626.78 1248.97 625.414C1246.18 623.931 1245.12 620.989 1245.58 618.273L1245.75 616.959C1245.75 616.618 1245.93 616.04 1245.59 615.862L1245.56 615.852Z\",\n    fill: \"#3C3636\"\n  })), _path678 || (_path678 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1267.57 640.022C1269.47 640.864 1271.52 641.896 1273.63 643.151C1277.73 645.589 1280.93 648.197 1283.36 650.505C1280.38 650.167 1276.47 650.17 1272.53 651.699C1268.64 653.206 1266.96 655.295 1264.51 654.887C1262.94 654.628 1260.96 653.328 1259.23 648.654C1262.32 647.093 1264.17 644.158 1263.97 641.131C1263.72 637.613 1260.74 634.554 1256.65 633.749C1257.39 632.471 1259.64 628.998 1264.4 626.958C1271.6 623.887 1278.52 626.675 1279.47 627.08C1278.48 627.924 1277.01 629.339 1275.9 631.39C1274.59 633.795 1274.83 635.115 1273.56 636.751C1272.71 637.828 1271.08 639.213 1267.57 640.022Z\",\n    fill: \"#E8AE86\"\n  })), _path679 || (_path679 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1267.69 640.043C1274.84 642.242 1281 646.789 1286.1 651.712L1283.23 651.425C1278.56 650.957 1273.92 651.63 1269.84 653.79C1263.6 657.704 1260.84 653.811 1258.88 648.766L1258.78 648.511L1259.06 648.369C1263.83 646.084 1264.82 639.863 1260.74 636.689C1259.22 635.33 1257.12 634.747 1255.04 634.451C1257.98 628.123 1265.34 623.652 1273.17 624.499C1276.08 624.71 1278.85 625.627 1281.42 626.834L1280.24 627.787C1277.86 629.671 1276.27 632.005 1275.35 634.757C1274.44 637.745 1271.07 639.8 1267.69 640.032L1267.69 640.043ZM1267.45 640.013C1267.75 639.85 1268.32 639.651 1268.68 639.53C1271.22 638.625 1273.46 636.871 1273.95 634.411C1274.54 631.47 1276.24 628.506 1278.71 626.386L1279 627.983C1275.23 626.587 1270.79 626.223 1266.89 627.335C1262.94 628.416 1259.58 630.952 1257.64 634.207L1256.91 632.818C1263.03 633.963 1266.73 640.523 1263.47 645.362C1262.53 646.867 1261.12 648.121 1259.44 648.951L1259.62 648.555C1259.98 649.564 1260.41 650.562 1260.98 651.483C1263.25 655.169 1265.52 655.175 1269.03 652.616C1273.06 649.88 1278.54 648.845 1283.52 649.587L1282.62 651.134C1280.44 649.004 1278.09 647.005 1275.56 645.178C1273.01 643.256 1270.22 641.709 1267.47 640.003L1267.45 640.013Z\",\n    fill: \"#3C3636\"\n  })), _path680 || (_path680 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1261.7 653.966C1261.34 654.855 1260.67 656.133 1259.33 657.194C1257.12 658.959 1254.45 659.086 1252.13 659.412C1249.53 659.773 1245.8 660.606 1241.32 662.739C1240.66 660.336 1240.98 658.444 1241.25 657.406C1242.43 652.965 1246.82 648.592 1250.8 648.759C1252.73 648.843 1253.24 649.925 1255.63 649.769C1258.22 649.6 1259.29 648.212 1260.44 648.646C1261.22 648.946 1262 650.079 1261.7 653.966Z\",\n    fill: \"#E8AE86\"\n  })), _path681 || (_path681 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1261.83 653.995C1261.2 658.077 1256.74 660.007 1252.61 660.322C1248.68 660.923 1244.6 661.504 1241.06 663.242C1239.77 658.937 1240.7 654.061 1244.15 650.681C1245.86 649.008 1248.38 647.399 1251.18 647.644C1252.21 647.706 1253.15 648.165 1253.72 648.403C1254.87 648.881 1256.15 648.802 1257.35 648.436C1262.68 646.079 1262.68 650.71 1261.83 653.984L1261.83 653.995ZM1261.6 653.944C1261.35 652.4 1261.38 650.597 1260.33 649.446C1260.16 649.331 1260.06 649.343 1259.96 649.376C1258.97 649.782 1257 650.829 1255.58 650.825C1254.08 651.109 1252.2 650.118 1250.93 649.919C1248.99 649.814 1247.25 650.816 1245.8 652.049C1242.75 654.784 1240.44 658.769 1241.7 662.669L1241.16 662.452C1242.91 661.62 1244.63 660.704 1246.48 659.967C1249.87 658.263 1254.32 658.659 1257.71 657.372C1259.3 656.691 1260.62 655.438 1261.61 653.955L1261.6 653.944Z\",\n    fill: \"#3C3636\"\n  })), _path682 || (_path682 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1255.63 650.303C1260.63 650.244 1264.63 646.615 1264.58 642.197C1264.53 637.778 1260.44 634.244 1255.45 634.302C1250.46 634.361 1246.45 637.99 1246.5 642.408C1246.55 646.827 1250.64 650.361 1255.63 650.303Z\",\n    fill: \"url(#paint3_radial_95_226)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path683 || (_path683 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M962.613 636.674C963.677 636.939 961.362 641.009 963.906 644.127C966.339 647.107 969.923 646.371 972.631 650.18C972.852 650.487 974.801 653.302 973.672 654.68C972.84 655.693 971.168 654.934 968.864 655.804C965.492 657.07 964.278 660.434 964.22 660.616C962.775 664.879 966.421 668.453 966.604 668.632C965.049 669.664 962.642 671.036 959.41 671.917C956.262 672.775 953.888 672.835 950.224 672.793C947.029 672.756 942.389 672.81 936.524 673.252C938.07 672.466 940.344 671.106 942.5 668.915C944.394 666.983 944.743 665.891 946.066 664.606C947.627 663.094 950.512 661.364 956.305 661.008C953.641 657.892 953.236 655.229 953.172 653.854C953.122 652.692 953.271 651.036 957.867 643.13C961.33 637.201 962.154 636.573 962.613 636.674Z\",\n    fill: \"#E8AE86\"\n  })), _path684 || (_path684 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M962.648 636.567C963.242 636.816 962.996 637.459 963.001 637.896C962.847 639.157 962.683 640.567 963.023 641.79C963.622 644.557 966.504 645.696 969.166 646.636C971.092 647.382 972.843 648.748 973.863 650.39C975.161 652.135 976.022 655.677 972.701 656.164C969.676 656.221 967.564 656.971 965.903 659.284C963.563 662.192 964.695 666.18 967.255 668.689L966.872 668.928C963.642 670.971 959.922 672.402 955.999 672.939C952.111 673.421 948.18 673.222 944.302 673.534C940.412 673.783 935.969 674.176 932.068 674.584L935.984 672.437C938.523 671.052 940.817 669.276 942.539 667.133C944.174 664.649 946.433 662.041 949.689 661.075C951.801 660.303 954.015 660.01 956.195 659.878L955.276 661.649C951.571 657.18 951.027 652.887 954.333 648.047C956.676 644.286 958.897 640.483 961.701 636.994C961.928 636.81 962.153 636.487 962.624 636.546L962.648 636.567ZM962.59 636.781C962.084 636.808 961.695 637.495 961.385 637.851C959.038 641.218 957.322 644.94 955.677 648.586C955.056 650.098 954.363 651.664 954.225 653.233C954.255 655.804 955.538 658.275 957.322 660.345L958.69 661.929L956.414 662.116C952.633 662.416 948.606 663.328 946.312 666.118C944.084 669.312 940.888 672.294 937.064 674.057L936.465 672.346C941.657 672.04 946.925 672.138 952.099 672.344C954.667 672.442 957.22 672.231 959.659 671.519C962.097 670.84 964.375 669.736 966.359 668.326L966.306 668.924C963.819 666.553 962.319 662.975 963.68 659.79C965.014 656.382 968.315 654.242 972.39 654.301C972.775 654.232 972.751 654.233 972.87 654.093C973.258 653.245 972.678 652.132 972.221 651.209C971.011 648.737 968.673 647.709 965.993 646.343C963.203 644.86 962.144 641.918 962.607 639.202L962.772 637.888C962.78 637.547 962.954 636.969 962.615 636.791L962.59 636.781Z\",\n    fill: \"#3C3636\"\n  })), _path685 || (_path685 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M984.594 660.955C986.496 661.797 988.545 662.829 990.657 664.084C994.76 666.522 997.961 669.13 1000.39 671.438C997.405 671.1 993.5 671.103 989.552 672.632C985.664 674.139 983.989 676.228 981.538 675.82C979.968 675.561 977.988 674.261 976.258 669.587C979.349 668.025 981.195 665.091 980.991 662.064C980.745 658.546 977.768 655.487 973.672 654.682C974.417 653.404 976.666 649.931 981.427 647.891C988.624 644.82 995.551 647.608 996.496 648.013C995.505 648.857 994.039 650.272 992.93 652.322C991.62 654.728 991.853 656.048 990.582 657.684C989.739 658.761 988.104 660.146 984.594 660.955Z\",\n    fill: \"#E8AE86\"\n  })), _path686 || (_path686 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M984.715 660.976C991.864 663.175 998.029 667.722 1003.12 672.644L1000.25 672.358C995.583 671.89 990.95 672.563 986.865 674.723C980.631 678.637 977.861 674.743 975.91 669.699L975.81 669.444L976.086 669.302C980.856 667.016 981.844 660.796 977.769 657.622C976.247 656.263 974.142 655.68 972.066 655.384C975.005 649.055 982.365 644.584 990.198 645.431C993.105 645.643 995.876 646.56 998.446 647.767L997.264 648.72C994.887 650.604 993.299 652.938 992.379 655.69C991.462 658.677 988.099 660.733 984.715 660.965L984.715 660.976ZM984.474 660.946C984.773 660.783 985.349 660.584 985.709 660.462C988.242 659.558 990.488 657.803 990.977 655.344C991.569 652.403 993.27 649.439 995.741 647.319L996.025 648.916C992.26 647.52 987.82 647.156 983.915 648.268C979.962 649.349 976.605 651.885 974.666 655.14L973.939 653.751C980.051 654.896 983.756 661.456 980.498 666.295C979.552 667.8 978.144 669.054 976.466 669.884L976.643 669.487C977.004 670.497 977.438 671.494 978.003 672.416C980.276 676.102 982.542 676.107 986.056 673.549C990.086 670.813 995.57 669.778 1000.54 670.52L999.647 672.066C997.464 669.937 995.114 667.937 992.586 666.111C990.032 664.188 987.242 662.642 984.498 660.935L984.474 660.946Z\",\n    fill: \"#3C3636\"\n  })), _path687 || (_path687 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M978.731 674.893C978.368 675.782 977.696 677.06 976.358 678.121C974.149 679.886 971.475 680.013 969.152 680.339C966.553 680.7 962.826 681.533 958.343 683.666C957.688 681.263 958.004 679.371 958.281 678.333C959.458 673.892 963.843 669.519 967.822 669.686C969.752 669.77 970.271 670.852 972.655 670.696C975.245 670.527 976.313 669.139 977.463 669.573C978.25 669.873 979.023 671.006 978.731 674.893Z\",\n    fill: \"#E8AE86\"\n  })), _path688 || (_path688 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M978.852 674.922C978.225 679.004 973.764 680.934 969.633 681.249C965.711 681.85 961.631 682.431 958.084 684.169C956.792 679.864 957.723 674.988 961.179 671.608C962.883 669.935 965.408 668.326 968.207 668.571C969.232 668.633 970.178 669.092 970.747 669.33C971.898 669.808 973.174 669.729 974.375 669.363C979.712 667.006 979.705 671.637 978.852 674.911L978.852 674.922ZM978.622 674.871C978.375 673.327 978.402 671.524 977.352 670.373C977.182 670.258 977.086 670.27 976.99 670.303C975.994 670.709 974.03 671.756 972.607 671.752C971.104 672.036 969.224 671.045 967.956 670.846C966.014 670.741 964.278 671.743 962.822 672.976C959.781 675.711 957.465 679.696 958.728 683.596L958.183 683.379C959.933 682.547 961.658 681.631 963.506 680.894C966.897 679.19 971.349 679.586 974.733 678.299C976.328 677.618 977.652 676.365 978.635 674.882L978.622 674.871Z\",\n    fill: \"#3C3636\"\n  })), _path689 || (_path689 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M972.661 671.228C977.653 671.17 981.658 667.54 981.606 663.122C981.555 658.704 977.466 655.169 972.474 655.228C967.482 655.286 963.477 658.915 963.529 663.334C963.581 667.752 967.669 671.287 972.661 671.228Z\",\n    fill: \"url(#paint4_radial_95_226)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path690 || (_path690 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M891.641 643.667C892.705 643.932 890.39 648.003 892.934 651.12C895.368 654.1 898.951 653.365 901.659 657.174C901.88 657.48 903.829 660.295 902.7 661.674C901.869 662.687 900.196 661.928 897.892 662.797C894.52 664.064 893.306 667.428 893.248 667.61C891.803 671.873 895.449 675.447 895.632 675.626C894.077 676.658 891.67 678.03 888.438 678.911C885.29 679.769 882.917 679.829 879.252 679.786C876.057 679.749 871.417 679.804 865.553 680.246C867.098 679.459 869.372 678.099 871.528 675.908C873.422 673.976 873.771 672.884 875.094 671.599C876.655 670.087 879.54 668.357 885.333 668.001C882.669 664.885 882.264 662.223 882.2 660.848C882.15 659.685 882.3 658.03 886.896 650.124C890.358 644.195 891.182 643.566 891.641 643.667Z\",\n    fill: \"#E8AE86\"\n  })), _path691 || (_path691 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M891.676 643.56C892.27 643.81 892.024 644.453 892.029 644.89C891.875 646.151 891.711 647.561 892.051 648.784C892.65 651.55 895.532 652.69 898.195 653.63C900.12 654.375 901.872 655.742 902.891 657.383C904.189 659.128 905.051 662.671 901.73 663.158C898.705 663.215 896.592 663.965 894.932 666.278C892.591 669.186 893.723 673.173 896.283 675.682L895.901 675.921C892.67 677.965 888.95 679.395 885.027 679.932C881.14 680.415 877.208 680.216 873.33 680.528C869.44 680.776 864.997 681.17 861.096 681.578L865.013 679.431C867.552 678.046 869.845 676.269 871.568 674.126C873.202 671.643 875.462 669.035 878.717 668.068C880.829 667.297 883.044 667.004 885.224 666.872L884.304 668.643C880.6 664.174 880.055 659.881 883.361 655.041C885.704 651.28 887.925 647.477 890.729 643.988C890.956 643.804 891.181 643.481 891.652 643.539L891.676 643.56ZM891.619 643.775C891.113 643.802 890.723 644.489 890.414 644.845C888.067 648.211 886.35 651.934 884.706 655.58C884.085 657.092 883.392 658.657 883.253 660.227C883.284 662.798 884.566 665.269 886.35 667.339L887.719 668.923L885.443 669.11C881.662 669.41 877.634 670.321 875.341 673.111C873.112 676.306 869.917 679.288 866.092 681.05L865.494 679.34C870.685 679.033 875.954 679.132 881.127 679.338C883.695 679.436 886.248 679.224 888.687 678.513C891.126 677.834 893.403 676.73 895.387 675.319L895.334 675.917C892.847 673.546 891.347 669.969 892.708 666.784C894.042 663.376 897.344 661.236 901.418 661.294C901.803 661.226 901.779 661.226 901.898 661.086C902.286 660.239 901.706 659.125 901.25 658.203C900.039 655.731 897.701 654.702 895.021 653.336C892.232 651.854 891.173 648.911 891.635 646.196L891.8 644.882C891.808 644.54 891.982 643.962 891.643 643.785L891.619 643.775Z\",\n    fill: \"#3C3636\"\n  })), _path692 || (_path692 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M913.621 667.946C915.524 668.788 917.573 669.82 919.685 671.076C923.787 673.514 926.988 676.122 929.414 678.43C926.432 678.091 922.527 678.094 918.579 679.624C914.692 681.131 913.017 683.22 910.565 682.811C908.995 682.552 907.015 681.253 905.285 676.579C908.377 675.017 910.222 672.083 910.018 669.055C909.772 665.538 906.795 662.479 902.7 661.673C903.444 660.395 905.694 656.923 910.455 654.883C917.651 651.811 924.578 654.6 925.523 655.005C924.532 655.849 923.066 657.263 921.958 659.314C920.648 661.719 920.88 663.039 919.61 664.676C918.766 665.752 917.131 667.137 913.621 667.946Z\",\n    fill: \"#E8AE86\"\n  })), _path693 || (_path693 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M913.742 667.967C920.892 670.166 927.056 674.714 932.152 679.636L929.28 679.35C924.61 678.882 919.977 679.555 915.892 681.715C909.658 685.628 906.889 681.735 904.937 676.69L904.838 676.435L905.113 676.294C909.884 674.008 910.872 667.787 906.797 664.613C905.274 663.255 903.17 662.671 901.093 662.376C904.032 656.047 911.393 651.576 919.225 652.423C922.133 652.634 924.904 653.551 927.473 654.759L926.291 655.711C923.915 657.596 922.327 659.929 921.407 662.682C920.49 665.669 917.127 667.725 913.742 667.956L913.742 667.967ZM913.501 667.938C913.8 667.774 914.377 667.576 914.737 667.454C917.27 666.55 919.515 664.795 920.004 662.336C920.597 659.395 922.298 656.43 924.768 654.31L925.052 655.907C921.287 654.511 916.847 654.147 912.943 655.26C908.99 656.341 905.632 658.877 903.694 662.132L902.966 660.743C909.079 661.887 912.784 668.448 909.526 673.287C908.579 674.791 907.172 676.045 905.494 676.876L905.67 676.479C906.031 677.488 906.465 678.486 907.03 679.408C909.303 683.094 911.569 683.099 915.083 680.54C919.113 677.804 924.597 676.769 929.572 677.511L928.674 679.058C926.491 676.929 924.142 674.929 921.613 673.102C919.059 671.18 916.269 669.634 913.525 667.927L913.501 667.938Z\",\n    fill: \"#3C3636\"\n  })), _path694 || (_path694 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M907.759 681.886C907.395 682.776 906.723 684.053 905.386 685.115C903.176 686.879 900.502 687.007 898.18 687.333C895.58 687.694 891.853 688.527 887.371 690.66C886.716 688.256 887.031 686.364 887.308 685.326C888.485 680.885 892.87 676.513 896.849 676.68C898.779 676.764 899.298 677.846 901.683 677.69C904.272 677.521 905.341 676.132 906.491 676.567C907.278 676.867 908.05 677.999 907.759 681.886Z\",\n    fill: \"#E8AE86\"\n  })), _path695 || (_path695 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M907.879 681.916C907.252 685.998 902.791 687.928 898.66 688.243C894.738 688.844 890.659 689.425 887.111 691.163C885.819 686.858 886.751 681.982 890.206 678.602C891.91 676.929 894.435 675.32 897.234 675.565C898.259 675.627 899.205 676.086 899.774 676.324C900.925 676.802 902.202 676.723 903.403 676.357C908.739 674 908.733 678.63 907.879 681.905L907.879 681.916ZM907.65 681.865C907.403 680.321 907.43 678.518 906.38 677.367C906.21 677.252 906.113 677.264 906.017 677.297C905.022 677.703 903.057 678.75 901.635 678.746C900.131 679.03 898.251 678.038 896.984 677.84C895.042 677.735 893.306 678.737 891.85 679.97C888.808 682.705 886.492 686.69 887.755 690.59L887.21 690.372C888.961 689.541 890.685 688.625 892.533 687.888C895.924 686.184 900.377 686.58 903.761 685.292C905.356 684.612 906.679 683.359 907.662 681.876L907.65 681.865Z\",\n    fill: \"#3C3636\"\n  })), _path696 || (_path696 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M901.688 678.224C906.68 678.165 910.685 674.536 910.633 670.118C910.582 665.699 906.493 662.165 901.501 662.224C896.509 662.282 892.504 665.911 892.556 670.33C892.607 674.748 896.696 678.282 901.688 678.224Z\",\n    fill: \"url(#paint5_radial_95_226)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _path697 || (_path697 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M822.247 614.546C823.311 614.811 820.996 618.881 823.54 621.998C825.973 624.978 829.556 624.243 832.265 628.052C832.485 628.359 834.435 631.174 833.306 632.552C832.474 633.565 830.802 632.806 828.498 633.676C825.126 634.942 823.911 638.306 823.853 638.488C822.409 642.751 826.054 646.325 826.237 646.504C824.683 647.536 822.276 648.908 819.044 649.789C815.896 650.647 813.522 650.707 809.857 650.665C806.663 650.627 802.023 650.682 796.158 651.124C797.704 650.338 799.978 648.978 802.134 646.787C804.028 644.855 804.377 643.762 805.699 642.477C807.261 640.966 810.145 639.236 815.939 638.88C813.275 635.764 812.87 633.101 812.805 631.726C812.756 630.564 812.905 628.908 817.501 621.002C820.963 615.073 821.788 614.444 822.247 614.546Z\",\n    fill: \"#E8AE86\"\n  })), _path698 || (_path698 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M822.282 614.439C822.875 614.688 822.63 615.331 822.635 615.768C822.481 617.029 822.317 618.439 822.656 619.662C823.255 622.429 826.137 623.569 828.8 624.508C830.725 625.254 832.477 626.62 833.497 628.262C834.795 630.007 835.656 633.549 832.335 634.036C829.31 634.093 827.198 634.843 825.537 637.156C823.197 640.064 824.328 644.052 826.889 646.561L826.506 646.8C823.276 648.844 819.556 650.274 815.633 650.811C811.745 651.294 807.813 651.094 803.936 651.407C800.045 651.655 795.602 652.048 791.702 652.457L795.618 650.309C798.157 648.924 800.451 647.148 802.173 645.005C803.808 642.521 806.067 639.913 809.322 638.947C811.435 638.175 813.649 637.883 815.829 637.75L814.91 639.521C811.205 635.052 810.661 630.759 813.967 625.92C816.309 622.158 818.531 618.356 821.335 614.866C821.561 614.682 821.787 614.359 822.257 614.418L822.282 614.439ZM822.224 614.653C821.718 614.68 821.328 615.368 821.019 615.723C818.672 619.09 816.956 622.812 815.311 626.459C814.69 627.97 813.997 629.536 813.859 631.106C813.889 633.676 815.172 636.147 816.956 638.217L818.324 639.801L816.048 639.988C812.267 640.288 808.24 641.2 805.946 643.99C803.718 647.184 800.522 650.166 796.698 651.929L796.099 650.218C801.291 649.912 806.559 650.01 811.732 650.216C814.301 650.314 816.854 650.103 819.292 649.392C821.731 648.712 824.008 647.608 825.993 646.198L825.939 646.796C823.453 644.425 821.952 640.847 823.313 637.663C824.647 634.254 827.949 632.114 832.024 632.173C832.409 632.105 832.385 632.105 832.504 631.965C832.891 631.117 832.312 630.004 831.855 629.081C830.645 626.61 828.306 625.581 825.627 624.215C822.837 622.732 821.778 619.79 822.24 617.075L822.406 615.76C822.414 615.419 822.588 614.841 822.248 614.663L822.224 614.653Z\",\n    fill: \"#3C3636\"\n  })), _path699 || (_path699 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M844.226 638.819C846.128 639.661 848.178 640.693 850.29 641.948C854.392 644.386 857.593 646.994 860.019 649.302C857.037 648.964 853.132 648.967 849.184 650.496C845.297 652.003 843.622 654.092 841.17 653.684C839.6 653.425 837.62 652.125 835.89 647.451C838.981 645.89 840.827 642.955 840.623 639.928C840.377 636.41 837.4 633.351 833.305 632.546C834.049 631.268 836.299 627.795 841.06 625.755C848.256 622.684 855.183 625.472 856.128 625.877C855.137 626.721 853.671 628.136 852.562 630.187C851.253 632.592 851.485 633.912 850.215 635.548C849.371 636.625 847.736 638.01 844.226 638.819Z\",\n    fill: \"#E8AE86\"\n  })), _path700 || (_path700 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M844.347 638.84C851.496 641.039 857.661 645.586 862.757 650.509L859.885 650.222C855.214 649.754 850.582 650.427 846.497 652.587C840.263 656.501 837.493 652.608 835.542 647.563L835.442 647.308L835.718 647.166C840.488 644.881 841.476 638.66 837.401 635.486C835.878 634.127 833.774 633.544 831.698 633.248C834.637 626.92 841.997 622.449 849.83 623.296C852.737 623.507 855.508 624.424 858.078 625.631L856.896 626.584C854.519 628.468 852.931 630.802 852.011 633.554C851.094 636.542 847.731 638.597 844.347 638.829L844.347 638.84ZM844.106 638.81C844.405 638.647 844.981 638.448 845.341 638.327C847.874 637.422 850.119 635.668 850.609 633.208C851.201 630.267 852.902 627.303 855.372 625.183L855.656 626.78C851.891 625.384 847.451 625.02 843.547 626.132C839.594 627.213 836.237 629.749 834.298 633.004L833.571 631.615C839.683 632.76 843.388 639.32 840.13 644.159C839.184 645.664 837.776 646.918 836.098 647.748L836.274 647.352C836.636 648.361 837.069 649.359 837.635 650.28C839.908 653.966 842.174 653.972 845.688 651.413C849.717 648.677 855.202 647.642 860.176 648.384L859.278 649.931C857.096 647.801 854.746 645.802 852.218 643.975C849.664 642.053 846.874 640.506 844.129 638.8L844.106 638.81Z\",\n    fill: \"#3C3636\"\n  })), _path701 || (_path701 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M838.363 652.765C838 653.654 837.328 654.932 835.99 655.993C833.781 657.758 831.107 657.885 828.784 658.211C826.185 658.572 822.458 659.405 817.975 661.538C817.32 659.135 817.635 657.243 817.913 656.205C819.09 651.764 823.474 647.392 827.454 647.558C829.383 647.642 829.902 648.724 832.287 648.568C834.877 648.399 835.945 647.011 837.095 647.445C837.882 647.745 838.655 648.878 838.363 652.765Z\",\n    fill: \"#E8AE86\"\n  })), _path702 || (_path702 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M838.484 652.794C837.857 656.876 833.395 658.806 829.265 659.121C825.342 659.722 821.263 660.303 817.716 662.041C816.424 657.736 817.355 652.86 820.811 649.48C822.515 647.807 825.039 646.198 827.839 646.443C828.864 646.506 829.809 646.964 830.379 647.203C831.529 647.68 832.806 647.601 834.007 647.235C839.343 644.878 839.337 649.509 838.484 652.783L838.484 652.794ZM838.254 652.743C838.007 651.199 838.034 649.396 836.984 648.245C836.814 648.13 836.718 648.142 836.622 648.175C835.626 648.581 833.662 649.628 832.239 649.624C830.736 649.908 828.856 648.917 827.588 648.718C825.646 648.613 823.91 649.615 822.454 650.848C819.413 653.583 817.097 657.568 818.36 661.468L817.815 661.251C819.565 660.419 821.29 659.503 823.138 658.767C826.529 657.063 830.981 657.458 834.365 656.171C835.96 655.49 837.283 654.237 838.266 652.754L838.254 652.743Z\",\n    fill: \"#3C3636\"\n  })), _path703 || (_path703 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M832.294 649.098C837.286 649.039 841.291 645.41 841.239 640.992C841.187 636.573 837.099 633.039 832.107 633.097C827.115 633.156 823.11 636.785 823.162 641.203C823.213 645.622 827.302 649.156 832.294 649.098Z\",\n    fill: \"url(#paint6_radial_95_226)\",\n    stroke: \"#3C3636\",\n    strokeWidth: 0.29,\n    strokeMiterlimit: 10\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint0_radial_95_226\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(646.226 570.196) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint1_radial_95_226\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(720.48 586.936) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint2_radial_95_226\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1305.06 597.693) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint3_radial_95_226\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(1255.54 642.302) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint4_radial_95_226\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(972.568 663.228) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint5_radial_95_226\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(901.594 670.224) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint6_radial_95_226\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(832.2 641.098) rotate(-0.67134) scale(9.03944 8.00073)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#C04448\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#9D2825\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGameBackgroundWide);\nexport default __webpack_public_path__ + \"static/media/GameBackgroundWide.33f32e295b273fe6f73dd1c8b1054fd8.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgYellowRulerRotate(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 946,\n    height: 498,\n    viewBox: \"0 0 946 498\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.7141 471.763C20.0629 471.546 11.1613 468.967 1.2537 464.104L927.721 26.3817L942.798 53.0095C940.497 51.745 937.637 51.0284 934.418 50.9372C930.177 50.817 925.547 51.8134 921.355 53.7447C913.12 57.5501 907.637 64.3857 907.725 70.6103C905.418 69.5096 902.633 68.8874 899.615 68.8019C895.318 68.6802 890.803 69.6081 886.546 71.4761C878.58 74.9713 872.776 81.3775 871.831 87.5934C869.397 85.9663 866.207 85.0559 862.516 84.9513C858.119 84.8267 853.329 85.9005 849.02 87.9721C841.132 91.7771 835.881 98.4347 835.908 104.463C833.426 102.916 830.235 102.047 826.611 101.944C821.765 101.807 816.598 103.055 812.052 105.468C804.814 109.302 800.103 115.626 800.026 121.446C797.579 119.87 794.399 118.98 790.776 118.878C786.658 118.761 782.336 119.653 778.261 121.455C769.86 125.173 764.23 132.046 764.233 138.422C761.803 137.02 758.754 136.237 755.332 136.14C750.587 136.006 745.489 137.214 740.957 139.536C733.61 143.294 728.675 149.602 728.372 155.457C725.941 154.056 722.87 153.261 719.437 153.164C714.703 153.03 709.594 154.228 705.052 156.529C697.615 160.295 692.578 166.621 692.217 172.525C689.759 170.938 686.579 170.049 682.933 169.945C678.334 169.815 673.373 170.966 668.956 173.198C661.245 177.09 656.291 183.603 656.387 189.602C654.165 188.647 651.534 188.111 648.718 188.032C644.342 187.908 639.737 188.854 635.389 190.76C627.491 194.226 621.753 200.368 620.517 206.565C618.084 204.918 614.872 203.996 611.169 203.891C606.772 203.767 601.982 204.841 597.673 206.912C589.797 210.707 584.556 217.365 584.562 223.383C582.137 221.817 578.991 220.939 575.378 220.836C571.126 220.716 566.486 221.712 562.293 223.654C554.126 227.43 548.68 234.185 548.668 240.366C546.255 238.79 543.109 237.912 539.496 237.81C535.244 237.689 530.592 238.695 526.399 240.647C518.266 244.424 512.865 251.17 512.899 257.321C510.406 255.775 507.226 254.906 503.602 254.803C498.756 254.666 493.578 255.923 489.031 258.336C481.805 262.17 477.094 268.495 477.016 274.315C474.569 272.749 471.389 271.87 467.766 271.767C463.603 271.649 459.235 272.561 455.114 274.391C446.712 278.141 441.082 285.034 441.096 291.41C438.716 290.164 435.799 289.456 432.568 289.364C427.767 289.228 422.59 290.445 418.001 292.796C410.711 296.525 405.796 302.598 405.268 308.446C402.822 307.157 399.828 306.426 396.541 306.333C392.67 306.224 388.588 306.99 384.747 308.541C376.29 311.951 370.054 318.796 369.263 325.416C366.829 323.799 363.638 322.899 359.97 322.795C355.527 322.669 350.681 323.762 346.347 325.874C338.561 329.671 333.367 336.3 333.373 342.286C330.948 340.731 327.802 339.853 324.189 339.75C319.904 339.629 315.206 340.644 310.968 342.615C302.823 346.402 297.365 353.167 297.342 359.347C294.872 357.791 291.692 356.912 288.08 356.809C283.974 356.693 279.663 357.575 275.589 359.346C267.132 363.053 261.412 369.943 261.312 376.378C258.899 374.792 255.742 373.914 252.118 373.811C247.72 373.686 242.931 374.76 238.621 376.832C230.734 380.637 225.482 387.294 225.51 393.322C223.017 391.776 219.836 390.917 216.224 390.814C211.389 390.677 206.211 391.925 201.653 394.328C194.348 398.17 189.58 404.523 189.49 410.384C187.009 408.817 183.818 407.937 180.183 407.834C175.392 407.699 170.26 408.937 165.749 411.31C158.466 415.153 153.743 421.477 153.699 427.319C151.217 425.772 148.026 424.903 144.402 424.8C139.589 424.664 134.446 425.902 129.901 428.274C122.551 432.125 117.759 438.488 117.669 444.359C115.166 442.771 111.953 441.881 108.307 441.777C104.661 441.674 100.466 442.437 96.6809 444C87.9586 447.597 81.8643 454.887 81.9018 461.561C77.661 460.211 73.4656 459.467 69.4044 459.352C66.9138 459.281 64.4483 459.447 62.0531 459.841C55.4435 460.935 51.2751 463.451 47.2448 465.879C44.7412 467.397 42.3757 468.826 39.4839 469.903C35.9318 471.227 31.9675 471.842 27.7156 471.722L27.7141 471.763Z\",\n    fill: \"#FFE54D\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M927.52 26.9627L941.702 51.9967C939.601 51.0967 937.137 50.5963 934.433 50.5197C930.125 50.3977 925.405 51.412 921.145 53.3721C913.057 57.11 907.571 63.7404 907.267 69.9437C905.032 69.0091 902.424 68.4739 899.619 68.3944C895.255 68.2708 890.661 69.2067 886.335 71.1137C878.518 74.5414 872.755 80.7438 871.476 86.8784C869.057 85.4465 865.998 84.6423 862.52 84.5438C858.044 84.4169 853.164 85.5087 848.786 87.6193C841.081 91.3372 835.85 97.7494 835.452 103.724C833.008 102.384 829.992 101.643 826.615 101.547C821.69 101.407 816.421 102.683 811.806 105.125C804.741 108.871 800.038 114.95 799.582 120.698C797.172 119.338 794.167 118.576 790.779 118.48C786.595 118.362 782.193 119.272 778.05 121.103C769.808 124.754 764.187 131.401 763.788 137.725C761.417 136.52 758.533 135.844 755.347 135.753C750.523 135.617 745.323 136.843 740.723 139.193C733.536 142.875 728.597 148.977 727.959 154.771C725.566 153.555 722.66 152.868 719.452 152.777C714.639 152.641 709.44 153.857 704.817 156.196C697.552 159.875 692.534 165.976 691.816 171.809C689.385 170.428 686.358 169.655 682.948 169.559C678.27 169.426 673.218 170.595 668.733 172.866C661.159 176.691 656.19 183.018 655.927 188.997C653.789 188.188 651.335 187.729 648.732 187.655C644.278 187.529 639.594 188.483 635.177 190.428C627.427 193.837 621.707 199.795 620.193 205.902C617.765 204.44 614.683 203.624 611.183 203.525C606.707 203.398 601.827 204.49 597.449 206.601C589.756 210.309 584.536 216.711 584.117 222.665C581.728 221.326 578.747 220.565 575.392 220.47C571.073 220.348 566.342 221.362 562.081 223.332C554.108 227.022 548.671 233.521 548.223 239.648C545.835 238.299 542.865 237.538 539.499 237.443C535.168 237.32 530.437 238.345 526.176 240.325C518.225 244.016 512.833 250.516 512.442 256.614C509.998 255.284 506.982 254.532 503.605 254.436C498.669 254.296 493.4 255.572 488.785 258.024C481.73 261.771 477.028 267.85 476.571 273.598C474.15 272.237 471.157 271.486 467.769 271.39C463.539 271.27 459.081 272.19 454.902 274.06C446.649 277.742 441.026 284.42 440.638 290.754C438.33 289.684 435.578 289.073 432.571 288.988C427.68 288.849 422.424 290.084 417.755 292.473C410.603 296.135 405.693 302.034 404.854 307.812C402.469 306.678 399.617 306.044 396.532 305.956C392.595 305.845 388.445 306.619 384.535 308.199C376.226 311.552 370.021 318.182 368.884 324.721C366.465 323.299 363.417 322.505 359.973 322.408C355.441 322.279 350.526 323.391 346.124 325.542C338.395 329.31 333.316 335.563 332.929 341.548C330.541 340.21 327.558 339.459 324.215 339.364C319.851 339.24 315.074 340.274 310.768 342.273C302.805 345.974 297.367 352.503 296.92 358.62C294.487 357.28 291.482 356.519 288.106 356.423C283.932 356.305 279.531 357.195 275.4 359.005C267.126 362.625 261.414 369.279 260.901 375.651C258.514 374.292 255.532 373.531 252.155 373.435C247.678 373.308 242.798 374.4 238.42 376.511C230.715 380.229 225.484 386.641 225.087 392.616C222.642 391.286 219.626 390.544 216.26 390.449C211.335 390.309 206.078 391.575 201.441 394.016C194.319 397.771 189.558 403.889 189.078 409.678C186.634 408.327 183.607 407.565 180.219 407.469C175.339 407.33 170.127 408.587 165.536 410.999C158.425 414.744 153.711 420.843 153.287 426.612C150.843 425.272 147.827 424.531 144.45 424.435C139.558 424.296 134.313 425.552 129.699 427.974C122.532 431.727 117.738 437.855 117.268 443.664C114.802 442.292 111.764 441.519 108.354 441.422C104.461 441.312 100.367 442.088 96.5133 443.68C87.8938 447.229 81.7828 454.364 81.4613 461.028C77.385 459.785 73.3447 459.097 69.4406 458.986C66.9276 458.915 64.4172 459.08 61.988 459.482C55.2766 460.594 51.0739 463.13 47.0088 465.587C44.5284 467.086 42.1745 468.505 39.328 469.573C35.8327 470.878 31.9364 471.475 27.763 471.357C20.3811 471.147 11.8221 468.721 2.29779 464.126L891.205 44.1183L927.52 26.9627ZM927.922 25.8055C618.703 171.9 309.485 317.994 0.266446 464.089C11.814 469.869 20.7547 471.988 27.7104 472.185C32.6242 472.325 36.5286 471.502 39.6597 470.33C47.3447 467.463 51.5858 462.027 62.1384 460.286C64.6581 459.865 67.0884 459.74 69.3883 459.805C74.5489 459.951 79.0444 461.093 82.3955 462.203C81.9564 455.456 88.1003 448.034 96.8795 444.418C100.676 442.855 104.644 442.137 108.302 442.241C112.127 442.349 115.605 443.36 118.175 445.278C117.764 439.29 122.588 432.651 130.145 428.683C134.724 426.291 139.797 425.133 144.397 425.264C148.178 425.371 151.635 426.35 154.205 428.227C153.748 422.289 158.493 415.669 165.981 411.729C170.527 409.337 175.589 408.178 180.166 408.308C183.958 408.415 187.415 409.405 189.973 411.302C189.562 405.335 194.352 398.705 201.875 394.746C206.455 392.334 211.573 391.167 216.195 391.298C219.976 391.405 223.433 392.384 226.015 394.252C225.43 388.136 230.669 381.191 238.831 377.26C243.197 375.16 247.883 374.165 252.101 374.284C255.904 374.392 259.327 375.401 261.795 377.316C261.336 370.794 267.171 363.538 275.776 359.774C279.839 357.993 284.126 357.161 288.041 357.272C291.956 357.383 295.289 358.379 297.826 360.266C297.29 353.998 302.77 346.926 311.155 343.033C315.451 341.033 320.022 340.096 324.151 340.213C327.943 340.32 331.365 341.319 333.857 343.215C333.281 337.12 338.474 330.225 346.535 326.281C350.926 324.14 355.657 323.126 359.92 323.247C363.723 323.355 367.145 324.364 369.636 326.28C369.984 319.504 376.283 312.445 384.911 308.969C388.764 307.417 392.788 306.701 396.501 306.806C399.957 306.904 403.139 307.712 405.678 309.229C405.837 303.329 410.784 297.011 418.211 293.214C422.834 290.844 427.929 289.707 432.54 289.837C435.951 289.934 439.1 290.731 441.583 292.246C441.065 285.825 446.774 278.627 455.301 274.83C459.411 272.999 463.766 272.138 467.726 272.25C471.686 272.362 474.974 273.357 477.488 275.253C477.064 269.316 481.797 262.716 489.252 258.765C493.833 256.333 498.94 255.165 503.574 255.296C507.354 255.404 510.822 256.383 513.393 258.271C512.8 252.042 518.235 244.979 526.597 241.096C530.858 239.115 535.384 238.187 539.468 238.303C543.271 238.411 546.693 239.42 549.172 241.336C548.615 235.067 554.106 227.975 562.502 224.103C566.751 222.132 571.277 221.215 575.361 221.33C579.164 221.438 582.586 222.447 585.078 224.343C584.492 218.227 589.731 211.282 597.893 207.351C602.26 205.251 606.945 204.256 611.163 204.376C614.967 204.483 618.389 205.493 620.857 207.408C621.738 201.118 627.552 194.723 635.587 191.188C639.913 189.281 644.506 188.376 648.701 188.495C651.719 188.58 654.527 189.193 656.888 190.346C656.367 184.315 661.364 177.547 669.178 173.607C673.64 171.355 678.508 170.284 682.906 170.408C686.698 170.516 690.143 171.515 692.656 173.421C692.55 167.401 697.584 160.84 705.262 156.947C709.85 154.627 714.866 153.508 719.409 153.637C722.999 153.739 726.291 154.621 728.824 156.303C728.671 150.343 733.614 143.83 741.178 139.954C745.744 137.613 750.772 136.495 755.315 136.624C758.916 136.726 762.219 137.619 764.74 139.32C764.2 132.888 769.932 125.68 778.458 121.904C782.533 120.102 786.831 119.26 790.747 119.371C794.561 119.479 797.995 120.489 800.508 122.395C800.085 116.448 804.817 109.858 812.284 105.897C816.853 103.474 821.972 102.297 826.594 102.428C830.375 102.535 833.843 103.515 836.413 105.402C835.828 99.2864 841.067 92.3414 849.229 88.4109C853.595 86.3102 858.281 85.3154 862.499 85.435C866.302 85.5427 869.725 86.552 872.193 88.467C872.739 82.1169 878.561 75.5062 886.744 71.9146C890.99 70.0463 895.492 69.1693 899.598 69.2856C902.817 69.3768 905.801 70.0867 908.235 71.4164C907.666 65.1475 913.169 58.0562 921.564 54.1836C925.814 52.2231 930.317 51.3051 934.4 51.4208C938.204 51.5286 941.626 52.5379 944.117 54.4433L927.931 25.857L927.922 25.8055Z\",\n    fill: \"black\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M219.437 376.289L216.42 377.72L216.872 378.891C217.032 378.793 217.17 378.725 217.364 378.628C218.107 378.28 218.945 378.068 219.694 378.171C220.488 378.255 221.18 378.675 221.644 379.498C222.393 380.821 221.813 382.577 219.711 383.563C218.763 384.008 217.869 384.187 217.319 384.182L216.932 382.787C217.37 382.779 218.184 382.638 218.892 382.3C219.646 381.942 220.256 381.232 219.834 380.482C219.413 379.732 218.53 379.604 216.976 380.339C216.542 380.542 216.255 380.708 215.956 380.905L214.36 376.944L218.645 374.913L219.415 376.278L219.437 376.289Z\",\n    fill: \"black\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M252.78 359.645C252.564 359.731 252.289 359.877 252.012 360.064C250.504 361.098 250.258 362.608 250.74 363.861L250.774 363.842C250.887 363.22 251.327 362.546 252.184 362.139C253.555 361.491 255.044 361.933 255.824 363.319C256.563 364.621 256.267 366.273 254.655 367.037C253.044 367.801 251.237 367.166 250.193 365.322C249.401 363.926 249.328 362.561 249.703 361.505C250.016 360.623 250.684 359.852 251.592 359.283C251.879 359.097 252.131 358.96 252.326 358.864L252.769 359.645L252.78 359.645ZM254.793 363.874C254.224 362.863 253.236 362.548 252.265 363.003C251.636 363.303 251.254 363.937 251.252 364.593C251.247 364.737 251.275 364.901 251.369 365.078C252.057 366.236 253.125 366.819 254.233 366.297C255.147 365.862 255.362 364.894 254.793 363.874Z\",\n    fill: \"black\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M289.511 341.549L289.869 342.184L290.137 350.238L289.052 350.75L288.878 342.884L288.879 342.864L285.063 344.662L284.609 343.87L289.511 341.549Z\",\n    fill: \"black\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M323.745 331.912C323.239 331.017 323.463 330.111 324.212 329.281L324.179 329.25C323.111 329.291 322.397 328.851 322.049 328.236C321.416 327.111 322.023 325.857 323.383 325.209C324.892 324.493 326.131 325 326.626 325.885C326.964 326.489 327.013 327.28 326.285 328.151L326.307 328.182C327.479 328.072 328.421 328.406 328.906 329.271C329.602 330.5 328.912 331.884 327.427 332.58C325.804 333.354 324.315 332.933 323.735 331.892L323.745 331.912ZM327.907 329.888C327.422 329.024 326.527 328.927 325.317 329.149C324.54 329.823 324.366 330.597 324.746 331.274C325.123 332.013 326.076 332.358 327.07 331.894C328.064 331.43 328.318 330.627 327.907 329.888ZM323 327.709C323.401 328.418 324.206 328.523 325.224 328.316C325.771 327.788 326.043 327.109 325.673 326.473C325.357 325.911 324.653 325.491 323.705 325.936C322.836 326.352 322.652 327.095 323 327.709Z\",\n    fill: \"black\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.5868 445.352L72.5644 445.351L71.5844 446.666L70.9674 446.034L72.1949 444.398L73.0975 443.973L77.1063 451.056L76.0893 451.539L72.5872 445.342L72.5868 445.352Z\",\n    fill: \"black\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M110.246 435.377L109.908 434.783L110.32 433.657C111.327 430.99 111.712 429.658 111.111 428.575C110.7 427.856 109.942 427.374 108.788 427.925C108.08 428.264 107.676 428.867 107.48 429.302L106.758 428.79C107.063 428.122 107.649 427.452 108.552 427.027C110.231 426.234 111.53 426.947 112.1 427.957C112.838 429.27 112.4 430.815 111.578 433.026L111.256 433.848L111.255 433.868L114.763 432.215L115.217 433.007L110.258 435.357L110.246 435.377Z\",\n    fill: \"black\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M145.26 417.263C145.663 417.295 146.507 417.237 147.238 416.899C148.587 416.261 148.566 415.276 148.217 414.692C147.647 413.702 146.421 413.739 145.404 414.223L144.821 414.504L144.41 413.785L144.993 413.504C145.758 413.147 146.518 412.328 146.043 411.484C145.727 410.922 145.042 410.605 144.071 411.059C143.454 411.349 142.997 411.89 142.781 412.263L142.117 411.691C142.37 411.226 143 410.578 143.845 410.182C145.376 409.456 146.537 409.961 147.022 410.815C147.433 411.544 147.313 412.391 146.532 413.158L146.532 413.179C147.597 412.902 148.743 413.19 149.314 414.18C149.957 415.316 149.545 416.77 147.682 417.649C146.814 418.066 145.9 418.173 145.386 418.128L145.249 417.253L145.26 417.263Z\",\n    fill: \"black\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M184.4 400.286L183.302 398.358L179.691 400.07L179.333 399.435L180.242 393.27L181.374 392.728L183.874 397.134L184.96 396.622L185.382 397.372L184.296 397.884L185.394 399.811L184.4 400.286ZM182.881 397.598L181.541 395.234C181.33 394.859 181.13 394.484 180.942 394.099L180.908 394.119C180.9 394.641 180.874 395.04 180.858 395.47L180.322 398.776L180.322 398.797L182.881 397.588L182.881 397.598Z\",\n    fill: \"black\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M360.533 315.924C360.772 315.839 361.025 315.692 361.369 315.486C361.933 315.123 362.377 314.623 362.601 314.025C362.873 313.356 362.891 312.557 362.564 311.656L362.53 311.676C362.37 312.358 361.911 312.939 361.134 313.307C359.74 313.964 358.289 313.431 357.614 312.223C356.855 310.879 357.253 309.2 358.841 308.445C360.429 307.691 362.076 308.404 363.1 310.216C363.986 311.779 364.026 313.133 363.64 314.177C363.341 314.999 362.708 315.709 361.916 316.199C361.559 316.435 361.239 316.6 360.976 316.715L360.533 315.934L360.533 315.924ZM358.611 311.667C359.107 312.552 360.049 312.897 360.963 312.462C361.671 312.123 362.04 311.549 362.072 310.997C362.076 310.884 362.058 310.75 361.974 310.604C361.288 309.396 360.269 308.701 359.172 309.223C358.269 309.649 358.053 310.667 358.611 311.667Z\",\n    fill: \"black\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M392.855 294.354L392.832 294.354L391.716 295.706L390.712 294.601L392.273 292.759L393.781 292.044L397.79 299.127L396.03 299.958L392.855 294.344L392.855 294.354Z\",\n    fill: \"black\"\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M404.082 291.635C405.328 293.823 405.211 295.787 403.223 296.725C401.235 297.663 399.393 296.453 398.253 294.453C397.093 292.4 397.123 290.321 399.134 289.373C401.214 288.387 402.985 289.698 404.082 291.635ZM400.07 293.582C400.976 295.216 401.843 295.784 402.551 295.446C403.26 295.107 403.183 294.121 402.265 292.506C401.347 290.891 400.538 290.284 399.807 290.633C399.133 290.952 399.12 291.935 400.07 293.582Z\",\n    fill: \"black\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M429.045 276.653L429.022 276.652L428.042 277.967L427.425 277.334L428.653 275.699L429.556 275.273L433.564 282.356L432.547 282.84L429.045 276.642L429.045 276.653Z\",\n    fill: \"black\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M435.181 273.749L435.159 273.749L434.179 275.064L433.562 274.431L434.789 272.795L435.692 272.37L439.701 279.453L438.684 279.937L435.182 273.739L435.181 273.749Z\",\n    fill: \"black\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M464.492 259.879L464.47 259.878L463.49 261.193L462.873 260.561L464.1 258.925L465.003 258.499L469.012 265.583L467.995 266.066L464.493 259.869L464.492 259.879Z\",\n    fill: \"black\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M471.857 264.251L471.519 263.657L471.931 262.531C472.937 259.864 473.323 258.532 472.722 257.45C472.31 256.731 471.553 256.248 470.399 256.799C469.69 257.138 469.287 257.742 469.091 258.177L468.369 257.664C468.674 256.997 469.26 256.326 470.162 255.901C471.842 255.108 473.141 255.821 473.71 256.832C474.449 258.144 474.01 259.69 473.189 261.901L472.867 262.722L472.866 262.742L476.374 261.089L476.828 261.881L471.869 264.231L471.857 264.251Z\",\n    fill: \"black\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M499.866 242.987L499.844 242.987L498.864 244.302L498.247 243.669L499.474 242.033L500.377 241.608L504.386 248.691L503.369 249.175L499.867 242.977L499.866 242.987Z\",\n    fill: \"black\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M506.86 246.135C507.264 246.167 508.108 246.109 508.839 245.771C510.187 245.132 510.167 244.148 509.818 243.564C509.247 242.574 508.022 242.611 507.005 243.095L506.422 243.376L506.01 242.657L506.593 242.376C507.359 242.018 508.118 241.2 507.644 240.356C507.327 239.793 506.643 239.477 505.672 239.931C505.055 240.221 504.597 240.762 504.381 241.135L503.717 240.562C503.97 240.098 504.6 239.45 505.445 239.053C506.977 238.328 508.137 238.832 508.623 239.687C509.034 240.416 508.913 241.263 508.133 242.03L508.132 242.051C509.198 241.773 510.344 242.062 510.914 243.052C511.558 244.187 511.145 245.641 509.283 246.521C508.414 246.937 507.501 247.045 506.986 246.999L506.85 246.124L506.86 246.135Z\",\n    fill: \"black\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M536.383 225.848L536.36 225.847L535.38 227.162L534.763 226.53L535.991 224.894L536.893 224.468L540.902 231.552L539.885 232.035L536.383 225.838L536.383 225.848Z\",\n    fill: \"black\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M546.994 228.684L545.896 226.757L542.286 228.469L541.927 227.834L542.837 221.669L543.968 221.127L546.469 225.533L547.554 225.021L547.976 225.771L546.891 226.283L547.988 228.21L546.994 228.684ZM545.475 225.997L544.135 223.632C543.924 223.257 543.724 222.883 543.536 222.498L543.502 222.518C543.494 223.04 543.468 223.439 543.453 223.869L542.917 227.175L542.916 227.195L545.475 225.987L545.475 225.997Z\",\n    fill: \"black\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M571.091 210.001L571.069 210.001L569.952 211.363L568.948 210.258L570.509 208.417L572.017 207.701L576.026 214.784L574.266 215.616L571.091 210.001Z\",\n    fill: \"black\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M580.545 205.39L577.528 206.821L577.98 207.992C578.141 207.894 578.278 207.827 578.472 207.73C579.215 207.382 580.053 207.17 580.802 207.273C581.596 207.357 582.288 207.776 582.753 208.599C583.502 209.922 582.921 211.679 580.819 212.665C579.871 213.109 578.977 213.289 578.427 213.284L578.04 211.889C578.478 211.881 579.292 211.74 580 211.401C580.755 211.043 581.364 210.333 580.942 209.583C580.521 208.833 579.638 208.706 578.084 209.44C577.65 209.643 577.363 209.81 577.064 210.006L575.468 206.045L579.753 204.015L580.523 205.379L580.545 205.39Z\",\n    fill: \"black\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M607.205 192.183L607.182 192.182L606.202 193.497L605.585 192.865L606.813 191.229L607.715 190.803L611.724 197.886L610.707 198.37L607.205 192.172L607.205 192.183Z\",\n    fill: \"black\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M615.373 188.048C615.157 188.134 614.882 188.28 614.606 188.467C613.097 189.501 612.851 191.011 613.333 192.264L613.367 192.245C613.48 191.623 613.92 190.949 614.777 190.542C616.148 189.894 617.637 190.336 618.417 191.722C619.156 193.024 618.86 194.676 617.248 195.44C615.637 196.204 613.83 195.569 612.786 193.725C611.994 192.329 611.921 190.964 612.296 189.908C612.609 189.026 613.277 188.255 614.185 187.686C614.472 187.5 614.724 187.364 614.919 187.267L615.362 188.048L615.373 188.048ZM617.386 192.277C616.817 191.266 615.829 190.951 614.858 191.406C614.229 191.706 613.847 192.34 613.845 192.996C613.84 193.14 613.868 193.304 613.962 193.481C614.65 194.639 615.718 195.222 616.826 194.7C617.74 194.265 617.955 193.297 617.386 192.277Z\",\n    fill: \"black\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M643.721 175.056L643.699 175.056L642.719 176.37L642.102 175.738L643.329 174.102L644.232 173.677L648.241 180.76L647.224 181.244L643.722 175.046L643.721 175.056Z\",\n    fill: \"black\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M652.116 169.943L652.475 170.578L652.743 178.632L651.657 179.144L651.484 171.278L651.484 171.257L647.668 173.056L647.214 172.264L652.116 169.943Z\",\n    fill: \"black\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M681.094 157.216L681.072 157.215L680.092 158.53L679.475 157.898L680.702 156.262L681.605 155.836L685.614 162.92L684.597 163.403L681.094 157.206L681.094 157.216Z\",\n    fill: \"black\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M687.345 159.832C686.838 158.936 687.062 158.031 687.811 157.201L687.779 157.169C686.71 157.211 685.996 156.77 685.648 156.156C685.016 155.031 685.623 153.777 686.983 153.129C688.491 152.413 689.73 152.92 690.226 153.805C690.563 154.409 690.613 155.2 689.885 156.071L689.906 156.102C691.078 155.992 692.02 156.326 692.505 157.191C693.202 158.42 692.511 159.804 691.026 160.5C689.403 161.274 687.914 160.853 687.334 159.811L687.345 159.832ZM691.506 157.808C691.021 156.944 690.126 156.846 688.916 157.068C688.139 157.743 687.965 158.517 688.345 159.194C688.722 159.933 689.675 160.278 690.669 159.814C691.663 159.35 691.917 158.547 691.506 157.808ZM686.6 155.629C687 156.338 687.805 156.442 688.823 156.236C689.37 155.708 689.642 155.029 689.272 154.393C688.956 153.831 688.252 153.411 687.304 153.856C686.436 154.272 686.251 155.015 686.6 155.629Z\",\n    fill: \"black\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M715.537 140.924L715.515 140.923L714.535 142.238L713.918 141.606L715.145 139.97L716.036 139.544L720.045 146.627L719.028 147.111L715.526 140.913L715.537 140.924Z\",\n    fill: \"black\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M723.139 144.319C723.378 144.234 723.63 144.087 723.975 143.881C724.538 143.518 724.983 143.018 725.207 142.42C725.478 141.751 725.496 140.952 725.17 140.051L725.135 140.071C724.976 140.753 724.516 141.334 723.74 141.702C722.346 142.359 720.894 141.826 720.219 140.618C719.46 139.275 719.858 137.595 721.446 136.84C723.035 136.086 724.682 136.799 725.705 138.611C726.591 140.174 726.632 141.528 726.246 142.572C725.946 143.394 725.314 144.104 724.521 144.594C724.176 144.83 723.844 144.995 723.582 145.111L723.138 144.329L723.139 144.319ZM721.205 140.062C721.701 140.947 722.643 141.292 723.557 140.856C724.266 140.518 724.635 139.944 724.666 139.391C724.67 139.279 724.652 139.145 724.568 138.999C723.882 137.791 722.863 137.096 721.766 137.618C720.875 138.044 720.647 139.062 721.205 140.062Z\",\n    fill: \"black\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M751.174 131.904L750.604 130.904L751.134 129.597C752.045 127.409 752.425 126.22 751.973 125.377C751.646 124.804 751.005 124.52 750.102 124.945C749.428 125.264 749.025 125.847 748.772 126.322L747.583 125.376C747.944 124.699 748.668 123.941 749.719 123.438C751.479 122.606 752.977 123.089 753.705 124.371C754.381 125.558 753.971 126.951 753.368 128.399L752.965 129.28L752.964 129.3L755.912 127.918L756.682 129.283L751.163 131.894L751.174 131.904Z\",\n    fill: \"black\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M761.535 122.455C762.78 124.643 762.663 126.607 760.675 127.545C758.687 128.483 756.845 127.273 755.705 125.273C754.545 123.221 754.576 121.141 756.587 120.193C758.597 119.246 760.437 120.518 761.535 122.455ZM757.522 124.412C758.428 126.047 759.294 126.614 760.003 126.276C760.712 125.937 760.635 124.951 759.717 123.336C758.799 121.722 757.99 121.115 757.259 121.463C756.585 121.782 756.571 122.765 757.522 124.412Z\",\n    fill: \"black\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M789.712 113.817L789.375 113.223L789.786 112.097C790.793 109.43 791.178 108.098 790.578 107.015C790.166 106.296 789.409 105.814 788.255 106.365C787.546 106.704 787.142 107.307 786.947 107.742L786.224 107.23C786.529 106.562 787.115 105.892 788.018 105.467C789.697 104.674 790.997 105.387 791.566 106.397C792.304 107.71 791.866 109.255 791.044 111.466L790.723 112.287L790.722 112.308L794.229 110.655L794.683 111.446L789.724 113.797L789.712 113.817Z\",\n    fill: \"black\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M794.633 103.638L794.61 103.638L793.631 104.952L793.014 104.32L794.241 102.684L795.144 102.259L799.152 109.342L798.135 109.826L794.633 103.628L794.633 103.638Z\",\n    fill: \"black\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M824.167 97.5105L823.83 96.9167L824.241 95.7906C825.248 93.1235 825.633 91.7918 825.033 90.7088C824.621 89.9899 823.864 89.5072 822.71 90.0588C822.001 90.3974 821.597 91.0009 821.402 91.4361L820.679 90.9237C820.984 90.2559 821.57 89.5857 822.473 89.1603C824.153 88.3675 825.452 89.0807 826.021 90.0911C826.759 91.4034 826.321 92.949 825.499 95.1601L825.178 95.9812L825.177 96.0016L828.684 94.3484L829.138 95.1402L824.179 97.4903L824.167 97.5105Z\",\n    fill: \"black\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M830.305 94.5996L829.967 94.0058L830.379 92.8797C831.386 90.2126 831.771 88.8809 831.17 87.7979C830.759 87.079 830.001 86.5964 828.847 87.1479C828.139 87.4865 827.735 88.0901 827.539 88.5252L826.817 88.0128C827.122 87.345 827.708 86.6749 828.61 86.2495C830.29 85.4566 831.589 86.1699 832.159 87.1802C832.897 88.4926 832.459 90.0381 831.637 92.2492L831.315 93.0703L831.314 93.0907L834.822 91.4375L835.276 92.2293L830.317 94.5794L830.305 94.5996Z\",\n    fill: \"black\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M860.547 80.1459L860.209 79.5521L860.621 78.426C861.628 75.7589 862.013 74.4272 861.412 73.3442C861.001 72.6253 860.243 72.1426 859.089 72.6941C858.381 73.0328 857.977 73.6363 857.781 74.0715L857.059 73.5591C857.364 72.8913 857.95 72.2211 858.852 71.7957C860.532 71.0029 861.831 71.7161 862.401 72.7265C863.139 74.0388 862.701 75.5843 861.879 77.7955L861.557 78.6165L861.556 78.637L865.064 76.9837L865.518 77.7756L860.559 80.1257L860.547 80.1459Z\",\n    fill: \"black\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M866.312 76.0179C866.715 76.0498 867.559 75.9917 868.29 75.6537C869.638 75.0154 869.618 74.0309 869.269 73.447C868.699 72.4572 867.473 72.4942 866.456 72.9778L865.873 73.2586L865.462 72.5397L866.045 72.259C866.81 71.9014 867.57 71.0825 867.095 70.2388C866.779 69.6764 866.094 69.3598 865.123 69.814C864.506 70.104 864.049 70.6445 863.833 71.0176L863.169 70.4453C863.421 69.981 864.051 69.3326 864.897 68.9363C866.428 68.211 867.589 68.7154 868.074 69.5696C868.485 70.2987 868.365 71.146 867.584 71.9131L867.584 71.9336C868.649 71.6563 869.795 71.945 870.366 72.9349C871.009 74.0703 870.597 75.5243 868.734 76.4042C867.866 76.8203 866.952 76.9277 866.438 76.8824L866.301 76.0073L866.312 76.0179Z\",\n    fill: \"black\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M896.056 63.4949L895.718 62.9011L896.13 61.7751C897.137 59.108 897.522 57.7762 896.922 56.6932C896.51 55.9744 895.753 55.4917 894.598 56.0432C893.89 56.3818 893.486 56.9854 893.291 57.4206L892.568 56.9081C892.873 56.2403 893.459 55.5702 894.362 55.1448C896.041 54.3519 897.34 55.0652 897.91 56.0755C898.648 57.3879 898.21 58.9334 897.388 61.1445L897.066 61.9656L897.066 61.9861L900.573 60.3328L901.027 61.1246L896.068 63.4747L896.056 63.4949Z\",\n    fill: \"black\"\n  })), _path41 || (_path41 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M905.45 59.0442L904.352 57.117L900.742 58.8288L900.383 58.1935L901.293 52.0285L902.424 51.4866L904.925 55.893L906.01 55.3805L906.432 56.1305L905.347 56.6429L906.444 58.5702L905.45 59.0442ZM903.931 56.3671L902.591 54.0025C902.38 53.6275 902.18 53.2529 901.992 52.8683L901.958 52.8878C901.95 53.4103 901.924 53.8093 901.908 54.2394L901.372 57.545L901.372 57.5655L903.931 56.3568L903.931 56.3671Z\",\n    fill: \"black\"\n  })), _path42 || (_path42 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M925.42 49.4439L924.85 48.4438L925.38 47.1366C926.291 44.9485 926.671 43.7601 926.219 42.9171C925.892 42.3441 925.251 42.0594 924.348 42.4848C923.674 42.804 923.271 43.387 923.018 43.8616L921.828 42.9157C922.19 42.2392 922.914 41.4807 923.965 40.9776C925.725 40.146 927.223 40.6291 927.951 41.9105C928.627 43.098 928.216 44.4906 927.613 45.9392L927.211 46.8195L927.21 46.84L930.158 45.4578L930.927 46.8223L925.409 49.4333L925.42 49.4439Z\",\n    fill: \"black\"\n  })), _path43 || (_path43 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M934.009 38.1154L930.992 39.5469L931.443 40.7179C931.604 40.6199 931.741 40.5521 931.936 40.4551C932.678 40.1071 933.517 39.8952 934.266 39.9984C935.06 40.0824 935.752 40.5017 936.216 41.3246C936.965 42.6475 936.385 44.4042 934.282 45.3901C933.334 45.8347 932.441 46.0144 931.891 46.009L931.503 44.6144C931.942 44.6063 932.755 44.4654 933.464 44.1267C934.218 43.7689 934.828 43.0584 934.406 42.3085C933.984 41.5586 933.102 41.4311 931.548 42.166C931.114 42.369 930.827 42.5351 930.528 42.7316L928.932 38.771L933.217 36.7401L933.987 38.1046L934.009 38.1154Z\",\n    fill: \"black\"\n  })), _path44 || (_path44 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.975 461.586C46.2203 463.773 46.1037 465.738 44.1157 466.676C42.1277 467.614 40.2854 466.403 39.1455 464.403C37.9851 462.351 38.016 460.271 40.0268 459.324C42.0377 458.376 43.8778 459.648 44.975 461.586ZM40.9623 463.542C41.8684 465.177 42.7348 465.745 43.4433 465.406C44.1519 465.068 44.0755 464.081 43.1575 462.467C42.2394 460.852 41.4306 460.245 40.6992 460.593C40.0251 460.912 40.0117 461.896 40.9623 463.542Z\",\n    fill: \"black\"\n  })), _path45 || (_path45 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M923.862 27.4419L928.451 35.5563\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path46 || (_path46 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.5423 449.607L37.1423 457.721\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path47 || (_path47 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.1731 433.696L70.7619 441.811\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path48 || (_path48 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M101.793 416.844L106.382 424.959\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path49 || (_path49 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.411 399.984L142 408.099\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path50 || (_path50 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174.025 382.652L178.625 390.767\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path51 || (_path51 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M209.646 365.793L214.234 373.917\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path52 || (_path52 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.264 348.94L249.852 357.065\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path53 || (_path53 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.883 332.082L285.472 340.207\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path54 || (_path54 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M317.497 314.76L322.097 322.875\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path55 || (_path55 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M353.116 297.898L357.705 306.013\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path56 || (_path56 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M389.73 280.567L394.33 288.681\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path57 || (_path57 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M425.35 263.711L429.951 271.825\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path58 || (_path58 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M460.969 246.855L465.569 254.969\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path59 || (_path59 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M496.59 229.991L501.179 238.105\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path60 || (_path60 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M533.203 212.663L537.803 220.788\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path61 || (_path61 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M568.822 195.811L573.421 203.936\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path62 || (_path62 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M604.441 178.943L609.04 187.068\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path63 || (_path63 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M640.061 162.091L644.661 170.216\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path64 || (_path64 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M676.674 144.765L681.274 152.88\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path65 || (_path65 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M712.294 127.913L716.894 136.027\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path66 || (_path66 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M747.914 111.051L752.514 119.166\",\n    stroke: \"black\",\n    strokeWidth: 5.94,\n    strokeMiterlimit: 10\n  })), _path67 || (_path67 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M784.527 93.7249L789.127 101.84\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path68 || (_path68 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M820.147 76.863L824.747 84.9778\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path69 || (_path69 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M855.766 60.0089L860.365 68.1339\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })), _path70 || (_path70 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M892.379 42.6752L896.979 50.8001\",\n    stroke: \"black\",\n    strokeWidth: 1.49,\n    strokeMiterlimit: 10\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgYellowRulerRotate);\nexport default __webpack_public_path__ + \"static/media/YellowRulerRotate.61558b6313613cb160884da5c04db1b7.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _g, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgYodelyGuy(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 77,\n    height: 160,\n    viewBox: \"0 0 77 160\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.2151 27.6461C59.501 27.7099 60.787 27.7756 62.0748 27.8394C68.6765 29.3555 73.0313 31.4013 74.9051 38.3666C72.1398 35.5821 67.3635 32.3779 63.6179 31.3163C60.232 30.3571 58.1455 30.6549 54.9355 32.0898C48.6683 34.8878 46.0056 41.1628 45.4815 40.7818C44.739 38.9757 48.6219 33.2964 49.8227 31.9931C51.4799 30.1947 55.8173 27.9284 58.2151 27.6461Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.8977 34.7931C11.2487 40.1341 5.52491 44.4501 4.38208 51.2124C6.65227 46.1189 11.9681 39.2194 16.4408 36.0481C15.1742 34.973 15.8026 34.4431 14.8977 34.7931C15.412 33.7953 15.9264 32.7975 16.4408 31.7997C17.0866 30.7381 18.6278 29.8447 18.3706 28.5163C18.2855 28.0734 15.5571 25.3372 16.056 20.0176C10.6029 18.37 15.8935 14.3962 18.1792 12.2904C17.922 10.5829 18.3552 8.60473 19.1441 7.07515C19.0861 4.94226 17.9085 -0.214981 20.0124 1.76322C20.4745 0.593315 21.2248 2.40521 21.7488 2.34333C22.0892 2.30273 22.329 0.235577 28.1166 2.14996C33.3357 -2.19125 34.4012 6.92626 36.3175 10.1672C35.486 14.549 41.1808 15.9007 39.9838 18.4725C39.104 20.3618 36.1435 19.4935 35.9327 19.8242C35.8031 20.9825 35.6755 22.1427 35.546 23.301C36.8899 26.6251 38.5239 33.0102 32.7479 29.9646C31.5045 32.637 32.0498 34.0467 28.7915 34.6964C31.1951 37.9934 30.936 43.0579 32.2644 44.7402C33.036 45.3841 33.8075 46.0281 34.5791 46.672C35.8534 48.2383 36.1415 51.4386 39.307 50.0521C39.4037 50.1488 39.5004 50.2455 39.5971 50.3422C38.9454 50.8566 40.0419 52.2817 40.272 52.3707C45.5781 51.0499 50.8842 49.7311 56.1904 48.4104C55.268 43.9899 57.2771 44.4095 57.3487 44.1601C57.0915 43.7733 56.8343 43.3866 56.5771 43.0018C56.0627 40.6639 57.8128 41.0545 57.9269 40.8766C57.573 37.8832 57.2191 34.8879 56.8652 31.8945C51.6191 33.3428 47.332 38.181 45.0947 42.9051C43.8648 37.4017 50.2306 29.4116 55.5136 27.8375C56.5578 23.9546 60.2435 23.4267 61.3012 27.2574C69.7438 28.9127 73.9342 30.8097 75.6765 39.7164C75.2337 40.3681 73.8859 37.6376 71.7201 35.9495C69.2121 33.9945 63.9407 31.4768 60.7211 31.121C60.2319 34.3793 60.8448 37.626 61.2026 40.8766C64.4938 38.9429 64.399 41.4219 64.5789 41.5534C64.9965 41.6501 65.4142 41.7468 65.8338 41.8435C65.9943 42.3269 66.1548 42.8084 66.3153 43.2918C66.7601 43.5722 68.0325 42.3656 67.377 45.5137C70.5734 46.0822 68.398 48.3891 68.3419 48.6038C67.609 51.3999 67.9319 53.4826 62.4576 55.074C63.0048 61.6738 63.5501 68.2736 64.0974 74.8734C65.5438 82.8229 66.3269 90.9388 67.1836 99.0198V102.883C67.7618 106.94 68.3419 110.995 68.9201 115.052C69.2411 119.109 69.564 123.164 69.885 127.221C70.0146 127.415 70.1422 127.608 70.2717 127.801C67.3944 130.947 67.9687 128.051 66.9922 125.289C65.0449 112.078 63.699 98.8226 62.7476 85.4973C61.6087 79.5801 61.073 73.5507 60.6244 67.533C59.3385 63.4992 59.383 59.1542 58.6945 54.9773C50.7179 57.4274 47.2585 64.6092 37.6634 67.3396C38.9087 69.5769 41.0029 72.8179 39.0131 75.0668C38.8333 77.045 40.1985 79.7096 38.4349 80.6688C37.9689 85.9904 40.5388 82.4343 41.8112 87.3324C45.3364 87.3498 48.4594 86.8122 50.5903 90.1324C50.89 94.0559 50.7682 98.0587 49.2406 101.723C49.2174 106.637 47.6356 111.398 47.1174 116.211C46.9878 116.34 46.8602 116.468 46.7306 116.597C47.245 118.659 47.7593 120.718 48.2737 122.779C48.5831 125.197 47.6897 131.015 50.1069 130.797C51.7215 130.65 52.5975 124.605 58.2111 125.775C60.139 126.177 59.8702 129.124 60.3343 129.252C60.7075 129.354 61.1987 128.343 61.2026 129.928C61.2084 131.887 59.7639 131.197 59.6595 131.667C59.6208 131.839 61.3109 133.755 58.6945 133.985C58.2247 136.236 57.6735 134.542 56.8614 134.856C56.1536 135.563 55.4459 136.273 54.7381 136.981C52.8006 138.158 49.0259 138.135 49.8188 141.328C43.7411 146.116 45.3132 143.59 44.3193 142.969C44.1916 142.89 43.0546 143.041 41.6178 141.811C37.8413 138.576 41.4477 134.73 39.3999 130.704C40.009 126.183 36.5747 117.968 39.0131 117.955C38.433 113.631 39.8833 109.381 39.3999 105.012C39.5758 103.191 41.7667 96.6858 40.2681 97.1886C39.9626 97.291 39.6609 100.01 36.5051 102.307C35.31 104.976 34.6255 109.545 31.2956 109.841C30.8277 115.28 26.7746 123.058 26.2796 128.192C26.2157 132.442 26.15 136.691 26.0862 140.941C26.2157 141.198 26.3434 141.455 26.4729 141.714C24.634 144.279 21.8339 147.73 24.8331 150.31C25.7265 147.502 28.3834 146.307 31.0075 147.798C33.7669 149.366 31.6901 152.539 31.8757 153.11C31.9744 153.415 32.8484 153.415 32.6473 154.075C32.5216 154.487 26.1635 157.855 25.6047 159C25.3475 158.87 25.0903 158.743 24.8331 158.613C19.6082 158.766 22.0505 158.068 20.1052 155.233C19.1074 154.429 18.1115 153.624 17.1137 152.818C16.1875 152.692 15.8336 154.34 15.5706 154.363C14.0584 153.365 12.5482 152.367 11.036 151.37C11.9023 147.85 8.78903 142.937 15.0872 142.871C15.8587 141.003 16.6303 139.137 17.4018 137.269C17.2858 129.845 17.6977 122.308 19.5251 115.054C20.1032 113.252 20.6834 111.448 21.2615 109.646C15.1432 108.077 18.3958 103.974 16.5336 102.402C15.5996 101.613 9.6186 101.019 7.36775 96.3164C4.40142 90.1169 6.39702 82.4362 4.37628 83.4707C3.39395 83.9735 3.3166 86.3732 2.92986 80.8621C5.02601 80.866 2.57212 77.6193 2.1583 76.0336C1.77155 73.2007 1.38674 70.3678 1 67.5349C1.38674 63.8009 1.77155 60.0669 2.1583 56.3309C3.70914 51.4986 5.1285 46.5869 8.1393 42.4236C10.3902 39.8808 12.641 37.3379 14.8919 34.7931H14.8977ZM19.2389 1.76128C18.3803 2.03587 20.0375 3.88838 19.9137 4.1765L19.0455 3.88644C18.1463 4.38921 20.2579 5.78923 20.3005 5.91492C20.4842 6.46796 18.3977 6.16437 20.6872 7.07322C20.5867 8.00334 22.8936 10.5462 23.4853 9.29507C23.6632 10.1691 24.077 10.3006 23.9668 9.58512C22.8085 7.7829 21.6522 5.97873 20.4939 4.1765C20.4262 4.05081 19.9911 1.5215 19.2389 1.76128ZM20.3952 1.76128C20.5577 4.81463 22.5107 5.93812 23 6.68647C23.4563 7.38455 24.4077 10.8614 25.6047 10.0666C25.3146 8.4887 25.0265 6.91079 24.7364 5.3348C23.9223 4.81076 23.9881 6.19918 23.6748 6.20498C23.1237 6.21465 23.6478 2.22731 22.7099 5.43149C22.1781 5.41215 22.5533 3.58865 22.4198 3.20964C21.8842 1.68393 21.9635 4.45883 21.745 4.46463C21.1881 3.88258 21.7546 2.29886 20.3952 1.76128ZM23.8701 14.8971C22.8047 15.1465 24.3226 15.8852 24.3516 15.9587C24.3729 16.0128 23.9958 17.0203 24.4483 17.0203C24.6166 17.0203 24.6668 15.541 25.4132 17.6004C25.976 16.1424 27.1691 17.9659 27.2464 18.2772C27.5887 19.654 26.3782 21.8295 26.1848 21.8507C26.0881 21.8604 25.7613 21.0811 25.0265 21.2706C23.1585 25.024 24.9395 20.1278 23.29 19.7256C22.9033 19.7894 22.5185 19.8551 22.1317 19.9189C20.0394 21.1913 23.203 25.3701 21.8417 24.2659C21.7218 24.1693 21.2654 22.135 20.3952 22.2375C19.9447 22.8814 19.4941 23.5253 19.0455 24.1693C18.8657 24.1693 18.0632 21.58 18.1773 24.8461C15.7388 23.8831 19.148 28.7135 19.1422 29.0964C19.1364 29.5276 17.2317 29.6997 19.1422 32.5732C21.4259 34.6655 23.7077 36.7578 25.9914 38.8501C26.2157 37.4655 26.442 36.081 26.6663 34.6964C25.9586 33.8591 25.2508 33.0218 24.5431 32.1845C25.8928 32.2019 25.8599 34.6771 29.0777 34.213C30.586 33.9964 31.1796 33.1166 31.6824 31.7978C31.6669 31.239 29.0448 30.7768 27.726 27.8375C26.6102 30.0072 27.2522 26.8958 27.8227 26.5825C28.8475 26.0179 27.2406 27.4489 29.5591 29.6726C32.5409 32.5345 32.1967 29.2511 32.7421 29.1892C37.1741 32.6409 37.1799 27.6016 34.96 23.2972C35.6581 20.5281 35.2385 19.0024 34.7667 16.3435C34.3625 15.628 27.2986 15.7672 26.1809 15.6667C25.4094 15.4095 24.6378 15.1523 23.8663 14.8932L23.8701 14.8971ZM17.6958 30.7362C13.9772 35.555 16.58 34.8163 17.5991 37.2064C18.0728 38.3164 18.9527 43.7231 20.4939 46.2852H20.8806C25.0033 36.1815 28.0199 46.6217 28.6948 46.1886C27.9522 42.0233 25.3224 38.7147 22.327 35.7581C20.9019 34.3503 19.3936 34.3271 17.6958 30.7362ZM27.5345 34.5998C27.374 34.6964 27.2135 34.7931 27.053 34.8898C27.2135 37.1832 25.2353 40.0122 27.6312 41.2634C27.6718 40.6929 28.0547 36.2589 28.8862 36.7249C28.6619 37.7227 28.4357 38.7205 28.2113 39.7183C30.1103 40.8186 31.1235 43.609 30.9128 41.4567C30.8006 40.3081 29.0951 34.2072 27.5365 34.5998H27.5345ZM17.1156 38.0766C4.92739 49.0273 1.36354 60.0514 3.12709 76.4204C4.71855 78.7176 7.77576 81.7226 10.5565 82.3124C14.8377 83.2213 11.2855 80.7829 11.2313 79.8972C11.1424 78.4585 12.7744 81.9702 14.0294 82.8906C15.0292 83.6235 18.8753 85.0506 20.0104 84.8224C21.5864 83.4379 23.1624 82.0533 24.7384 80.6688C25.6395 77.1281 26.5387 73.5855 27.4398 70.0449C27.3663 69.6872 23.4312 66.8291 27.6332 67.7264C27.2986 65.168 29.2091 63.2247 29.1763 60.7727C30.3984 60.2583 31.6205 59.742 32.8426 59.2276C29.6578 53.382 29.7603 57.35 28.4047 58.6475C28.2113 58.7113 28.018 58.7771 27.8265 58.8409C31.547 52.303 28.2655 57.1934 25.9934 59.131C23.9668 60.5793 21.9422 62.0277 19.9157 63.478C18.5814 65.5664 21.2809 66.5449 22.327 66.278C23.0464 66.0943 25.0768 61.1865 25.3185 62.7045C25.3784 63.0874 22.3502 66.8929 23.292 67.2429C25.9276 68.2233 26.6721 63.4528 27.3431 63.7661C27.0318 65.9976 24.0848 69.749 22.5185 66.6628C20.7162 66.8214 18.6549 65.9609 19.1422 63.8628C19.38 62.834 25.9218 58.7578 27.3431 57.3925C29.5108 55.3099 28.4357 53.6102 32.0711 56.9091C33.8733 60.9525 33.707 58.1757 32.2644 56.1356C30.3133 53.3801 28.3022 54.7182 27.6332 53.8171C27.1536 52.7632 22.8337 44.9606 22.327 44.835C21.4008 44.6048 21.2287 47.8728 20.4939 47.2502C19.6585 45.125 18.8212 42.9999 17.9858 40.8766C17.775 40.2404 17.7963 38.0495 17.1176 38.0766H17.1156ZM63.2311 40.5885C61.2509 40.4686 60.2183 44.8059 60.9164 45.0322C61.2045 45.125 65.478 40.7258 63.2311 40.5885ZM57.2501 41.3601C56.0163 41.7333 57.8108 44.164 57.7316 44.3535C54.4075 45.7109 57.6059 49.4952 57.7316 49.9555C58.4161 52.4422 55.6741 51.9375 53.7752 52.564C49.8961 53.8422 46.0441 55.2461 42.0046 56.0409C36.3407 59.1909 30.1915 58.2492 31.5857 63.9614C30.4757 62.31 32.4172 59.1638 30.236 60.4846C29.4779 60.9429 29.768 62.3313 29.5611 62.8998C29.1743 63.7371 28.7895 64.5744 28.4028 65.4117C27.403 71.1278 33.444 69.4126 36.217 67.0534C45.6303 65.3962 50.2519 57.4448 57.8263 54.6911C57.8901 54.5616 57.9559 54.434 58.0197 54.3044C64.0587 56.2284 60.2048 53.5077 60.0462 52.4693C60.1429 51.7287 60.2396 50.9881 60.3363 50.2474C61.046 49.735 60.4697 51.7867 60.6263 52.4693C61.2374 53.2099 61.8484 53.9505 62.4595 54.6911C63.3471 54.8613 68.3322 52.2256 67.7656 48.9925C62.3048 51.0577 63.8885 49.8781 63.0377 49.0891C62.9294 48.9886 60.8584 48.8416 62.1694 47.0607C61.102 47.0181 60.6109 45.1018 60.3363 45.0322C59.586 44.8427 61.0866 47.6543 58.1183 44.7421C58.3368 43.957 58.4103 41.01 57.2501 41.362V41.3601ZM64.5808 41.9402C63.9137 42.0852 59.4042 47.5383 62.6509 46.3839C63.6487 45.4499 64.6446 44.5159 65.6424 43.5838C65.9247 42.7987 65.4181 41.7603 64.5808 41.9421V41.9402ZM30.6227 42.7117C30.058 43.0675 31.4813 45.0477 31.6843 45.5118C32.4559 47.3797 33.2274 49.2458 33.999 51.1138C35.2907 54.7859 34.9484 59.1039 37.5686 57.584C38.7192 56.9169 40.2294 50.5472 39.015 52.0787C38.5123 52.7149 37.5957 56.5959 37.0852 55.7489C36.77 55.2248 41.0184 48.9731 37.3753 50.8237C36.8609 51.661 36.3465 52.4983 35.8321 53.3356C35.2617 52.9875 36.8454 51.1969 36.7004 50.5356C36.623 50.1817 33.1404 45.1366 32.0691 45.1269C31.7617 44.1369 31.3846 43.4098 30.6227 42.7117ZM66.8974 43.6786C65.799 43.7927 62.1694 47.1245 62.1694 47.8322C62.1694 48.2808 62.9468 48.888 63.6159 48.509C63.8847 48.3563 68.2471 44.5256 66.8955 43.6805L66.8974 43.6786ZM67.2822 45.9971C65.7526 46.1654 60.5529 52.129 66.8955 48.7005C69.8637 47.0974 68.3651 45.8772 67.2822 45.9971ZM29.271 47.7355C29.3039 48.219 29.3348 48.7005 29.3677 49.1839C29.3252 49.3173 26.7456 50.4582 29.4644 50.0541C29.534 52.8077 30.3075 50.2997 30.4293 50.2474C30.4931 50.2204 31.518 50.8121 31.6843 50.1508C31.8003 49.6905 30.4603 50.0579 31.0094 48.1223C29.9169 48.6192 29.6926 47.4281 29.273 47.7355H29.271ZM55.8984 48.7005C50.6889 50.0521 45.4795 51.4038 40.27 52.7574C39.7151 53.0861 38.1913 57.116 39.1117 57.0077C40.1405 56.5572 41.1692 56.1066 42.198 55.6561C47.0864 54.3044 51.9749 52.9527 56.8614 51.5991C58.1744 51.1563 56.9987 48.6405 55.8965 48.7024L55.8984 48.7005ZM37.3753 67.6297C36.5728 69.3449 38.5258 72.1855 38.9184 74.39C40.328 72.0018 38.404 69.78 37.3753 67.6297ZM35.0606 68.4032C31.0268 69.749 34.3799 72.9745 33.5175 78.2535C34.9368 78.064 35.8902 77.1223 37.0871 76.4184C37.0311 75.3974 35.4725 68.4631 35.0606 68.4012V68.4032ZM32.3592 69.5615C30.992 69.5634 30.0252 70.1493 28.7895 70.6231C29.3039 73.8176 29.4683 76.9676 29.4644 80.1853C35.6968 80.4329 32.0865 73.1543 32.8407 69.6581C32.6802 69.6253 32.5197 69.5943 32.3592 69.5615ZM37.1819 76.9019C35.6291 78.2071 33.9468 78.4875 33.3222 78.8337C32.9354 79.2842 32.5506 79.7348 32.1639 80.1853C31.4445 80.5721 28.7528 80.5044 28.981 81.2469C31.578 83.1826 34.6178 83.5094 37.7601 83.8555C38.0076 82.8964 38.054 77.074 37.1819 76.9019ZM4.76689 79.027C5.24839 80.9917 5.73182 82.9544 6.21332 84.9191C5.48237 88.8794 6.63487 92.6656 7.9498 96.3164C11.1288 102.118 24.1351 103.786 30.3326 103.657C29.6655 101.849 29.0351 99.946 29.271 97.9582C27.2193 98.1573 17.8853 96.5949 16.7289 96.2198C12.4496 94.8275 10.3031 86.6942 10.2645 82.6025C6.43569 81.4326 5.08789 78.9091 4.76496 79.029L4.76689 79.027ZM24.4483 81.5389C23.0986 82.763 21.7469 83.9851 20.3972 85.2091C18.2295 85.855 13.8186 83.0743 13.4512 83.084C12.1402 83.1188 15.2457 86.9959 15.7659 87.5277C20.1593 92.0004 24.1699 91.9346 30.0445 91.5846C31.3227 88.7343 33.8269 86.5163 35.544 84.1475C35.4241 83.8188 30.1702 83.2677 29.0796 81.7323C28.9055 83.1401 27.5403 84.6252 26.1848 84.8224C22.9671 85.2942 25.6047 81.4887 24.4483 81.5389ZM26.3782 81.9237C24.8873 82.1287 23.8141 85.0544 26.5715 84.2423C28.4492 83.6892 28.5149 81.6298 26.3782 81.9237ZM36.6037 86.1741C34.7589 88.6937 32.7285 91.1341 31.8757 94.1913C33.2874 95.1021 36.1996 95.9703 37.9534 96.4131C38.1294 96.4576 41.0764 96.4209 41.3297 97.2833C40.7515 100.18 40.1714 103.079 39.5932 105.975C40.4093 108.335 38.5819 116.452 39.2065 117.566C39.4308 117.533 39.657 117.502 39.8814 117.469C40.2391 117.661 39.6551 118.398 41.0397 117.469C42.8071 118.386 46.4038 117.976 46.924 115.248C48.3472 109.717 48.1906 103.825 50.0102 98.4416C52.1547 85.3058 46.3168 88.4211 41.8093 87.7211C40.0728 87.2067 38.3363 86.6904 36.5998 86.176L36.6037 86.1741ZM17.8466 91.8805C17.7596 92.0951 17.6745 92.3117 17.5875 92.5264C15.6886 92.1783 17.222 93.0272 17.2645 93.1084L17.4579 94.0772C17.5875 93.9051 17.717 93.733 17.8447 93.5609C17.9471 93.5686 18.477 94.8004 18.361 93.3018C20.1864 94.0521 18.3745 93.1161 18.6839 92.333C17.5604 92.9092 18.4209 91.7142 17.8447 91.8805H17.8466ZM17.1156 102.593C17.3864 105.616 19.7571 103.405 18.6588 102.98C18.1444 102.85 17.63 102.723 17.1156 102.593ZM35.8321 102.593C29.5495 106.059 26.1055 102.272 34.6738 106.07C34.8634 105.186 36.4664 102.557 35.8321 102.593ZM22.1337 105.683C22.7389 109.292 21.3582 109.992 20.6872 112.347C19.0339 118.148 17.5759 124.874 17.9858 130.891C19.6121 133.165 19.1074 131.959 19.6256 132.146C19.7552 132.34 19.8828 132.533 20.0124 132.727C20.1883 132.794 20.8168 132.001 21.3621 133.307C21.8765 133.243 22.3908 133.177 22.9052 133.113C23.8701 133.37 24.8351 133.628 25.8 133.887C25.8329 132.245 25.8638 130.603 25.8967 128.962C26.4343 123.238 29.3271 117.475 30.3346 113.509C30.9108 111.237 31.3517 108.017 29.8531 106.265C27.2812 106.072 24.7074 105.879 22.1356 105.685L22.1337 105.683ZM46.4444 117.274C46.2917 117.87 46.5894 119.742 45.9629 118.722C45.4872 117.951 45.7908 116.139 45.288 119.399C44.8394 119.407 44.8858 116.537 44.1297 119.206C43.8726 118.885 43.6154 118.562 43.3582 118.241C42.1341 121.772 43.0043 116.238 41.4283 119.399C40.4267 115.534 41.4844 122.36 39.8852 118.241C39.628 118.628 39.3709 119.014 39.1137 119.399C38.957 119.409 38.1159 116.756 38.4388 120.461C38.6322 121.362 38.8255 122.263 39.017 123.164C41.5212 122.176 44.6306 121.043 47.2179 120.942C47.3881 120.857 46.8737 117.626 46.4463 117.272L46.4444 117.274ZM46.0577 121.523C44.7079 121.844 43.3563 122.166 42.0065 122.487C38.3866 123.634 39.0402 124.046 39.8833 127.703C41.204 127.592 47.593 125.305 47.8908 124.323C48.1674 123.408 47.9353 121.372 46.0577 121.523ZM18.0806 131.568C17.951 132.856 17.8234 134.144 17.6938 135.432C20.2773 136.648 23.0444 137.646 25.8947 137.847C26.0823 135.996 25.5621 132.168 24.4483 135.625C23.7367 135.631 24.6224 133.39 23.7734 133.79C23.7328 136.118 23.6304 135.498 23.0986 133.693C22.5359 133.657 22.2284 137.141 21.9403 133.693C21.6193 134.08 21.2964 134.467 20.9754 134.852C20.5151 130.108 20.2792 136.816 19.4322 132.727C18.1927 135.024 18.653 132.498 18.0825 131.568H18.0806ZM17.6958 135.817C16.5549 138.591 23.64 141.96 25.2199 141.419C25.9141 141.181 25.8387 138.404 25.6066 138.329C23.1527 138.166 19.73 137.201 17.6958 135.817Z\",\n    fill: \"#A77C50\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_4_709\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 1,\n    y: 1,\n    width: 75,\n    height: 158\n  }, _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.8977 34.7931C11.2487 40.1341 5.52491 44.4501 4.38208 51.2124C6.65227 46.1189 11.9681 39.2194 16.4408 36.0481C15.1742 34.973 15.8026 34.4431 14.8977 34.7931C15.412 33.7953 15.9264 32.7975 16.4408 31.7997C17.0866 30.7381 18.6278 29.8447 18.3706 28.5163C18.2855 28.0734 15.5571 25.3372 16.056 20.0176C10.6029 18.37 15.8935 14.3962 18.1792 12.2904C17.922 10.5829 18.3552 8.60473 19.1441 7.07515C19.0861 4.94226 17.9085 -0.214981 20.0124 1.76322C20.4745 0.593315 21.2248 2.40521 21.7488 2.34333C22.0892 2.30273 22.329 0.235577 28.1166 2.14996C33.3357 -2.19125 34.4012 6.92626 36.3175 10.1672C35.486 14.549 41.1808 15.9007 39.9838 18.4725C39.104 20.3618 36.1435 19.4935 35.9327 19.8242C35.8031 20.9825 35.6755 22.1427 35.546 23.301C36.8899 26.6251 38.5239 33.0102 32.7479 29.9646C31.5045 32.637 32.0498 34.0467 28.7915 34.6964C31.1951 37.9934 30.936 43.0579 32.2644 44.7402C33.036 45.3841 33.8075 46.0281 34.5791 46.672C35.8534 48.2383 36.1415 51.4386 39.307 50.0521C39.4037 50.1488 39.5004 50.2455 39.5971 50.3422C38.9454 50.8566 40.0419 52.2817 40.272 52.3707C45.5781 51.0499 50.8842 49.7311 56.1904 48.4104C55.268 43.9899 57.2771 44.4095 57.3487 44.1601C57.0915 43.7733 56.8343 43.3866 56.5771 43.0018C56.0627 40.6639 57.8128 41.0545 57.9269 40.8766C57.573 37.8832 57.2191 34.8879 56.8652 31.8945C51.6191 33.3428 47.332 38.181 45.0947 42.9051C43.8648 37.4017 50.2306 29.4116 55.5136 27.8375C56.5578 23.9546 60.2435 23.4267 61.3012 27.2574C69.7438 28.9127 73.9342 30.8097 75.6765 39.7164C75.2337 40.3681 73.8859 37.6376 71.7201 35.9495C69.2121 33.9945 63.9407 31.4768 60.7211 31.121C60.2319 34.3793 60.8448 37.626 61.2026 40.8766C64.4938 38.9429 64.399 41.4219 64.5789 41.5534C64.9965 41.6501 65.4142 41.7468 65.8338 41.8435C65.9943 42.3269 66.1548 42.8084 66.3153 43.2918C66.7601 43.5722 68.0325 42.3656 67.377 45.5137C70.5734 46.0822 68.398 48.3891 68.3419 48.6038C67.609 51.3999 67.9319 53.4826 62.4576 55.074C63.0048 61.6738 63.5501 68.2736 64.0974 74.8734C65.5438 82.8229 66.3269 90.9388 67.1836 99.0198V102.883C67.7618 106.94 68.3419 110.995 68.9201 115.052C69.2411 119.109 69.564 123.164 69.885 127.221C70.0146 127.415 70.1422 127.608 70.2717 127.801C67.3944 130.947 67.9687 128.051 66.9922 125.289C65.0449 112.078 63.699 98.8226 62.7476 85.4973C61.6087 79.5801 61.073 73.5507 60.6244 67.533C59.3385 63.4992 59.383 59.1542 58.6945 54.9773C50.7179 57.4274 47.2585 64.6092 37.6634 67.3396C38.9087 69.5769 41.0029 72.8179 39.0131 75.0668C38.8333 77.045 40.1985 79.7096 38.4349 80.6688C37.9689 85.9904 40.5388 82.4343 41.8112 87.3324C45.3364 87.3498 48.4594 86.8122 50.5903 90.1324C50.89 94.0559 50.7682 98.0587 49.2406 101.723C49.2174 106.637 47.6356 111.398 47.1174 116.211C46.9878 116.34 46.8602 116.468 46.7306 116.597C47.245 118.659 47.7593 120.718 48.2737 122.779C48.5831 125.197 47.6897 131.015 50.1069 130.797C51.7215 130.65 52.5975 124.605 58.2111 125.775C60.139 126.177 59.8702 129.124 60.3343 129.252C60.7075 129.354 61.1987 128.343 61.2026 129.928C61.2084 131.887 59.7639 131.197 59.6595 131.667C59.6208 131.839 61.3109 133.755 58.6945 133.985C58.2247 136.236 57.6735 134.542 56.8614 134.856C56.1536 135.563 55.4459 136.273 54.7381 136.981C52.8006 138.158 49.0259 138.135 49.8188 141.328C43.7411 146.116 45.3132 143.59 44.3193 142.969C44.1916 142.89 43.0546 143.041 41.6178 141.811C37.8413 138.576 41.4477 134.73 39.3999 130.704C40.009 126.183 36.5747 117.968 39.0131 117.955C38.433 113.631 39.8833 109.381 39.3999 105.012C39.5758 103.191 41.7667 96.6858 40.2681 97.1886C39.9626 97.291 39.6609 100.01 36.5051 102.307C35.31 104.976 34.6255 109.545 31.2956 109.841C30.8277 115.28 26.7746 123.058 26.2796 128.192C26.2157 132.442 26.15 136.691 26.0862 140.941C26.2157 141.198 26.3434 141.455 26.4729 141.714C24.634 144.279 21.8339 147.73 24.8331 150.31C25.7265 147.502 28.3834 146.307 31.0075 147.798C33.7669 149.366 31.6901 152.539 31.8757 153.11C31.9744 153.415 32.8484 153.415 32.6473 154.075C32.5216 154.487 26.1635 157.855 25.6047 159C25.3475 158.87 25.0903 158.743 24.8331 158.613C19.6082 158.766 22.0505 158.068 20.1052 155.233C19.1074 154.429 18.1115 153.624 17.1137 152.818C16.1875 152.692 15.8336 154.34 15.5706 154.363C14.0584 153.365 12.5482 152.367 11.036 151.37C11.9023 147.85 8.78903 142.937 15.0872 142.871C15.8587 141.003 16.6303 139.137 17.4018 137.269C17.2858 129.845 17.6977 122.308 19.5251 115.054C20.1032 113.252 20.6834 111.448 21.2615 109.646C15.1432 108.077 18.3958 103.974 16.5336 102.402C15.5996 101.613 9.6186 101.019 7.36775 96.3164C4.40142 90.1169 6.39702 82.4362 4.37628 83.4707C3.39395 83.9735 3.3166 86.3732 2.92986 80.8621C5.02601 80.866 2.57212 77.6193 2.1583 76.0336C1.77155 73.2007 1.38674 70.3678 1 67.5349C1.38674 63.8009 1.77155 60.0669 2.1583 56.3309C3.70914 51.4986 5.1285 46.5869 8.1393 42.4236C10.3902 39.8808 12.641 37.3379 14.8919 34.7931H14.8977ZM19.2389 1.76128C18.3803 2.03587 20.0375 3.88838 19.9137 4.1765L19.0455 3.88644C18.1463 4.38921 20.2579 5.78923 20.3005 5.91492C20.4842 6.46796 18.3977 6.16437 20.6872 7.07322C20.5867 8.00334 22.8936 10.5462 23.4853 9.29507C23.6632 10.1691 24.077 10.3006 23.9668 9.58512C22.8085 7.7829 21.6522 5.97873 20.4939 4.1765C20.4262 4.05081 19.9911 1.5215 19.2389 1.76128ZM20.3952 1.76128C20.5577 4.81463 22.5107 5.93812 23 6.68647C23.4563 7.38455 24.4077 10.8614 25.6047 10.0666C25.3146 8.4887 25.0265 6.91079 24.7364 5.3348C23.9223 4.81076 23.9881 6.19918 23.6748 6.20498C23.1237 6.21465 23.6478 2.22731 22.7099 5.43149C22.1781 5.41215 22.5533 3.58865 22.4198 3.20964C21.8842 1.68393 21.9635 4.45883 21.745 4.46463C21.1881 3.88258 21.7546 2.29886 20.3952 1.76128ZM23.8701 14.8971C22.8047 15.1465 24.3226 15.8852 24.3516 15.9587C24.3729 16.0128 23.9958 17.0203 24.4483 17.0203C24.6166 17.0203 24.6668 15.541 25.4132 17.6004C25.976 16.1424 27.1691 17.9659 27.2464 18.2772C27.5887 19.654 26.3782 21.8295 26.1848 21.8507C26.0881 21.8604 25.7613 21.0811 25.0265 21.2706C23.1585 25.024 24.9395 20.1278 23.29 19.7256C22.9033 19.7894 22.5185 19.8551 22.1317 19.9189C20.0394 21.1913 23.203 25.3701 21.8417 24.2659C21.7218 24.1693 21.2654 22.135 20.3952 22.2375C19.9447 22.8814 19.4941 23.5253 19.0455 24.1693C18.8657 24.1693 18.0632 21.58 18.1773 24.8461C15.7388 23.8831 19.148 28.7135 19.1422 29.0964C19.1364 29.5276 17.2317 29.6997 19.1422 32.5732C21.4259 34.6655 23.7077 36.7578 25.9914 38.8501C26.2157 37.4655 26.442 36.081 26.6663 34.6964C25.9586 33.8591 25.2508 33.0218 24.5431 32.1845C25.8928 32.2019 25.8599 34.6771 29.0777 34.213C30.586 33.9964 31.1796 33.1166 31.6824 31.7978C31.6669 31.239 29.0448 30.7768 27.726 27.8375C26.6102 30.0072 27.2522 26.8958 27.8227 26.5825C28.8475 26.0179 27.2406 27.4489 29.5591 29.6726C32.5409 32.5345 32.1967 29.2511 32.7421 29.1892C37.1741 32.6409 37.1799 27.6016 34.96 23.2972C35.6581 20.5281 35.2385 19.0024 34.7667 16.3435C34.3625 15.628 27.2986 15.7672 26.1809 15.6667C25.4094 15.4095 24.6378 15.1523 23.8663 14.8932L23.8701 14.8971ZM17.6958 30.7362C13.9772 35.555 16.58 34.8163 17.5991 37.2064C18.0728 38.3164 18.9527 43.7231 20.4939 46.2852H20.8806C25.0033 36.1815 28.0199 46.6217 28.6948 46.1886C27.9522 42.0233 25.3224 38.7147 22.327 35.7581C20.9019 34.3503 19.3936 34.3271 17.6958 30.7362ZM27.5345 34.5998C27.374 34.6964 27.2135 34.7931 27.053 34.8898C27.2135 37.1832 25.2353 40.0122 27.6312 41.2634C27.6718 40.6929 28.0547 36.2589 28.8862 36.7249C28.6619 37.7227 28.4357 38.7205 28.2113 39.7183C30.1103 40.8186 31.1235 43.609 30.9128 41.4567C30.8006 40.3081 29.0951 34.2072 27.5365 34.5998H27.5345ZM17.1156 38.0766C4.92739 49.0273 1.36354 60.0514 3.12709 76.4204C4.71855 78.7176 7.77576 81.7226 10.5565 82.3124C14.8377 83.2213 11.2855 80.7829 11.2313 79.8972C11.1424 78.4585 12.7744 81.9702 14.0294 82.8906C15.0292 83.6235 18.8753 85.0506 20.0104 84.8224C21.5864 83.4379 23.1624 82.0533 24.7384 80.6688C25.6395 77.1281 26.5387 73.5855 27.4398 70.0449C27.3663 69.6872 23.4312 66.8291 27.6332 67.7264C27.2986 65.168 29.2091 63.2247 29.1763 60.7727C30.3984 60.2583 31.6205 59.742 32.8426 59.2276C29.6578 53.382 29.7603 57.35 28.4047 58.6475C28.2113 58.7113 28.018 58.7771 27.8265 58.8409C31.547 52.303 28.2655 57.1934 25.9934 59.131C23.9668 60.5793 21.9422 62.0277 19.9157 63.478C18.5814 65.5664 21.2809 66.5449 22.327 66.278C23.0464 66.0943 25.0768 61.1865 25.3185 62.7045C25.3784 63.0874 22.3502 66.8929 23.292 67.2429C25.9276 68.2233 26.6721 63.4528 27.3431 63.7661C27.0318 65.9976 24.0848 69.749 22.5185 66.6628C20.7162 66.8214 18.6549 65.9609 19.1422 63.8628C19.38 62.834 25.9218 58.7578 27.3431 57.3925C29.5108 55.3099 28.4357 53.6102 32.0711 56.9091C33.8733 60.9525 33.707 58.1757 32.2644 56.1356C30.3133 53.3801 28.3022 54.7182 27.6332 53.8171C27.1536 52.7632 22.8337 44.9606 22.327 44.835C21.4008 44.6048 21.2287 47.8728 20.4939 47.2502C19.6585 45.125 18.8212 42.9999 17.9858 40.8766C17.775 40.2404 17.7963 38.0495 17.1176 38.0766H17.1156ZM63.2311 40.5885C61.2509 40.4686 60.2183 44.8059 60.9164 45.0322C61.2045 45.125 65.478 40.7258 63.2311 40.5885ZM57.2501 41.3601C56.0163 41.7333 57.8108 44.164 57.7316 44.3535C54.4075 45.7109 57.6059 49.4952 57.7316 49.9555C58.4161 52.4422 55.6741 51.9375 53.7752 52.564C49.8961 53.8422 46.0441 55.2461 42.0046 56.0409C36.3407 59.1909 30.1915 58.2492 31.5857 63.9614C30.4757 62.31 32.4172 59.1638 30.236 60.4846C29.4779 60.9429 29.768 62.3313 29.5611 62.8998C29.1743 63.7371 28.7895 64.5744 28.4028 65.4117C27.403 71.1278 33.444 69.4126 36.217 67.0534C45.6303 65.3962 50.2519 57.4448 57.8263 54.6911C57.8901 54.5616 57.9559 54.434 58.0197 54.3044C64.0587 56.2284 60.2048 53.5077 60.0462 52.4693C60.1429 51.7287 60.2396 50.9881 60.3363 50.2474C61.046 49.735 60.4697 51.7867 60.6263 52.4693C61.2374 53.2099 61.8484 53.9505 62.4595 54.6911C63.3471 54.8613 68.3322 52.2256 67.7656 48.9925C62.3048 51.0577 63.8885 49.8781 63.0377 49.0891C62.9294 48.9886 60.8584 48.8416 62.1694 47.0607C61.102 47.0181 60.6109 45.1018 60.3363 45.0322C59.586 44.8427 61.0866 47.6543 58.1183 44.7421C58.3368 43.957 58.4103 41.01 57.2501 41.362V41.3601ZM64.5808 41.9402C63.9137 42.0852 59.4042 47.5383 62.6509 46.3839C63.6487 45.4499 64.6446 44.5159 65.6424 43.5838C65.9247 42.7987 65.4181 41.7603 64.5808 41.9421V41.9402ZM30.6227 42.7117C30.058 43.0675 31.4813 45.0477 31.6843 45.5118C32.4559 47.3797 33.2274 49.2458 33.999 51.1138C35.2907 54.7859 34.9484 59.1039 37.5686 57.584C38.7192 56.9169 40.2294 50.5472 39.015 52.0787C38.5123 52.7149 37.5957 56.5959 37.0852 55.7489C36.77 55.2248 41.0184 48.9731 37.3753 50.8237C36.8609 51.661 36.3465 52.4983 35.8321 53.3356C35.2617 52.9875 36.8454 51.1969 36.7004 50.5356C36.623 50.1817 33.1404 45.1366 32.0691 45.1269C31.7617 44.1369 31.3846 43.4098 30.6227 42.7117ZM66.8974 43.6786C65.799 43.7927 62.1694 47.1245 62.1694 47.8322C62.1694 48.2808 62.9468 48.888 63.6159 48.509C63.8847 48.3563 68.2471 44.5256 66.8955 43.6805L66.8974 43.6786ZM67.2822 45.9971C65.7526 46.1654 60.5529 52.129 66.8955 48.7005C69.8637 47.0974 68.3651 45.8772 67.2822 45.9971ZM29.271 47.7355C29.3039 48.219 29.3348 48.7005 29.3677 49.1839C29.3252 49.3173 26.7456 50.4582 29.4644 50.0541C29.534 52.8077 30.3075 50.2997 30.4293 50.2474C30.4931 50.2204 31.518 50.8121 31.6843 50.1508C31.8003 49.6905 30.4603 50.0579 31.0094 48.1223C29.9169 48.6192 29.6926 47.4281 29.273 47.7355H29.271ZM55.8984 48.7005C50.6889 50.0521 45.4795 51.4038 40.27 52.7574C39.7151 53.0861 38.1913 57.116 39.1117 57.0077C40.1405 56.5572 41.1692 56.1066 42.198 55.6561C47.0864 54.3044 51.9749 52.9527 56.8614 51.5991C58.1744 51.1563 56.9987 48.6405 55.8965 48.7024L55.8984 48.7005ZM37.3753 67.6297C36.5728 69.3449 38.5258 72.1855 38.9184 74.39C40.328 72.0018 38.404 69.78 37.3753 67.6297ZM35.0606 68.4032C31.0268 69.749 34.3799 72.9745 33.5175 78.2535C34.9368 78.064 35.8902 77.1223 37.0871 76.4184C37.0311 75.3974 35.4725 68.4631 35.0606 68.4012V68.4032ZM32.3592 69.5615C30.992 69.5634 30.0252 70.1493 28.7895 70.6231C29.3039 73.8176 29.4683 76.9676 29.4644 80.1853C35.6968 80.4329 32.0865 73.1543 32.8407 69.6581C32.6802 69.6253 32.5197 69.5943 32.3592 69.5615ZM37.1819 76.9019C35.6291 78.2071 33.9468 78.4875 33.3222 78.8337C32.9354 79.2842 32.5506 79.7348 32.1639 80.1853C31.4445 80.5721 28.7528 80.5044 28.981 81.2469C31.578 83.1826 34.6178 83.5094 37.7601 83.8555C38.0076 82.8964 38.054 77.074 37.1819 76.9019ZM4.76689 79.027C5.24839 80.9917 5.73182 82.9544 6.21332 84.9191C5.48237 88.8794 6.63487 92.6656 7.9498 96.3164C11.1288 102.118 24.1351 103.786 30.3326 103.657C29.6655 101.849 29.0351 99.946 29.271 97.9582C27.2193 98.1573 17.8853 96.5949 16.7289 96.2198C12.4496 94.8275 10.3031 86.6942 10.2645 82.6025C6.43569 81.4326 5.08789 78.9091 4.76496 79.029L4.76689 79.027ZM24.4483 81.5389C23.0986 82.763 21.7469 83.9851 20.3972 85.2091C18.2295 85.855 13.8186 83.0743 13.4512 83.084C12.1402 83.1188 15.2457 86.9959 15.7659 87.5277C20.1593 92.0004 24.1699 91.9346 30.0445 91.5846C31.3227 88.7343 33.8269 86.5163 35.544 84.1475C35.4241 83.8188 30.1702 83.2677 29.0796 81.7323C28.9055 83.1401 27.5403 84.6252 26.1848 84.8224C22.9671 85.2942 25.6047 81.4887 24.4483 81.5389ZM26.3782 81.9237C24.8873 82.1287 23.8141 85.0544 26.5715 84.2423C28.4492 83.6892 28.5149 81.6298 26.3782 81.9237ZM36.6037 86.1741C34.7589 88.6937 32.7285 91.1341 31.8757 94.1913C33.2874 95.1021 36.1996 95.9703 37.9534 96.4131C38.1294 96.4576 41.0764 96.4209 41.3297 97.2833C40.7515 100.18 40.1714 103.079 39.5932 105.975C40.4093 108.335 38.5819 116.452 39.2065 117.566C39.4308 117.533 39.657 117.502 39.8814 117.469C40.2391 117.661 39.6551 118.398 41.0397 117.469C42.8071 118.386 46.4038 117.976 46.924 115.248C48.3472 109.717 48.1906 103.825 50.0102 98.4416C52.1547 85.3058 46.3168 88.4211 41.8093 87.7211C40.0728 87.2067 38.3363 86.6904 36.5998 86.176L36.6037 86.1741ZM17.8466 91.8805C17.7596 92.0951 17.6745 92.3117 17.5875 92.5264C15.6886 92.1783 17.222 93.0272 17.2645 93.1084L17.4579 94.0772C17.5875 93.9051 17.717 93.733 17.8447 93.5609C17.9471 93.5686 18.477 94.8004 18.361 93.3018C20.1864 94.0521 18.3745 93.1161 18.6839 92.333C17.5604 92.9092 18.4209 91.7142 17.8447 91.8805H17.8466ZM17.1156 102.593C17.3864 105.616 19.7571 103.405 18.6588 102.98C18.1444 102.85 17.63 102.723 17.1156 102.593ZM35.8321 102.593C29.5495 106.059 26.1055 102.272 34.6738 106.07C34.8634 105.186 36.4664 102.557 35.8321 102.593ZM22.1337 105.683C22.7389 109.292 21.3582 109.992 20.6872 112.347C19.0339 118.148 17.5759 124.874 17.9858 130.891C19.6121 133.165 19.1074 131.959 19.6256 132.146C19.7552 132.34 19.8828 132.533 20.0124 132.727C20.1883 132.794 20.8168 132.001 21.3621 133.307C21.8765 133.243 22.3908 133.177 22.9052 133.113C23.8701 133.37 24.8351 133.628 25.8 133.887C25.8329 132.245 25.8638 130.603 25.8967 128.962C26.4343 123.238 29.3271 117.475 30.3346 113.509C30.9108 111.237 31.3517 108.017 29.8531 106.265C27.2812 106.072 24.7074 105.879 22.1356 105.685L22.1337 105.683ZM46.4444 117.274C46.2917 117.87 46.5894 119.742 45.9629 118.722C45.4872 117.951 45.7908 116.139 45.288 119.399C44.8394 119.407 44.8858 116.537 44.1297 119.206C43.8726 118.885 43.6154 118.562 43.3582 118.241C42.1341 121.772 43.0043 116.238 41.4283 119.399C40.4267 115.534 41.4844 122.36 39.8852 118.241C39.628 118.628 39.3709 119.014 39.1137 119.399C38.957 119.409 38.1159 116.756 38.4388 120.461C38.6322 121.362 38.8255 122.263 39.017 123.164C41.5212 122.176 44.6306 121.043 47.2179 120.942C47.3881 120.857 46.8737 117.626 46.4463 117.272L46.4444 117.274ZM46.0577 121.523C44.7079 121.844 43.3563 122.166 42.0065 122.487C38.3866 123.634 39.0402 124.046 39.8833 127.703C41.204 127.592 47.593 125.305 47.8908 124.323C48.1674 123.408 47.9353 121.372 46.0577 121.523ZM18.0806 131.568C17.951 132.856 17.8234 134.144 17.6938 135.432C20.2773 136.648 23.0444 137.646 25.8947 137.847C26.0823 135.996 25.5621 132.168 24.4483 135.625C23.7367 135.631 24.6224 133.39 23.7734 133.79C23.7328 136.118 23.6304 135.498 23.0986 133.693C22.5359 133.657 22.2284 137.141 21.9403 133.693C21.6193 134.08 21.2964 134.467 20.9754 134.852C20.5151 130.108 20.2792 136.816 19.4322 132.727C18.1927 135.024 18.653 132.498 18.0825 131.568H18.0806ZM17.6958 135.817C16.5549 138.591 23.64 141.96 25.2199 141.419C25.9141 141.181 25.8387 138.404 25.6066 138.329C23.1527 138.166 19.73 137.201 17.6958 135.817Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_4_709)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.1753 133.885H4.38232V166.191H41.1753V133.885Z\",\n    fill: \"#826E59\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.4514 118.719H36.42V149.268H71.4514V118.719Z\",\n    fill: \"#826E59\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.3728 139.254L17.0741 132.227L15.0819 136.281L29.3806 143.308L31.3728 139.254Z\",\n    fill: \"#450000\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.2039 117.064L35.6886 123.495L36.4276 125.737L55.9429 119.306L55.2039 117.064Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.6497 83.9267L10.6678 79.5183L6.92525 98.1804L28.9071 102.589L32.6497 83.9267Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.9161 41.8227L15.0787 32.5765L-13.4418 66.0051L-2.60437 75.2513L25.9161 41.8227Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.73926 65.8911H-4.29236V84.3852H7.73926V65.8911Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.8324 41.331H22.2267V53.3355H35.8324V41.331Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.1839 51.2124H25.6067V59.4172H37.1839V51.2124Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.5077 66.5975L31.9952 69.4028L36.3367 82.5765L44.8492 79.7711L40.5077 66.5975Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.2762 70.8894L26.3665 69.7042L23.4771 84.1117L29.3868 85.2969L32.2762 70.8894Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.5442 88.0864H29.5554V91.3428H35.5442V88.0864Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.6059 83.5616H33.3823V89.6741H43.6059V83.5616Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.0474 90.2154L31.0902 87.9307L24.562 99.2379L28.5192 101.523L35.0474 90.2154Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.0693 92.8259H26.8599V104.158H32.0693V92.8259Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.1146 102.593H13.1304V109.425H36.1146V102.593Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.2703 91.1727H28.7898V98.5285H40.2703V91.1727Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.2997 95.8039H28.8496V103.374H38.2997V95.8039Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.2703 96.1771H35.8324V102.593H40.2703V96.1771Z\",\n    fill: \"#803538\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.4673 86.9844L41.6759 85.6211L37.4012 119.459L48.1926 120.822L52.4673 86.9844Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.4204 111.501L17.6769 109.638L14.5936 134.045L29.3371 135.907L32.4204 111.501Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.3622 47.8747H37.0874V69.018H58.3622V47.8747Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.5443 59.2277H29.8108V80.3787H35.5443V59.2277Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.1269 51.2124H10.4115V69.4725H26.1269V51.2124Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.5194 59.618L25.1281 56.3751L21.1562 67.8776L30.5475 71.1205L34.5194 59.618Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.0464 54.7916H26.1251V59.713H31.0464V54.7916Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.7672 56.6054H29.9556V59.417H32.7672V56.6054Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.7582 71.5957H0.506958V82.9409H15.7582V71.5957Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.68891 80.3786H-0.382446V86.6323H7.68891V80.3786Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.90888 85.563H3.55273V102.593H9.90888V85.563Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1178 96.1578H7.68896V102.593H17.1178V96.1578Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.0731 19.683H18.425V41.331H40.0731V19.683Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.6058 11.8088L13.1304 11.4646L13.9735 9.84607L43.6058 10.2328V11.8088Z\",\n    fill: \"#731D00\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.9962 21.1274C16.3327 19.2459 16.7213 17.2387 18.5139 15.9006C20.6371 14.313 23.2477 14.7713 23.8703 14.8989C26.1927 16.0785 26.9565 17.4901 27.2466 18.279C29.248 23.6973 20.8904 31.9099 17.6959 30.738C15.4161 29.9026 15.4528 24.1788 15.9962 21.1293V21.1274Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5454 8.4828C15.333 6.35377 16.9283 3.33329 17.6051 2.05124C18.8388 -0.286635 20.6101 -3.64551 23.9613 -4.30491C28.5809 -5.21376 32.9608 -0.350447 34.6296 3.33716C36.1108 6.61095 35.8769 9.88475 35.6893 9.91955C35.5307 9.95049 35.0086 7.75959 33.4945 4.39491C32.6205 2.44958 32.1776 1.81145 31.4506 1.59488C30.0718 1.18493 28.5925 2.56947 28.2735 2.8808C27.4613 2.30842 26.1502 1.60841 24.5665 1.67029C23.9922 1.6935 23.0795 1.7283 22.7314 2.33743C22.3891 2.93881 22.801 3.74518 22.9016 3.94048C23.267 4.65403 23.8858 4.97309 24.1121 5.07558C24.3731 5.02724 24.7812 4.9963 25.0964 5.22641C25.5218 5.53967 25.5334 6.15846 25.5508 6.58775C25.5817 7.36704 25.6726 8.46346 25.9298 9.91762C25.4657 10.0878 24.5162 10.3624 23.3579 10.1439C22.6347 10.0085 21.693 9.83254 21.1632 9.08419C20.7107 8.44606 20.8074 7.74025 20.1789 7.41925C19.8888 7.27035 19.6935 7.33223 19.5079 7.12339C19.1405 6.70957 19.3996 5.90321 19.4209 5.90515C19.4479 5.90901 19.3841 7.14853 19.0419 8.32617C18.8214 9.08612 18.6455 9.69331 18.2336 9.80353C17.6631 9.95629 16.8954 9.08999 16.5454 8.477V8.4828Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.3517 152.744C15.6017 151.596 13.8014 150.538 11.9605 149.544C11.8812 149.49 11.8039 149.434 11.7246 149.38C11.5989 149.293 11.4732 149.242 11.3533 149.221C11.2276 149.155 11.1039 149.088 10.9782 149.022C9.87596 148.446 8.89749 150.115 10.0016 150.691C10.3304 150.863 10.6572 151.037 10.982 151.213C12.7243 152.431 14.3487 153.787 15.8666 155.276C16.6304 156.024 17.7443 155.123 17.4832 154.301C17.8738 153.897 17.9647 153.147 17.3498 152.744H17.3517Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.4503 152.501C31.0735 153.632 29.7237 154.968 28.1941 155.892C26.7071 156.792 25.3728 157.677 24.0598 158.832C23.1239 159.655 24.4949 161.019 25.427 160.199C26.1599 159.555 26.8927 158.901 27.7223 158.379C28.3701 157.971 29.0721 157.66 29.6986 157.215C31.1353 156.194 32.458 154.984 33.8174 153.866C34.7804 153.075 33.4055 151.714 32.4503 152.499V152.501Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.0035 127.921C60.6574 127.96 60.3267 128.161 60.172 128.567C59.1587 131.234 57.6272 133.713 56.2678 136.215C55.6742 137.309 57.343 138.286 57.9366 137.191C57.9888 137.097 58.0391 137.002 58.0913 136.909C58.248 136.87 58.4046 136.778 58.5438 136.619C59.501 135.525 60.3402 134.337 60.9938 133.034C61.3013 132.423 61.572 131.789 61.806 131.145C62.0419 130.493 62.1405 129.721 62.4925 129.128C63.0745 128.143 61.7209 127.246 61.0035 127.925V127.921Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.5229 139.336C48.2353 140.49 46.2823 142.2 44.0043 143.362C43.8322 143.426 43.6582 143.488 43.4842 143.546C43.256 143.621 43.0916 143.754 42.9833 143.915C42.7552 144.155 42.7378 144.481 42.8557 144.773C42.964 145.17 43.285 145.495 43.7433 145.462C43.9077 145.479 44.0836 145.454 44.2635 145.375C44.4452 145.296 44.6231 145.21 44.7991 145.123C45.7563 144.76 46.6883 144.329 47.5721 143.81C48.6859 143.157 49.6934 142.095 50.9309 141.693C51.3215 141.565 51.5246 141.275 51.5826 140.96C52.5553 140.359 51.6019 138.794 50.5229 139.338V139.336Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.462 95.3031C38.1449 95.2722 37.8374 95.307 37.5339 95.3611C37.1026 95.2045 36.5844 95.2064 36.128 95.191C35.6891 95.1774 35.1186 95.0865 34.5733 95.0749C34.3103 94.9396 34.0415 94.8293 33.7438 94.8313C33.6741 94.8313 33.6045 94.839 33.5368 94.8525C33.4711 93.9089 31.9357 93.6034 31.636 94.6805C31.2396 96.1095 31.052 97.6004 31.1564 99.0835C31.2454 100.325 31.3537 101.915 32.9529 101.868C35.3545 101.797 37.6576 99.8106 38.754 97.8112C38.8643 97.61 38.8913 97.3973 38.8565 97.1962C39.6803 96.912 39.543 95.4056 38.462 95.3031Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.1293 105.912C30.4313 105.681 29.5224 105.72 28.7895 105.65C27.7801 105.552 26.7707 105.463 25.7594 105.399C24.7674 105.337 23.7715 105.353 22.7815 105.287C22.1066 105.242 21.3931 104.891 20.7201 105.032C20.0743 105.167 19.6527 105.774 19.7784 106.422C19.9254 107.182 20.7066 107.522 21.3331 107.818C21.9886 108.128 22.5862 107.77 22.7254 107.213C22.8607 107.221 22.9961 107.226 23.1315 107.23C23.9456 107.255 24.7577 107.273 25.5699 107.321C26.3917 107.371 27.2116 107.437 28.0315 107.513C28.4105 107.547 28.7876 107.584 29.1666 107.623C29.2053 107.627 29.2498 107.629 29.2962 107.631C29.2169 108.365 29.9382 109.141 30.6865 108.599C31.1951 108.23 31.8313 108.118 32.0014 107.399C32.1561 106.737 31.7578 106.12 31.1313 105.913L31.1293 105.912Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.1006 68.8806C29.7777 68.7511 29.4509 68.6486 29.1202 68.5635C28.3738 68.2928 27.6564 67.9582 26.9603 67.5541C25.8812 66.9295 24.9067 68.5983 25.9837 69.2229C26.2293 69.366 26.4807 69.4994 26.7321 69.629C26.8636 69.9442 27.144 70.2014 27.5713 70.24C27.8884 70.2671 28.1998 70.3232 28.5053 70.3967C28.8611 70.5243 29.2208 70.6422 29.5863 70.7447C30.8122 71.0889 31.2299 69.3292 30.1006 68.8806Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.72591 83.1496C6.60602 82.9504 6.50934 82.757 6.43006 82.5598C6.49967 82.0938 6.41652 81.6065 6.21735 81.1656C6.21155 81.067 6.20381 80.9703 6.19221 80.8813C6.18641 80.8407 6.1806 80.8001 6.17094 80.7614C6.50354 80.4675 6.69304 79.9473 6.49193 79.4929C5.86928 78.0871 5.11706 76.7644 4.22561 75.5133C4.16567 75.4282 4.08832 75.3547 4.00323 75.2929C4.00323 75.1981 3.9897 75.0956 3.95876 74.9873C3.74798 74.268 3.51594 73.5583 3.26455 72.8525C3.23941 71.818 3.14853 70.7912 3.0035 69.7624C3.35157 67.4168 3.74025 65.077 4.1792 62.7469C4.43832 61.3739 4.71098 60.0048 5.00103 58.6377C5.24662 57.4813 5.3433 55.9247 6.25409 55.0719C7.16487 54.2191 5.79386 52.8539 4.88694 53.7048C3.99743 54.5401 3.6745 55.6636 3.41925 56.82C3.07698 58.3689 2.75792 59.9256 2.45819 61.4841C1.85874 64.6013 1.34243 67.7359 0.901542 70.8801C0.84353 71.2959 1.02337 71.6323 1.29215 71.845C1.29796 71.9436 1.30569 72.0423 1.30956 72.1409C1.23994 72.2646 1.18773 72.4058 1.16646 72.5702C1.08138 73.216 1.15099 73.8155 1.36177 74.4304C1.41398 74.5851 1.49713 74.7089 1.59381 74.8094C1.63829 74.9854 1.6847 75.1633 1.73111 75.3393C1.6615 75.5133 1.64796 75.7183 1.72531 75.9465C1.91481 76.5072 2.10432 77.0661 2.29382 77.6269C1.67697 77.7893 1.20707 78.6382 1.76978 79.2802C1.91868 79.4504 2.07144 79.6128 2.22808 79.7694C2.09658 79.986 2.00183 80.2277 1.95155 80.4791C1.83746 81.0611 1.90128 81.6915 2.10432 82.2717C2.09852 82.7938 2.23388 83.2772 2.64383 83.5595C2.55874 83.7974 2.45819 83.9695 2.36537 83.8515C1.58995 82.8788 0.23054 84.2537 0.998228 85.2187C1.95349 86.4176 3.70157 85.8026 4.31843 84.6037C4.37838 84.4858 4.43445 84.3581 4.48473 84.2305C4.6839 84.2344 4.87921 84.2073 5.06871 84.1551C5.72618 85.1742 7.36404 84.2112 6.72011 83.1534L6.72591 83.1496Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.1939 91.134C25.8176 91.5091 22.2112 91.3544 19.1811 89.6586C16.5976 88.2121 14.5537 85.6209 14.3739 82.5947C14.3004 81.3571 12.3647 81.3493 12.4401 82.5947C12.6509 86.1179 14.7606 89.1751 17.7076 91.0334C21.0955 93.1683 25.3052 93.5009 29.1939 93.0696C30.418 92.9343 30.4315 90.9986 29.1939 91.1359V91.134Z\",\n    fill: \"#AFA730\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.1014 96.7282C23.7602 96.5368 18.9414 96.3376 15.4162 93.4506C13.8731 92.1878 12.8559 90.5751 12.4286 88.6279C11.9568 86.4718 11.9123 84.3002 10.9957 82.2562C10.4871 81.1231 8.82026 82.1054 9.32689 83.2328C10.317 85.4392 10.1023 87.9588 10.8584 90.2348C11.5178 92.2227 12.8211 93.8837 14.4706 95.1522C18.3612 98.1456 23.3831 98.457 28.1033 98.6639C29.3467 98.718 29.3448 96.7843 28.1033 96.7302L28.1014 96.7282Z\",\n    fill: \"#AFA730\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.7721 126.695C72.685 126.691 72.6 126.695 72.5149 126.695C72.4665 126.604 72.3988 126.517 72.3041 126.442C72.1977 126.357 72.0894 126.279 71.9792 126.206C72.8397 125.91 72.9751 124.734 71.9947 124.367C71.9019 124.332 71.8071 124.301 71.7124 124.268C71.6969 124.065 71.6176 123.868 71.4649 123.709C71.548 123.675 71.6312 123.642 71.7162 123.607C72.5052 123.269 72.2287 122.033 71.4861 121.839C71.4184 121.822 71.3508 121.807 71.2831 121.789C71.1729 121.445 70.8809 121.168 70.3994 121.168C70.2311 121.168 70.0648 121.168 69.8966 121.168C69.856 121.043 69.7922 120.925 69.7013 120.828C70.0262 120.538 70.0494 120.078 69.8502 119.71H69.856C70.4961 119.618 70.6914 118.827 70.4458 118.303C70.9969 117.856 70.7146 116.767 69.9508 116.603C69.9295 116.497 69.8927 116.392 69.8425 116.294C70.1693 116.005 70.2485 115.545 70.0764 115.176C70.3259 114.779 70.1538 114.168 69.7438 113.845C70.03 113.78 70.3143 113.716 70.6005 113.65C71.7336 113.393 71.3643 111.85 70.3433 111.751L69.8463 111.703C69.9179 111.428 69.8908 111.134 69.7458 110.912C70.1751 110.614 70.3897 110.015 70.1886 109.601C70.3394 109.071 70.0262 108.383 69.2991 108.288C69.2546 108.282 69.2082 108.278 69.1637 108.272C69.2662 107.967 69.243 107.615 69.0728 107.36C69.5195 106.859 69.5311 106.004 68.6745 105.821L67.7386 105.621C68.0286 105.594 68.3187 105.571 68.6107 105.552C69.7013 105.484 69.8425 104.028 68.9897 103.69C69.156 103.4 69.2043 103.057 69.0864 102.788C69.4789 102.711 69.8695 102.634 70.2621 102.554C71.1806 102.373 71.1883 100.866 70.2621 100.69C69.8212 100.607 69.3803 100.538 68.9375 100.476C68.9723 100.315 68.9704 100.155 68.9278 100.008C69.2585 99.942 69.448 99.7467 69.5215 99.5031C70.4999 99.2362 70.5309 97.8691 69.5253 97.639C70.5908 97.639 71.6563 97.6467 72.7198 97.666C73.9903 97.6892 73.9265 95.8657 72.7198 95.7323C71.2212 95.566 69.7206 95.4616 68.2201 95.4132C68.4231 95.1154 68.4753 94.7074 68.3458 94.3884C68.6223 94.0712 68.717 93.6052 68.5469 93.261C68.9994 92.7969 68.893 91.9151 68.2181 91.6792C68.6919 91.2538 68.7692 90.4242 68.1543 90.1226C68.1505 90.0085 68.1253 89.8944 68.0828 89.79C68.7499 89.701 68.9916 89.0281 68.8099 88.5021C68.953 87.9645 68.659 87.3109 67.9145 87.2742C67.8894 87.2742 67.8643 87.2723 67.8411 87.2703C67.8662 87.1543 67.8701 87.0305 67.8507 86.9087C67.9242 86.814 67.9764 86.7076 68.0112 86.5955C68.7557 86.2706 68.717 85.1316 67.9339 84.8242C67.8952 84.5554 67.7424 84.3195 67.4485 84.2131C67.5027 84.0429 67.5085 83.8592 67.4679 83.6852C67.5568 83.3681 67.4833 83.0045 67.2513 82.7435C68.1311 82.6661 69.011 82.5888 69.8908 82.5134C70.7687 82.436 71.0143 81.6123 70.6759 81.0611C70.9331 80.4984 70.6585 79.6901 69.8386 79.6631C69.3107 79.6457 68.7828 79.6302 68.2549 79.6128C68.2587 79.5741 68.2587 79.5335 68.2587 79.4948C68.5256 78.9302 68.2471 78.0832 67.4234 78.0581C67.3866 78.0581 67.3499 78.0581 67.3132 78.0581C67.2493 77.5998 66.8955 77.1415 66.3714 77.097C66.2322 77.0854 66.0949 77.0738 65.9557 77.0622C65.9924 76.5923 65.714 76.0954 65.1261 76.0122C65.1261 75.7821 65.0565 75.5481 64.9269 75.3625C65.2305 75.3257 65.5341 75.2871 65.8358 75.2503C66.9032 75.1188 67.0714 73.8136 66.2477 73.4229C66.5996 72.9782 66.5029 72.1757 65.9673 71.9185C66.6712 71.8083 67.375 71.6981 68.0789 71.5878C69.009 71.4428 68.9239 70.3483 68.3245 69.8881C68.5546 69.3061 68.282 68.5422 67.4737 68.5828C66.0678 68.6544 64.6736 68.6099 63.2929 68.4513C64.2501 68.2154 65.2247 68.053 66.2129 67.9737C67.2165 67.8925 67.6206 66.2662 66.4701 66.0748C66.3811 66.0593 66.2922 66.0477 66.2051 66.0342C66.2554 65.5392 65.9421 64.9919 65.2808 64.9242C64.6891 64.8624 64.0993 64.8005 63.5076 64.7386C63.7648 64.6961 64.0239 64.6574 64.283 64.6187C65.2441 64.4775 65.1648 62.9576 64.283 62.7546C63.7609 62.6347 63.2388 62.5206 62.7148 62.4143C63.2427 62.3389 63.7744 62.2731 64.3062 62.217C65.3176 62.1107 65.7043 60.5908 64.5634 60.3181C64.0703 60.2002 63.5753 60.0899 63.0802 59.9874C63.1866 59.9546 63.2929 59.9236 63.3974 59.8908C64.2869 59.62 64.3488 58.2684 63.3974 58.0266C63.0222 57.9319 62.6471 57.8449 62.27 57.7617C62.5852 57.6941 62.9023 57.6322 63.2195 57.5761C64.0529 57.4291 64.0703 56.528 63.6236 56.0214C63.9872 55.9363 64.3488 55.8473 64.7104 55.7545C65.4626 55.5612 65.7178 54.341 64.9405 53.9871C64.8535 53.9465 64.7664 53.9117 64.6794 53.8749C64.8264 53.3277 64.4686 52.6335 63.7667 52.5968L60.7656 52.4363C60.6592 52.2448 60.4639 52.1017 60.1622 52.0611C59.2747 51.9412 58.536 52.0379 57.7296 52.4324C56.813 52.8829 57.3293 54.1863 58.2169 54.2346L60.6805 54.3661C60.7114 54.4667 60.7578 54.5634 60.8178 54.6523C59.6517 54.8785 58.478 55.0642 57.2984 55.2092C56.0763 55.3581 56.0357 57.0385 57.2984 57.1429C57.3758 57.1487 57.4531 57.1565 57.5305 57.1623C56.6061 57.6032 56.7976 58.92 57.8747 59.0186C58.302 59.0573 58.7274 59.1076 59.1509 59.1637C58.9633 59.2217 58.7758 59.2778 58.5901 59.3358C57.5575 59.651 57.7702 60.9214 58.6501 61.1922C58.1164 61.3082 57.5846 61.4319 57.0548 61.5673C55.9158 61.8574 56.3006 63.3405 57.3119 63.4662C57.8476 63.5339 58.3832 63.6074 58.9189 63.6886C58.331 63.8297 57.7451 63.9786 57.163 64.1372C56.0492 64.4408 56.3838 65.9278 57.4202 66.0361C57.7838 66.0748 58.1454 66.1115 58.5089 66.1502C58.3136 66.7226 58.6655 67.529 59.4042 67.5096C59.6189 67.5038 59.8335 67.5019 60.0482 67.498C59.7272 67.6276 59.4062 67.7629 59.0871 67.9099C58.5167 68.171 58.5031 68.8961 58.8357 69.3409L58.7042 69.3525C57.5363 69.4549 57.4492 71.1489 58.5553 71.2746C58.0294 71.7677 58.4219 72.9066 59.2689 72.9627C59.2785 72.9627 59.2882 72.9627 59.2959 72.9647C58.8415 73.1967 58.7816 73.7362 58.9923 74.1694C58.0216 74.3125 57.8186 75.4495 58.4644 75.9078C58.1067 76.2423 58.1763 76.8882 58.5302 77.2788C58.4896 77.797 58.8705 78.41 59.4777 78.4603C59.6595 78.4758 59.8413 78.4912 60.023 78.5048C59.8529 78.9476 60.0443 79.5528 60.491 79.7984C60.0675 80.3611 60.2744 81.2971 61.2103 81.3261C61.2529 81.3261 61.2935 81.328 61.336 81.3299C60.4407 81.4073 59.5454 81.4866 58.6501 81.5639C57.8205 81.6374 57.5517 82.4051 57.8224 82.9543C57.3622 83.3313 57.3487 84.1203 57.7857 84.4858C57.7412 84.9479 57.9945 85.4198 58.5592 85.4932C58.3039 85.9129 58.3794 86.522 58.7893 86.8159C58.8899 87.1911 59.1877 87.514 59.6827 87.5411C60.0559 87.5604 60.4291 87.5817 60.8023 87.601C60.781 87.69 60.7714 87.7847 60.7752 87.8795C60.5297 87.8795 60.2821 87.8795 60.0366 87.8795C58.7932 87.8891 58.7893 89.8151 60.0366 89.8132C60.4774 89.8093 60.9164 89.8132 61.3554 89.8228C61.2451 90.0278 61.2103 90.2753 61.2529 90.5112C61.1871 90.517 61.1214 90.5209 61.0576 90.5267C60.286 90.5886 59.9921 91.2828 60.1816 91.8242C59.9302 92.2033 59.9631 92.7447 60.286 93.0676C60.2957 93.1914 60.3266 93.3132 60.3808 93.4254C59.5357 93.8063 59.6634 95.1734 60.7617 95.2624C60.8217 95.2682 60.8816 95.2701 60.9415 95.2759C61.0788 95.363 61.2509 95.4171 61.4578 95.4171H62.0534C61.9838 95.4693 61.9239 95.5351 61.8717 95.6066C61.6319 95.6414 61.4482 95.7516 61.3205 95.9044C61.0904 95.916 60.8623 95.9257 60.6321 95.9373C59.3888 96.0011 59.3849 97.8111 60.6321 97.871C60.9512 97.8865 61.2722 97.9019 61.5913 97.9174C61.5913 97.9329 61.5893 97.9483 61.5874 97.9658C60.8081 98.3583 60.9609 99.7428 62.0302 99.795C62.038 99.795 62.0438 99.795 62.0496 99.795C62.0612 99.9981 62.1288 100.205 62.2468 100.383C61.4985 100.741 61.5565 101.976 62.4247 102.187C61.9103 102.45 61.8523 103.154 62.1521 103.606C62.1211 103.612 62.0882 103.618 62.0573 103.624C61.2045 103.79 61.1929 104.854 61.7382 105.312C61.628 105.792 61.8369 106.345 62.3976 106.464C62.5233 106.492 62.649 106.519 62.7728 106.544C62.5929 106.567 62.415 106.592 62.2352 106.615C61.046 106.774 60.9493 108.572 62.2352 108.549C62.2797 108.549 62.3261 108.549 62.3706 108.549C62.1965 109.1 62.475 109.775 63.2504 109.787C63.3568 109.787 63.4631 109.794 63.5695 109.796C63.5598 109.997 63.6081 110.2 63.7029 110.374C63.4186 110.585 63.3026 110.931 63.3394 111.26C62.5388 111.687 62.9139 112.97 63.8518 113.06C64.0046 113.076 64.1593 113.089 64.312 113.105C64.283 113.111 64.254 113.118 64.2231 113.124C63.0783 113.385 63.4728 114.907 64.4802 115.023L64.693 115.048C64.693 115.1 64.693 115.155 64.7026 115.207C64.0568 115.462 63.8808 116.27 64.2366 116.734C63.9756 117.05 64.0007 117.556 64.2443 117.92C64.1844 118.129 64.2037 118.365 64.2888 118.583C64.2037 118.595 64.1186 118.608 64.0355 118.62C62.8617 118.79 63.3161 120.401 64.2927 120.519C64.3971 120.53 64.4996 120.544 64.604 120.556C64.2424 121.054 64.4126 121.876 65.1087 122.073C65.1861 122.095 65.2615 122.114 65.3388 122.133C65.3524 122.244 65.3833 122.348 65.4316 122.445C65.5341 122.81 65.8319 123.112 66.3231 123.114C66.3985 123.114 66.472 123.116 66.5455 123.118C65.9654 123.458 65.8648 124.282 66.3154 124.682C66.3386 124.773 66.3714 124.862 66.4178 124.943C66.2554 125.251 66.2438 125.649 66.4101 125.953C66.1278 126.252 66.0852 126.716 66.267 127.076C66.1955 127.167 66.1239 127.26 66.0582 127.358C65.975 127.48 65.9325 127.633 65.9267 127.791C65.6463 128.399 65.9112 129.261 66.7427 129.172C66.9806 129.147 67.2126 129.11 67.4408 129.068C67.4427 129.068 67.4466 129.068 67.4485 129.07C67.4195 129.097 67.3905 129.122 67.3634 129.149C66.4468 130.029 67.783 131.28 68.7306 130.516C69.2914 130.064 69.8753 129.603 70.5038 129.251C70.6585 129.226 70.8113 129.197 70.9679 129.161C71.2173 129.103 71.3933 128.975 71.5055 128.811C71.9057 128.685 72.3254 128.617 72.7721 128.633C74.0174 128.677 74.0154 126.743 72.7721 126.699V126.695Z\",\n    fill: \"#684836\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.0516 41.4683C61.8098 41.4644 61.5701 41.4606 61.3283 41.4567C61.3283 41.4548 61.3283 41.4528 61.3303 41.4509C61.7209 41.3871 62.1096 41.3194 62.4963 41.242C63.3916 41.0641 63.351 40.0141 62.7844 39.5616C62.8715 39.2909 62.8405 38.9873 62.6916 38.7437C62.6877 38.6818 62.6781 38.6199 62.6626 38.558C62.7806 38.1017 62.5911 37.5699 62.0109 37.3959C61.833 37.3417 61.6551 37.2934 61.4753 37.245C61.8156 36.7345 61.7518 35.9862 60.9745 35.8257C60.9203 35.8141 60.8662 35.8064 60.814 35.7948C60.8739 35.3906 60.7115 34.9439 60.3363 34.7544C60.7811 34.534 60.9184 33.9751 60.7598 33.5342C60.8294 33.3563 60.8507 33.1591 60.8236 32.9715C62.067 32.9638 62.069 31.032 60.8236 31.0378C58.9305 31.0475 56.9794 31.208 55.5542 32.5944C54.9761 33.1572 55.3454 33.9268 55.9197 34.1646C55.4808 34.5649 55.3938 35.3229 55.8791 35.6729C55.767 35.876 55.7496 36.1254 55.8114 36.3633C54.9703 36.6456 54.9277 37.7343 55.6703 38.1152C55.3918 38.6857 55.6529 39.5152 56.465 39.521C56.5714 39.6564 56.7183 39.7608 56.9079 39.8188L56.2929 40.0122C55.6993 40.1998 55.5059 40.8244 55.6722 41.3078C55.591 41.3368 55.5098 41.3658 55.4305 41.3967C54.4501 41.77 54.5371 43.2783 55.6877 43.2957C55.9197 43.2995 56.1518 43.3034 56.3838 43.3073C56.3974 43.4426 56.4341 43.578 56.496 43.7037C55.4286 43.9493 55.4537 45.5388 56.6545 45.6084C58.0197 45.6877 59.3695 45.56 60.6883 45.2371C61.0325 45.2062 61.3767 45.1733 61.7209 45.1424C62.6994 45.0515 62.9063 43.8062 62.3203 43.3614C63.4052 43.1487 63.1112 41.4818 62.0535 41.4644L62.0516 41.4683Z\",\n    fill: \"#684836\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.5372 25.2714C61.4463 25.2656 61.3554 25.2598 61.2645 25.254C61.5236 24.7358 61.396 24.0281 60.6979 23.9062C59.0021 23.6104 57.3526 23.7051 55.7263 24.2891C55.5948 24.3355 55.4827 24.409 55.386 24.4979C54.8832 24.4863 54.3824 24.4805 53.8796 24.4805C52.8296 24.4805 52.5144 26.2228 53.6224 26.3795C53.6224 26.3795 53.6244 26.3795 53.6263 26.3795C53.6263 26.4181 53.6282 26.4549 53.6321 26.4935C53.3788 27.0543 53.8506 27.8897 54.5352 27.9013C55.299 27.9148 56.0551 27.8684 56.8053 27.7679C57.4647 27.7659 58.1222 27.7621 58.7816 27.7601C59.0311 27.7601 59.2302 27.6809 59.3811 27.5571C60.1894 27.4604 60.9938 27.3328 61.7963 27.1723C62.9178 26.948 62.5736 25.3391 61.5391 25.2734L61.5372 25.2714Z\",\n    fill: \"#684836\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.6126 39.5694C76.922 39.289 77.0593 38.8075 76.8446 38.3531C74.3578 33.0895 69.7266 27.7467 63.4033 28.1817C63.4323 27.677 63.1248 27.1549 62.4732 27.1685C60.6071 27.2013 58.7488 27.3174 56.8925 27.5165C56.7629 27.5301 56.6449 27.5707 56.5367 27.6306C55.3358 27.7312 54.1466 27.9013 52.9709 28.1489C52.5029 27.8375 51.8164 27.882 51.5979 28.4757C51.2151 28.5762 50.8322 28.6806 50.4532 28.7986C49.7512 29.0152 49.6062 29.9182 49.9794 30.3997C49.3935 30.6086 48.8327 30.9682 48.3609 31.3221C46.9937 32.347 45.8393 33.5575 44.8222 34.9266C44.5437 35.3017 44.6056 35.671 44.8299 35.934C43.8186 36.9628 43.1263 38.4517 42.6583 39.6642C42.3354 40.4996 41.821 41.6946 42.5597 42.4545C43.2385 43.1526 44.213 42.8606 44.9962 42.53C46.52 41.888 47.8349 40.8766 48.8656 39.6332C49.5559 39.144 50.1883 38.5697 50.7297 37.9296C51.5438 36.9666 52.7408 35.1122 53.0328 33.4144C53.2184 33.3622 53.3731 33.2655 53.5104 33.1437C53.5626 33.1379 53.6167 33.1301 53.6728 33.1147C55.9797 32.5017 58.3254 32.0995 60.7096 31.9583C62.2933 31.8655 63.9467 31.8268 65.4898 32.2232C65.5033 32.2503 65.5149 32.2793 65.5323 32.3064C66.8859 34.4489 69.1465 35.4873 71.4341 36.3479C72.0587 36.9608 72.6832 37.5719 73.3465 38.1365C73.3678 38.1926 73.3891 38.2487 73.4103 38.3067C73.2421 38.7379 73.3156 39.26 73.799 39.4843C73.8029 39.4863 73.8067 39.4882 73.8125 39.4902C74.1142 40.2926 74.5415 40.9772 75.5993 41.1454C76.4559 41.2808 77.0651 40.5247 76.6918 39.7241C76.6667 39.6719 76.6377 39.6216 76.6106 39.5694H76.6126ZM48.6374 36.4117C48.6451 36.284 48.649 36.1545 48.649 36.0269C48.7534 35.8644 48.8636 35.6962 48.9797 35.5318C48.8811 35.8315 48.767 36.1255 48.6374 36.4117ZM50.2733 32.3431C50.3101 32.3257 50.3488 32.3083 50.3855 32.2948C50.8593 32.1169 50.9637 32.0898 51.1029 32.5346C51.1203 32.5868 51.128 32.6448 51.1338 32.7067C50.9347 32.4649 50.604 32.3392 50.2733 32.345V32.3431Z\",\n    fill: \"#77767A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.8114 35.6768C63.6819 35.6478 63.5523 35.6169 63.4227 35.5879C64.4612 35.4061 64.3587 33.7682 63.21 33.6715L61.5954 33.5342C61.6534 33.511 61.7133 33.4936 61.7713 33.4685C62.423 33.1958 62.8678 32.0704 62.0015 31.7011C61.9222 31.6663 61.841 31.6373 61.7617 31.6083C61.6186 31.3569 61.3517 31.1867 60.9592 31.2196C60.76 31.237 60.5628 31.2582 60.3655 31.2815C59.2227 31.1693 58.0857 31.4342 57.1149 32.082C57.0608 32.1033 57.0086 32.1207 56.9544 32.142C56.6876 32.2483 56.5136 32.434 56.413 32.6467C56.3801 32.6776 56.3453 32.7066 56.3144 32.7395C56.2506 32.8033 56.2003 32.871 56.1597 32.9387C56.1461 32.9387 56.1345 32.9387 56.121 32.9387C55.8445 32.958 55.5699 32.9773 55.2934 32.9986C54.0461 33.0875 54.0539 34.8279 55.2934 34.9323C55.8986 34.9845 56.502 35.0348 57.1072 35.087C56.9892 35.5821 57.2097 36.1506 57.7666 36.2763L58.9713 36.5508C58.8534 36.605 58.7373 36.663 58.6233 36.7346C57.8807 37.1967 58.0818 38.2196 58.8534 38.502L59.6675 38.7998C59.0931 38.9042 58.5169 39.0086 57.9426 39.113C57.113 39.2639 57.0917 40.2346 57.5655 40.7335C57.3973 40.807 57.231 40.8901 57.0666 40.9926C56.5658 41.3059 56.3917 42.0813 56.8713 42.5106C57.0782 42.6962 57.289 42.8722 57.5036 43.0462C57.1923 43.1719 56.879 43.2976 56.5677 43.4233C55.6859 43.7791 55.6202 44.9529 56.5677 45.2874C57.6506 45.6703 58.7335 46.0551 59.8144 46.438C60.9901 46.8537 61.4948 44.9857 60.3288 44.5739L59.5418 44.2954C59.6075 44.2683 59.6713 44.2432 59.7371 44.2161C60.497 43.9106 60.7175 42.9263 59.9672 42.4487C59.828 42.3617 59.6926 42.2708 59.5592 42.178C60.5802 42.0562 61.6882 42.1702 62.6551 41.9227C63.6973 41.6578 63.4653 40.3777 62.6299 40.0799C63.007 39.873 63.2932 39.5617 63.4556 39.0724C63.6297 38.5484 63.2506 38.0553 62.7808 37.8832L62.7169 37.86C63.1694 37.7768 63.6026 37.6473 64.0415 37.4404C64.7938 37.0865 64.5868 35.8508 63.8114 35.6729V35.6768Z\",\n    fill: \"#6F4631\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.65,\n    d: \"M52.646 30.4848C52.561 30.4461 52.5204 30.3707 52.5107 30.3339C52.3637 29.8679 54.922 28.5723 57.3527 28.0579C61.4638 27.1878 65.1534 28.5704 66.9556 29.2472C69.5371 30.214 71.1421 31.4187 71.0435 31.5715C71.0164 31.6121 70.7708 31.7204 70.7708 31.7223C66.1106 29.2317 64.0937 28.7231 64.0937 28.7231C63.0185 28.4524 60.3133 27.7679 57.6428 28.4602C55.8174 28.9339 54.9046 29.1698 54.1002 29.7731C53.7889 30.0052 53.0057 30.653 52.646 30.4848Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.8913 39.1351L61.3528 38.55L60.528 51.997L70.0665 52.5821L70.8913 39.1351Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.6378 48.1279H58.2267V54.6736H68.6378V48.1279Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.9597 40.7974H54.7826V47.8748H57.9597V40.7974Z\",\n    fill: \"black\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.65,\n    d: \"M71.5056 32.0917C71.3953 32.1748 71.61 32.6544 71.8092 32.9483C71.9542 33.1649 72.2442 33.5111 72.3641 33.453C72.4686 33.4008 72.4241 33.0547 72.3139 32.7975C72.1128 32.3315 71.6216 32.0047 71.5075 32.0917H71.5056Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M51.5033 32.0608C51.2558 31.6199 50.6138 31.4343 50.1806 31.7147C50.1593 31.7282 50.1439 31.7437 50.1245 31.7591C49.9698 31.6953 49.8016 31.6605 49.6353 31.6644C49.119 31.6741 48.8077 32.0067 48.624 32.4514C48.535 32.6661 48.5737 32.9116 48.6839 33.1244C48.6549 33.192 48.6317 33.2674 48.6182 33.3525C48.3764 34.7467 47.4502 35.7678 46.5162 36.7714C45.6441 37.7073 46.9261 38.8868 47.8833 38.1385C48.5756 37.599 49.1867 36.9937 49.7339 36.3092C49.9524 36.0346 49.9988 35.7271 49.935 35.4506C50.0665 35.1954 50.1806 34.9304 50.2754 34.6578C50.3875 34.7081 50.5113 34.7371 50.6524 34.7371C50.9966 34.7371 51.3118 34.5514 51.4878 34.2575C51.8919 33.5826 51.8881 32.7453 51.5052 32.0627L51.5033 32.0608Z\",\n    fill: \"#75777A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.3723 26.2983C64.2369 26.217 64.0725 26.1687 63.8753 26.1687C63.6162 26.1687 63.4112 26.2538 63.2604 26.3872C63.0109 26.567 62.8852 26.8687 62.8814 27.1704C62.8504 27.6751 63.1618 28.203 63.8134 28.203C63.8656 28.203 63.9159 28.1991 63.9623 28.1914C63.9991 28.1972 64.0358 28.201 64.0764 28.201C64.148 28.2165 64.2234 28.2262 64.3046 28.2262C65.5248 28.2262 65.5499 26.3659 64.3723 26.2963V26.2983Z\",\n    fill: \"#75777A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.6241 25.4745C61.4984 25.3952 61.3495 25.3411 61.1735 25.3256C60.8139 25.2927 60.4581 25.2831 60.1023 25.2927C59.9418 25.2734 59.7793 25.2657 59.6208 25.285C59.5453 25.2947 59.4719 25.3101 59.4003 25.3314C59.2572 25.343 59.1141 25.3585 58.971 25.374C58.4857 25.3817 58.0061 25.4165 57.542 25.5093C57.426 25.5325 57.3274 25.5712 57.2403 25.6195C57.2229 25.6195 57.2055 25.6157 57.1881 25.6157C56.6428 25.6157 56.1169 25.6698 55.6431 25.8787C55.5445 25.8439 55.4342 25.8245 55.3124 25.8245C54.3224 25.8245 54.1193 27.0486 54.7052 27.5475C54.7748 27.6306 54.8599 27.7002 54.9624 27.7524C55.1132 27.8781 55.3124 27.9593 55.5638 27.9593C55.6721 27.9593 55.7688 27.9419 55.8577 27.9149C55.8713 27.9129 55.8848 27.9071 55.8983 27.9033C55.9061 27.9013 55.9138 27.8994 55.9215 27.8955C55.9699 27.882 56.0182 27.8646 56.0666 27.8453C57.2365 27.7002 58.3484 27.4044 59.4989 27.2806C59.847 27.2903 60.1951 27.3096 60.5373 27.327C60.7965 27.356 61.0536 27.3638 61.3186 27.356C61.8407 27.3425 62.2854 26.9209 62.2854 26.3892C62.2854 25.9792 62.0031 25.5983 61.6222 25.4687L61.6241 25.4745Z\",\n    fill: \"#6E4730\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.6767 30.941C59.4913 31.0319 58.3987 31.1537 57.3101 31.6023C56.1614 31.699 56.1904 33.5322 57.4048 33.5322C57.515 33.5322 57.6175 33.5167 57.7084 33.4877C57.7993 33.4723 57.8921 33.4452 57.9869 33.4007C58.8435 32.9966 59.7466 32.9463 60.6767 32.8767C61.9104 32.7819 61.9201 30.8482 60.6767 30.9429V30.941Z\",\n    fill: \"#6E4730\"\n  }))), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.8977 34.7931C11.2487 40.1341 5.52491 44.4501 4.38208 51.2124C6.65227 46.1189 11.9681 39.2194 16.4408 36.0481C15.1742 34.973 15.8026 34.4431 14.8977 34.7931ZM14.8977 34.7931C15.412 33.7953 15.9264 32.7975 16.4408 31.7997C17.0866 30.7381 18.6278 29.8447 18.3706 28.5163C18.2855 28.0734 15.5571 25.3372 16.056 20.0176C10.6029 18.37 15.8935 14.3962 18.1792 12.2904C17.922 10.5829 18.3552 8.60473 19.1441 7.07515C19.0861 4.94226 17.9085 -0.214981 20.0124 1.76322C20.4745 0.593315 21.2248 2.40521 21.7488 2.34333C22.0892 2.30273 22.329 0.235577 28.1166 2.14996C33.3357 -2.19125 34.4012 6.92626 36.3175 10.1672C35.486 14.549 41.1808 15.9007 39.9838 18.4725C39.104 20.3618 36.1435 19.4935 35.9327 19.8242C35.8031 20.9825 35.6755 22.1427 35.546 23.301C36.8899 26.6251 38.5239 33.0102 32.7479 29.9646C31.5045 32.637 32.0498 34.0467 28.7915 34.6964C31.1951 37.9934 30.936 43.0579 32.2644 44.7402C33.036 45.3841 33.8075 46.0281 34.5791 46.672C35.8534 48.2383 36.1415 51.4386 39.307 50.0521C39.4037 50.1488 39.5004 50.2455 39.5971 50.3422C38.9454 50.8566 40.0419 52.2817 40.272 52.3707C45.5781 51.0499 50.8842 49.7311 56.1904 48.4104C55.268 43.9899 57.2771 44.4095 57.3487 44.1601C57.0915 43.7733 56.8343 43.3866 56.5771 43.0018C56.0627 40.6639 57.8128 41.0545 57.9269 40.8766C57.573 37.8832 57.2191 34.8879 56.8652 31.8945C51.6191 33.3428 47.332 38.181 45.0947 42.9051C43.8648 37.4017 50.2306 29.4116 55.5136 27.8375C56.5578 23.9546 60.2435 23.4267 61.3012 27.2574C69.7438 28.9127 73.9342 30.8097 75.6765 39.7164C75.2337 40.3681 73.8859 37.6376 71.7201 35.9495C69.2121 33.9945 63.9407 31.4768 60.7211 31.121C60.2319 34.3793 60.8448 37.626 61.2026 40.8766C64.4938 38.9429 64.399 41.4219 64.5789 41.5534C64.9965 41.6501 65.4142 41.7468 65.8338 41.8435C65.9943 42.3269 66.1548 42.8084 66.3153 43.2918C66.7601 43.5722 68.0325 42.3656 67.377 45.5137C70.5734 46.0822 68.398 48.3891 68.3419 48.6038C67.609 51.3999 67.9319 53.4826 62.4576 55.074C63.0048 61.6738 63.5501 68.2736 64.0974 74.8734C65.5438 82.8229 66.3269 90.9388 67.1836 99.0198V102.883C67.7618 106.94 68.3419 110.995 68.9201 115.052C69.2411 119.109 69.564 123.164 69.885 127.221C70.0146 127.415 70.1422 127.608 70.2717 127.801C67.3944 130.947 67.9687 128.051 66.9922 125.289C65.0449 112.078 63.699 98.8226 62.7476 85.4973C61.6087 79.5801 61.073 73.5507 60.6244 67.533C59.3385 63.4992 59.383 59.1542 58.6945 54.9773C50.7179 57.4274 47.2585 64.6092 37.6634 67.3396C38.9087 69.5769 41.0029 72.8179 39.0131 75.0668C38.8333 77.045 40.1985 79.7096 38.4349 80.6688C37.9689 85.9904 40.5388 82.4343 41.8112 87.3324C45.3364 87.3498 48.4594 86.8122 50.5903 90.1324C50.89 94.0559 50.7682 98.0587 49.2406 101.723C49.2174 106.637 47.6356 111.398 47.1174 116.211C46.9878 116.34 46.8602 116.468 46.7306 116.597C47.245 118.659 47.7593 120.718 48.2737 122.779C48.5831 125.197 47.6897 131.015 50.1069 130.797C51.7215 130.65 52.5975 124.605 58.2111 125.775C60.139 126.177 59.8702 129.124 60.3343 129.252C60.7075 129.354 61.1987 128.343 61.2026 129.928C61.2084 131.887 59.7639 131.197 59.6595 131.667C59.6208 131.839 61.3109 133.755 58.6945 133.985C58.2247 136.236 57.6735 134.542 56.8614 134.856C56.1536 135.563 55.4459 136.273 54.7381 136.981C52.8006 138.158 49.0259 138.135 49.8188 141.328C43.7411 146.116 45.3132 143.59 44.3193 142.969C44.1916 142.89 43.0546 143.041 41.6178 141.811C37.8413 138.576 41.4477 134.73 39.3999 130.704C40.009 126.183 36.5747 117.968 39.0131 117.955C38.433 113.631 39.8833 109.381 39.3999 105.012C39.5758 103.191 41.7667 96.6858 40.2681 97.1886C39.9626 97.291 39.6609 100.01 36.5051 102.307C35.31 104.976 34.6255 109.545 31.2956 109.841C30.8277 115.28 26.7746 123.058 26.2796 128.192C26.2157 132.442 26.15 136.691 26.0862 140.941C26.2157 141.198 26.3434 141.455 26.4729 141.714C24.634 144.279 21.8339 147.73 24.8331 150.31C25.7265 147.502 28.3834 146.307 31.0075 147.798C33.7669 149.366 31.6901 152.539 31.8757 153.11C31.9744 153.415 32.8484 153.415 32.6473 154.075C32.5216 154.487 26.1635 157.855 25.6047 159C25.3475 158.87 25.0903 158.743 24.8331 158.613C19.6082 158.766 22.0505 158.068 20.1052 155.233C19.1074 154.429 18.1115 153.624 17.1137 152.818C16.1875 152.692 15.8336 154.34 15.5706 154.363C14.0584 153.365 12.5482 152.367 11.036 151.37C11.9023 147.85 8.78903 142.937 15.0872 142.871C15.8587 141.003 16.6303 139.137 17.4018 137.269C17.2858 129.845 17.6977 122.308 19.5251 115.054C20.1032 113.252 20.6834 111.448 21.2615 109.646C15.1432 108.077 18.3958 103.974 16.5336 102.402C15.5996 101.613 9.6186 101.019 7.36775 96.3164C4.40142 90.1169 6.39702 82.4362 4.37628 83.4707C3.39395 83.9735 3.3166 86.3732 2.92986 80.8621C5.02601 80.866 2.57212 77.6193 2.1583 76.0336C1.77155 73.2007 1.38674 70.3678 1 67.5349C1.38674 63.8009 1.77155 60.0669 2.1583 56.3309C3.70914 51.4986 5.1285 46.5869 8.1393 42.4236C10.3902 39.8808 12.641 37.3379 14.8919 34.7931H14.8977ZM19.2389 1.76128C18.3803 2.03587 20.0375 3.88838 19.9137 4.1765L19.0455 3.88644C18.1463 4.38921 20.2579 5.78923 20.3005 5.91492C20.4842 6.46796 18.3977 6.16437 20.6872 7.07322C20.5867 8.00334 22.8936 10.5462 23.4853 9.29507C23.6632 10.1691 24.077 10.3006 23.9668 9.58512C22.8085 7.7829 21.6522 5.97873 20.4939 4.1765C20.4262 4.05081 19.9911 1.5215 19.2389 1.76128ZM20.3952 1.76128C20.5577 4.81463 22.5107 5.93812 23 6.68647C23.4563 7.38455 24.4077 10.8614 25.6047 10.0666C25.3146 8.4887 25.0265 6.91079 24.7364 5.3348C23.9223 4.81076 23.9881 6.19918 23.6748 6.20498C23.1237 6.21465 23.6478 2.22731 22.7099 5.43149C22.1781 5.41215 22.5533 3.58865 22.4198 3.20964C21.8842 1.68393 21.9635 4.45883 21.745 4.46463C21.1881 3.88258 21.7546 2.29886 20.3952 1.76128ZM23.8701 14.8971C22.8047 15.1465 24.3226 15.8852 24.3516 15.9587C24.3729 16.0128 23.9958 17.0203 24.4483 17.0203C24.6166 17.0203 24.6668 15.541 25.4132 17.6004C25.976 16.1424 27.1691 17.9659 27.2464 18.2772C27.5887 19.654 26.3782 21.8295 26.1848 21.8507C26.0881 21.8604 25.7613 21.0811 25.0265 21.2706C23.1585 25.024 24.9395 20.1278 23.29 19.7256C22.9033 19.7894 22.5185 19.8551 22.1317 19.9189C20.0394 21.1913 23.203 25.3701 21.8417 24.2659C21.7218 24.1693 21.2654 22.135 20.3952 22.2375C19.9447 22.8814 19.4941 23.5253 19.0455 24.1693C18.8657 24.1693 18.0632 21.58 18.1773 24.8461C15.7388 23.8831 19.148 28.7135 19.1422 29.0964C19.1364 29.5276 17.2317 29.6997 19.1422 32.5732C21.4259 34.6655 23.7077 36.7578 25.9914 38.8501C26.2157 37.4655 26.442 36.081 26.6663 34.6964C25.9586 33.8591 25.2508 33.0218 24.5431 32.1845C25.8928 32.2019 25.8599 34.6771 29.0777 34.213C30.586 33.9964 31.1796 33.1166 31.6824 31.7978C31.6669 31.239 29.0448 30.7768 27.726 27.8375C26.6102 30.0072 27.2522 26.8958 27.8227 26.5825C28.8475 26.0179 27.2406 27.4489 29.5591 29.6726C32.5409 32.5345 32.1967 29.2511 32.7421 29.1892C37.1741 32.6409 37.1799 27.6016 34.96 23.2972C35.6581 20.5281 35.2385 19.0024 34.7667 16.3435C34.3625 15.628 27.2986 15.7672 26.1809 15.6667C25.4094 15.4095 24.6378 15.1523 23.8663 14.8932L23.8701 14.8971ZM17.6958 30.7362C13.9772 35.555 16.58 34.8163 17.5991 37.2064C18.0728 38.3164 18.9527 43.7231 20.4939 46.2852H20.8806C25.0033 36.1815 28.0199 46.6217 28.6948 46.1886C27.9522 42.0233 25.3224 38.7147 22.327 35.7581C20.9019 34.3503 19.3936 34.3271 17.6958 30.7362ZM27.5345 34.5998C27.374 34.6964 27.2135 34.7931 27.053 34.8898C27.2135 37.1832 25.2353 40.0122 27.6312 41.2634C27.6718 40.6929 28.0547 36.2589 28.8862 36.7249C28.6619 37.7227 28.4357 38.7205 28.2113 39.7183C30.1103 40.8186 31.1235 43.609 30.9128 41.4567C30.8006 40.3081 29.0951 34.2072 27.5365 34.5998H27.5345ZM17.1156 38.0766C4.92739 49.0273 1.36354 60.0514 3.12709 76.4204C4.71855 78.7176 7.77576 81.7226 10.5565 82.3124C14.8377 83.2213 11.2855 80.7829 11.2313 79.8972C11.1424 78.4585 12.7744 81.9702 14.0294 82.8906C15.0292 83.6235 18.8753 85.0506 20.0104 84.8224C21.5864 83.4379 23.1624 82.0533 24.7384 80.6688C25.6395 77.1281 26.5387 73.5855 27.4398 70.0449C27.3663 69.6872 23.4312 66.8291 27.6332 67.7264C27.2986 65.168 29.2091 63.2247 29.1763 60.7727C30.3984 60.2583 31.6205 59.742 32.8426 59.2276C29.6578 53.382 29.7603 57.35 28.4047 58.6475C28.2113 58.7113 28.018 58.7771 27.8265 58.8409C31.547 52.303 28.2655 57.1934 25.9934 59.131C23.9668 60.5793 21.9422 62.0277 19.9157 63.478C18.5814 65.5664 21.2809 66.5449 22.327 66.278C23.0464 66.0943 25.0768 61.1865 25.3185 62.7045C25.3784 63.0874 22.3502 66.8929 23.292 67.2429C25.9276 68.2233 26.6721 63.4528 27.3431 63.7661C27.0318 65.9976 24.0848 69.749 22.5185 66.6628C20.7162 66.8214 18.6549 65.9609 19.1422 63.8628C19.38 62.834 25.9218 58.7578 27.3431 57.3925C29.5108 55.3099 28.4357 53.6102 32.0711 56.9091C33.8733 60.9525 33.707 58.1757 32.2644 56.1356C30.3133 53.3801 28.3022 54.7182 27.6332 53.8171C27.1536 52.7632 22.8337 44.9606 22.327 44.835C21.4008 44.6048 21.2287 47.8728 20.4939 47.2502C19.6585 45.125 18.8212 42.9999 17.9858 40.8766C17.775 40.2404 17.7963 38.0495 17.1176 38.0766H17.1156ZM63.2311 40.5885C61.2509 40.4686 60.2183 44.8059 60.9164 45.0322C61.2045 45.125 65.478 40.7258 63.2311 40.5885ZM57.2501 41.3601C56.0163 41.7333 57.8108 44.164 57.7316 44.3535C54.4075 45.7109 57.6059 49.4952 57.7316 49.9555C58.4161 52.4422 55.6741 51.9375 53.7752 52.564C49.8961 53.8422 46.0441 55.2461 42.0046 56.0409C36.3407 59.1909 30.1915 58.2492 31.5857 63.9614C30.4757 62.31 32.4172 59.1638 30.236 60.4846C29.4779 60.9429 29.768 62.3313 29.5611 62.8998C29.1743 63.7371 28.7895 64.5744 28.4028 65.4117C27.403 71.1278 33.444 69.4126 36.217 67.0534C45.6303 65.3962 50.2519 57.4448 57.8263 54.6911C57.8901 54.5616 57.9559 54.434 58.0197 54.3044C64.0587 56.2284 60.2048 53.5077 60.0462 52.4693C60.1429 51.7287 60.2396 50.9881 60.3363 50.2474C61.046 49.735 60.4697 51.7867 60.6263 52.4693C61.2374 53.2099 61.8484 53.9505 62.4595 54.6911C63.3471 54.8613 68.3322 52.2256 67.7656 48.9925C62.3048 51.0577 63.8885 49.8781 63.0377 49.0891C62.9294 48.9886 60.8584 48.8416 62.1694 47.0607C61.102 47.0181 60.6109 45.1018 60.3363 45.0322C59.586 44.8427 61.0866 47.6543 58.1183 44.7421C58.3368 43.957 58.4103 41.01 57.2501 41.362V41.3601ZM64.5808 41.9402C63.9137 42.0852 59.4042 47.5383 62.6509 46.3839C63.6487 45.4499 64.6446 44.5159 65.6424 43.5838C65.9247 42.7987 65.4181 41.7603 64.5808 41.9421V41.9402ZM30.6227 42.7117C30.058 43.0675 31.4813 45.0477 31.6843 45.5118C32.4559 47.3797 33.2274 49.2458 33.999 51.1138C35.2907 54.7859 34.9484 59.1039 37.5686 57.584C38.7192 56.9169 40.2294 50.5472 39.015 52.0787C38.5123 52.7149 37.5957 56.5959 37.0852 55.7489C36.77 55.2248 41.0184 48.9731 37.3753 50.8237C36.8609 51.661 36.3465 52.4983 35.8321 53.3356C35.2617 52.9875 36.8454 51.1969 36.7004 50.5356C36.623 50.1817 33.1404 45.1366 32.0691 45.1269C31.7617 44.1369 31.3846 43.4098 30.6227 42.7117ZM66.8974 43.6786C65.799 43.7927 62.1694 47.1245 62.1694 47.8322C62.1694 48.2808 62.9468 48.888 63.6159 48.509C63.8847 48.3563 68.2471 44.5256 66.8955 43.6805L66.8974 43.6786ZM67.2822 45.9971C65.7526 46.1654 60.5529 52.129 66.8955 48.7005C69.8637 47.0974 68.3651 45.8772 67.2822 45.9971ZM29.271 47.7355C29.3039 48.219 29.3348 48.7005 29.3677 49.1839C29.3252 49.3173 26.7456 50.4582 29.4644 50.0541C29.534 52.8077 30.3075 50.2997 30.4293 50.2474C30.4931 50.2204 31.518 50.8121 31.6843 50.1508C31.8003 49.6905 30.4603 50.0579 31.0094 48.1223C29.9169 48.6192 29.6926 47.4281 29.273 47.7355H29.271ZM55.8984 48.7005C50.6889 50.0521 45.4795 51.4038 40.27 52.7574C39.7151 53.0861 38.1913 57.116 39.1117 57.0077C40.1405 56.5572 41.1692 56.1066 42.198 55.6561C47.0864 54.3044 51.9749 52.9527 56.8614 51.5991C58.1744 51.1563 56.9987 48.6405 55.8965 48.7024L55.8984 48.7005ZM37.3753 67.6297C36.5728 69.3449 38.5258 72.1855 38.9184 74.39C40.328 72.0018 38.404 69.78 37.3753 67.6297ZM35.0606 68.4032C31.0268 69.749 34.3799 72.9745 33.5175 78.2535C34.9368 78.064 35.8902 77.1223 37.0871 76.4184C37.0311 75.3974 35.4725 68.4631 35.0606 68.4012V68.4032ZM32.3592 69.5615C30.992 69.5634 30.0252 70.1493 28.7895 70.6231C29.3039 73.8176 29.4683 76.9676 29.4644 80.1853C35.6968 80.4329 32.0865 73.1543 32.8407 69.6581C32.6802 69.6253 32.5197 69.5943 32.3592 69.5615ZM37.1819 76.9019C35.6291 78.2071 33.9468 78.4875 33.3222 78.8337C32.9354 79.2842 32.5506 79.7348 32.1639 80.1853C31.4445 80.5721 28.7528 80.5044 28.981 81.2469C31.578 83.1826 34.6178 83.5094 37.7601 83.8555C38.0076 82.8964 38.054 77.074 37.1819 76.9019ZM4.76689 79.027C5.24839 80.9917 5.73182 82.9544 6.21332 84.9191C5.48237 88.8794 6.63487 92.6656 7.9498 96.3164C11.1288 102.118 24.1351 103.786 30.3326 103.657C29.6655 101.849 29.0351 99.946 29.271 97.9582C27.2193 98.1573 17.8853 96.5949 16.7289 96.2198C12.4496 94.8275 10.3031 86.6942 10.2645 82.6025C6.43569 81.4326 5.08789 78.9091 4.76496 79.029L4.76689 79.027ZM24.4483 81.5389C23.0986 82.763 21.7469 83.9851 20.3972 85.2091C18.2295 85.855 13.8186 83.0743 13.4512 83.084C12.1402 83.1188 15.2457 86.9959 15.7659 87.5277C20.1593 92.0004 24.1699 91.9346 30.0445 91.5846C31.3227 88.7343 33.8269 86.5163 35.544 84.1475C35.4241 83.8188 30.1702 83.2677 29.0796 81.7323C28.9055 83.1401 27.5403 84.6252 26.1848 84.8224C22.9671 85.2942 25.6047 81.4887 24.4483 81.5389ZM26.3782 81.9237C24.8873 82.1287 23.8141 85.0544 26.5715 84.2423C28.4492 83.6892 28.5149 81.6298 26.3782 81.9237ZM36.6037 86.1741C34.7589 88.6937 32.7285 91.1341 31.8757 94.1913C33.2874 95.1021 36.1996 95.9703 37.9534 96.4131C38.1294 96.4576 41.0764 96.4209 41.3297 97.2833C40.7515 100.18 40.1714 103.079 39.5932 105.975C40.4093 108.335 38.5819 116.452 39.2065 117.566C39.4308 117.533 39.657 117.502 39.8814 117.469C40.2391 117.661 39.6551 118.398 41.0397 117.469C42.8071 118.386 46.4038 117.976 46.924 115.248C48.3472 109.717 48.1906 103.825 50.0102 98.4416C52.1547 85.3058 46.3168 88.4211 41.8093 87.7211C40.0728 87.2067 38.3363 86.6904 36.5998 86.176L36.6037 86.1741ZM17.8466 91.8805C17.7596 92.0951 17.6745 92.3117 17.5875 92.5264C15.6886 92.1783 17.222 93.0272 17.2645 93.1084L17.4579 94.0772C17.5875 93.9051 17.717 93.733 17.8447 93.5609C17.9471 93.5686 18.477 94.8004 18.361 93.3018C20.1864 94.0521 18.3745 93.1161 18.6839 92.333C17.5604 92.9092 18.4209 91.7142 17.8447 91.8805H17.8466ZM17.1156 102.593C17.3864 105.616 19.7571 103.405 18.6588 102.98C18.1444 102.85 17.63 102.723 17.1156 102.593ZM35.8321 102.593C29.5495 106.059 26.1055 102.272 34.6738 106.07C34.8634 105.186 36.4664 102.557 35.8321 102.593ZM22.1337 105.683C22.7389 109.292 21.3582 109.992 20.6872 112.347C19.0339 118.148 17.5759 124.874 17.9858 130.891C19.6121 133.165 19.1074 131.959 19.6256 132.146C19.7552 132.34 19.8828 132.533 20.0124 132.727C20.1883 132.794 20.8168 132.001 21.3621 133.307C21.8765 133.243 22.3908 133.177 22.9052 133.113C23.8701 133.37 24.8351 133.628 25.8 133.887C25.8329 132.245 25.8638 130.603 25.8967 128.962C26.4343 123.238 29.3271 117.475 30.3346 113.509C30.9108 111.237 31.3517 108.017 29.8531 106.265C27.2812 106.072 24.7074 105.879 22.1356 105.685L22.1337 105.683ZM46.4444 117.274C46.2917 117.87 46.5894 119.742 45.9629 118.722C45.4872 117.951 45.7908 116.139 45.288 119.399C44.8394 119.407 44.8858 116.537 44.1297 119.206C43.8726 118.885 43.6154 118.562 43.3582 118.241C42.1341 121.772 43.0043 116.238 41.4283 119.399C40.4267 115.534 41.4844 122.36 39.8852 118.241C39.628 118.628 39.3709 119.014 39.1137 119.399C38.957 119.409 38.1159 116.756 38.4388 120.461C38.6322 121.362 38.8255 122.263 39.017 123.164C41.5212 122.176 44.6306 121.043 47.2179 120.942C47.3881 120.857 46.8737 117.626 46.4463 117.272L46.4444 117.274ZM46.0577 121.523C44.7079 121.844 43.3563 122.166 42.0065 122.487C38.3866 123.634 39.0402 124.046 39.8833 127.703C41.204 127.592 47.593 125.305 47.8908 124.323C48.1674 123.408 47.9353 121.372 46.0577 121.523ZM18.0806 131.568C17.951 132.856 17.8234 134.144 17.6938 135.432C20.2773 136.648 23.0444 137.646 25.8947 137.847C26.0823 135.996 25.5621 132.168 24.4483 135.625C23.7367 135.631 24.6224 133.39 23.7734 133.79C23.7328 136.118 23.6304 135.498 23.0986 133.693C22.5359 133.657 22.2284 137.141 21.9403 133.693C21.6193 134.08 21.2964 134.467 20.9754 134.852C20.5151 130.108 20.2792 136.816 19.4322 132.727C18.1927 135.024 18.653 132.498 18.0825 131.568H18.0806ZM17.6958 135.817C16.5549 138.591 23.64 141.96 25.2199 141.419C25.9141 141.181 25.8387 138.404 25.6066 138.329C23.1527 138.166 19.73 137.201 17.6958 135.817Z\",\n    stroke: \"black\",\n    strokeWidth: 1.34,\n    strokeMiterlimit: 10\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.2389 1.76133C19.9911 1.51961 20.4243 4.04892 20.4939 4.17655C21.6522 5.97878 22.8086 7.78294 23.9669 9.58517C24.0771 10.3006 23.6614 10.1692 23.4854 9.29511C22.8937 10.5462 20.5867 8.00532 20.6873 7.07326C18.3978 6.16441 20.4862 6.46801 20.3005 5.91496C20.258 5.78927 18.1464 4.38926 19.0456 3.88649L19.9138 4.17655C20.0376 3.88842 18.3804 2.03785 19.2389 1.76133Z\",\n    fill: \"white\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.3951 1.76129C21.7565 2.3008 21.188 3.88452 21.7449 4.46464C21.9634 4.4569 21.8841 1.68394 22.4197 3.20965C22.5532 3.58673 22.1761 5.41216 22.7098 5.4315C23.6477 2.22732 23.1236 6.21272 23.6747 6.20499C23.9861 6.19918 23.9223 4.81077 24.7364 5.33481C25.0264 6.91273 25.3145 8.49065 25.6046 10.0666C24.4057 10.8614 23.4562 7.38456 22.9999 6.68648C22.5106 5.9362 20.5576 4.81271 20.3951 1.76129Z\",\n    fill: \"white\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1158 102.593C17.6302 102.723 18.1446 102.851 18.659 102.98C19.7573 103.405 17.3866 105.616 17.1158 102.593Z\",\n    fill: \"white\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.8321 102.593C36.4683 102.557 34.8633 105.187 34.6738 106.07C26.1054 102.272 29.5494 106.059 35.8321 102.593Z\",\n    fill: \"white\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.8703 14.897C24.6418 15.1542 25.4134 15.4114 26.1849 15.6705C27.3046 15.7711 34.3665 15.6299 34.7707 16.3473C35.2425 19.0062 35.6602 20.5319 34.964 23.301C37.1839 27.6055 37.1762 32.6447 32.7461 29.193C32.2007 29.2549 32.543 32.5384 29.5631 29.6765C27.2446 27.4508 28.8515 26.0217 27.8267 26.5864C27.2562 26.8996 26.6142 30.011 27.73 27.8414C29.0488 30.7806 31.6709 31.2409 31.6864 31.8016C31.1836 33.1185 30.5899 33.9983 29.0816 34.2169C25.8639 34.6809 25.8968 32.2077 24.5471 32.1884C25.2548 33.0257 25.9626 33.863 26.6703 34.7003C26.446 36.0848 26.2197 37.4694 25.9954 38.8539C23.7117 36.7616 21.4299 34.6693 19.1462 32.5771C17.2357 29.7035 19.1404 29.5314 19.1462 29.1002C19.152 28.7173 15.7428 23.8869 18.1813 24.8499C18.0672 21.5858 18.8697 24.1731 19.0495 24.1731C19.5001 23.5292 19.9506 22.8852 20.3992 22.2413C21.2694 22.1388 21.7277 24.1731 21.8457 24.2698C23.2051 25.3739 20.0434 21.1952 22.1357 19.9228C22.5225 19.859 22.9073 19.7932 23.294 19.7294C24.9435 20.1336 23.1625 25.0278 25.0305 21.2745C25.7634 21.083 26.0902 21.8642 26.1888 21.8546C26.3822 21.8333 27.5927 19.6579 27.2504 18.281C27.1731 17.9697 25.98 16.1462 25.4172 17.6042C24.6708 15.5448 24.6205 17.0241 24.4523 17.0241C23.9998 17.0241 24.3769 16.0167 24.3556 15.9625C24.3266 15.889 22.8067 15.1504 23.8741 14.9009L23.8703 14.897ZM31.7811 17.6004C31.1701 18.341 30.559 19.0816 29.948 19.8222C28.8438 24.6759 34.79 25.4165 33.8077 20.0156C36.0933 18.0181 30.091 21.578 30.3347 19.8222C30.4797 18.7819 32.4231 17.1518 33.6143 18.0838C33.7903 17.5868 32.1041 17.5056 31.7811 17.6004ZM22.5186 20.8858C22.3697 21.9764 22.4993 24.6527 23.1935 22.3341C22.9691 21.8507 22.7429 21.3692 22.5186 20.8858Z\",\n    fill: \"#FAAD81\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.7812 17.6004C32.1041 17.5056 33.7903 17.5849 33.6144 18.0838C32.4232 17.1518 30.4779 18.7819 30.3348 19.8222C30.0911 21.5781 36.0934 18.0181 33.8077 20.0156C34.792 25.4165 28.8458 24.6759 29.948 19.8222C30.5591 19.0816 31.1701 18.341 31.7812 17.6004ZM32.7442 20.3057C32.197 20.4584 32.4599 22.1369 30.5262 22.5275C32.9646 25.4842 34.8848 19.7082 32.7442 20.3057Z\",\n    fill: \"black\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.7441 20.3058C34.8847 19.7083 32.9626 25.4843 30.5261 22.5276C32.4598 22.137 32.1969 20.4586 32.7441 20.3058Z\",\n    fill: \"white\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.5185 20.8858C22.7428 21.3692 22.9691 21.8507 23.1934 22.3342C22.4992 24.6527 22.3696 21.9764 22.5185 20.8858Z\",\n    fill: \"#AD8671\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })), _path13 || (_path13 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.2312 40.5885C65.4782 40.7258 61.2047 45.125 60.9166 45.0322C60.2185 44.806 61.2511 40.4686 63.2312 40.5885Z\",\n    fill: \"#FAAD81\"\n  })), _path14 || (_path14 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.2502 41.3601C58.4105 41.0101 58.337 43.9551 58.1185 44.7402C61.0887 47.6505 59.5881 44.8408 60.3365 45.0303C60.611 45.0999 61.1022 47.0162 62.1696 47.0587C60.8586 48.8378 62.9296 48.9867 63.0379 49.0872C63.8887 49.8762 62.305 51.0557 67.7658 48.9905C68.3324 52.2218 63.3473 54.8594 62.4597 54.6892C61.8486 53.9486 61.2376 53.208 60.6265 52.4674C60.4718 51.7867 61.0481 49.735 60.3365 50.2455C60.2398 50.9861 60.1431 51.7267 60.0464 52.4674C60.205 53.5058 64.0589 56.2265 58.0198 54.3025C57.956 54.432 57.8903 54.5596 57.8265 54.6892C50.2521 57.4428 45.6286 65.3943 36.2171 67.0515C33.4442 69.4106 27.4032 71.1258 28.403 65.4098C28.7897 64.5725 29.1745 63.7352 29.5613 62.8979C29.7682 62.3293 29.4781 60.9429 30.2361 60.4826C32.4174 59.1619 30.4778 62.3081 31.5859 63.9595C30.1917 58.2473 36.3409 59.1909 42.0048 56.0389C46.0443 55.2442 49.8963 53.8403 53.7753 52.5621C55.6742 51.9375 58.4163 52.4422 57.7317 49.9535C57.606 49.4933 54.4077 45.709 57.7317 44.3515C57.811 44.1601 56.0165 41.7294 57.2502 41.3581V41.3601Z\",\n    fill: \"#FAAD81\"\n  })), _path15 || (_path15 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.5808 41.9402C65.4181 41.7604 65.9247 42.7968 65.6424 43.5819C64.6446 44.5159 63.6487 45.4499 62.6509 46.382C59.4042 47.5364 63.9117 42.0833 64.5808 41.9383V41.9402Z\",\n    fill: \"#FAAD81\"\n  })), _path16 || (_path16 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.8975 43.6787C68.2492 44.5237 63.8867 48.3544 63.6179 48.5072C62.9489 48.8881 62.1715 48.279 62.1715 47.8304C62.1715 47.1227 65.8011 43.7908 66.8995 43.6768L66.8975 43.6787Z\",\n    fill: \"#FAAD81\"\n  })), _path17 || (_path17 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.2823 45.9972C68.3671 45.8773 69.8638 47.0975 66.8956 48.7005C60.553 52.129 65.7528 46.1654 67.2823 45.9972Z\",\n    fill: \"#FAAD81\"\n  })), _path18 || (_path18 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.8984 48.7004C57.0006 48.6385 58.1763 51.1562 56.8633 51.5971C51.9749 52.9488 47.0864 54.3005 42.1999 55.6541C41.1712 56.1046 40.1424 56.5552 39.1137 57.0058C38.1932 57.116 39.717 53.0842 40.272 52.7554C45.4814 51.4038 50.6909 50.0521 55.9003 48.6985L55.8984 48.7004Z\",\n    fill: \"#FAAD81\"\n  })), _path19 || (_path19 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.6038 86.1741C38.3403 86.6884 40.0768 87.2047 41.8133 87.7191C46.3208 88.4191 52.1568 85.3039 50.0142 98.4397C48.1926 103.823 48.3493 109.713 46.928 115.246C46.4078 117.974 42.8111 118.384 41.0437 117.467C39.6591 118.396 40.2431 117.659 39.8854 117.467C39.6611 117.5 39.4348 117.531 39.2105 117.564C38.584 116.45 40.4133 108.333 39.5972 105.973C40.1754 103.077 40.7555 100.178 41.3337 97.2814C41.0804 96.4208 38.1334 96.4557 37.9574 96.4112C36.2036 95.9684 33.2914 95.1001 31.8798 94.1893C32.7306 91.1341 34.7629 88.6937 36.6077 86.1721L36.6038 86.1741Z\",\n    fill: \"#FAAD81\"\n  })), _path20 || (_path20 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.1338 105.683C24.7057 105.877 27.2795 106.07 29.8513 106.264C31.3499 108.015 30.911 111.235 30.3328 113.507C29.3253 117.475 26.4325 123.238 25.8949 128.96C25.862 130.601 25.8311 132.243 25.7982 133.885C24.8333 133.628 23.8684 133.37 22.9034 133.111C22.3891 133.175 21.8747 133.241 21.3603 133.305C20.8131 131.999 20.1866 132.792 20.0106 132.725C19.881 132.531 19.7534 132.338 19.6239 132.144C19.1037 131.957 19.6103 133.164 17.9841 130.889C17.5741 124.874 19.0321 118.146 20.6855 112.345C21.3565 109.99 22.7371 109.288 22.1319 105.681L22.1338 105.683Z\",\n    fill: \"#FAAD81\"\n  })), _path21 || (_path21 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.4445 117.274C46.8718 117.628 47.3862 120.859 47.216 120.944C44.6287 121.045 41.5193 122.178 39.0151 123.166C38.8218 122.265 38.6284 121.364 38.437 120.463C38.114 116.756 38.9552 119.409 39.1118 119.401C39.369 119.015 39.6262 118.628 39.8834 118.243C41.4826 122.364 40.4248 115.538 41.4265 119.401C43.0025 116.24 42.1323 121.774 43.3563 118.243C43.6135 118.564 43.8707 118.887 44.1279 119.208C44.884 116.539 44.8376 119.409 45.2862 119.401C45.789 116.143 45.4854 117.953 45.9611 118.724C46.5895 119.744 46.2898 117.872 46.4426 117.276L46.4445 117.274Z\",\n    fill: \"white\"\n  })), _path22 || (_path22 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.0576 121.522C47.9353 121.372 48.1673 123.41 47.8908 124.322C47.593 125.305 41.204 127.594 39.8832 127.703C39.0401 124.046 38.3865 123.634 42.0065 122.487C43.3562 122.166 44.7079 121.843 46.0576 121.522Z\",\n    fill: \"white\"\n  })), _path23 || (_path23 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.0807 131.568C18.6531 132.498 18.1929 135.026 19.4304 132.726C20.2793 136.816 20.5133 130.108 20.9735 134.852C21.2945 134.465 21.6175 134.078 21.9385 133.693C22.2247 137.141 22.5341 133.657 23.0968 133.693C23.6285 135.497 23.733 136.118 23.7716 133.79C24.6205 133.39 23.7368 135.631 24.4465 135.625C25.5603 132.168 26.0805 135.996 25.8929 137.847C23.0426 137.646 20.2755 136.65 17.692 135.432C17.8216 134.144 17.9492 132.856 18.0788 131.568H18.0807Z\",\n    fill: \"white\"\n  })), _path24 || (_path24 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.6959 135.817C19.7302 137.201 23.1528 138.166 25.6067 138.328C25.8407 138.404 25.9142 141.181 25.22 141.419C23.6382 141.96 16.555 138.591 17.6959 135.817Z\",\n    fill: \"white\"\n  })), _path25 || (_path25 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.696 30.7362C19.3938 34.3271 20.9021 34.3503 22.3273 35.7581C25.3207 38.7167 27.9525 42.0253 28.695 46.1886C28.0201 46.6217 25.0035 36.1816 20.8808 46.2853H20.4941C18.9529 43.7231 18.0731 38.3164 17.5993 37.2064C16.5783 34.8164 13.9775 35.5531 17.696 30.7362Z\",\n    fill: \"#AFAFAF\"\n  })), _path26 || (_path26 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.8979 34.7931C15.8029 34.445 15.1744 34.9749 16.441 36.0481C11.9683 39.2194 6.65251 46.1189 4.38232 51.2123C5.52515 44.4501 11.249 40.134 14.8979 34.7931Z\",\n    fill: \"#ADAFAD\"\n  })), _path27 || (_path27 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.535 34.5997C29.0935 34.2072 30.7991 40.3081 30.9112 41.4567C31.1239 43.6089 30.1087 40.8186 28.2098 39.7183C28.4341 38.7205 28.6604 37.7227 28.8847 36.7249C28.0551 36.2608 27.6723 40.6948 27.6297 41.2633C25.2338 40.0103 27.2101 37.1832 27.0515 34.8898C27.212 34.7931 27.3725 34.6964 27.533 34.5997H27.535Z\",\n    fill: \"#AEAEAE\"\n  })), _path28 || (_path28 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1159 38.0765C17.7947 38.0495 17.7734 40.2404 17.9842 40.8766C18.8195 43.0017 19.6568 45.1269 20.4922 47.2501C21.227 47.8747 21.3991 44.6048 22.3254 44.8349C22.832 44.9606 27.1519 52.7632 27.6315 53.817C28.3006 54.7182 30.3116 53.3781 32.2628 56.1356C33.7053 58.1737 33.8716 60.9505 32.0694 56.9091C28.434 53.6101 29.5111 55.3079 27.3414 57.3925C25.9202 58.7577 19.3803 62.834 19.1405 63.8627C18.6532 65.9608 20.7146 66.8213 22.5168 66.6628C24.0812 69.749 27.0282 65.9956 27.3414 63.766C26.6685 63.4528 25.924 68.2233 23.2903 67.2429C22.3466 66.8929 25.3768 63.0873 25.3168 62.7044C25.0771 61.1865 23.0447 66.0942 22.3254 66.2779C21.2773 66.5448 18.5798 65.5644 19.914 63.4779C21.9406 62.0296 23.9652 60.5812 25.9917 59.1309C28.2638 57.1933 31.5434 52.3029 27.8249 58.8409C28.0182 58.777 28.2116 58.7113 28.4031 58.6475C29.7586 57.348 29.6542 53.382 32.841 59.2276C31.6188 59.742 30.3967 60.2583 29.1746 60.7726C29.2075 63.2246 27.295 65.1699 27.6315 67.7263C23.4315 66.8271 27.3666 69.6871 27.4381 70.0448C26.537 73.5855 25.6378 77.1281 24.7367 80.6687C23.1607 82.0533 21.5848 83.4378 20.0088 84.8224C18.8717 85.0505 15.0275 83.6234 14.0278 82.8906C12.7728 81.9701 11.1407 78.4585 11.2297 79.8972C11.2838 80.7828 14.8361 83.2212 10.5548 82.3124C7.77604 81.7226 4.71689 78.7176 3.12544 76.4203C1.36382 60.0533 4.92574 49.0291 17.114 38.0765H17.1159ZM14.2231 49.6653C14.2559 50.9861 14.2869 52.3049 14.3198 53.6256C10.8835 51.8698 12.4286 53.5579 14.5131 54.3991C15.5825 57.4544 18.1505 59.8541 19.6259 62.8011C20.0474 62.8127 19.4403 61.6622 18.951 60.7726C17.6651 58.9704 16.3792 57.1663 15.0913 55.364C14.8013 53.4651 14.5131 51.5643 14.2231 49.6653Z\",\n    fill: \"#AFAFAF\"\n  })), _path29 || (_path29 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.6228 42.7117C31.3867 43.4079 31.7618 44.1369 32.0693 45.127C33.1386 45.1366 36.6232 50.1817 36.7005 50.5356C36.8456 51.1988 35.2618 52.9895 35.8323 53.3356C36.3467 52.4983 36.861 51.661 37.3754 50.8237C41.0185 48.9731 36.7701 55.2268 37.0853 55.7489C37.5958 56.5959 38.5105 52.7149 39.0152 52.0787C40.2276 50.5472 38.7193 56.9169 37.5688 57.584C34.9486 59.1039 35.2908 54.7859 33.9991 51.1138C33.2276 49.2458 32.456 47.3797 31.6845 45.5118C31.4814 45.0477 30.0601 43.0675 30.6228 42.7117Z\",\n    fill: \"#ABAFAD\"\n  })), _path30 || (_path30 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.2712 47.7354C29.6909 47.428 29.9152 48.6172 31.0077 48.1222C30.4585 50.0578 31.7986 49.6904 31.6826 50.1507C31.5163 50.812 30.4934 50.2203 30.4276 50.2474C30.3058 50.2996 29.5323 52.8076 29.4627 50.054C26.7439 50.4581 29.3234 49.3172 29.366 49.1838C29.3331 48.7004 29.3022 48.2189 29.2693 47.7354H29.2712Z\",\n    fill: \"#AA993E\"\n  })), _path31 || (_path31 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.223 49.6655C14.5131 51.5644 14.8012 53.4652 15.0913 55.3641C16.3772 57.1664 17.6631 58.9705 18.951 60.7728C19.4421 61.6623 20.0474 62.8109 19.6258 62.8012C18.1504 59.8523 15.5824 57.4545 14.5131 54.3992C12.4285 53.56 10.8835 51.8699 14.3197 53.6257C14.2868 52.305 14.2559 50.9862 14.223 49.6655Z\",\n    fill: \"black\"\n  })), _path32 || (_path32 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.3754 67.6297C38.4061 69.7819 40.3282 72.0018 38.9186 74.39C38.526 72.1855 36.5729 69.3449 37.3754 67.6297Z\",\n    fill: \"#AFAFAF\"\n  })), _path33 || (_path33 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.0607 68.4032C35.4726 68.4631 37.0311 75.3975 37.0872 76.4204C35.8902 77.1243 34.9389 78.066 33.5176 78.2555C34.38 72.9745 31.0289 69.7491 35.0607 68.4051V68.4032Z\",\n    fill: \"#AFAFAF\"\n  })), _path34 || (_path34 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32.3594 69.5614C32.5199 69.5943 32.6804 69.6252 32.8409 69.6581C32.0868 73.1543 35.6971 80.4328 29.4647 80.1853C29.4685 76.9676 29.3022 73.8195 28.7898 70.623C30.0254 70.1473 30.9923 69.5633 32.3594 69.5614Z\",\n    fill: \"#AFAFAF\"\n  })), _path35 || (_path35 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.182 76.9018C38.0561 77.0739 38.0077 82.8963 37.7602 83.8555C34.6179 83.5093 31.5781 83.1845 28.9811 81.2469C28.7549 80.5043 31.4466 80.5701 32.164 80.1853C32.5508 79.7347 32.9356 79.2841 33.3223 78.8336C33.945 78.4875 35.6292 78.209 37.182 76.9018Z\",\n    fill: \"#777777\"\n  })), _path36 || (_path36 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.76709 79.027C5.08809 78.9071 6.43783 81.4306 10.2666 82.6005C10.3053 86.6923 12.4517 94.8275 16.731 96.2178C17.8855 96.5929 27.2195 98.1554 29.2732 97.9562C29.0353 99.9441 29.6676 101.847 30.3348 103.655C24.1391 103.786 11.1329 102.116 7.95193 96.3145C6.637 92.6636 5.4845 88.8774 6.21545 84.9171C5.73395 82.9525 5.25052 80.9897 4.76902 79.0251L4.76709 79.027Z\",\n    fill: \"#777777\"\n  })), _path37 || (_path37 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.4487 81.5389C25.605 81.4887 22.9674 85.2942 26.1852 84.8224C27.5388 84.6232 28.9059 83.1401 29.0799 81.7323C30.1686 83.2677 35.4245 83.8169 35.5444 84.1475C33.8272 86.5163 31.3231 88.7343 30.0449 91.5846C24.1702 91.9346 20.1597 92.0004 15.7663 87.5277C15.2442 86.9959 12.1386 83.1188 13.4516 83.084C13.819 83.0743 18.2298 85.855 20.3975 85.2092C21.7473 83.9851 23.0989 82.763 24.4487 81.5389Z\",\n    fill: \"#777777\"\n  })), _path38 || (_path38 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.3785 81.9237C28.5152 81.6298 28.4495 83.6892 26.5718 84.2422C23.8143 85.0544 24.8876 82.1306 26.3785 81.9237Z\",\n    fill: \"white\"\n  })), _path39 || (_path39 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8566 92.0584C18.3381 91.9191 17.6188 92.9189 18.5585 92.4374C18.3014 93.0948 19.8174 93.8761 18.2878 93.2495C18.3845 94.5026 17.9417 93.4719 17.8566 93.4661C17.7483 93.6111 17.64 93.7542 17.5317 93.8993L17.3693 93.0871C17.3345 93.0194 16.0505 92.3078 17.64 92.5998C17.7116 92.42 17.7831 92.2401 17.8566 92.0584Z\",\n    fill: \"white\"\n  })), _path40 || (_path40 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39 147L39.4497 139.508L32.7365 142.865L39 147Z\",\n    fill: \"#E80A0D\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgYodelyGuy);\nexport default __webpack_public_path__ + \"static/media/YodelyGuy.49dc2fcfb600ac056470255af9139cd3.svg\";\nexport { ForwardRef as ReactComponent };","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\nimport {\r\n  MAX_MOVES,\r\n  START_POSITION_X,\r\n  START_POSITION_Y,\r\n} from '../components/GameScreen/constants';\r\n\r\ninterface GameContextProps {\r\n  remainingMoves: number;\r\n  setRemainingMoves: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  positionX: number;\r\n  setPositionX: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  positionY: number;\r\n  setPositionY: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  savedPositionX: number | null;\r\n  setSavesPositionX: React.Dispatch<React.SetStateAction<number | null>>;\r\n\r\n  savedPositionY: number | null;\r\n  setSavesPositionY: React.Dispatch<React.SetStateAction<number | null>>;\r\n\r\n  startPoint: number | null;\r\n  setStartPoint: React.Dispatch<React.SetStateAction<number | null>>;\r\n\r\n  startPositionY: number;\r\n  setStartPositionY: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  startPositionX: number;\r\n  setStartPositionX: React.Dispatch<React.SetStateAction<number>>;\r\n\r\n  resetGame: () => void;\r\n}\r\n\r\nconst GameContext = createContext<GameContextProps | undefined>(undefined);\r\n\r\nexport const GameProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [remainingMoves, setRemainingMoves] = useState<number>(MAX_MOVES);\r\n  const [positionX, setPositionX] = useState<number>(START_POSITION_X);\r\n  const [positionY, setPositionY] = useState<number>(START_POSITION_Y);\r\n\r\n  const [savedPositionX, setSavesPositionX] = useState<number | null>(null);\r\n  const [savedPositionY, setSavesPositionY] = useState<number | null>(null);\r\n\r\n  const [startPoint, setStartPoint] = useState<number | null>(null);\r\n  const [startPositionY, setStartPositionY] = useState<number>(0);\r\n  const [startPositionX, setStartPositionX] = useState<number>(0);\r\n\r\n  const resetGame = () => {\r\n    setRemainingMoves(MAX_MOVES);\r\n    setPositionX(START_POSITION_X);\r\n    setPositionY(START_POSITION_Y);\r\n\r\n    setStartPositionY(START_POSITION_X);\r\n    setStartPositionX(START_POSITION_Y);\r\n\r\n    setSavesPositionX(null);\r\n    setSavesPositionY(null);\r\n\r\n    setStartPoint(null);\r\n  };\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        remainingMoves,\r\n        setRemainingMoves,\r\n        positionX,\r\n        setPositionX,\r\n        positionY,\r\n        setPositionY,\r\n        savedPositionX,\r\n        setSavesPositionX,\r\n        savedPositionY,\r\n        setSavesPositionY,\r\n        startPoint,\r\n        setStartPoint,\r\n        resetGame,\r\n        startPositionY,\r\n        setStartPositionY,\r\n        startPositionX,\r\n        setStartPositionX,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGame = (): GameContextProps => {\r\n  const context = useContext(GameContext);\r\n  if (context === undefined) {\r\n    throw new Error('useGame must be used within a GameProvider');\r\n  }\r\n  return context;\r\n};\r\n","export const START_POSITION_X = 0;\r\nexport const START_POSITION_Y = 0;\r\nexport const MAX_MOVES = 25;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport OuterRocksCut from '../../assets/OuterRocksCut.png';\r\nimport Header from '../../assets/Header.png';\r\nimport GameBackground from '../../assets/GameBackground.svg';\r\nimport GameBackgroundWide from '../../assets/GameBackgroundWide.svg';\r\nimport YellowRulerRotate from '../../assets/YellowRulerRotate.svg';\r\nimport YodelyGuy from '../../assets/YodelyGuy.svg';\r\n\r\nimport ScreamCrash from '../../assets/audio/ScreamCrash.mp3';\r\nimport SingleDing from '../../assets/audio/SingleDing.mp3';\r\nimport ThePriceIsRightYodelling from '../../assets/audio/ThePriceIsRightYodelling.mp3';\r\nimport WinningDingX10 from '../../assets/audio/WinningDingX10.mp3';\r\n\r\nimport { useGame } from '../../context/GameContext';\r\n\r\nconst GameScreen = () => {\r\n  const yodelAudioRef = useRef<any>(null);\r\n  const climberStopsMovingAudioRef = useRef<any>(null);\r\n  const winningAudioRef = useRef<any>(null);\r\n  const fallAudioRef = useRef<any>(null);\r\n\r\n  const {\r\n    remainingMoves,\r\n    setRemainingMoves,\r\n    positionX,\r\n    setPositionX,\r\n    positionY,\r\n    setPositionY,\r\n    savedPositionX,\r\n    setSavesPositionX,\r\n    savedPositionY,\r\n    setSavesPositionY,\r\n    startPoint: startPointContext,\r\n    setStartPoint: setStartPointContext,\r\n    startPositionY,\r\n    setStartPositionY,\r\n    startPositionX,\r\n    setStartPositionX,\r\n  } = useGame();\r\n\r\n  const MAX_MOVES = 25;\r\n\r\n  const [falling, setFalling] = useState<boolean>(false);\r\n  const [isYodeling, setIsYodeling] = useState<boolean>(false);\r\n  const [outerRocksSize, setOuterRocksSize] = useState<null | {\r\n    width: number;\r\n    height: number;\r\n  }>(null);\r\n  const [headerHeight, setHeaderHeight] = useState<null | number>(null);\r\n  const [isGameStarted, setIsGmeStarted] = useState<boolean>(false);\r\n  const [rightLimit, setRightLimit] = useState<number>(0);\r\n  const [leftLimit, setLeftLimit] = useState<number>(0);\r\n  const [points, setPoints] = useState<{ [key: number]: number }>({});\r\n\r\n  const [isRendered, setIsRendered] = useState<boolean>(false);\r\n  const [isMainBgLoaded, setMainBgLoaded] = useState<boolean>(false);\r\n  const [isGameContainerLoaded, setGameContainerLoaded] =\r\n    useState<boolean>(false);\r\n\r\n  const [gameBackgroundElement, setGameBackgroundElement] = useState<any>(null);\r\n  const [yodelyGuyElement, setYodelyGuyElement] = useState<any>(null);\r\n  const [rulerElement, setRulerElement] = useState<any>(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handlePlayYodelAudioRef = () => {\r\n    climberStopsMovingAudioRef.current.pause();\r\n    winningAudioRef.current.pause();\r\n    fallAudioRef.current.pause();\r\n    yodelAudioRef.current.pause();\r\n    yodelAudioRef.current.currentTime = 0;\r\n    yodelAudioRef.current.play();\r\n  };\r\n\r\n  const handlePlayClimberStopsAudioRef = () => {\r\n    yodelAudioRef.current.pause();\r\n    winningAudioRef.current.pause();\r\n    fallAudioRef.current.pause();\r\n    climberStopsMovingAudioRef.current.pause();\r\n    climberStopsMovingAudioRef.current.currentTime = 0;\r\n    climberStopsMovingAudioRef.current.play();\r\n  };\r\n\r\n  const handlePlayWinningAudioRef = () => {\r\n    yodelAudioRef.current.pause();\r\n    climberStopsMovingAudioRef.current.pause();\r\n    fallAudioRef.current.pause();\r\n    winningAudioRef.current.pause();\r\n    winningAudioRef.current.currentTime = 0;\r\n    winningAudioRef.current.play();\r\n  };\r\n\r\n  const handlePlayFallAudioRef = () => {\r\n    yodelAudioRef.current.pause();\r\n    climberStopsMovingAudioRef.current.pause();\r\n    winningAudioRef.current.pause();\r\n    fallAudioRef.current.pause();\r\n    fallAudioRef.current.currentTime = 0;\r\n    fallAudioRef.current.play();\r\n  };\r\n\r\n  const getClosestPointKey = (x: number) => {\r\n    let closestKey = null;\r\n    for (const [key, value] of Object.entries(points)) {\r\n      if (value <= x) {\r\n        closestKey = key;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return closestKey;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === ' ') {\r\n        handlePlayWinningAudioRef();\r\n      }\r\n\r\n      if (\r\n        event.key === 'ArrowLeft' &&\r\n        positionX < rightLimit &&\r\n        positionX > leftLimit\r\n      ) {\r\n        setIsYodeling(true);\r\n        setIsGmeStarted(true);\r\n        setPositionX((prevPositionX) =>\r\n          Math.max(prevPositionX - 2, -window.innerWidth),\r\n        );\r\n        setPositionY((prevPositionY) => Math.max(prevPositionY - 0.935, 0));\r\n      }\r\n\r\n      if (event.key === 'ArrowRight') {\r\n        positionX < rightLimit && setIsYodeling(true);\r\n        setIsGmeStarted(true);\r\n\r\n        setPositionX((prevPositionX) => {\r\n          const newPositionX = Math.min(prevPositionX + 2, rightLimit);\r\n          return newPositionX;\r\n        });\r\n        setPositionY((prevPositionY) =>\r\n          positionX < rightLimit\r\n            ? Math.min(prevPositionY + 0.94, window.innerHeight)\r\n            : startPositionY,\r\n        );\r\n      }\r\n    };\r\n\r\n    const handleKeyUp = (event: KeyboardEvent) => {\r\n      if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') {\r\n        setIsYodeling(false);\r\n        yodelAudioRef.current.pause();\r\n        positionX < rightLimit && handlePlayClimberStopsAudioRef();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n    };\r\n  }, [positionX, positionY, isRendered]);\r\n\r\n  useEffect(() => {\r\n    if (positionX === rightLimit) {\r\n      positionY !== startPositionY && setFalling(true);\r\n      positionY !== startPositionY && !falling && handlePlayFallAudioRef();\r\n      setPositionY(startPositionY);\r\n    }\r\n  }, [positionX, rightLimit, positionY, startPositionY, falling]);\r\n\r\n  useEffect(() => {\r\n    const centerPosition = yodelyGuyElement ? yodelyGuyElement.width / 2 : 0;\r\n    const closestKey = getClosestPointKey(positionX + centerPosition);\r\n    if (closestKey !== null) {\r\n      setRemainingMoves(MAX_MOVES - +closestKey);\r\n    }\r\n  }, [positionX, yodelyGuyElement]);\r\n\r\n  useEffect(() => {\r\n    if (falling) {\r\n      const timer = setTimeout(() => {\r\n        setFalling(false);\r\n      }, 1500);\r\n      const play = setTimeout(() => {\r\n        handlePlayFallAudioRef();\r\n      }, 0);\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n        clearTimeout(play);\r\n      };\r\n    }\r\n  }, [falling]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setIsRendered(true);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isYodeling) {\r\n      handlePlayYodelAudioRef();\r\n    }\r\n  }, [isYodeling]);\r\n\r\n  useEffect(() => {\r\n    if (yodelyGuyElement && gameBackgroundElement) {\r\n      const yodelyGuyRect = yodelyGuyElement.getBoundingClientRect();\r\n      const gameBackgroundRect = gameBackgroundElement.getBoundingClientRect();\r\n\r\n      const relativeX = yodelyGuyRect.left - gameBackgroundRect.left;\r\n      const relativeY = gameBackgroundRect.bottom - yodelyGuyRect.bottom;\r\n\r\n      startPositionX ? setLeftLimit(startPositionX) : setLeftLimit(relativeX);\r\n\r\n      if (\r\n        (!savedPositionX || savedPositionX <= startPositionX) &&\r\n        (!savedPositionY || savedPositionY <= startPositionY)\r\n      ) {\r\n        setPositionX(relativeX);\r\n        setPositionY(relativeY);\r\n        setStartPositionX(relativeX);\r\n        setStartPositionY(relativeY);\r\n      } else if (savedPositionX && savedPositionY) {\r\n        setPositionX(savedPositionX);\r\n        setPositionY(savedPositionY);\r\n      }\r\n    }\r\n  }, [\r\n    yodelyGuyElement,\r\n    gameBackgroundElement,\r\n    isRendered,\r\n    isMainBgLoaded,\r\n    isGameContainerLoaded,\r\n    savedPositionX,\r\n    savedPositionY,\r\n    startPositionX,\r\n    startPositionY,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (rulerElement && gameBackgroundElement && yodelyGuyElement) {\r\n      const rulerRect = rulerElement.getBoundingClientRect();\r\n      const gameBackgroundRect = gameBackgroundElement.getBoundingClientRect();\r\n      const yodelyGuyRect = yodelyGuyElement.getBoundingClientRect();\r\n\r\n      const rulerRight = rulerRect.right;\r\n      const gameBackgroundLeft = gameBackgroundRect.left;\r\n\r\n      const distanceFromLeft = rulerRight - gameBackgroundLeft;\r\n\r\n      const yodelyGuyWidth = yodelyGuyRect.width / 1.3;\r\n      const adjustedDistance = distanceFromLeft - yodelyGuyWidth;\r\n\r\n      setRightLimit(adjustedDistance);\r\n\r\n      const koeficient = !outerRocksSize\r\n        ? 1\r\n        : outerRocksSize.width > 0 && outerRocksSize.width <= 700\r\n        ? 0.85\r\n        : outerRocksSize.width > 700 && outerRocksSize.width <= 800\r\n        ? 0.99\r\n        : outerRocksSize.width > 800 && outerRocksSize.width <= 1080\r\n        ? 1\r\n        : outerRocksSize.width > 1080 && outerRocksSize.width <= 1500\r\n        ? 1.01\r\n        : outerRocksSize.width > 1500 && outerRocksSize.width <= 1600\r\n        ? 1.015\r\n        : outerRocksSize.width > 1600 && outerRocksSize.width <= 1820\r\n        ? 1.016\r\n        : outerRocksSize.width > 1820 && outerRocksSize.width <= 1900\r\n        ? 1.02\r\n        : outerRocksSize.width > 1900 && outerRocksSize.width <= 2400\r\n        ? 1.03\r\n        : outerRocksSize.width > 2400 && outerRocksSize.width <= 2800\r\n        ? 1.035\r\n        : outerRocksSize.width > 2800 && outerRocksSize.width <= 3000\r\n        ? 1.038\r\n        : outerRocksSize.width > 3000 && outerRocksSize.width <= 3200\r\n        ? 1.038\r\n        : outerRocksSize.width > 3200 && outerRocksSize.width <= 4000\r\n        ? 1.045\r\n        : 1.047;\r\n\r\n      const moveForBigScreen = !outerRocksSize ? 0 : 3;\r\n\r\n      const numberOfPoints = 25;\r\n\r\n      const startPoint = startPointContext\r\n        ? startPointContext\r\n        : yodelyGuyRect.left +\r\n          yodelyGuyRect.width / 2 -\r\n          gameBackgroundRect.left -\r\n          moveForBigScreen;\r\n\r\n      !startPointContext && setStartPointContext(startPoint);\r\n\r\n      const pointDistance =\r\n        ((adjustedDistance - startPoint) / numberOfPoints) * koeficient;\r\n      const pointsObject: { [key: number]: number } = {};\r\n\r\n      for (let i = 0; i <= numberOfPoints; i++) {\r\n        pointsObject[i] = startPoint + i * pointDistance + i;\r\n      }\r\n\r\n      setPoints({ ...pointsObject, 25: pointsObject[25] - 5 });\r\n    }\r\n  }, [\r\n    rulerElement,\r\n    gameBackgroundElement,\r\n    yodelyGuyElement,\r\n    isRendered,\r\n    isMainBgLoaded,\r\n    isGameContainerLoaded,\r\n    outerRocksSize,\r\n    startPointContext,\r\n  ]);\r\n\r\n  const updateDimensions = () => {\r\n    const element = document.getElementById('outer-rocks');\r\n    if (element) {\r\n      const { offsetWidth, offsetHeight } = element;\r\n      setOuterRocksSize({\r\n        width: offsetWidth,\r\n        height: offsetHeight,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateDimensionsBackground = () => {\r\n    const element = document.getElementById('game-background');\r\n    if (element) {\r\n      setGameBackgroundElement(element);\r\n    }\r\n  };\r\n\r\n  const updateDimensionsHeader = () => {\r\n    const element = document.getElementById('heaeder');\r\n    if (element) {\r\n      const { offsetHeight } = element;\r\n      setHeaderHeight(offsetHeight);\r\n    }\r\n  };\r\n\r\n  const updateDimensionsYodelyGuy = () => {\r\n    const element = document.getElementById('yodely-guy');\r\n    if (element) {\r\n      setYodelyGuyElement(element);\r\n    }\r\n  };\r\n\r\n  const updateDimensionsRuler = () => {\r\n    const element = document.getElementById('ruler');\r\n    if (element) {\r\n      setRulerElement(element);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    updateDimensionsBackground();\r\n    updateDimensionsHeader();\r\n    updateDimensionsYodelyGuy();\r\n    updateDimensionsRuler();\r\n\r\n    window.addEventListener('resize', () => {\r\n      updateDimensions();\r\n      updateDimensionsBackground();\r\n      updateDimensionsHeader();\r\n      updateDimensionsYodelyGuy();\r\n      updateDimensionsRuler();\r\n    });\r\n\r\n    const rerender1 = setTimeout(() => {\r\n      updateDimensions();\r\n      updateDimensionsBackground();\r\n      updateDimensionsHeader();\r\n      updateDimensionsYodelyGuy();\r\n      updateDimensionsRuler();\r\n    }, 100);\r\n\r\n    const rerender2 = setTimeout(() => {\r\n      updateDimensions();\r\n      updateDimensionsBackground();\r\n      updateDimensionsHeader();\r\n      updateDimensionsYodelyGuy();\r\n      updateDimensionsRuler();\r\n    }, 500);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', () => {\r\n        updateDimensions();\r\n        updateDimensionsBackground();\r\n        updateDimensionsHeader();\r\n        updateDimensionsYodelyGuy();\r\n        updateDimensionsRuler();\r\n      });\r\n      clearTimeout(rerender1);\r\n      clearTimeout(rerender2);\r\n    };\r\n  }, []);\r\n\r\n  const fallAnimation = falling\r\n    ? {\r\n        animation: `fall ${\r\n          Math.abs(positionY - startPositionY) / 100\r\n        }s ease-out`,\r\n        transition: 'bottom 1.5s ease-out',\r\n        bottom: `${startPositionY}px`,\r\n      }\r\n    : {};\r\n\r\n  return (\r\n    <div className='relative m-auto w-screen h-screen transition-opacity duration-500 animate-fadeIn'>\r\n      <audio\r\n        ref={yodelAudioRef}\r\n        src={ThePriceIsRightYodelling}\r\n        preload='auto'\r\n      />\r\n      <audio ref={climberStopsMovingAudioRef} src={SingleDing} preload='auto' />\r\n      <audio ref={winningAudioRef} src={WinningDingX10} preload='auto' />\r\n      <audio ref={fallAudioRef} src={ScreamCrash} preload='auto' />\r\n\r\n      <img\r\n        src={OuterRocksCut}\r\n        alt='OuterRocks'\r\n        className='w-full absolute bottom-0 left-0 right-0 m-auto z-40 max-w-screen max-h-[101vh]'\r\n        onLoad={() => setMainBgLoaded(true)}\r\n        id='outer-rocks'\r\n      />\r\n      <img\r\n        src={Header}\r\n        style={\r\n          outerRocksSize\r\n            ? {\r\n                maxWidth:\r\n                  outerRocksSize.width > 1230\r\n                    ? 1100\r\n                    : outerRocksSize.width > 1700\r\n                    ? 1350\r\n                    : outerRocksSize.width - 70,\r\n                bottom:\r\n                  outerRocksSize.height <= 0 ||\r\n                  outerRocksSize.height === undefined ||\r\n                  !headerHeight\r\n                    ? 'auto'\r\n                    : outerRocksSize.height - headerHeight + 7,\r\n                opacity:\r\n                  outerRocksSize.height === undefined || !isMainBgLoaded\r\n                    ? '0'\r\n                    : '1',\r\n              }\r\n            : {}\r\n        }\r\n        alt='Header'\r\n        className='w-full h-auto absolute left-0 right-[20px] m-auto z-50 bottom-[365px] max-w-[1400px] animate-fadeIn'\r\n        id='heaeder'\r\n      />\r\n      <img\r\n        src={\r\n          outerRocksSize && outerRocksSize.width > 1230\r\n            ? GameBackgroundWide\r\n            : GameBackground\r\n        }\r\n        alt='GameBackground'\r\n        id='game-background'\r\n        className='w-[88%] min-[1115px]:w-[85%] min-[1230px]:w-[100%] min-[1600px]:w-[90%] min-[1900px]:w-[100%] min-[1230px]:-mb-[45px] absolute bottom-0 left-0 right-0 m-auto z-20'\r\n        onLoad={() => setIsRendered(true)}\r\n      />\r\n      <div\r\n        className='absolute bottom-0 left-0 right-0 m-auto w-full h-full min-[1230px]:-mb-[45px]'\r\n        style={{\r\n          maxWidth: !!gameBackgroundElement?.offsetWidth\r\n            ? gameBackgroundElement.offsetWidth\r\n            : 'auto',\r\n          maxHeight: !!gameBackgroundElement?.offsetHeight\r\n            ? gameBackgroundElement.offsetHeight\r\n            : 'auto',\r\n        }}\r\n        onLoad={() => setGameContainerLoaded(true)}\r\n      >\r\n        <img\r\n          src={YellowRulerRotate}\r\n          id='ruler'\r\n          alt='Ruler'\r\n          style={{\r\n            opacity: isGameContainerLoaded && isMainBgLoaded ? '1' : '0',\r\n          }}\r\n          className={`h-full absolute ${\r\n            outerRocksSize && outerRocksSize.width > 1230\r\n              ? ' w-[45%] bottom-[19.2%] left-[28%]'\r\n              : ' w-[65%] bottom-[18.5%] left-[20%]'\r\n          } m-auto z-30 object-contain`}\r\n        />\r\n        <img\r\n          src={YodelyGuy}\r\n          alt='YodelyGuy'\r\n          id='yodely-guy'\r\n          className={`absolute yodely-guy z-[100] ${falling ? 'fall' : ''}\r\n          ${\r\n            outerRocksSize && outerRocksSize.width > 1230\r\n              ? ' w-[4%] bottom-[45.7%] left-[27.5%] min-[1900px]:w-[4.3%] min-[1900px]:left-[27.43%]'\r\n              : ' w-[5.5%] bottom-[43.3%] left-[19.4%]'\r\n          }`}\r\n          style={\r\n            (isGameStarted && positionX !== 0 && positionY !== 0) ||\r\n            (savedPositionX && savedPositionY)\r\n              ? {\r\n                  opacity: isGameContainerLoaded && isMainBgLoaded ? '1' : '0',\r\n                  left: `${positionX}px`,\r\n                  bottom: `${positionY}px`,\r\n                  ...fallAnimation,\r\n                }\r\n              : {}\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <div className='absolute bottom-[10px] min-[800px]:bottom-[16px] left-[57px] w-[36px] min-[800px]:w-[50px] min-[1200px]:w-[70px] h-[22px] min-[800px]:h-[35px] min-[1200px]:h-[40px] text-[14px] min-[800px]:text-[24px] min-[1200px]:text-[32px] bg-[#e3e3e3] text-[#333] font-bold rounded-[5px] z-40 flex items-center justify-center'>\r\n        {remainingMoves}\r\n      </div>\r\n      <div className='absolute bottom-[10px] min-[800px]:bottom-[16px] right-[57px] z-40 flex items-center justify-center'>\r\n        <button\r\n          className='w-fit h-[22px] min-[800px]:h-[35px] min-[1200px]:h-[43px] text-[14px] min-[800px]:text-[24px] min-[1200px]:text-[28px] px-1 min-[800px]:px-[8px] min-[1200px]:px-[12px] bg-[#56639d] hover:bg-[#56639d]/70 active:bg-[#56639d]/50 text-[#fff] font-bold rounded-[5px] uppercase transition'\r\n          onClick={() => {\r\n            setSavesPositionX(positionX);\r\n            setSavesPositionY(positionY);\r\n            navigate('/products');\r\n          }}\r\n        >\r\n          products\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameScreen;\r\n","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\nexport interface ProductType {\r\n  imgSrc: string;\r\n  productPrice: string;\r\n  productName: string;\r\n  priceOpened: boolean;\r\n  nameOpened: boolean;\r\n}\r\n\r\nexport interface ProductsState {\r\n  product1: ProductType;\r\n  product2: ProductType;\r\n  product3: ProductType;\r\n}\r\n\r\ninterface ProductsContextProps {\r\n  products: ProductsState;\r\n  setProduct: (key: keyof ProductsState, value: ProductType) => void;\r\n  resetProducts: () => void;\r\n}\r\n\r\nconst initialProductsValues: ProductsState = {\r\n  product1: {\r\n    imgSrc: '',\r\n    productPrice: '',\r\n    productName: '',\r\n    priceOpened: false,\r\n    nameOpened: false,\r\n  },\r\n  product2: {\r\n    imgSrc: '',\r\n    productPrice: '',\r\n    productName: '',\r\n    priceOpened: false,\r\n    nameOpened: false,\r\n  },\r\n  product3: {\r\n    imgSrc: '',\r\n    productPrice: '',\r\n    productName: '',\r\n    priceOpened: false,\r\n    nameOpened: false,\r\n  },\r\n};\r\n\r\nconst ProductsContext = createContext<ProductsContextProps | undefined>(\r\n  undefined,\r\n);\r\n\r\nexport const ProductsProvider: React.FC<{ children: ReactNode }> = ({\r\n  children,\r\n}) => {\r\n  const [products, setProducts] = useState<ProductsState>(\r\n    initialProductsValues,\r\n  );\r\n\r\n  const setProduct = (key: keyof ProductsState, value: ProductType) => {\r\n    setProducts((prev) => ({\r\n      ...prev,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const resetProducts = () => {\r\n    setProducts((prev) => ({\r\n      ...prev,\r\n      product1: { ...prev.product1, nameOpened: false, priceOpened: false },\r\n      product2: { ...prev.product2, nameOpened: false, priceOpened: false },\r\n      product3: { ...prev.product3, nameOpened: false, priceOpened: false },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <ProductsContext.Provider value={{ products, setProduct, resetProducts }}>\r\n      {children}\r\n    </ProductsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProducts = (): ProductsContextProps => {\r\n  const context = useContext(ProductsContext);\r\n  if (context === undefined) {\r\n    throw new Error('useProducts must be used within a ProductsProvider');\r\n  }\r\n  return context;\r\n};\r\n","var _path, _path2, _g, _path3, _path4, _g2, _path5, _path6, _g3, _path7, _path8, _g4, _g5, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgProductItem(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 315,\n    height: 454,\n    viewBox: \"0 0 315 454\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_d_42_3399)\"\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.7746 25.5613L16.4636 415.67C16.732 417.441 18.8583 429.361 31.9877 435.658C38.0364 438.56 44.0024 439.118 47.4293 439.2C119.579 440.659 191.709 442.119 263.859 443.578C267.905 442.693 273.479 441.004 279.032 437.675C291.707 430.099 295.443 419.343 296.496 415.67C292.553 286.77 288.59 157.871 284.647 28.972L34.7746 25.5449V25.5613Z\",\n    fill: \"#4C4030\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_42_3399\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 16,\n    y: 25,\n    width: 281,\n    height: 419\n  }, _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.7749 25.5613L16.4639 415.67C16.7322 417.441 18.8585 429.361 31.988 435.658C38.0366 438.56 44.0027 439.118 47.4295 439.2C119.579 440.659 191.709 442.119 263.859 443.578C267.905 442.693 273.479 441.004 279.032 437.675C291.707 430.099 295.444 419.343 296.497 415.67C292.554 286.77 288.59 157.871 284.647 28.972L34.7749 25.5449V25.5613Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M230.799 19.3613H196.323V452.25H230.799V19.3613Z\",\n    fill: \"#6B594A\",\n    fillOpacity: 0.5\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.79,\n    filter: \"url(#filter1_d_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.288 13.8262L193.047 448.962\",\n    stroke: \"black\",\n    strokeWidth: 0.1,\n    strokeMiterlimit: 10\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.34\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.566 297.084C233.566 297.084 233.566 297.166 233.566 297.215C233.608 297.314 233.649 297.413 233.669 297.511L233.566 297.084Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.154 320.055C233.154 320.055 233.154 320.153 233.154 320.203C233.174 320.203 233.194 320.203 233.154 320.055Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.434 112.238C234.434 112.238 234.434 112.304 234.434 112.337C234.434 112.255 234.434 112.172 234.454 112.09V112.238H234.434Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.495 112.712C234.454 113.221 234.433 112.565 234.433 112.352C234.371 112.909 234.371 113.467 234.392 114.04C234.454 114.04 234.454 112.975 234.495 112.712Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.661 47.9591L234.764 48.0911C234.723 47.9756 234.702 47.9426 234.661 47.9591Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.669 297.51L233.71 297.674C233.71 297.674 233.689 297.559 233.669 297.51Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.926 341.256C232.926 341.256 232.864 341.305 232.843 341.371C232.843 341.404 232.843 341.421 232.843 341.437L232.926 341.272V341.256Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.266 370.364C232.266 370.364 232.287 370.462 232.307 370.462C232.349 369.97 232.37 368.658 232.37 366.969L232.245 366.871V370.364H232.266Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.148 402.174L229.416 399.075C229.458 409.028 229.169 413.684 229.313 422.195L229.272 421.719C229.21 422.965 229.767 423.67 228.983 437.362H228.962C228.962 437.838 229.004 437.838 228.942 438.789L229.107 436.428C229.169 437.854 229.272 439.084 229.272 440.986C229.251 441.38 229.189 441.527 229.148 441.56V446.2L228.983 447.627C229.066 449.053 229.396 448.398 229.189 452.202C229.437 450.775 229.313 454.087 229.437 453.612C229.416 453.809 229.355 454.235 229.313 454.596C229.313 456.859 229.355 461.106 229.478 462.155C229.478 462.155 230.036 453.333 230.304 450.956C230.222 454.137 230.325 451.792 230.407 451.169L230.345 450.956C230.407 449.053 230.573 449.054 230.614 448.102C230.614 448.102 230.593 448.135 230.573 448.152V448.266C230.573 448.348 230.552 448.299 230.531 448.201C230.49 448.217 230.469 448.135 230.49 447.611V447.709C230.49 446.922 230.531 445.544 230.531 444.938H230.655C230.428 443.511 231.089 435.444 231.109 433.542C231.274 431.64 231.109 429.278 231.192 426.901C231.254 423.113 231.378 425.015 231.501 423.113C231.605 420.735 231.357 423.588 231.357 422.637L231.543 419.801C231.543 421.457 231.625 420.555 231.687 420.26C231.729 417.8 231.976 413.93 231.749 413.16C231.894 409.848 231.997 409.831 232.018 408.405C231.976 408.88 231.914 409.831 231.873 409.831C231.997 408.503 231.852 409.192 231.832 409.733C231.749 407.699 232.369 399.222 232.1 398.796H232.141C231.935 398.32 231.749 399.074 231.646 397.664L231.749 396.713L231.667 395.287C231.749 394.336 231.79 394.795 231.811 394.795C231.729 392.483 231.873 389.252 231.914 386.432L231.336 389.4C231.481 387.039 231.77 382.759 231.605 382.284L231.811 380.857C232.203 376.118 231.687 377.545 231.811 375.643L232.038 373.265V375.643C232.141 373.265 232.203 372.314 232.348 370.428V370.412C232.348 370.543 232.348 370.625 232.307 370.642V370.314C232.203 370.018 232.141 368.789 232.162 367.116C232.203 364.739 232.079 362.886 232.307 359.098L232.1 358.147L232.245 355.294H232.41C232.389 358.081 232.41 363.328 232.389 366.919L232.472 366.985C232.472 364.853 232.43 362.443 232.472 361.033C232.513 360.344 232.699 358.59 232.802 359.869L232.658 358.557C232.699 351.457 232.678 351.424 232.926 344.012L232.843 344.652C232.802 343.176 232.761 341.717 232.905 341.307C232.967 336.863 233.112 332.255 233.339 329.37L233.153 328.73C233.153 327.795 233.483 326.385 233.215 325.926L233.153 323.926C233.174 322.647 233.07 321.86 233.194 320.4C233.194 320.318 233.194 320.22 233.215 320.121C233.318 317.219 233.05 320.154 233.174 316.826C233.318 315.76 232.947 315.645 232.988 314.022L233.277 312.398C233.463 309.463 233.174 308.955 233.215 304.708C233.339 302.658 233.566 301.674 233.772 303.035C233.525 301.166 233.607 302.183 233.504 299.723C233.607 299.346 233.628 299.608 233.731 300.149C233.876 297.952 233.648 298.805 233.669 297.149C233.483 296.673 233.174 296.116 233.153 295.575L233.091 296.214C233.008 294.46 232.967 292.558 233.091 290.524L233.194 290.606L233.153 288.442L233.277 288.311V285.212L233.215 285.638C233.215 284.916 233.174 282.522 233.256 281.161L233.318 281.211C233.566 277.374 233.318 274.193 233.318 269.7L233.463 270.29C233.607 268.749 233.236 269.864 233.339 268.044L233.525 267.945C233.297 266.338 233.587 265.863 233.69 264.764L233.463 265.289L233.525 263.206C233.628 260.911 233.834 261.796 233.937 262.141L233.772 260.566L233.979 260.255C233.752 259.107 234.02 259.107 233.917 257.107C233.999 256.943 234.041 257.451 234.082 256.762L233.814 253.45L233.917 255.45L233.628 255.204C233.421 253.122 233.69 252.384 233.628 250.908L233.71 251.925C233.648 249.498 233.793 249.367 233.855 248.006C233.793 248.432 233.71 249.072 233.669 248.104C233.669 247.383 233.772 247.711 233.814 247.039C233.607 246.875 233.525 245.137 233.628 243.562C233.648 243.579 233.69 243.612 233.71 243.726C233.69 243.316 233.628 243.12 233.69 242.415L233.917 242.825L233.71 241.48C233.772 240.578 233.628 239.266 233.772 239.397L233.814 239.906L233.917 233.101L234.103 233.003C233.855 232.33 234.226 229.297 233.917 229.526C234.082 228.247 233.834 224.476 234.165 225.23C234.226 220.77 233.917 218.343 234.123 212.916C234.433 210.981 234.371 205.685 234.433 202.192C234.371 195.371 234.288 190.976 234.247 184.007C234.681 179.826 234.185 173.562 234.454 169.053L234.309 167.823C234.598 164.822 234.309 160.248 234.598 156.05C234.536 155.017 234.515 154.476 234.515 154.246C234.515 154.443 234.474 154.722 234.371 154.82C234.454 153.623 234.371 151.196 234.577 151.36V151.672C234.804 151.852 234.536 148.032 234.722 146.687L234.495 147.425L234.557 145.146L234.598 145.752C234.185 135.881 234.908 131.421 234.536 122.14C234.763 123.37 234.433 120.304 234.681 120.189C235.032 117.844 234.639 115.86 234.577 113.942C234.577 113.942 234.557 113.925 234.536 113.81L234.598 110.465C234.908 112.466 234.35 108.055 234.598 109.891C234.908 101.152 234.743 89.7556 234.928 79.6385L234.846 80.0812C234.887 77.5232 234.804 74.3257 234.949 72.3744C235.093 70.4232 234.763 68.1112 234.763 67.3569C234.639 65.2252 234.928 63.2903 234.908 64.1922C234.887 61.913 234.598 59.7649 234.743 56.6002C235.032 55.518 234.536 47.9589 234.846 47.8769V47.8441C235.073 43.7939 234.722 39.957 234.949 35.5953C234.949 35.5953 234.97 35.6773 234.99 35.8248L234.103 26.9375L233.029 29.4627L232.121 37.153V58.0268L231.687 74.6865L231.501 115.237L231.708 118.139C231.233 126.108 231.646 136.324 231.274 144.9L231.481 145.08C231.481 147.507 231.357 147.343 231.316 147.933C231.192 170.447 231.316 193.616 230.882 213.867C230.738 215.818 230.758 221.754 230.614 223.295C230.82 229.871 230.758 236.839 230.696 243.431V243.185V246.284C230.696 246.416 230.655 246.432 230.634 246.334C230.8 249.826 230.573 255.352 230.469 259.632V259.386C230.222 284.392 230.428 307.594 229.974 332.387C229.561 343.914 229.912 357.327 229.54 370.543C229.313 372.97 229.272 399.73 229.355 402.092L229.148 402.174Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.127 441.56V441.461C229.127 441.461 229.067 441.626 229.127 441.56Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.893 386.3C231.893 386.3 231.893 386.415 231.893 386.48L232.018 385.824L231.893 386.3Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.708 421.702C231.748 420.112 231.708 420.03 231.708 420.259C231.708 420.833 231.708 421.341 231.708 421.702Z\",\n    fill: \"#202020\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.8576 401.473C36.9608 401.965 36.3002 402.375 36.0112 402.178C36.7544 403.195 35.8667 403.195 37.3531 403.359C38.0756 404.015 37.0228 404.671 36.4241 403.933L37.2705 405.786L37.5595 404.687C38.7981 405.015 37.1053 406.442 38.5504 406.802L38.5091 404.818L38.922 404.917C38.4885 404.457 38.7156 403.588 38.922 403.277C39.1284 403.326 39.4587 403.31 39.4794 403.654C39.6652 401.26 37.3118 402.965 36.9815 400.965C37.0021 401.096 36.9815 401.244 36.8576 401.457V401.473Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.997 399.506L38.4694 398.62L38.9235 397.226C38.3868 397.193 37.9946 396.16 37.4785 396.833C37.561 396.964 37.7055 397.243 37.6436 397.456C36.4876 397.259 37.1275 395.57 35.9302 395.947C36.1985 397.079 35.9302 397.243 36.8591 397.948C36.7146 398.964 36.405 399.702 35.9715 400.161C36.1366 400.473 36.8591 400.522 36.983 400.916C36.983 400.834 36.9624 400.752 36.9417 400.653H38.6964C38.3455 400.325 38.5313 400.03 38.5106 399.67L40.4924 401.358C42.1646 400.867 41.2563 399.243 41.9788 398.62C40.4718 399.374 41.2769 397.964 39.997 399.489V399.506Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.6386 276.804C42.6386 276.443 42.267 276.312 42.0605 276.247L41.5444 280.198C42.0192 280.116 42.7418 279.034 42.9276 279.821C43.4849 279.526 43.1959 278.46 42.5973 278.247L43.2579 278.591C42.494 277.607 44.3313 277.132 44.7855 277.771V277.689L41.6889 274.869C41.3586 275.771 42.7831 275.689 42.6592 276.804H42.6386Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.9368 195.752C49.1226 196.26 49.3084 196.309 49.4735 196.244C49.329 196.064 49.1845 195.9 48.9368 195.752Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.9466 274.212L39.9763 273.326C40.224 273.671 40.575 273.982 40.9466 274.212Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.6353 281.135C56.6353 281.135 56.7386 281.152 56.8211 281.135L56.3257 280.725C56.4289 280.873 56.5321 281.004 56.6353 281.119V281.135Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.0664 256.062C39.0664 255.98 39.0256 255.897 39.0256 255.799C39.0256 255.897 39.046 255.98 39.0664 256.062Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.2174 292.498L60.4536 290.628C60.9077 290.907 60.8871 290.038 61.4032 290.464C61.3412 290.317 61.238 289.677 60.9697 289.825V290.186C59.6485 289.12 59.0085 289.628 58.1621 287.988C57.1712 288.874 57.8731 289.366 58.4511 289.923C58.5337 290.104 58.5543 290.251 58.575 290.399L60.3503 292.055L61.2174 292.481V292.498Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.1839 220.447L57.7297 220.365C57.9568 220.464 58.1633 220.842 58.1839 220.447Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.8347 274.574C41.5663 274.525 41.2567 274.394 40.947 274.197L41.6696 274.853C41.6902 274.771 41.7728 274.673 41.8347 274.558V274.574Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.7659 276.18V277.673L45.4265 278.279C45.22 277.689 45.1168 277.017 44.7659 276.164V276.18Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.973 258.324C38.1175 255.274 39.5832 259.193 40.1612 257.815C40.0786 256.963 39.2942 256.602 39.0877 256.061C39.5213 258.52 36.4866 255.552 36.6311 258.012C35.2274 257.569 35.2686 256.159 35.7228 255.356C37.2092 254.519 36.6724 256.241 38.0143 256.536C37.8904 255.552 37.6014 255.7 36.8582 255.241C37.333 253.732 35.4338 251.978 37.4775 251.191C37.2711 250.059 36.5898 250.092 35.9292 249.42C34.4429 249.207 34.9796 251.01 33.7616 251.338C33.9062 251.256 34.1745 251.109 34.381 251.174L33.9681 252.109C34.5874 251.24 35.4544 252.322 35.5164 252.83C35.5164 253.191 35.5164 253.88 35.1035 253.765L34.8351 253.208C34.2984 253.863 35.7847 254.798 34.8971 255.454C34.5667 255.454 34.4222 255.192 34.2158 255.126C35.1654 256.012 35.0209 256.782 35.5989 258.045L34.1952 257.241C35.7228 258.324 35.0003 260.472 33.9474 261.915C34.2158 261.767 34.4429 261.472 34.6906 261.685C34.9383 262.603 33.8442 263.194 33.101 262.718C34.2365 263.685 31.656 265.932 33.1217 267.244C35.4338 269.261 37.7046 271.277 39.9548 273.327C39.7896 273.114 39.6658 272.868 39.6451 272.638C41.0076 272.245 40.9044 271.966 41.9985 272.95C41.4205 272.032 40.3264 272.278 40.4709 270.982C41.0489 271.54 42.5352 271.802 42.8655 270.572C41.9366 267.375 38.4684 265.046 36.9201 262.046C37.9317 262.013 37.9317 259.75 38.3033 258.668C39.3355 259.16 39.5419 259.996 39.6658 260.849C39.7896 260.324 39.9341 259.422 40.058 258.75L37.973 258.324Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.4922 265.704C40.4922 265.704 40.658 265.555 40.6995 265.473C40.6166 265.506 40.5336 265.572 40.4922 265.704Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.5833 261.114C39.5833 261.114 39.645 261.115 39.6862 261.131L39.645 260.852C39.6244 260.934 39.6038 261.049 39.5833 261.098V261.114Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.188 274.049C44.4564 274.262 44.5183 274.393 44.766 274.606C44.6834 274.492 44.6215 274.344 44.5596 274.196C44.4357 274.049 44.3119 273.983 44.188 274.049Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.3489 274.508L41.9566 274.377C41.9566 274.377 41.8741 274.508 41.8328 274.574C42.0598 274.607 42.2456 274.607 42.3489 274.508Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.2339 247.24L48.0481 246.928C48.0481 247.109 48.1307 247.191 48.2339 247.24Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.037 255.061C40.037 256.127 41.5233 255.291 41.3788 256.783L41.5233 256.357C42.0601 257.472 41.5233 259.358 41.4201 260.637C40.8421 260.456 40.5944 261.358 39.686 261.145C39.7893 262.03 39.8925 262.916 40.8008 263.44C40.4292 263.965 41.1724 264.851 40.6769 265.507C41.2756 265.261 42.4523 266.638 41.9775 264.9C42.0394 265.047 42.1839 264.965 42.2459 265.113C43.1542 264.096 41.8743 263.555 41.9775 262.621C42.5968 262.112 42.762 263.604 43.051 263.096C42.6794 261.899 44.1657 259.489 42.0601 259.423C42.0188 258.57 42.4936 258.489 42.9065 258.259C40.8627 256.767 44.3515 253.356 41.5233 253.176C41.5853 253.668 41.4408 254.455 41.9981 255.225L40.037 255.094V255.061Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.2903 272.246C44.2903 272.246 44.3104 272.098 44.3505 272.049C44.3304 272.115 44.3104 272.18 44.2903 272.246Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.1955 284.921L32.4201 284.298C32.3582 281.74 32.9775 280.871 33.2252 278.674C33.4936 278.526 33.6174 278.805 33.6794 278.952C33.6794 277.378 34.4019 275.099 33.6794 273.902C33.7619 273.41 34.5258 272.164 35.0006 272.705C34.8767 272.459 34.7528 272.164 34.8561 271.885C35.5373 271.869 34.9593 272.525 35.496 272.574C35.5786 272.361 35.7025 272.279 35.496 272.213C36.0121 272.623 37.8081 272.016 37.5191 273.738C35.8676 274.263 37.5191 272.525 35.7231 272.771C35.6405 273.344 36.3011 273.328 36.5076 273.394C36.3631 274.115 35.9295 274.066 35.558 273.984C36.0534 274.312 35.1864 275.148 35.9295 275.607C35.8676 277.034 34.6496 275.41 34.5464 276.345L36.2186 277.034L35.6818 278.542C35.9915 280.822 38.7371 278.493 39.3564 281.117C38.4894 280.707 36.8379 281.576 36.3011 282.724C36.3424 282.002 35.3928 280.608 36.0328 279.739C34.4845 280.904 36.1153 277.952 34.4638 278.477C35.1038 279.182 35.0625 280.248 34.5464 281.035L34.4225 280.756C34.1129 281.609 35.847 282.445 34.9799 283.593C34.9386 284.199 34.4638 284.035 34.0716 283.904C34.2574 284.445 34.5258 284.921 34.1335 284.888L34.1955 284.921ZM34.0303 283.576L34.3193 282.789C34.0097 282.953 33.9684 283.248 34.0303 283.576Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.41 388.24C40.41 388.24 40.3063 388.405 40.2441 388.488C40.3271 388.438 40.3685 388.339 40.41 388.24Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.3195 316.584L50.1948 317.043C50.2779 316.863 50.3195 316.715 50.3195 316.584Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.3845 327.668L54.6942 328.389C54.6942 328.111 54.591 327.898 54.3845 327.668Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.9467 382.665C40.9467 382.665 40.8847 382.566 40.864 382.533L40.926 382.665H40.9467Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.1808 348.328C47.0157 348.427 46.8712 348.525 46.7473 348.673C46.9125 348.673 47.057 348.542 47.1808 348.328Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.3446 327.537C54.3446 327.537 54.3239 327.57 54.3032 327.57L54.4066 327.669L54.3446 327.537Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.1203 312.453C56.0787 312.338 56.0579 312.256 55.9956 312.141C55.9956 312.289 56.0579 312.387 56.1203 312.453Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M51.1039 312.617C51.0831 312.502 51.0416 312.387 50.9792 312.305L51.1039 312.617Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.0292 296.662L56.8838 296.006C56.8838 296.317 56.9253 296.514 57.0292 296.662Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.5076 311.059C52.5076 311.059 52.3625 310.976 52.2795 310.943C52.321 311.042 52.4246 311.092 52.5076 311.059Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.8992 392.029V391.996H34.6919L34.8992 392.029Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.3535 393.67C37.3951 393.85 37.4366 394.047 37.4782 394.227C37.4782 394.031 37.4574 393.817 37.3535 393.67Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.1355 357.234C42.8671 357.382 42.5162 357.743 42.2478 357.546C42.5781 357.89 43.4451 357.939 43.1355 357.234Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.2041 388.455C24.4312 388.57 24.5963 388.701 24.7821 388.833C24.555 388.586 24.3486 388.356 24.2041 388.455Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.761 388.846C24.8848 388.977 25.0087 389.109 25.1326 389.207C25.0294 389.076 24.9055 388.961 24.761 388.846Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.2404 351.758C29.3647 351.725 29.4684 351.675 29.5098 351.576C29.2611 351.576 29.1989 351.642 29.2404 351.758Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.1681 394.651C37.581 394.765 38.3861 397.209 38.6751 395.192C39.9757 395.307 39.2118 396.504 39.5215 397.061C39.8518 396.684 40.3472 397.274 40.822 397.176C40.6775 396.897 40.306 396.569 40.4298 396.143C41.0285 395.962 41.4001 396.635 41.173 397.159C41.8749 396.536 42.1639 398.012 42.7213 397.11C42.3497 395.159 41.8955 393.765 40.1202 392.322C40.3266 393.454 40.6982 394.7 40.1202 395.602L39.0054 395.175C40.0376 394.175 39.3151 393.519 39.5008 392.503C39.2325 393.257 39.0054 394.011 38.7783 394.765C37.8081 395.798 37.6223 395.077 37.4365 394.224C37.4158 394.438 37.3333 394.618 37.1475 394.667L37.1681 394.651Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.4029 392.75L27.3616 392.783C27.3616 392.783 27.4236 392.865 27.4649 392.882L27.4029 392.75Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.4633 294.578L34.071 294.348C34.2362 294.528 34.3601 294.594 34.4633 294.578Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.6173 299.467C33.6173 299.467 33.5553 299.45 33.5347 299.434C33.576 299.45 33.5967 299.45 33.6173 299.467Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.4399 303.139C57.4399 303.139 57.5436 303.139 57.6058 303.123C57.5643 303.007 57.5021 303.057 57.4399 303.139Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.72 299.465C33.72 299.465 33.658 299.465 33.6167 299.465C33.658 299.465 33.6787 299.481 33.72 299.465Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.0308 323.669C34.0308 323.669 34.2372 323.62 34.4436 323.505C34.3404 323.456 34.2166 323.489 34.0308 323.669Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.4243 319.142C36.4243 319.142 36.5078 319.109 36.5704 319.076L36.4243 319.142Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.3153 356.544C48.3559 356.314 48.3559 356.134 48.3153 355.986C48.2747 356.15 48.2544 356.331 48.3153 356.544Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.5343 299.416C33.4311 299.35 33.3072 299.268 33.1833 299.137C33.3279 299.285 33.4311 299.367 33.5343 299.416Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.5516 331.407L38.4479 331.242L38.3857 331.325L38.5516 331.407Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.3541 333.767C37.2303 333.669 37.1064 333.619 37.0032 333.57C37.3335 334.489 36.5903 336.046 37.7464 336.358C37.7464 336.063 38.696 334.587 39.3566 334.915C39.1501 334.275 40.1204 333.456 39.9759 333.111C39.1708 334.046 38.9643 333.111 38.6547 332.406C39.0882 331.832 39.5836 332.619 39.8933 332.111L39.9759 330.668L39.6249 331.898L38.5515 331.406C38.5515 331.406 38.6134 331.488 38.634 331.537C38.8405 333.685 36.9412 331.537 37.3541 333.767Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.0037 333.572C36.9624 333.441 36.8798 333.31 36.7766 333.211C36.7766 333.408 36.8592 333.507 37.0037 333.572Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.844 341.982C33.8648 342.097 33.9063 342.213 33.9687 342.377C33.9479 342.295 33.8856 342.13 33.844 341.982Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.1154 279.33C44.7645 279.33 43.9181 280.494 44.7851 280.56C44.9296 280.199 45.0741 279.855 45.2186 279.494L45.1154 279.346V279.33Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.8271 365.808C35.8684 365.677 35.889 365.546 35.9096 365.398C35.8684 365.366 35.8271 365.333 35.7858 365.316C35.6413 365.382 35.7858 365.677 35.8477 365.808H35.8271Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.7074 335.327C39.6042 335.097 39.4803 334.982 39.3564 334.916C39.3977 335.064 39.501 335.212 39.7074 335.327Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.7207 365.725C33.4524 365.872 33.0395 366.102 32.6886 366.118C32.6473 366.479 33.0808 366.758 33.2046 367.135C33.1221 366.708 33.2459 366.249 33.7001 365.725H33.7207Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.5712 278.64C45.5093 278.526 45.468 278.411 45.4267 278.296L45.6331 278.493L46.0253 277.673C45.9841 277.575 45.9428 277.46 45.9428 277.312C45.9634 277.361 46.046 277.427 46.1492 277.46L46.2937 277.197C45.468 276.443 45.0551 274.721 44.5803 274.197C44.2706 273.524 44.1674 272.737 44.3119 272.245C44.2293 272.688 44.3119 273.311 44.8486 273.18C45.4886 272.311 47.0782 271.983 45.9841 270.294L45.8808 271.229L44.188 268.982C45.0964 268.31 45.0344 270.097 45.695 270.458C44.9312 268.753 47.6562 267.605 46.0666 266.72C47.0782 266.687 48.771 266.654 48.8123 265.572C47.5736 266.26 48.1517 264.867 46.8511 265.408C46.3144 264.998 47.3672 264.244 46.6034 264.129L47.0162 264.26C48.8329 262.555 46.4176 261.768 45.6744 260.931C45.5093 258.718 46.3144 257.767 46.3144 255.979C46.9956 255.963 48.8948 255.602 48.8948 254.881C48.0071 254.487 47.7594 252.847 46.6034 252.618C45.9841 253.864 47.4704 253.716 47.6768 254.504C46.3969 255.061 46.4589 254.487 45.6538 255.307C46.1905 254.635 45.3235 252.11 46.5414 251.404L46.6859 251.683C47.5117 250.503 50.4018 250.437 48.8535 248.289L48.2342 247.272C48.3374 247.322 48.482 247.338 48.5852 247.371C48.8535 245.78 50.1541 246.288 49.2664 244.468C49.3283 244.616 49.4729 244.534 49.5348 244.665C50.2986 243.698 49.0187 242.615 48.8123 241.828C49.8238 241.418 49.7619 241.992 50.4431 242.304C50.9386 240.549 49.3903 238.549 48.2755 237.418L48.9155 236.303C49.2664 236.991 50.2367 237.86 50.856 237.68C50.7115 237.04 50.2367 237.139 50.4844 236.27C51.1037 236.45 51.6611 236.844 52.4043 237.286C53.5603 235.483 50.216 236.778 52.2185 235.581C52.2598 235.007 51.3721 234.63 50.6289 234.548L51.6817 233.531C50.7321 233.384 50.7528 232.088 50.6702 231.236C50.2573 231.121 49.5967 231.875 49.9477 232.22C49.2045 232.138 48.8948 231.219 48.9568 230.645C51.0005 230.498 48.7916 226.858 51.145 227.596C50.567 224.972 50.4844 221.315 49.6999 219.594C50.278 219.036 50.3399 217.888 51.2689 218.577C51.3721 216.478 49.2251 215.396 49.7825 213.33C50.0302 213.166 49.8032 214.265 50.4844 214.199C49.6586 212.838 51.3101 211.723 50.7528 209.624C50.7941 209.985 51.2069 210.083 51.4134 210.132C51.0831 210.165 50.7115 209.28 50.3812 208.739C50.5463 208.427 50.6289 209.149 50.8766 208.968C51.3514 206.935 50.8766 205.131 50.3193 203.36C49.6587 201.589 48.8948 199.835 48.8329 197.818C48.8742 198.966 50.2367 199.359 50.7734 199.359L50.7321 198.228C50.0509 197.818 49.9889 196.965 49.4522 196.277C49.6999 196.178 49.9477 195.818 50.278 196.162C51.4959 193.866 47.6356 192.784 48.1723 190.029L51.0418 193.21L51.9295 192.341L53.23 193.751C53.9113 192.833 52.1772 192.161 53.1681 192.013C53.4571 192.177 53.3952 192.636 53.9525 192.62C54.3035 191.751 53.5397 191.735 53.3126 191.112C55.4595 192.686 55.6247 195.965 56.2234 197.72C56.4092 197.998 55.7073 197.49 55.5008 197.457C55.6041 198.179 54.9847 198.621 55.3976 199.523C56.3059 200.064 56.0169 199.081 56.0789 198.621C56.8427 198.654 56.8014 198.884 56.9459 199.376C55.955 199.507 56.7395 202.131 55.5628 202.803C55.955 205.459 58.1845 202.327 57.7923 204.934L56.6569 205.738C57.5652 207.23 58.3703 209.181 58.1432 210.903L58.102 210.542C57.6065 210.313 57.2968 210.706 57.0491 210.887C56.5743 212.182 57.9781 213.346 56.8427 214.133C58.102 215.609 59.0103 218.085 59.547 219.774C57.9987 220.217 58.329 217.56 57.4001 216.855L57.3588 218.397C57.3588 217.446 56.822 217.068 55.9343 216.495C55.6453 217.839 56.9459 218.282 57.2968 219.561C56.884 219.462 56.6362 219.626 56.595 220.217L57.6065 220.397C57.6065 220.397 57.4413 220.463 57.3794 220.659L57.9162 222.939C58.3703 222.463 59.2374 222.463 59.2786 221.873C58.68 222.07 58.5768 221.578 58.618 220.987C59.258 221.512 59.1961 220.43 59.7328 220.446C59.6709 221.627 59.7534 223.086 60.0012 223.857L59.0722 224.086C58.8038 225.202 59.2786 226.399 58.9896 227.153L58.4942 226.907C58.1639 228.251 58.7213 229.596 57.7717 230.76C58.7626 231.99 59.5264 233.531 60.5792 234.548C61.7352 235.122 58.8451 238.008 60.4347 239.434C60.2902 239.516 59.5883 238.467 59.1754 237.975C58.9277 238.86 60.3728 239.648 59.0929 239.877C59.6502 237.877 58.0813 239.943 57.7923 239.008C57.751 239.959 57.9162 240.959 58.329 241.451C58.4322 239.926 60.0425 242.074 59.5883 240.5C60.5586 241.746 60.8889 243.419 60.3728 244.829C59.836 244.78 59.5677 244.944 59.2786 245.469L60.0218 245.944C59.8154 246.6 59.2167 244.6 58.8038 245.944C60.0218 247.403 57.6271 250.06 60.0631 250.814C58.969 251.814 59.258 248.748 57.8955 250.273C57.0904 249.289 58.2465 248.076 57.0285 247.715C57.2968 248.633 55.9344 247.977 55.8724 248.568L56.533 249.617L56.595 249.404C57.6065 251.158 56.7807 253.815 56.7807 255.979C57.8749 257.898 59.5264 259.275 59.1135 261.472C58.4529 260.767 58.1845 263.243 57.0078 261.768C56.244 262.735 56.884 263.784 57.4207 263.85C57.7097 262.965 57.6271 263.555 57.9987 262.817C58.5974 263.374 58.4322 264.539 57.9368 264.998C58.0194 264.785 57.8749 264.85 57.6684 264.785C57.0904 265.818 58.2671 265.342 58.4323 266.129C57.4826 266.31 57.9781 267.818 57.4207 268.474L58.618 269.605C57.8129 268.982 58.1845 270.556 57.3794 270.655C57.8955 271.442 58.8864 272.147 58.4942 273.229C58.1019 272.737 57.7097 274.18 56.822 274.131C55.7279 275.951 58.7626 277.493 57.2556 279.181C57.0491 279.099 56.533 278.69 56.244 279.198C56.4298 279.641 56.244 280.346 56.244 280.805C56.244 281.034 56.3472 281.166 56.5537 281.198C57.2968 282.035 58.1226 282.51 58.6387 284.068C59.6502 284.051 59.4438 282.756 59.1961 282.166L58.2671 281.608C59.836 281.297 58.1845 280.231 58.7419 279.936C60.3934 280.985 59.5883 283.543 60.4553 285.199C61.983 284.379 62.4784 282.33 62.561 280.526L61.8591 281.264L61.9623 280.313L60.765 281.133C61.0746 280.264 60.9095 279.46 61.0747 278.657C60.9714 279.608 59.5264 279.854 59.8154 279.329C60.9508 278.362 59.3199 278.181 59.5057 277.378C59.3612 277.82 59.258 278.394 58.7419 277.968C60.1663 276.492 59.4438 276 60.9301 274.672C59.2374 274.705 61.0127 272.869 59.6709 272.524L59.4438 273.18L58.618 271.688C60.1457 270.491 59.8567 272.967 61.0747 271.048C61.4669 269.212 59.7122 269.13 59.7535 267.671C60.6824 268.228 61.405 269.441 61.2192 270.606L61.7765 269.933C62.2926 270.36 62.0036 271.967 61.8178 272.77C60.8682 271.344 61.3843 273.36 60.4141 273.885C61.3637 274.082 61.3224 273.213 61.9623 274.279C62.0656 273.328 62.0243 273.196 62.5404 272.016C61.7559 274.574 65.5337 274.623 64.4189 276.837C64.1299 275.754 62.9945 277.083 62.4991 277.165C62.5404 277.673 62.6436 278.69 62.8087 279.116L64.2331 278.87C64.646 280.247 61.6527 280.444 62.8707 282.1C63.6758 282.379 63.3455 280.788 63.4693 281.067C64.0474 283.232 61.7146 283.789 60.4141 285.544C60.8063 285.691 61.694 285.74 62.3339 286.462C61.5288 286.183 61.0334 286.626 60.5379 285.839C60.1044 286.429 60.5998 287.216 60.8269 287.79C61.5082 286.56 61.9417 288.43 62.3959 288.708C62.1481 289.364 61.5907 288.43 61.4256 288.003C61.1159 288.512 59.8154 289.036 60.9921 289.463C60.125 289.397 58.9277 287.757 58.8451 286.741L58.5974 287.397C58.2258 286.888 58.3703 286.823 58.5974 286.167C57.8129 286.757 57.0904 286.609 56.4917 286.413C56.6362 286.347 56.6982 286.478 56.822 286.413C57.1317 285.904 56.9459 285.478 56.4711 285.56C55.377 284.97 55.6247 286.232 54.9847 286.527C55.026 286.806 55.0673 287.085 55.088 287.364L58.4323 290.479C58.68 291.709 57.7097 292.152 57.0078 292.988L57.9781 293.332C57.7097 294.349 57.2556 295.284 56.0789 294.513C56.4298 294.513 56.3679 294.365 56.4504 294.152C56.3266 294.103 56.2234 294.054 56.1614 293.972L55.9963 293.906C56.1614 295.038 56.2647 295.743 56.2853 295.808C55.1086 293.791 54.4686 295.546 52.7346 295.054L53.0236 296.989C53.7668 295.907 53.8906 297.055 54.0764 297.481C53.0649 297.481 53.8493 299.006 53.6016 299.645L53.3952 299.58C52.941 300.154 52.8791 301.236 53.0236 302.023C53.3745 302.023 54.8609 303.154 55.7692 303.728C56.3472 302.466 56.6362 303.269 57.2762 303.236C57.1936 303.368 57.1523 303.613 57.2762 303.646C57.5239 303.859 57.6891 303.433 58.04 303.433C57.7923 301.99 57.8955 300.564 56.5743 299.858C55.8724 300.219 57.0698 300.646 56.5743 301.088C55.7486 300.301 56.0789 299.432 56.2646 298.284L57.173 297.989L56.884 296.776C57.2556 297.301 58.1845 297.104 58.1639 298.334C58.9896 298.252 58.1639 297.104 58.5561 296.382L57.5033 295.89C58.1019 296.104 58.4735 294.513 59.1341 295.726L59.7741 297.678L60.6205 297.235V298.825L60.0838 298.399C60.476 300.99 57.751 298.924 58.68 301.58C59.898 302.498 59.9186 303.368 59.3406 304.876C59.2167 303.728 58.4116 304.663 57.6891 304.171C56.9459 305.253 57.9987 305.745 58.4323 306.401C57.6684 306.614 57.0491 306.762 57.3175 305.762C55.8518 305.483 57.3588 307.122 55.8105 307.073C55.315 310.451 60.3521 310.287 57.7923 314.026L57.1936 313.813C57.5652 316.387 56.595 317.748 56.7188 320.109L54.8402 321.765C54.6544 321.339 53.6635 320.126 52.8171 320.552C54.5512 319.83 54.1383 318.83 55.1499 317.961C54.7577 317.83 54.3861 318.174 54.0971 318.322C54.2003 317.748 54.9641 317.535 54.7989 316.748C54.4686 316.748 53.9319 317.535 53.8493 316.895L55.0054 315.961C54.7577 314.534 52.7552 315.042 53.4777 313.468C54.3035 313.862 55.4802 314.6 55.5834 315.256C55.8931 314.534 55.955 316.305 56.595 315.682C55.4596 314.485 56.595 314.075 55.9963 312.566C56.1408 312.747 56.3885 312.829 56.4298 313.19L57.2968 311.173C56.4504 311.615 56.7395 309.369 55.5834 309.451C54.7577 311.615 55.5421 311.041 54.5099 313.485C54.3654 312.747 53.3745 311.714 52.3836 311.173C52.4249 311.156 52.4662 311.123 52.5075 311.041C51.4547 310.55 51.0831 310.91 49.1426 310.697C50.3399 311.993 49.0806 312.632 49.6587 314.075C50.6908 314.436 51.145 313.435 50.9799 312.73L51.4959 313.993L51.0418 313.714L50.1954 316.699C50.2367 316.125 49.638 315.862 49.2251 315.518C49.1219 315.911 48.771 316.256 48.3994 316.649C49.4316 316.649 50.1541 316.797 50.0715 317.174C49.5141 319.093 48.4407 320.076 47.1607 320.683C47.1607 320.765 47.1814 320.847 47.202 320.913C48.2962 320.683 48.8535 322.487 49.8444 323.192C48.771 323.061 49.0393 324.127 48.3994 324.635C49.5967 325.061 51.3721 324.832 52.4868 324.241C51.5579 322.815 51.4547 323.389 49.9477 322.602L49.2045 320.388L50.1128 320.962C50.7115 319.945 49.5761 318.814 50.856 319.011C51.6198 319.65 50.9592 320.519 51.723 321.159L52.3011 320.503C53.3745 321.864 50.9798 321.011 51.6198 322.585C52.7965 322.142 51.6817 322.733 52.3011 323.438C53.1474 322.995 52.4043 320.781 54.2003 321.421C54.8815 322.274 51.5992 323.799 53.292 325.012L53.0855 324.946C52.6107 326.439 53.581 327.062 54.159 327.701C53.4571 328.275 54.159 329.242 54.1383 329.948L53.6016 329.882L53.6842 330.882C52.7759 330.325 53.8906 329.734 53.87 328.882H52.8584C54.2003 328.029 52.4868 327.209 51.7437 326.373C52.4456 327.554 51.0211 329.439 52.941 329.898L51.8262 330.472L52.1359 330.833C51.2895 331.259 50.1747 330.636 50.1128 329.636C50.4018 329.488 50.5257 329.423 50.7321 329.488C50.3605 328.997 49.638 328.505 50.0302 327.422L50.4638 328.062C50.7528 326.701 50.5463 325.422 49.638 324.848C48.8948 326.783 48.5232 328.718 48.2755 330.587C50.4638 331.358 51.6405 332.128 53.7048 332.62C53.9113 333.899 53.9319 335.621 53.0029 336.621L52.6107 336.49C52.3217 336.998 52.3423 337.49 52.5281 337.917C51.8882 338.425 51.4753 337.425 51.1037 337.785L51.5372 339.638C50.5876 339.442 50.8147 337.933 50.8766 337.212C50.9386 337.359 51.0624 337.638 51.1863 337.572C51.7024 336.785 50.3193 335.08 51.7643 334.85C51.5785 334.424 52.652 335.769 52.941 334.408C53.6016 333.539 52.4043 333.129 52.012 332.997C51.4753 332.932 51.0418 334.358 50.4638 333.801C50.4225 334.522 51.0831 334.867 50.4225 335.736C50.4638 335.031 49.5141 333.965 50.4225 333.67C49.638 332.178 47.0575 332.128 46.8098 332.768C47.6356 332.686 47.4085 335.408 48.7297 333.686C49.638 334.604 49.4109 336.113 49.8857 337.244L49.6793 337.179L49.7206 338.54C49.4729 338.327 49.2871 337.9 48.7503 337.835L49.927 339.819C49.1013 338.687 49.1426 340.393 48.6471 340.835C49.4522 341.114 49.9477 341.885 50.5257 341.245C51.2482 340.524 50.1335 340.753 50.1747 340.032L51.3308 341.163L51.1863 341.229L52.1772 341.934C51.9088 343.295 49.7825 341.114 50.567 342.951L52.0533 342.852C51.5579 344.853 49.5348 347.296 50.0096 348.788C49.2458 348.329 47.9246 348.034 47.0575 348.493C47.3878 347.903 47.5117 346.656 47.5117 345.755C47.8007 345.607 49.0806 347.017 48.6265 347.952C51.0831 347.706 47.5323 345.41 49.9683 345.509C51.1656 343.147 47.9039 343.475 49.6174 341.524C48.5439 341.393 49.1632 340.885 48.2342 340.688C46.3763 341.131 47.9039 343.475 47.0782 344.771C47.0162 344.64 46.8924 344.344 46.7066 344.279C46.2524 345.213 46.4382 345.64 46.7479 346.345L46.8924 346.279C47.7801 347.558 45.9841 346.935 45.406 347.591C45.5299 347.87 45.0757 348.804 45.9015 348.722L44.7041 349.887L45.9221 349.936C45.9015 350.657 45.0757 350.739 45.7157 351.444L46.7892 351.576L47.4085 349.854C47.6356 350.772 48.3994 350.198 48.5026 351.198C47.4704 350.001 47.8007 351.92 46.7685 351.936L47.2846 352.707L47.0162 352.494C46.3763 353.019 47.3259 353.199 47.0988 353.855C47.8007 353.133 48.6471 352.691 48.0071 351.625C48.5026 352.395 48.9774 353.888 48.9774 354.232C49.3283 355.019 48.4407 355.478 48.2342 356.183C47.9659 354.789 44.8899 356.38 46.0253 353.724C46.2318 353.789 46.1492 354.002 46.0253 354.084C47.4498 353.838 46.1699 352.445 45.7157 351.805C44.8899 351.887 44.7867 351.248 44.2087 352.264C44.7661 351.969 45.8396 353.297 45.0757 354.248L43.4036 353.92L43.0114 355.363L42.9494 355.216C41.7934 355.675 42.9494 356.79 42.1856 357.725C42.7017 358.495 41.876 361.234 43.7958 360.184C42.6191 361.004 43.8784 361.89 43.9816 362.89L44.828 361.726C45.8602 363.267 45.1377 362.791 46.9337 364.087C46.4589 364.169 46.046 364.398 45.5712 364.12C45.2202 366.054 44.4358 368.776 45.7363 370.006C45.5299 371.367 43.4862 371.433 44.0848 373.4C44.2913 373.81 45.7157 373.187 45.0964 374.417C44.9519 374.499 43.961 373.122 43.9403 374.532C45.1583 375.614 42.9701 376.844 43.9816 378.221C43.4449 378.877 43.4862 380.091 42.4746 379.779C42.8256 378.697 42.7636 377.139 42.2888 376.877C42.9081 377.073 42.9701 376.139 43.3829 376.975C44.3326 375.368 42.8462 375.86 43.5481 374.417C43.1352 374.286 42.3301 375.106 42.6604 375.45C41.236 375.368 42.2682 372.482 40.4309 373.696C40.1419 375.286 43.0526 375.926 41.4218 377.221C40.6167 376.614 41.4218 375.794 40.018 375.007L39.3368 376.106L40.2864 376.991L40.0799 376.926C38.5729 378.844 41.3392 378.861 41.8966 380.681C42.9701 379.697 44.3326 381.058 45.0138 380.32C45.0964 381.517 44.8487 382.37 43.4242 382.304C42.4333 380.009 41.9172 382.091 40.6786 379.959C40.1419 380.271 38.6349 379.353 38.3871 380.566C39.2955 382.009 39.6051 380.222 39.9561 381.632C39.8322 381.714 39.6877 381.779 39.4813 381.73C40.1625 382.403 39.151 382.452 39.9148 383.272L39.6464 383.075C38.7175 383.977 40.5547 384.157 39.5432 384.928C40.6167 384.649 40.369 385.518 40.9883 386.059C41.4424 385.256 42.9907 384.879 43.032 383.255C42.2062 383.009 41.7314 383.108 41.3805 382.419V383.485C41.2773 383.255 41.0708 383.058 40.9263 382.845L41.4424 381.845C41.9379 383.173 42.8875 382.632 43.6926 383.222C43.2384 384.387 43.8577 384.206 43.5274 384.928C42.3095 384.797 41.2773 387.092 40.369 388.42C40.4309 388.207 40.4309 387.928 40.4722 387.797C39.7703 386.764 39.3987 388.437 39.0684 388.453L39.6258 389.207C39.5432 389.076 39.2748 388.863 39.089 389.175C39.2335 390.158 40.4515 390.158 40.6167 391.142C39.9354 391.192 38.9858 390.322 38.5729 390.913C37.9743 391.093 36.3641 391.7 36.8595 393.028C37.1072 393.126 37.2311 393.471 37.3343 393.864C37.293 393.815 37.2724 393.733 37.2311 393.717L36.4673 394.553C35.3319 393.766 37.0866 393.077 35.9925 392.29L34.8984 392.192C34.9396 391.618 34.5268 390.814 33.99 390.421C33.7423 391.29 34.0107 391.487 34.1552 392.487C33.4533 392.602 32.9991 391.88 32.9166 391.782L33.5359 391.946C34.5268 390.814 32.6275 390.142 32.9372 388.683C32.9991 388.47 33.0611 388.601 33.2675 388.666C32.2972 387.437 33.8455 386.338 32.5243 385.108L33.0817 385.518C32.6688 384.715 31.7192 383.124 30.7902 381.517L30.3567 381.484C30.0884 381.648 30.1503 381.058 30.3567 380.763C29.8819 379.959 29.469 379.189 29.18 378.566C28.891 378.746 28.6433 378.976 28.5607 379.254C29.0355 379.517 28.5194 380.927 29.6755 380.796C28.953 381.419 29.8406 382.517 29.3865 382.976C30.1916 382.14 30.4187 383.649 31.0173 383.829C30.2741 384.091 30.976 385.125 30.0264 384.961C29.7581 385.125 30.7077 384.567 30.1503 384.157C29.3245 383.19 29.242 385.797 28.4781 384.616C29.0355 386.108 28.602 388.01 29.3865 389.552L29.8406 388.732C29.6548 389.388 29.7374 390.978 29.2626 391.077C29.18 390.585 29.2626 389.995 29.0975 389.355C28.0033 389.273 28.9942 390.88 28.313 390.929L29.9645 392.848L30.0884 392.044C30.687 392.569 29.82 394.225 29.6135 395.471C28.1685 394.701 29.6135 393.586 29.1387 392.241C28.6433 391.257 27.6524 392.782 27.3634 391.864C26.9918 392.077 26.9918 392.684 27.3634 392.979L27.0744 393.323C25.7738 392.471 26.2073 390.667 25.1339 389.404C25.2784 389.519 25.4229 389.617 25.5674 389.65C26.166 388.748 26.2073 387.797 25.9183 386.863C25.4642 387.322 25.7325 387.535 25.8564 387.814C25.5261 387.83 25.4435 386.961 25.0926 386.633C24.6384 387.453 24.2875 386.748 24.0191 387.273C23.7301 386.699 23.8746 386.256 24.0604 385.6C24.5971 385.272 24.7416 385.928 25.4229 385.879C25.0719 385.174 26.7028 384.928 26.0009 383.878C25.6087 385.207 24.5765 383.452 24.1636 382.96L24.1017 383.19C23.3585 382.714 23.3378 382.353 24.1017 382.091C24.3907 382.665 24.1017 383.19 24.9274 383.075C24.9274 382.714 24.9274 382.337 24.7003 381.911L25.2577 382.321V380.5C24.5352 380.173 23.5856 379.648 22.574 379.336C23.2346 378.943 22.7805 378.303 22.574 377.877L22.8424 378.09C23.5236 377.336 23.214 375.532 22.5947 375.335C23.214 374.811 26.1454 379.599 25.9802 375.548C26.1248 374.024 24.1017 374.466 23.503 373.564C23.503 373.564 23.7094 373.63 23.8333 373.564C24.0397 372.909 23.2966 372.794 23.0282 372.22C22.6772 372.597 22.6153 373.187 22.8837 373.384C22.0786 373.122 23.1108 371.99 22.4915 371.433C23.7094 372.187 23.1108 370.17 23.7094 370.728C24.6797 369.449 23.8127 367.957 22.925 367.186C24.6384 366.399 22.863 365.579 23.792 364.169C23.7094 364.398 23.8952 364.808 23.6888 365.12C24.5971 366.022 24.4113 363.644 25.1751 364.989C25.0513 364.71 24.6384 364.923 24.7623 365.218C24.8242 365.726 25.2164 366.218 25.6912 366.12L26.7234 364.989L26.9092 365.415L28.3749 363.71C28.1685 363.644 27.9001 363.792 27.7556 363.874C28.5607 361.824 28.1685 359.381 28.5814 357.561C25.7532 356.987 27.9208 352.953 26.3518 351.313C27.1157 351.772 28.5401 352.117 29.18 351.92C29.2626 352.264 30.3361 353.035 30.0058 353.756C29.531 353.838 28.891 354.724 28.4369 354.084C28.4988 356.183 29.7374 353.904 30.7283 354.609C30.7283 352.297 29.242 350.821 28.7878 349.313H29.1387L28.6639 348.165C28.3543 349.034 26.7234 348.854 27.4666 347.755L27.5285 347.903C28.313 347.312 27.6937 345.869 27.9414 344.869L27.095 344.098C27.3427 343.082 29.0975 343.197 30.1916 342.967C30.5425 341.376 29.242 340.311 28.5607 339.097C29.3865 338.655 29.9439 336.277 30.6664 337.622C30.2122 336.113 26.0835 336.015 28.7259 333.752L29.3658 334.457C29.5723 332.079 28.6433 328.554 29.5723 327.537C32.0702 328.669 32.7101 324.848 35.3732 324.684C34.7538 324.75 34.7126 323.831 34.4029 323.667C34.7332 323.503 35.0842 323.208 34.6093 322.815C33.9487 323.684 32.0289 321.896 32.7927 323.766C31.1618 322.7 29.9645 321.421 30.3567 319.47L31.4302 319.601L30.8522 321.109C31.6779 321.027 31.4921 321.814 31.8018 322.175C32.8753 319.371 34.279 322.798 34.5887 319.863C33.9281 319.502 34.1965 319.716 34.0313 318.929C34.0107 319.289 34.7538 319.437 34.8571 318.847L34.0932 318.207C36.0544 317.371 35.0016 320.027 36.4053 319.273C37.0659 320.486 37.2105 322.503 38.6555 322.274C39.44 320.47 36.3434 320.355 37.2724 318.486L37.8917 318.338C37.6027 317.617 36.6737 317.42 36.1576 316.977C36.4879 316.977 36.7769 316.83 36.9421 316.403C35.7448 315.108 35.5796 314.321 34.2378 313.108C34.919 316.043 32.7927 315.42 33.3501 318.42C32.9785 317.912 32.9785 315.829 31.4921 315.567L32.5656 315.698C32.1527 314.698 31.7399 313.698 32.2972 312.534L32.7927 313.321C32.2972 311.665 34.8571 310.861 33.2469 309.451C33.0817 309.877 33.0611 310.238 33.1849 310.533C32.834 309.68 33.1023 308.664 33.4326 307.811L31.9463 305.811C32.483 305.876 32.6895 304.728 33.4533 305.368C34.4855 304.138 32.9785 303.368 32.8133 302.58C34.1758 301.351 33.1436 303.794 34.6093 304.073C35.3938 302.269 35.2699 300.268 34.4648 299.137C34.1965 299.498 33.9694 299.662 33.7217 299.613C34.0726 299.596 34.0933 298.842 34.1758 298.416L33.5152 298.055C34.0933 297.415 34.5061 297.546 34.9396 298.186C35.1874 297.53 33.9487 296.612 35.0635 296.038C35.7448 297.251 34.7745 298.612 35.208 299.252C34.8984 296.825 37.7059 297.087 37.2724 294.021C37.6233 294.021 38.1807 294.579 38.2839 294.021C38.222 292.66 36.8802 293.529 36.1783 293.037C36.4673 294.103 35.9512 294.546 34.9809 295.054L34.4442 294.726C34.7538 294.726 34.8571 294.07 35.1667 293.906L34.0313 293.628C35.3112 293.824 36.4466 292.89 36.075 292.037C35.0222 292.758 35.1048 292.545 33.5978 292.627C32.3798 291.348 35.1461 291.479 33.8868 290.053C34.279 290.184 34.4236 291.332 34.8777 290.397C35.0635 289.61 34.0313 289.61 33.8042 289.053C34.7745 289.758 35.6002 289.676 36.7769 290.446C36.6944 291.873 36.6737 291.02 36.9421 292.447L38.0156 291.365C38.0156 292.578 39.1097 292.349 39.5019 292.496C40.9057 290.545 38.1188 290.791 38.5936 289.495C37.9536 288.79 38.2426 290.709 37.6233 289.643C37.9743 288.43 36.9627 289.299 36.715 287.872L37.1692 288.151C37.8711 287.79 37.1692 287.298 37.1072 286.79C36.8595 286.216 33.2881 287.052 33.5565 284.839C33.8455 284.97 34.0313 285.035 34.1552 285.035L42.8256 288.036C43.1559 285.79 43.7752 283.215 44.7454 280.674C46.5827 280.215 45.9428 282.658 46.7479 282.576L46.2318 283.74C45.4886 283.609 46.3556 281.231 44.8693 282.182C45.117 284.33 44.1261 285.199 45.3441 287.331C47.202 286.872 45.4473 284.675 46.975 283.51C46.7892 284.051 46.913 284.527 47.0988 284.986C47.4911 283.789 47.9246 282.51 48.3787 281.149L47.9865 280.805C47.6562 281.723 47.4085 282.363 47.3465 282.428C47.6768 281.198 46.8511 280.067 45.5712 279.87L45.4886 280.083L45.1583 279.608L45.5299 278.755L45.5712 278.64ZM50.7941 198.228C50.9179 198.294 51.0624 198.359 51.2482 198.392C51.0624 198.359 50.9386 198.392 50.7941 198.228ZM46.2731 303.286C46.7272 301.662 47.3465 300.022 47.7388 298.448C44.7454 301.055 42.4953 302.876 43.3004 298.104L43.1559 297.776C42.743 298.366 42.5365 299.449 42.5572 300.465C43.321 301.367 46.2318 304.351 46.5208 304.351C47.2846 304.138 46.5621 303.63 46.8717 303.122L46.2524 303.269L46.2731 303.286ZM41.814 304.023C41.3805 304.925 41.9792 304.778 42.4746 304.974C42.4746 304.646 42.454 304.302 42.4333 303.974C42.2888 304.089 42.103 304.122 41.814 304.023ZM42.9907 304.974C43.0114 304.876 43.0526 304.778 43.1352 304.745L42.9907 304.974ZM46.4382 286.839C46.4382 286.839 46.4382 286.905 46.4382 286.937C46.5208 286.724 46.5827 286.495 46.6653 286.282C46.5621 286.364 46.4795 286.527 46.4176 286.839H46.4382ZM44.8899 288.626L45.7983 288.938C45.8602 288.741 45.9221 288.528 46.0047 288.315C45.5712 288.348 45.1996 288.38 44.9106 288.626H44.8899ZM40.9057 294.431C41.9585 294.923 41.814 296.218 43.0939 296.415C43.4036 296.53 43.5894 296.267 43.7339 295.972C43.8165 295.644 43.899 295.284 44.0023 294.89C43.8165 294.857 43.6513 294.759 43.5068 294.628C43.2797 294.988 42.9288 295.218 42.165 294.988C44.0435 294.185 41.0708 294.005 41.6695 292.988C40.8025 292.562 40.596 294.07 40.9057 294.431ZM32.6895 375.876C32.5656 375.893 32.2766 375.991 31.905 376.106L31.3476 375.319C31.7605 374.007 33.7423 373.056 32.256 371.761C32.7101 371.22 33.5978 370.99 34.3203 370.744C34.2378 371.023 34.1552 371.269 34.0107 371.466C36.0131 374.975 31.3683 373.056 32.6895 375.876ZM36.6737 360.774C36.7357 360.922 36.9421 360.988 36.9421 360.988C34.9396 357.839 34.5681 355.331 34.8571 353.74C33.8868 353.97 32.9785 355.347 32.5037 356.003L31.5128 355.314L32.4005 355.003L31.5541 353.871C30.7902 354.101 30.8315 354.97 30.2122 355.495C30.4187 355.56 31.4302 357.479 32.0289 358.036L32.9578 356.642C32.6069 357.003 32.6069 358.954 32.7927 359.741C33.3294 359.791 34.3203 358.544 33.1849 358.299C34.0107 358.2 33.8249 359.725 34.7951 358.84C35.497 360.037 34.5681 361.791 34.0726 362.595L32.7101 362.627C32.0702 363.513 34.2378 363.365 33.3294 364.398C33.2469 363.037 31.8224 364.513 31.8637 363.447C31.3063 363.759 30.4393 363.349 30.4187 364.431C32.0908 365.448 29.1594 365.481 30.6457 366.448C30.0264 366.973 29.6342 365.759 29.2832 366.858C30.0884 368.202 30.7696 368.17 32.0495 368.35C32.5243 367.186 30.5012 366.891 30.9141 365.94L32.9166 368.039C33.2675 367.711 33.3294 367.448 33.2675 367.219C33.3501 367.612 33.6391 367.973 34.0726 368.284C34.2997 368.465 34.5061 368.629 34.6919 368.776C34.8158 367.678 34.9396 366.71 35.5177 366.579L36.137 366.776C36.7563 366.432 36.3641 365.776 35.9512 365.448C36.0131 364.464 35.2493 363.414 36.0957 363.267L36.6118 363.677C36.5911 362.463 36.5292 362.316 36.6944 360.807L36.6737 360.774ZM43.7958 321.536C41.4011 322.028 39.2335 322.634 39.1097 326.078L38.9858 325.799C37.293 327.373 40.369 329.324 38.4491 331.243C37.7472 330.144 37.8091 330.21 36.0131 328.898L36.4879 330.046C35.2906 329.62 35.7654 330.767 35.5796 331.555L34.1965 330.702C34.6919 330.259 35.0429 329.046 34.6919 329.046C34.8158 329.341 36.8182 327.586 36.5499 326.521C35.5383 326.521 35.6002 328.751 34.1139 327.619C34.6713 328.554 33.6597 328.554 33.8662 329.488C33.3088 328.554 32.5243 329.144 31.905 328.423L32.0082 329.931C31.6779 329.931 31.5954 327.701 30.1709 328.8C30.6044 329.439 29.6961 330.964 30.7696 331.095H30.4393C30.0264 332.178 31.8844 331.735 31.0586 333.03C31.5954 333.096 32.0082 332.883 31.9876 332.374C31.8018 331.932 31.0793 331.8 31.0586 330.948C31.9669 330.653 30.7902 331.964 32.3179 331.505C33.0817 331.276 32.0495 329.21 33.5565 329.98L33.1436 331.063C34.2171 331.194 34.0313 331.997 34.919 332.046C35.208 332.768 33.8868 333.276 34.7332 334.063C35.3938 334.424 36.7769 334.047 36.0338 335.129C34.2997 335.867 34.1965 338.523 34.2997 339.54L34.8571 340.475C35.5383 340.475 35.0016 338.818 35.786 339.458L35.848 340.819L35.4557 340.671C35.2906 341.114 35.6828 341.606 35.8686 342.032C35.1461 341.54 35.6002 340.606 34.4442 340.688C34.1345 341.294 33.701 341.36 33.8249 341.95C33.7629 341.819 33.6597 341.704 33.5152 341.704C32.8546 342.934 34.6093 343.049 34.919 343.41C36.1989 344.82 36.4673 342.246 37.6027 342.508L37.6853 346.312C37.355 345.968 37.0453 345.607 36.5705 345.689C35.9099 346.558 35.6828 345.623 35.559 346.919C37.1072 346.968 36.2815 348.624 37.0453 349.624C36.3434 350.001 36.2196 350.067 36.3228 349.132C35.3112 349.149 35.5177 350.428 35.3525 350.871C35.559 351.149 35.6415 351.608 35.8273 351.904C36.3847 351.576 36.9834 351.789 37.293 352.625L37.4995 352.691C37.9536 351.395 39.3574 349.428 38.4491 348.509L38.9032 348.788C39.9974 347.345 37.582 345.295 39.5639 344.771C40.307 344.902 39.7703 344.476 40.8644 344.607L40.1832 343.41L40.6373 343.689V341.754L40.8644 341.819C39.9974 340.835 39.2955 340.032 38.7381 339.392C38.2633 339.343 38.1188 339.392 37.8091 339.048C37.6233 338.72 37.6233 338.491 37.7059 338.294C37.9123 337.835 38.6349 337.589 39.0065 337.031L38.8413 338.818C39.6258 339.032 40.4722 338.966 41.1741 338.146C41.1534 338.507 41.7521 338.72 41.9172 338.277C41.7108 338.212 41.5869 337.064 40.8851 337.425C40.8438 335.703 43.3829 333.178 42.2475 330.456C42.8875 332.391 43.5481 329.078 43.5687 331.161C45.0757 329.866 42.4953 329.816 42.9288 328.373C43.4036 328.291 42.743 329.16 43.61 329.587C44.4977 327.226 42.165 325.291 42.9288 322.995H43.9403C43.8784 322.536 43.8165 322.028 43.7545 321.503L43.7958 321.536ZM43.2797 316.781C43.2384 316.321 43.1971 315.846 43.1559 315.37C43.1559 315.42 43.1146 315.452 43.1146 315.502L42.5365 314.059C42.0205 314.846 40.8231 315.288 40.5135 314.059C40.9057 314.19 41.4631 313.911 41.6489 314.337C42.3714 313.616 43.2178 311.96 41.6489 312.255C42.8256 313.895 39.6671 312.419 40.5341 313.698C39.6464 312.96 40.2038 312.386 39.8529 311.747C40.5754 312.452 41.7314 311.796 42.2888 310.894C42.103 310.468 42.5159 309.385 42.2269 308.664C41.2566 308.811 40.8231 308.172 40.4309 309.254C40.2451 308.828 40.1625 308.188 40.7405 307.532C40.8644 307.828 40.885 308.32 41.236 308.32C42.165 307.959 42.2063 307.418 42.6191 307.155C42.6191 306.909 42.5985 306.68 42.5778 306.45C42.4953 306.516 42.3714 306.565 42.2269 306.581L41.5457 305.729C41.814 306.811 41.0502 306.155 40.5135 306.089C41.5869 306.221 40.7612 305.434 40.7818 305.089L39.5226 305.745C39.0065 305.319 40.5547 304.515 39.3987 304.597C38.6968 306.171 38.7794 306.827 38.8826 308.32L39.8529 307.811C40.2244 309.533 38.1807 308.68 37.9123 310.55C38.5936 311.402 37.5201 313.353 39.1303 313.55C38.6762 313.272 37.4995 314.567 38.1394 315.272C39.5019 316.125 39.3781 318.273 40.1419 317.699C40.2451 317.125 39.5639 316.272 40.596 315.895L40.7199 317.043L41.6489 316.387C41.2979 316.731 42.103 316.781 43.3004 316.731L43.2797 316.781ZM56.3059 292.611V292.562C56.3059 292.562 56.3059 292.594 56.3059 292.611Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.7104 392.685C35.0407 393.029 34.9582 393.816 35.7633 393.685C34.8756 393.685 35.722 392.259 34.7104 392.685Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.7836 393.603C33.99 393.668 34.3203 393.636 34.341 393.996L34.1552 392.996L33.7629 393.586L33.7836 393.603Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.7552 394.387C28.3952 394.929 28.7461 395.256 28.6636 396.06C26.5166 396.29 28.1268 394.715 26.1244 394.289C25.856 395.765 27.7139 396.273 27.8378 397.503C28.7668 396.929 29.3654 394.486 27.7552 394.387Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.0713 393.637L25.5048 394.489L25.6493 394.407L25.1951 393.555L25.0713 393.637Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.0537 376.942C45.7349 376.91 45.1156 376.369 44.9918 376.09C44.9298 376.303 44.7234 376.598 45.0537 376.942Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.12 216.625L64.3975 210.246C64.5833 212.083 64.6865 213.772 65.12 216.625Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.0308 356.249C43.4436 357.955 44.5171 358.774 44.5997 360.48C46.2306 358.381 42.8656 357.381 44.4758 355.643L43.0308 356.249Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.2952 357.265C46.9947 357.429 46.974 355.872 46.0244 356.036C46.1896 357.167 47.1598 356.659 46.9121 357.643L48.2746 357.265H48.2952Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.5587 363.151L25.9807 362.594L26.1665 363.02L26.5587 363.151Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.1917 349.657L48.4394 349.87L48.9555 349.066L48.1917 349.657Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.9354 362.299L23.5845 363.037L24.1006 363.447L23.9354 362.299Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.5325 356.168L31.8421 356.873C31.7802 356.741 32.4202 355.856 31.5325 356.168Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.4322 344.655L49.0813 343.803L48.9368 343.868L49.3084 344.721L49.4322 344.655Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.7455 350.592C27.7133 350.969 28.6835 349.231 27.6926 350.116C27.7133 350.985 28.2706 350.673 28.7455 350.592Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.7142 341.312C36.7142 341.197 36.7142 341.082 36.6113 340.967C36.6319 341.098 36.6731 341.213 36.7142 341.312Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.715 341.312C36.6737 341.673 36.2402 341.985 36.4879 342.264C36.9833 341.854 36.8388 341.69 36.715 341.312Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M37.0855 337.228L36.9617 337.539C36.5282 337.162 36.5901 337.326 36.9204 337.654C36.9204 337.999 37.2094 338.015 37.4158 338.064C37.5191 338.146 37.6429 338.228 37.7668 338.31C37.6636 338.195 37.5603 338.08 37.4571 337.999C37.5397 337.474 37.5397 337.146 37.0855 337.211V337.228Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.6651 323.732C55.1077 324.88 54.9013 325.175 54.1581 325.028C53.7452 326.126 55.0458 326.077 55.2522 326.799C55.3141 325.503 55.7064 325.29 55.6651 323.732Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.2307 326.799C55.2307 326.947 55.2307 327.078 55.2307 327.243C55.2705 327.062 55.2705 326.914 55.2307 326.799Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.2079 341.23L27.155 340.377L27.2789 340.656L28.2079 341.23Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.3046 322.013C56.222 322.226 56.2014 322.587 55.9124 322.734C56.6555 322.865 56.3872 321.799 56.3046 322.013Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.9257 325.127C40.4509 325.209 40.5954 325.996 40.3889 326.275C40.5541 325.832 41.9785 325.619 40.9257 325.127Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M53.7665 318.305C53.6839 318.518 53.1265 318.813 52.5278 318.6C52.8375 318.961 54.0968 319.518 53.7665 318.305Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.4003 322.979L41.1113 323.126L41.4829 323.979L41.4003 322.979Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.9016 324.782C30.6448 325.782 32.2756 323.536 32.7917 325.192C34.051 323.257 31.5118 325.225 31.8834 323.732C31.4499 324.585 30.2526 324.897 29.9016 324.782Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.8835 323.733C31.9459 323.602 32.0082 323.47 32.029 323.322C31.9667 323.487 31.9251 323.618 31.8835 323.733Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.5833 311.436C39.6658 311.583 39.7484 311.682 39.831 311.781C39.769 311.666 39.7071 311.567 39.5833 311.436Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.9038 318.881L33.0186 320.39C32.2754 319.389 32.6883 317.094 31.3464 317.094C30.9542 317.815 31.1606 318.75 31.6767 319.176L31.9038 318.881Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.596 305.563L59.0296 306.202L59.2979 305.481C59.0709 305.678 58.1419 305.186 58.596 305.563Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.3599 305.334L59.3196 305.482C59.3196 305.482 59.38 305.416 59.3599 305.334Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.8097 314.092C39.6445 314.518 39.6239 314.879 39.8097 315.305C40.0987 315.158 40.4909 314.092 39.8097 314.092Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.3176 301.189L57.4007 302.189L57.4631 301.123L57.3176 301.189Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.2904 296.824L60.5794 296.693L60.2078 295.824L59.9395 295.972L60.2904 296.824Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.1023 300.221C32.8546 300.86 33.9693 301.5 34.2583 301.352L34.4028 300.057C33.3087 300.286 34.3822 300.417 33.99 301.139L33.1023 300.221Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.0557 262.421C63.7163 262.766 63.1383 264.16 62.457 264.192C62.1887 263.979 62.0029 263.192 61.5281 263.635L63.1176 264.897C61.8584 266.324 60.9913 263.586 60.4752 262.799C60.0624 264.307 61.1565 264.848 60.95 266.472C61.1565 266.012 61.6313 265.734 62.0235 265.504C63.2415 265.537 62.519 267.013 62.4777 268.111C63.097 267.455 63.4892 267.898 63.9021 268.439C63.9227 268.538 63.9847 268.603 64.0673 268.652L64.2118 268.833V268.702C64.3563 268.718 64.5214 268.702 64.7691 268.636C64.5214 267.701 65.6155 267.078 65.7188 266.488C63.675 266.914 65.5123 264.455 64.9756 263.668L64.893 262.799L64.9343 262.487C65.1614 262.438 65.4297 262.553 65.76 263.061C65.4091 262.618 65.7187 261.29 65.0788 261.356L65.4091 258.257C65.4917 258.158 65.6155 258.076 65.76 258.011C65.6568 257.896 65.5536 257.863 65.4504 257.879L66.6271 244.352C66.4413 245.024 65.9045 245.565 65.6362 246.237C64.4182 245.139 65.2852 247.352 64.0673 246.975C63.6544 246.483 63.8608 245.811 64.2118 245.434C63.5924 245.253 62.9938 245.795 62.2506 245.696C61.301 247.352 64.2737 247.779 63.6544 249.418C62.9112 249.304 62.2919 248.762 62.2919 249.845L62.1474 249.566C62.8286 251.353 60.3101 250.812 62.2712 252.042L61.1978 251.944C61.9409 252.78 61.7964 254.321 61.8584 255.19L61.6519 255.125C62.6428 257.633 61.7964 256.502 62.0235 259.257L60.9088 257.912C60.2894 258.814 61.6313 259.126 61.4042 259.781C61.1978 259.716 60.3927 259.814 60.2688 259.175L61.7964 262.602C62.519 263.454 62.6222 262.503 63.097 262.405L63.0557 262.421Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.9306 266.473C60.8475 266.637 60.8059 266.833 60.8059 267.079C60.8682 266.85 60.889 266.669 60.9306 266.473Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.6472 243.402L66.5854 244.353C66.6678 244.058 66.7089 243.747 66.6472 243.402Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.7258 271.394C63.3451 270.869 63.4484 271.886 63.8612 272.017L64.0883 269.967C63.6754 269.935 63.2213 269.705 62.8497 269.705L62.7258 271.394Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.9548 269.422C64.6658 269.324 64.4387 269.094 64.2323 268.832L64.1084 269.963C64.4181 269.98 64.7277 269.881 64.9754 269.439L64.9548 269.422Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.6603 267.867V267.507L42.4126 266.949L42.6603 267.867Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.1788 262.441C44.4975 262.819 44.8691 263.655 45.0136 263.95C45.0962 263.015 45.3026 263.442 45.1788 262.441Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.2424 263.078L37.9947 262.16L37.8708 262.226L38.2424 263.078Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.8476 236.17C62.8476 236.022 62.8273 235.875 62.8069 235.711C62.8069 235.924 62.8069 236.055 62.8476 236.17Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.3446 244.109C64.7071 241.977 64.2736 245.601 65.8632 244.994L65.4297 243.764L65.8425 243.895L65.8012 242.42C65.0581 242.682 64.9961 242.912 64.253 242.797C64.6865 240.862 65.1819 242.223 66.2348 240.846V238.665L66.4618 238.845C66.4618 238.665 66.3586 238.583 66.2554 238.501V231.138C65.7393 229.777 64.8929 231.827 63.8194 230.81C63.7162 232.352 62.7666 234.615 64.253 234.811C64.0465 234.746 63.6336 234.631 63.4479 234.942L64.6245 235.877L65.0787 235.041C66.2554 235.992 65.7806 238.894 64.9755 239.386C64.6658 237.714 63.1175 238.484 64.0878 236.221C63.6956 236.303 62.9937 236.697 62.8285 236.172C63.0763 238.878 62.2299 241.255 63.3446 244.109Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.9431 217.036H64.0892C64.0892 217.036 63.964 216.986 63.9431 217.036Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.7365 217.937L65.1609 219.265L65.099 217.199L64.0668 217.035C64.3145 217.216 64.8306 217.937 64.4177 218.216L63.7158 217.921L63.7365 217.937Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.0081 220.808C65.5952 219.742 64.3772 219.775 63.7992 220.349C63.2625 219.365 65.1204 219.857 63.8611 219.168C62.9735 219.168 63.4689 220.381 63.6134 220.66L66.0081 220.808Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.1207 228.644L64.6252 228.332L64.4807 229.07L65.1207 228.644Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.6252 228.335L64.7903 227.613C64.4188 227.646 64.0472 227.695 63.7788 227.81L64.6252 228.351V228.335Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.2021 225.693C65.3054 225.381 65.3879 225.037 65.4292 224.627L65.2021 225.693Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.873 226.53H65.0382L65.224 225.693C65.1208 225.989 65.0175 226.251 64.8937 226.53H64.873Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.7888 227.613C65.6559 227.515 66.5435 227.4 66.3371 226.334L65.0159 226.514L64.7888 227.613Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M40.3058 256.686L39.9135 255.85L39.769 255.915L40.1613 256.751L40.3058 256.686Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.5452 252.094C41.4213 251.881 41.2768 251.717 41.1323 251.586C41.2149 251.799 41.3388 251.979 41.5452 252.094Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.0531 248.287C37.0027 247.402 37.0647 249.648 37.6014 247.927C38.4065 247.812 39.3561 248.697 38.8813 249.501C38.1381 249.386 38.4684 248.665 37.6633 249.124C38.4684 249.714 37.8698 249.894 39.0052 249.78C39.6245 250.747 40.4089 250.895 41.0902 251.567C40.698 250.419 42.0811 248.14 40.7805 246.648C39.5006 245.795 37.6014 246.156 35.6402 246.041C35.1654 246.139 34.7526 248.123 36.0531 248.271V248.287Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M33.968 249.65C33.8235 250.077 33.8854 250.224 34.0299 250.487C34.7112 250.454 33.968 249.995 33.968 249.65Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.6163 240.37C49.3479 240.272 49.0589 239.452 48.5635 239.6L48.8318 240.83C48.8938 240.551 49.2447 240.469 49.6163 240.37Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.9354 241.385L48.8108 240.844C48.7692 240.975 48.8107 241.139 48.9354 241.385Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.7828 240.322L49.5962 240.372C49.5962 240.372 49.7206 240.388 49.7828 240.322Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.7806 222.677C66.3173 222.71 66.0077 222.136 65.8632 221.857C65.8012 222.087 65.6154 222.399 65.7806 222.677Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.6135 201.721L64.0058 201.213C63.758 201.393 63.6342 201.492 63.6135 201.721Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.4406 194.735C48.337 194.735 48.254 194.702 48.1504 194.652C48.2126 194.702 48.3162 194.718 48.4406 194.735Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.1715 194.653C47.6967 194.341 48.3367 193.308 47.6348 192.981L47.8412 193.013L47.4077 192.357C47.5109 192.981 47.4903 194.309 48.1715 194.637V194.653Z\",\n    fill: \"#5C4F47\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.2\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M209.277 202.229C209.339 202.803 210.536 203.033 211.156 203.131L211.465 196.654C210.082 196.802 208.286 198.606 207.543 197.31C205.995 197.802 207.171 199.557 209.009 199.868L206.965 199.311C209.525 200.918 204.24 201.721 202.733 200.672V200.803L212.725 205.345C213.426 203.853 209.277 204.033 209.277 202.197V202.229Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M186.464 335.77C186.299 334.835 185.866 334.622 185.35 334.605C185.618 334.983 185.928 335.36 186.464 335.77Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M215.078 206.426L218.195 207.852C217.369 207.295 216.234 206.803 215.078 206.426Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.935 195.489C166.77 195.489 166.626 195.456 166.378 195.489L167.988 196.145C167.637 195.916 167.286 195.702 166.935 195.522V195.489Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.234 236.287C225.317 236.435 225.337 236.55 225.441 236.714C225.441 236.567 225.358 236.419 225.234 236.287Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M149.74 177.207L152.63 180.208C151.206 179.765 151.536 181.175 149.884 180.503C150.112 180.732 150.607 181.782 151.391 181.536L151.33 180.946C155.479 182.635 157.172 181.782 160.248 184.438C162.869 182.979 160.599 182.208 158.72 181.29C158.452 180.995 158.328 180.749 158.183 180.519L152.403 177.879L149.74 177.223V177.207Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M172.428 292.923L172.098 292.857C172.201 292.89 172.325 292.907 172.428 292.923Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.776 292.611L172.118 292.873C171.478 292.66 170.9 292.021 170.776 292.611Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M212.351 205.851C213.136 205.916 214.085 206.129 215.076 206.441L212.744 205.375C212.682 205.506 212.516 205.687 212.351 205.851Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203.229 203.279L202.774 200.835L200.627 199.852C201.391 200.819 201.907 201.918 203.229 203.279Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.98 232.565C228.31 237.615 223.066 231.122 221.704 233.385C222.199 234.795 224.553 235.385 225.234 236.287C223.459 232.22 233.017 237.139 232.026 233.073C236.278 233.811 236.526 236.156 235.267 237.484C231.035 238.861 232.315 236.008 228.289 235.5C228.867 237.139 229.631 236.894 231.902 237.664C230.787 240.157 236.65 243.108 230.808 244.387C231.592 246.273 233.595 246.224 235.7 247.371C240.118 247.765 238.198 244.731 241.728 244.19C241.336 244.322 240.572 244.567 239.953 244.453L240.985 242.895C239.334 244.338 236.567 242.501 236.278 241.682C236.216 241.091 236.093 239.927 237.311 240.14L238.198 241.058C239.664 239.976 235.122 238.418 237.6 237.303C238.59 237.287 239.045 237.763 239.643 237.845C236.712 236.369 236.96 235.073 234.957 232.991L239.272 234.319C234.503 232.532 236.134 228.974 238.859 226.563C238.095 226.809 237.538 227.285 236.712 226.957C235.762 225.448 238.838 224.448 241.109 225.235C237.558 223.644 244.536 219.89 239.912 217.725L218.153 207.805C218.69 208.165 219.123 208.543 219.289 208.92C215.387 209.576 215.82 210.035 212.27 208.461C214.21 209.953 217.348 209.543 217.369 211.658C215.469 210.756 211.072 210.363 210.474 212.363C214.004 217.594 224.759 221.398 230.044 226.35C227.071 226.399 227.649 230.154 226.844 231.925C223.706 231.105 222.881 229.728 222.323 228.318C222.075 229.187 221.89 230.679 221.663 231.794L227.897 232.499L227.98 232.565Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M218.733 220.398C218.464 220.513 218.299 220.645 218.155 220.776C218.403 220.711 218.609 220.612 218.733 220.398Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M222.509 227.957C222.406 227.94 222.303 227.94 222.179 227.924L222.385 228.368C222.427 228.22 222.468 228.055 222.509 227.94V227.957Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.582 206.753C204.756 206.425 204.529 206.18 203.682 205.852C203.951 206.048 204.178 206.294 204.405 206.524C204.797 206.753 205.189 206.868 205.561 206.753H205.582Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M210.866 205.967L212.084 206.181C212.228 206.05 212.269 205.967 212.373 205.852C211.712 205.787 211.155 205.803 210.886 205.967H210.866Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199.842 250.666L200.461 251.174C200.441 250.879 200.172 250.748 199.842 250.666Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M222.571 237.959C222.406 236.205 218.154 237.566 218.277 235.106L217.968 235.828C216.192 233.975 217.266 230.892 217.245 228.793C219 229.105 219.475 227.596 222.2 227.957C221.642 226.498 221.126 225.038 218.339 224.186C219.33 223.333 216.915 221.874 218.154 220.791C216.461 221.201 212.642 218.955 214.5 221.792C214.293 221.562 213.901 221.677 213.674 221.447C211.259 223.136 215.119 224.005 215.078 225.53C213.385 226.383 212.538 223.923 211.816 224.759C213.22 226.727 209.463 230.679 215.635 230.81C215.986 232.22 214.603 232.351 213.447 232.729C219.867 235.205 210.102 240.78 218.504 241.108C218.215 240.288 218.504 238.992 216.77 237.73L222.551 237.976L222.571 237.959Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.808 209.705C205.767 209.804 205.787 209.952 205.705 210.05C205.746 209.952 205.787 209.82 205.808 209.705Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.572 188.67L237.022 189.621C238.054 193.835 236.423 195.278 236.403 198.918C235.639 199.164 235.185 198.705 234.958 198.475C235.433 201.05 234.029 204.837 236.423 206.805C236.32 207.625 234.442 209.675 232.893 208.806C233.348 209.216 233.802 209.691 233.595 210.134C231.614 210.167 233.1 209.101 231.49 209.002C231.324 209.363 230.932 209.478 231.552 209.593C229.9 208.92 224.822 209.953 225.131 207.117C229.817 206.215 225.544 209.101 230.664 208.658C230.767 207.723 228.785 207.756 228.166 207.641C228.352 206.444 229.632 206.526 230.788 206.641C229.239 206.116 231.531 204.706 229.178 203.968C228.93 201.624 232.997 204.247 233.038 202.722L227.939 201.64L229.074 199.148C227.505 195.409 220.136 199.312 217.493 195.015C220.156 195.671 224.78 194.179 225.978 192.277C226.102 193.458 229.301 195.737 227.691 197.18C231.861 195.229 227.98 200.115 232.666 199.197C230.54 198.065 230.375 196.294 231.634 194.983L232.088 195.442C232.728 194.015 227.423 192.703 229.59 190.785C229.487 189.785 230.932 190.031 232.13 190.26C231.407 189.391 230.457 188.588 231.593 188.637L231.572 188.67ZM232.501 190.867L231.903 192.179C232.77 191.9 232.77 191.408 232.501 190.867Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.171 137.573L173.398 136.803C173.212 137.098 173.171 137.344 173.171 137.573Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.275 119.62L156.14 118.439C156.181 118.882 156.635 119.259 157.275 119.62Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.799 28.8926L181.758 28.9256C181.758 28.9256 181.944 29.0411 182.027 29.1236L181.799 28.8926Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M171.56 85.4626C172.014 85.315 172.406 85.1346 172.736 84.8887C172.22 84.8887 171.849 85.1182 171.56 85.4626Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.482 119.836C157.482 119.836 157.544 119.786 157.585 119.77C157.482 119.72 157.378 119.671 157.274 119.621L157.482 119.836Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.668 144.574C157.833 144.738 157.936 144.902 158.143 145.083C158.06 144.853 157.874 144.689 157.668 144.574Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M172.324 144.086C172.448 144.266 172.593 144.447 172.799 144.578L172.324 144.086Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M160.598 170.287L161.28 171.353C161.238 170.845 160.97 170.533 160.598 170.287Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.772 146.693C169 146.758 169.227 146.824 169.454 146.89C169.309 146.742 169 146.66 168.772 146.693Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M180.809 70.7368C181.573 70.4909 182.502 69.8842 183.328 70.2285C182.296 69.6546 179.674 69.589 180.809 70.7368Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.107 79.4629C222.756 79.5122 222.446 79.6108 222.343 79.7587C223.045 79.7587 223.21 79.6437 223.107 79.4629Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.504 172.828L228.742 173.206C228.206 172.91 227.813 172.811 227.504 172.828Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M228.29 164.812C228.29 164.812 228.455 164.846 228.58 164.862C228.476 164.829 228.372 164.829 228.29 164.812Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.151 159.777C157.006 159.777 156.862 159.777 156.697 159.81C156.862 159.991 157.027 159.909 157.151 159.777Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.979 164.792C227.979 164.792 228.187 164.792 228.29 164.808C228.187 164.808 228.083 164.775 227.979 164.792Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M218.361 125.309C218.361 125.309 217.782 125.407 217.225 125.588C217.535 125.67 217.886 125.621 218.361 125.309Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M212.971 132.801C212.847 132.85 212.744 132.867 212.599 132.932L212.971 132.801Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.801 71.9707C165.718 72.3478 165.801 72.643 165.924 72.8889C166.028 72.6102 166.028 72.315 165.801 71.9707Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M228.557 164.875C228.908 164.974 229.259 165.105 229.693 165.302C229.238 165.072 228.867 164.957 228.557 164.875Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M202.403 112.896C202.527 112.979 202.63 113.061 202.754 113.143C202.816 113.094 202.857 113.044 202.94 113.012L202.424 112.896H202.403Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.107 108.977C205.478 109.125 205.85 109.207 206.201 109.305C204.921 107.813 206.573 105.238 203.084 104.779C203.146 105.271 200.916 107.714 198.872 107.19C199.698 108.223 197.118 109.6 197.675 110.158C199.698 108.6 200.648 110.108 201.763 111.256C200.668 112.224 198.955 110.945 198.232 111.797L198.48 114.142L199.079 112.125L202.423 112.88C202.32 112.798 202.237 112.748 202.114 112.666C200.772 109.174 207.089 112.568 205.107 108.961V108.977Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M206.18 109.305C206.386 109.534 206.634 109.731 206.985 109.895C206.944 109.567 206.613 109.436 206.18 109.305Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M212.661 95.4981C212.558 95.3177 212.414 95.121 212.166 94.875C212.29 94.9898 212.434 95.2685 212.661 95.4981Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M201.287 198.147C202.278 198.131 204.466 196.212 201.865 196.146C201.555 196.737 201.245 197.311 200.936 197.901L201.287 198.147Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200.028 56.6543C199.925 56.8675 199.883 57.097 199.925 57.3266C200.049 57.3758 200.193 57.425 200.317 57.4742C200.709 57.3594 200.255 56.9003 200.028 56.6543Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.674 106.533C198.046 106.91 198.459 107.091 198.851 107.205C198.665 106.96 198.335 106.73 197.674 106.533Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M206.221 56.7683C206.984 56.5223 208.14 56.1452 209.131 56.1288C209.193 55.5549 207.851 55.0794 207.397 54.4727C207.728 55.1613 207.418 55.9156 206.2 56.7683H206.221Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M207.357 54.4238C207.357 54.4238 207.397 54.456 207.397 54.472C207.397 54.456 207.377 54.4399 207.357 54.4238Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M200.111 199.293C200.297 199.474 200.462 199.654 200.627 199.851L199.946 199.539L199.058 200.884C199.223 201.064 199.368 201.245 199.429 201.474C199.347 201.376 199.079 201.294 198.79 201.245L198.459 201.671C201.081 202.884 202.877 205.688 204.405 206.541C205.499 207.623 206.056 208.935 205.808 209.722C205.912 208.984 205.437 207.984 203.93 208.214C202.278 209.657 197.778 210.198 201.432 212.952L201.473 211.427L207.026 215.084C204.549 216.183 204.26 213.264 202.196 212.69C204.879 215.461 197.117 217.38 202.051 218.806C199.079 218.855 194.103 218.954 194.289 220.708C197.757 219.593 196.395 221.84 200.09 220.954C201.742 221.627 198.893 222.856 201.102 223.053L199.884 222.84C194.991 225.628 202.299 226.907 204.632 228.284C205.602 231.908 203.579 233.465 203.889 236.401C201.886 236.433 196.374 237.007 196.498 238.188C199.161 238.844 200.235 241.533 203.661 241.943C205.23 239.91 200.875 240.123 200.152 238.827C203.827 237.926 203.723 238.877 205.974 237.548C204.487 238.647 207.522 242.812 204.054 243.927L203.6 243.468C201.411 245.403 192.865 245.419 197.799 248.994L199.801 250.683C199.471 250.584 199.058 250.568 198.748 250.519C198.211 253.126 194.351 252.24 197.241 255.258C197.014 255.028 196.622 255.143 196.415 254.913C194.372 256.471 198.129 258.307 198.851 259.603C195.92 260.226 196.044 259.291 194 258.717C192.7 261.554 197.344 264.932 200.689 266.932L198.831 268.72C197.757 267.539 194.826 266.014 193.071 266.26C193.567 267.31 194.95 267.195 194.248 268.621C192.431 268.277 190.78 267.572 188.53 266.768C185.206 269.589 194.97 267.801 189.149 269.572C189.025 270.507 191.667 271.212 193.856 271.442L190.8 272.983C193.608 273.344 193.546 275.475 193.835 276.886C195.032 277.132 196.952 275.967 195.92 275.361C198.129 275.607 199.017 277.164 198.872 278.115C192.947 278.05 199.017 284.428 192.184 282.789C193.608 287.199 193.36 293.234 195.342 296.316C193.567 297.087 193.174 298.973 190.594 297.546C190.016 300.94 195.652 303.433 193.422 306.679C192.638 306.876 193.67 305.122 191.688 305.007C193.629 307.549 188.364 308.729 189.211 312.386C189.211 311.795 188.055 311.451 187.477 311.287C188.468 311.369 189.19 312.976 189.892 314.009C189.273 314.435 189.355 313.238 188.55 313.402C186.341 316.501 186.899 319.601 187.642 322.798C188.468 325.996 189.376 329.291 188.199 332.587C188.881 330.702 185.288 329.226 183.74 328.898L183.1 330.702C184.793 331.8 184.277 333.161 185.309 334.621C184.545 334.621 183.575 334.998 182.894 334.227C177.857 336.916 187.724 341.458 183.988 345.459C182.192 343 180.375 340.606 178.517 338.244L175.359 338.884L172.799 335.801C170.198 336.637 174.533 338.966 171.622 338.441C170.92 337.966 171.457 337.342 169.93 336.949C168.319 337.949 170.404 338.572 170.569 339.671C165.863 335.686 167.679 330.849 167.143 327.898C166.812 327.389 168.443 328.553 169.001 328.75C169.166 327.619 171.189 327.34 170.611 325.75C168.402 324.405 168.588 326.045 168.113 326.651C165.987 326.127 166.214 325.815 166.131 324.995C169.062 325.405 168.443 321.109 172.221 320.748C172.427 316.518 164.542 320.06 166.874 316.37L170.528 315.747C168.484 313.009 166.998 309.762 168.237 307.253V307.811C169.579 308.368 170.59 307.893 171.375 307.729C173.233 305.925 169.558 303.63 173.129 302.843C169.991 300.121 168.051 296.07 166.585 293.316C171.127 293.07 169.826 297.087 172.386 298.464L172.778 296.087C172.613 297.563 174.182 298.317 176.536 299.497C177.774 297.497 173.955 296.366 173.15 294.283C174.327 294.562 175.132 294.365 175.297 293.463L172.386 292.906C172.634 292.906 172.861 292.84 173.109 292.578L171.829 288.888C170.446 289.528 167.886 289.315 167.721 290.217C169.475 290.053 169.723 290.856 169.537 291.758C167.741 290.79 167.762 292.479 166.172 292.299C166.565 290.528 166.441 288.249 165.821 287.003L168.608 286.855C169.558 285.183 168.257 283.231 169.186 282.116L170.59 282.608C171.684 280.575 170.177 278.394 173.026 276.705C170.095 274.606 167.762 272.098 164.624 270.359C161.177 269.343 169.558 265.112 164.748 262.702C165.14 262.571 167.287 264.292 168.567 265.096C169.228 263.702 164.934 262.358 168.691 262.095C167.184 265.211 171.664 262.079 172.613 263.571C172.675 262.062 172.138 260.455 170.859 259.668C170.693 262.095 165.801 258.57 167.205 261.079C164.232 259.045 163.158 256.389 164.542 254.175C166.152 254.274 166.916 254.028 167.638 253.208L165.367 252.421C165.863 251.371 167.989 254.602 168.959 252.486C165.14 250.109 171.664 245.911 164.376 244.632C167.39 243.058 167.101 247.977 170.838 245.567C173.398 247.174 170.219 249.076 173.852 249.732C172.902 248.239 176.99 249.338 177.093 248.403L174.925 246.682L174.76 247.042C171.478 244.173 173.418 239.91 173.047 236.384C169.537 233.269 164.314 231.022 164.954 227.48C167.06 228.612 167.225 224.611 171.065 227.021C173.088 225.464 170.92 223.742 169.331 223.643C168.691 225.07 168.773 224.135 167.906 225.316C166.007 224.414 166.214 222.528 167.535 221.791C167.37 222.151 167.762 222.02 168.361 222.135C169.785 220.462 166.482 221.233 165.739 219.954C168.484 219.675 166.647 217.232 168.134 216.15L164.356 214.346C166.854 215.363 165.388 212.805 167.762 212.641C166.049 211.378 162.952 210.263 163.736 208.492C165.016 209.296 165.759 206.918 168.361 207C171.044 204.016 161.631 201.589 165.532 198.818C166.131 198.933 167.803 199.589 168.505 198.769C167.824 198.064 168.195 196.899 167.968 196.162L168.03 196.194C168.03 196.194 167.989 196.162 167.968 196.162C167.845 195.801 167.535 195.571 166.916 195.538C164.459 194.21 161.899 193.456 159.917 190.947C156.945 190.996 157.956 193.095 158.864 194.03L161.734 194.915C157.213 195.473 162.374 197.129 160.826 197.637C155.685 195.965 157.234 191.833 154.178 189.176C149.946 190.537 149.079 193.85 149.41 196.785L151.268 195.571L151.226 197.096L154.467 195.752C153.827 197.178 154.55 198.457 154.282 199.753C154.323 198.228 158.452 197.801 157.75 198.638C154.736 200.228 159.525 200.49 159.277 201.786C159.587 201.064 159.711 200.13 161.362 200.802C157.646 203.229 159.917 204.016 155.954 206.18C160.929 206.098 156.263 209.115 160.289 209.624L160.764 208.558L163.613 210.968C159.442 212.92 159.628 208.919 156.573 212.034C155.892 214.986 161.073 215.117 161.321 217.478C158.452 216.593 156.057 214.625 156.263 212.756L154.777 213.838C153.126 213.166 153.642 210.575 153.91 209.279C157.13 211.575 155.004 208.312 157.708 207.443C154.88 207.148 155.231 208.542 153.064 206.82C153.022 208.345 153.249 208.591 152.052 210.493C153.6 206.344 142.453 206.312 145.074 202.737C146.251 204.475 149.203 202.311 150.586 202.163C150.297 201.36 149.719 199.703 149.059 199.015L144.93 199.457C143.299 197.244 152.011 196.85 147.944 194.227C145.508 193.8 146.974 196.358 146.54 195.899C144.187 192.423 150.855 191.472 154.137 188.602C152.919 188.389 150.318 188.307 148.233 187.176C150.669 187.602 151.969 186.881 153.704 188.127C154.798 187.159 153.084 185.913 152.176 184.979C150.607 187.012 148.708 183.978 147.263 183.536C147.758 182.47 149.699 183.962 150.359 184.651C151.082 183.814 154.756 182.929 151.102 182.289C153.683 182.355 157.75 184.995 158.328 186.635L158.823 185.569C160.103 186.372 159.711 186.487 159.236 187.553C161.3 186.586 163.509 186.782 165.347 187.094C164.954 187.225 164.748 186.995 164.356 187.094C163.633 187.93 164.314 188.635 165.698 188.488C169.124 189.406 167.948 187.373 169.723 186.864C169.517 186.405 169.31 185.962 169.104 185.52L158.225 180.568C157.048 178.584 159.773 177.829 161.548 176.452L158.596 175.927C159.009 174.271 160.062 172.73 163.778 173.943C162.766 173.96 162.993 174.189 162.828 174.55C163.22 174.616 163.509 174.714 163.736 174.829C163.922 174.861 164.087 174.894 164.253 174.927C163.406 173.091 162.849 171.943 162.746 171.844C166.874 175.058 168.154 172.222 173.418 172.943L171.891 169.795C170.095 171.582 169.31 169.729 168.629 169.04C171.622 168.975 168.753 166.564 169.248 165.499L169.847 165.597C170.941 164.646 170.776 162.875 170.033 161.596C169.021 161.596 164.273 159.825 161.383 158.923C160.124 161.006 159.009 159.694 157.151 159.792C157.337 159.579 157.399 159.186 157.027 159.12C156.201 158.776 155.871 159.497 154.88 159.514C156.119 161.842 156.367 164.187 160.454 165.285C162.374 164.662 158.741 164.023 160.041 163.301C162.766 164.548 162.126 165.974 161.92 167.843L159.381 168.368L160.619 170.319C159.36 169.467 156.718 169.844 156.346 167.827C153.972 167.991 156.759 169.827 155.892 171.008L159.153 171.762C157.316 171.451 156.8 174.042 154.405 172.09L151.887 168.958L149.575 169.713L149.1 167.138L150.772 167.811C148.749 163.613 157.44 166.876 153.786 162.58C149.864 161.121 149.513 159.727 150.669 157.234C151.453 159.104 153.476 157.53 155.747 158.317C157.543 156.513 154.282 155.759 152.775 154.726C154.922 154.332 156.676 154.07 156.263 155.726C160.681 156.119 155.644 153.496 160.206 153.529C160.433 148.003 145.756 148.511 151.866 142.28L153.683 142.592C151.66 138.394 154.013 136.131 152.795 132.278L157.667 129.474C158.348 130.179 161.734 132.114 164.025 131.359C159.195 132.622 160.743 134.229 158.121 135.688C159.339 135.901 160.268 135.295 161.053 135.049C160.949 136 158.803 136.377 159.546 137.656C160.516 137.64 161.796 136.328 162.291 137.377L159.257 138.951C160.495 141.28 166.152 140.362 164.645 142.969C162.085 142.362 158.369 141.198 157.812 140.148C157.172 141.345 156.346 138.459 154.715 139.509C158.452 141.427 155.355 142.149 157.605 144.576C157.089 144.28 156.346 144.182 156.14 143.592L154.302 146.92C156.614 146.166 156.594 149.823 159.959 149.642C161.569 146.084 159.484 147.068 161.651 143.034C162.333 144.231 165.636 145.871 168.732 146.707C168.588 146.74 168.484 146.789 168.423 146.92C171.684 147.691 172.634 147.084 178.414 147.33C174.409 145.281 177.877 144.166 175.669 141.854C172.531 141.313 171.54 142.969 172.283 144.117L170.301 142.083L171.726 142.526L173.109 137.607C173.212 138.558 175.029 138.951 176.391 139.492C176.556 138.853 177.444 138.263 178.393 137.623C175.359 137.64 173.233 137.459 173.315 136.836C174.244 133.671 177.072 132.015 180.602 130.982C180.54 130.851 180.478 130.72 180.417 130.605C177.279 131.015 174.987 128.113 171.891 126.998C175.09 127.178 173.914 125.44 175.627 124.587C171.973 123.948 166.854 124.391 163.778 125.391C166.998 127.686 167.081 126.735 171.808 127.949L174.76 131.54L171.87 130.654C170.466 132.327 174.223 134.147 170.425 133.868C167.948 132.852 169.579 131.409 167.081 130.408L165.615 131.491C161.982 129.326 169.29 130.605 166.833 128.064C163.53 128.834 166.606 127.834 164.5 126.703C162.188 127.457 165.161 131.031 159.69 130.08C157.357 128.719 166.441 126.079 161.053 124.177L161.672 124.292C162.539 121.849 159.443 120.849 157.523 119.832C159.381 118.848 156.965 117.29 156.821 116.143L158.431 116.241L157.853 114.601C160.722 115.487 157.646 116.487 157.997 117.881L160.991 117.832C157.357 119.291 162.663 120.57 165.14 121.915C162.684 120.012 166.193 116.864 160.392 116.192L163.468 115.208L162.415 114.634C164.727 113.896 168.216 114.88 168.794 116.52C168.03 116.766 167.638 116.897 167.019 116.782C168.299 117.586 170.569 118.356 169.764 120.144L168.237 119.111C167.886 121.357 168.897 123.439 171.787 124.341C173.233 121.144 173.707 117.963 173.769 114.896C167.081 113.716 163.385 112.502 157.151 111.781C156.119 109.682 155.438 106.878 157.853 105.189L159.071 105.402C159.773 104.566 159.484 103.746 158.823 103.058C160.516 102.205 162.085 103.812 163.014 103.222L161.094 100.204C163.922 100.5 163.778 102.976 163.902 104.14C163.674 103.91 163.241 103.451 162.849 103.566C161.589 104.878 166.255 107.616 162.126 108.042C162.787 108.731 159.195 106.567 158.823 108.813C157.192 110.256 160.826 110.896 162.044 111.109C163.654 111.207 164.397 108.829 166.276 109.748C166.152 108.567 164.108 108.01 165.759 106.583C165.883 107.747 169.042 109.469 166.503 109.977C169.352 112.388 176.907 112.371 177.403 111.305C175.029 111.469 174.76 106.993 171.478 109.879C168.526 108.403 168.67 105.927 166.874 104.091L167.473 104.189L166.854 101.959C167.679 102.303 168.34 102.992 169.95 103.09L165.842 99.8765C168.629 101.713 167.927 98.8927 169.248 98.1712C166.812 97.7449 165.099 96.4823 163.613 97.5645C161.755 98.7779 164.892 98.368 165.016 99.5322L161.239 97.7285L161.631 97.5973L158.514 96.4823C158.885 94.2359 165.821 97.7613 162.911 94.7606L158.575 94.9574C159.422 91.6451 164.562 87.5622 162.725 85.119C165.14 85.8732 169.083 86.316 171.478 85.5125C170.673 86.4963 170.693 88.546 171.003 90.0218C170.219 90.2677 166.007 87.9885 167.039 86.4471C159.917 86.9227 171.065 90.5957 163.881 90.4973C161.115 94.4326 170.59 93.7931 166.172 97.0398C169.372 97.2202 167.679 98.0728 170.487 98.368C175.772 97.5645 170.611 93.7768 172.572 91.6451C172.799 91.8747 173.233 92.3338 173.852 92.4322C174.905 90.8744 174.223 90.2021 173.109 89.0379L172.716 89.1691C169.723 87.103 175.194 88.0705 176.659 86.9883C176.205 86.5291 177.237 84.9714 174.863 85.1354L178.043 83.2005L174.451 83.1513C174.327 81.9707 176.701 81.8231 174.595 80.6753L171.395 80.4949L170.095 83.3481C169.145 81.8395 167.06 82.8069 166.482 81.1836C169.868 83.1185 168.34 79.9866 171.313 79.921L169.579 78.6584L170.404 79.0028C172.118 78.1337 169.29 77.8386 169.764 76.7727C167.906 77.9861 165.594 78.724 167.762 80.4457C166.049 79.1831 164.191 76.7399 164.129 76.166C162.869 74.8706 165.367 74.1 165.801 72.9358C166.936 75.2314 175.565 72.5422 172.964 76.9367C172.365 76.8219 172.51 76.4776 172.902 76.3464C168.773 76.7727 172.985 79.052 174.492 80.085C176.866 79.9374 177.382 80.9704 178.786 79.2979C177.237 79.8062 173.625 77.6254 175.669 76.0677L180.685 76.5596L181.428 74.1983L181.655 74.4279C184.958 73.6572 181.201 71.8535 183.203 70.2794C181.49 69.0168 183.203 64.5239 177.815 66.2621C181.057 64.9175 177.134 63.4581 176.556 61.8184L174.368 63.7369C170.92 61.2117 173.191 61.9988 167.597 59.8671C168.98 59.7359 170.136 59.3588 171.581 59.8015C172.056 56.6204 173.769 52.1276 169.764 50.0779C170.136 47.8315 176.081 47.7331 173.955 44.47C173.294 43.7813 169.207 44.798 170.797 42.7647C171.189 42.6335 174.409 44.9292 174.162 42.5843C170.384 40.7642 176.556 38.7802 173.336 36.4845C174.801 35.4023 174.409 33.4018 177.444 33.943C176.639 35.7139 177.093 38.2882 178.559 38.7474C176.721 38.4194 176.68 39.9608 175.338 38.567C172.84 41.1906 177.134 40.4199 175.379 42.7975C176.597 43.0107 178.848 41.6825 177.795 41.1086C181.985 41.2725 179.508 46.0114 184.669 44.0437C185.206 41.4529 176.515 40.3215 181.077 38.2227C183.575 39.2393 181.325 40.5675 185.639 41.8956L187.435 40.1083L184.504 38.6326L185.123 38.731C189.17 35.5991 181.015 35.5171 179.095 32.4836C176.081 34.0741 171.849 31.7949 169.991 33.0083C169.579 31.0242 170.239 29.5977 174.43 29.7616C177.609 33.5822 178.848 30.1552 182.811 33.7298C184.339 33.2379 188.901 34.7956 189.479 32.7787C186.63 30.3683 185.949 33.3198 184.71 30.9914C185.103 30.8766 185.474 30.7455 186.094 30.8603C183.988 29.7288 186.961 29.6632 184.628 28.3023L185.454 28.6302C188.096 27.1709 182.687 26.8101 185.536 25.5639C182.398 25.9739 183.038 24.5637 181.16 23.6454C179.9 24.9572 175.379 25.5147 175.462 28.2203C177.898 28.6466 179.281 28.499 180.396 29.6633L180.21 27.9087C180.582 28.3023 181.201 28.6138 181.676 28.9746L180.293 30.5979C178.682 28.4007 175.978 29.2697 173.48 28.2531C174.678 26.351 172.902 26.6133 173.79 25.4163C177.382 25.6787 180.189 21.9073 182.667 19.7593C182.502 20.1036 182.564 20.5627 182.46 20.7923C184.628 22.514 185.536 19.7921 186.548 19.7757L184.814 18.5131C185.041 18.7426 185.867 19.087 186.403 18.6115C185.846 16.9717 182.254 16.9225 181.676 15.2992C183.678 15.2664 186.61 16.7422 187.704 15.7911C189.459 15.5124 194.145 14.6105 192.534 12.3969C191.791 12.2165 191.399 11.6426 191.11 10.9867C191.213 11.0851 191.275 11.1999 191.42 11.2491L193.67 9.92088C196.994 11.2655 191.915 12.2985 195.239 13.6431L198.459 13.8726C198.418 14.8237 199.718 16.1519 201.349 16.8078C201.989 15.3976 201.164 15.0532 200.606 13.4135C202.65 13.2659 204.095 14.4629 204.301 14.6433L202.485 14.3318C199.698 16.1355 205.396 17.3325 204.632 19.6937C204.467 20.0544 204.26 19.8249 203.641 19.7101C206.634 21.7761 202.237 23.4979 206.242 25.5475L204.59 24.8588C205.87 26.187 208.884 28.827 211.795 31.4506L213.054 31.5161C213.818 31.2702 213.715 32.2048 213.178 32.6968C214.623 34.0085 215.965 35.2711 216.956 36.3042C217.74 36.0254 218.422 35.6483 218.628 35.1891C217.183 34.73 218.525 32.4836 215.181 32.664C217.266 31.6801 214.479 29.86 215.8 29.1221C213.55 30.4503 212.703 28.0071 210.887 27.6792C213.034 27.2856 210.866 25.5639 213.694 25.8755C214.458 25.6295 211.774 26.4986 213.426 27.1709C215.986 28.7614 215.924 24.5473 218.319 26.4986C216.481 24.0554 217.534 20.9891 215.077 18.4475L213.839 19.7593C214.334 18.6934 213.839 16.1027 215.243 15.9715C215.532 16.7914 215.428 17.726 215.924 18.7754C219.124 18.9558 216.068 16.2994 218.05 16.2666L212.931 13.0692L212.662 14.3646C210.763 13.4627 213.302 10.8227 213.88 8.82227C218.195 10.1668 213.798 11.8886 215.428 14.0858C216.997 15.7091 219.722 13.2987 220.672 14.8073C221.725 14.4629 221.663 13.5119 220.589 12.9872L221.415 12.4461C225.317 13.9218 224.243 16.8078 227.546 18.9066C227.133 18.7098 226.679 18.5459 226.225 18.4803C224.574 19.9232 224.553 21.4482 225.503 22.9567C226.803 22.2353 225.977 21.8909 225.544 21.4318C226.535 21.4318 226.865 22.8092 227.918 23.3831C229.177 22.0713 230.292 23.2191 230.994 22.3828C231.881 23.3011 231.551 24.0226 231.076 25.0884C229.528 25.5803 229.033 24.5473 227.051 24.5801C228.166 25.7443 223.397 26.0558 225.585 27.7776C226.555 25.6459 229.838 28.5154 231.118 29.3189L231.283 28.9582C233.554 29.7452 233.616 30.3191 231.469 30.7127C230.581 29.7944 231.283 28.9582 228.929 29.1057C228.991 29.696 229.053 30.2863 229.714 30.975L228.062 30.3027L228.372 33.2379C230.416 33.779 233.306 34.6808 236.341 35.2055C234.421 35.8286 235.907 36.8617 236.588 37.5504L235.742 37.206C233.884 38.4194 235.184 41.3381 237.001 41.6497C235.308 42.5023 225.73 34.6808 227.01 41.2398C226.865 43.7157 232.769 43.0107 234.71 44.5028C234.71 44.5028 234.111 44.4044 233.719 44.5192C233.223 45.585 235.453 45.7818 236.341 46.7001C237.269 46.0934 237.373 45.1587 236.547 44.8144C238.983 45.2407 236.175 47.0608 238.075 47.9627C234.359 46.7329 236.506 49.9959 234.606 49.0777C232.026 51.1273 234.875 53.5377 237.6 54.7839C232.769 56.0465 238.075 57.3583 235.721 59.6375C235.886 59.2768 235.226 58.5881 235.763 58.0962C232.831 56.6204 234.028 60.4902 231.407 58.293C231.84 58.7521 232.996 58.3913 232.563 57.9158C232.274 57.1123 230.994 56.3089 229.611 56.4401L226.824 58.2602L226.143 57.5551L222.261 60.3262C222.86 60.4246 223.624 60.1787 224.016 60.0639C222.179 63.3925 223.975 67.3443 223.294 70.3122C231.758 71.214 226.452 77.773 231.51 80.3965C229.115 79.6587 224.842 79.1339 223.046 79.4455C222.716 78.888 219.371 77.6582 220.156 76.4776C221.539 76.3464 223.17 74.9034 224.677 75.9365C223.913 72.5422 220.92 76.2316 217.823 75.1166C218.401 78.8716 223.232 81.2492 225.09 83.676H224.078L225.854 85.5453C226.514 84.1187 231.324 84.3811 229.507 86.1848L229.28 85.9552C227.195 86.9391 229.425 89.2511 229.012 90.9072L231.716 92.1534C231.283 93.8095 226.101 93.662 222.963 94.0883C222.427 96.6791 226.576 98.368 228.991 100.319C226.679 101.074 225.895 104.96 223.273 102.779C225.11 105.222 237.249 105.238 230.292 108.993L228.186 107.862C228.393 111.748 232.377 117.422 229.962 119.111C222.22 117.372 221.683 123.603 213.963 123.981C215.738 123.866 216.213 125.342 217.142 125.588C216.213 125.866 215.305 126.358 216.853 126.981C218.484 125.538 224.759 128.359 221.849 125.358C227.01 127.031 231.014 129.08 230.54 132.261L227.34 132.081L228.475 129.588C226.101 129.752 226.349 128.457 225.296 127.883C223.19 132.507 217.844 126.965 217.947 131.786C219.991 132.327 219.165 131.999 219.908 133.278C219.846 132.688 217.637 132.491 217.534 133.442L220.032 134.458C214.582 135.918 216.729 131.54 212.889 132.819C210.495 130.867 209.359 127.588 205.23 128.031C203.558 130.999 212.703 131.064 210.66 134.163L208.905 134.426C210.02 135.59 212.827 135.885 214.479 136.557C213.488 136.557 212.724 136.82 212.394 137.525C216.399 139.574 217.121 140.853 221.498 142.772C218.422 138.017 224.883 138.951 222.179 134.065C223.459 134.868 224.223 138.263 228.62 138.64L225.42 138.459C226.989 140.083 228.537 141.69 227.361 143.592L225.626 142.329C227.691 145.002 220.486 146.412 225.688 148.675C226.019 147.97 225.957 147.38 225.503 146.92C226.844 148.314 226.411 149.954 225.771 151.381L230.87 154.578C229.28 154.48 229.053 156.382 226.576 155.365C223.996 157.415 228.702 158.628 229.425 159.891C225.874 161.957 228.042 157.923 223.624 157.529C221.952 160.497 223.087 163.777 225.854 165.597C226.535 165.007 227.113 164.728 227.897 164.794C226.886 164.843 227.071 166.073 226.989 166.761L229.033 167.319C227.546 168.401 226.328 168.188 224.821 167.155C224.347 168.221 228.269 169.68 225.193 170.68C222.798 168.729 225.152 166.45 223.645 165.433C225.441 169.385 217.059 169.073 219.371 174.091C218.38 174.107 216.481 173.205 216.399 174.14C217.018 176.354 220.651 174.894 222.922 175.665C221.745 173.927 223.067 173.189 225.75 172.32L227.422 172.845C226.535 172.877 226.432 173.927 225.564 174.206L228.991 174.615C225.193 174.337 222.179 175.911 223.521 177.305C226.37 176.075 226.204 176.436 230.56 176.239C234.565 178.272 226.39 178.19 230.602 180.469C229.384 180.256 228.599 178.387 227.546 179.945C227.299 181.24 230.271 181.191 231.159 182.109C228.042 180.994 225.668 181.142 221.972 179.928C221.725 177.583 222.076 178.994 220.837 176.665L218.03 178.485C217.637 176.485 214.479 176.911 213.281 176.698C209.834 179.928 217.947 179.436 216.977 181.568C219.082 182.699 217.575 179.551 219.743 181.289C219.144 183.29 221.787 181.83 223.025 184.159L221.601 183.716C219.66 184.339 221.952 185.11 222.22 185.93C223.129 186.848 233.327 185.372 233.306 189.029C232.439 188.816 231.881 188.734 231.51 188.717L205.065 184.077C204.9 187.766 203.868 191.98 201.824 196.178C196.539 196.965 197.716 192.964 195.363 193.128L196.56 191.226C198.769 191.423 196.973 195.325 200.998 193.735C199.636 190.226 202.278 188.783 197.922 185.323C192.638 186.126 198.583 189.652 194.392 191.62C194.785 190.734 194.269 189.963 193.567 189.209C192.762 191.177 191.874 193.276 190.966 195.506L192.204 196.063C192.885 194.555 193.401 193.522 193.608 193.39C193.03 195.391 195.796 197.227 199.615 197.506L199.78 197.145L200.916 197.932L200.09 199.326L200.111 199.293ZM183.018 330.603C182.708 330.406 182.316 330.226 181.82 330.046C182.336 330.226 182.708 330.226 183.018 330.603ZM189.851 159.087C189.108 161.76 187.91 164.449 187.27 167.024C195.136 162.645 201.06 159.579 200.4 167.401L200.916 167.942C201.907 166.958 202.134 165.203 201.7 163.515C199.099 162.072 189.541 157.333 188.674 157.349C186.527 157.743 188.798 158.53 188.096 159.366L189.851 159.104V159.087ZM202.629 157.677C203.579 156.185 201.865 156.464 200.379 156.169C200.544 156.71 200.689 157.267 200.854 157.808C201.246 157.628 201.783 157.546 202.629 157.693V157.677ZM198.872 156.201C198.831 156.365 198.748 156.513 198.542 156.578L198.872 156.201ZM195.032 185.913C195.032 185.913 194.97 185.815 194.95 185.749C194.805 186.11 194.681 186.471 194.516 186.832C194.764 186.7 194.97 186.422 195.032 185.897V185.913ZM198.934 182.945L196.188 182.47C196.065 182.798 195.941 183.142 195.796 183.486C197.055 183.421 198.15 183.339 198.913 182.945H198.934ZM208.657 173.32C205.396 172.549 205.375 170.434 201.556 170.155C200.586 169.975 200.173 170.401 199.842 170.893C199.698 171.451 199.553 172.041 199.409 172.664C199.966 172.713 200.482 172.861 200.957 173.091C201.473 172.484 202.443 172.107 204.776 172.451C199.553 173.845 208.327 174.025 206.903 175.698C209.566 176.354 209.689 173.878 208.657 173.32ZM207.253 40.2231C207.584 40.1903 208.451 40.0591 209.545 39.8624L211.362 41.1578C210.391 43.2894 204.776 44.8144 209.38 46.946C208.141 47.8151 205.602 48.1922 203.496 48.5858C203.682 48.143 203.909 47.7331 204.239 47.4051C197.675 41.6497 211.713 44.8472 207.253 40.2395V40.2231ZM198.893 64.9011C198.666 64.6715 198.046 64.5567 198.046 64.5567C204.756 69.6891 206.531 73.7556 206.077 76.3628C208.884 75.9693 211.196 73.7064 212.414 72.6406L215.511 73.7556L212.972 74.2639L215.738 76.1004C217.906 75.7069 217.555 74.3131 219.247 73.4441C218.649 73.3457 215.139 70.2302 213.24 69.3284L210.887 71.6076C211.816 71.0009 211.279 67.8362 210.556 66.5572C208.967 66.4752 206.386 68.5085 209.813 68.9184C207.439 69.0824 207.584 66.6064 204.941 68.0658C202.547 66.1145 204.838 63.245 206.097 61.9332L210.082 61.8676C211.713 60.4246 205.375 60.6542 207.77 58.9653C208.41 61.1953 212.146 58.7685 212.332 60.523C213.859 60.0311 216.523 60.687 216.337 58.9161C211.196 57.2435 219.743 57.2107 215.201 55.653C216.894 54.8003 218.298 56.768 219.103 54.9971C216.481 52.8163 214.499 52.8491 210.68 52.5703C209.483 54.456 215.511 54.9479 214.479 56.4893L208.141 53.0786C207.171 53.6197 207.047 54.0461 207.295 54.4232C206.964 53.7673 206.015 53.1934 204.714 52.6851C203.992 52.3899 203.352 52.1276 202.815 51.8816C202.671 53.6689 202.464 55.2431 200.833 55.4562L198.996 55.1283C197.262 55.6858 198.521 56.7844 199.842 57.3091C199.946 58.9161 202.423 60.6214 199.987 60.8673L198.335 60.1951C198.748 62.1791 198.955 62.4087 198.831 64.8847L198.893 64.9011ZM190.532 129.195C197.386 128.277 203.476 127.211 202.65 121.603L203.083 122.062C207.522 119.439 197.799 116.372 202.753 113.158C205.21 114.913 204.983 114.815 210.701 116.881L208.905 115.028C212.559 115.667 210.763 113.814 211.031 112.519L215.346 113.847C214.025 114.585 213.447 116.585 214.458 116.569C214.004 116.11 208.74 119.012 209.917 120.767C212.91 120.718 211.919 117.094 216.688 118.881C214.747 117.389 217.72 117.34 216.77 115.815C218.711 117.307 220.816 116.323 222.901 117.471L222.055 115.011C223.046 114.995 224.037 118.619 227.815 116.782C226.308 115.749 228.434 113.24 225.234 113.076H226.225C227.03 111.273 221.745 112.076 223.707 109.928C222.096 109.83 220.961 110.207 221.229 111.027C221.911 111.732 224.099 111.929 224.45 113.322C221.911 113.847 224.863 111.666 220.569 112.453C218.422 112.847 222.158 116.192 217.451 114.978L218.257 113.208C215.057 113.027 215.325 111.732 212.724 111.666C211.609 110.518 215.305 109.617 212.58 108.37C210.536 107.813 206.634 108.485 208.43 106.681C213.281 105.419 212.621 101.09 212.043 99.4502L210.082 97.9581C208.1 97.9909 210.185 100.664 207.687 99.647L207.047 97.417L208.265 97.6301C208.575 96.9086 207.315 96.1216 206.655 95.4165C208.926 96.1872 207.893 97.7449 211.258 97.5645C211.981 96.5643 213.24 96.4495 212.662 95.4821C212.889 95.6952 213.199 95.892 213.674 95.892C215.243 93.8587 210.061 93.7276 209.008 93.1537C204.797 90.8744 204.838 95.1049 201.411 94.695L199.966 88.4968C201.019 89.0707 202.072 89.6282 203.455 89.497C205.107 88.0541 206.056 89.5626 206.035 87.4474C201.453 87.4146 203.352 84.6762 200.813 83.0693C202.732 82.4462 203.104 82.315 203.063 83.84C206.035 83.7908 205.024 81.6919 205.354 80.9868C204.652 80.5441 204.26 79.8062 203.62 79.3143C202.093 79.8554 200.255 79.5275 199.079 78.1501L198.459 78.0517C197.51 80.1834 194.041 83.4136 196.994 84.8894L195.548 84.4467C192.823 86.8407 200.524 90.1201 194.847 91.0384C192.638 90.8416 194.31 91.5139 191.11 91.35L193.505 93.3012L192.08 92.8585L192.596 96.0232L191.998 95.9084C194.805 97.5153 197.097 98.7779 198.975 99.7946C200.379 99.8601 200.813 99.7782 201.804 100.319C202.464 100.844 202.547 101.221 202.34 101.565C201.886 102.32 199.842 102.746 198.955 103.664L198.79 100.729C196.436 100.401 193.959 100.549 192.204 101.91C192.142 101.32 190.305 101.008 189.995 101.713C190.615 101.811 191.378 103.681 193.319 103.058C194 105.862 187.477 110.092 191.729 114.487C189.211 111.355 188.385 116.782 187.642 113.388C183.699 115.569 191.255 115.552 190.511 117.914C189.128 118.061 190.78 116.618 188.117 115.962C186.341 119.865 193.814 122.915 192.411 126.703L189.438 126.752C189.768 127.49 190.14 128.326 190.511 129.179L190.532 129.195ZM193.732 136.934C194.021 137.689 194.31 138.443 194.599 139.23C194.64 139.165 194.661 139.083 194.702 139.017L196.952 141.329C198.191 140.017 201.514 139.246 202.898 141.214C201.68 141.001 200.152 141.493 199.471 140.804C197.613 142.018 195.714 144.756 200.235 144.198C196.168 141.575 205.974 143.854 202.96 141.804C205.808 142.952 204.425 143.936 205.664 144.969C203.29 143.854 200.111 144.969 198.851 146.461C199.533 147.15 198.728 148.937 199.842 150.085C202.609 149.806 204.116 150.823 204.921 149.052C205.602 149.741 206.097 150.79 204.611 151.889C204.178 151.413 203.889 150.61 202.898 150.626C200.338 151.266 200.379 152.135 199.285 152.578C199.409 152.971 199.533 153.365 199.657 153.742C199.904 153.643 200.214 153.561 200.606 153.496L202.939 154.857C201.762 153.119 204.26 154.119 205.85 154.217C202.65 154.037 205.354 155.283 205.437 155.873L208.905 154.758C210.556 155.431 206.325 156.808 209.689 156.628C211.196 154.02 210.701 152.971 209.834 150.511L207.15 151.381C205.457 148.577 211.774 149.888 211.836 146.822C209.524 145.461 211.96 142.231 207.15 141.968C208.595 142.411 211.547 140.247 209.442 139.115C205.127 137.787 204.756 134.262 202.671 135.246C202.547 136.18 204.9 137.558 201.969 138.197L201.164 136.328L198.686 137.426C199.595 136.836 197.241 136.803 193.691 136.951L193.732 136.934ZM164.108 176.846L164.046 176.911C164.046 176.911 164.046 176.862 164.046 176.829H164.087L164.108 176.846Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.632 38.2559C168.65 38.2887 170.529 39.2069 170.983 39.666C171.128 39.3053 171.685 38.8298 170.632 38.2559Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M149.822 296.301L149.905 300.974V305.614C149.946 302.942 150.235 300.515 149.822 296.301Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.367 72.3783C179.675 69.5907 176.351 68.2297 175.67 65.4258C171.458 68.902 181.574 70.4925 177.301 73.3785L181.367 72.3619V72.3783Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.677 70.7895C169.434 70.4943 169.889 73.0687 172.655 72.7736C171.87 70.9043 169.166 71.7733 169.6 70.1172L165.677 70.7731V70.7895Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M227.938 60.9648L229.816 61.8667L229.155 61.178L227.938 60.9648Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.196 83.317L167.37 82.9727L166.111 84.3008L168.196 83.317Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.844 62.3419L236.711 61.1449L235.06 60.4727L235.844 62.3419Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M215.201 72.347L214.086 71.1992C214.313 71.4288 212.682 72.8717 215.201 72.347Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.07 91.5796L167.411 92.9734L167.783 92.8422L166.441 91.4648L166.07 91.5796Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M224.903 81.3474C227.813 80.7079 225.543 83.5611 228.164 82.1181C227.813 80.7079 226.286 81.2163 224.903 81.3474Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.487 96.6621C204.487 96.8425 204.57 97.0392 204.879 97.236C204.776 97.0065 204.632 96.8261 204.487 96.6621Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.487 96.6644C204.528 96.0905 205.664 95.5494 204.858 95.123C203.517 95.7953 203.991 96.0741 204.487 96.6644Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.714 103.337L204.941 102.813C206.325 103.403 206.118 103.141 205.024 102.616C204.962 102.058 204.054 102.042 203.434 101.96C203.084 101.829 202.733 101.714 202.34 101.566C202.712 101.747 203.063 101.927 203.352 102.058C203.269 102.927 203.373 103.452 204.694 103.321L204.714 103.337Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.963 126.113C156.161 124.211 156.697 123.736 158.906 123.932C159.732 122.112 155.892 122.244 155.087 121.096C155.376 123.211 154.323 123.588 154.963 126.113Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M155.086 121.08C155.066 120.85 155.024 120.621 154.962 120.342C154.88 120.637 154.962 120.867 155.086 121.08Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.466 96.5469L232.789 97.8915L232.356 97.4323L229.466 96.5469Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.662 128.949C153.827 128.588 153.765 128.014 154.55 127.752C152.32 127.555 153.497 129.293 153.662 128.949Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.634 123.211C199.017 123.063 198.274 121.784 198.831 121.309C198.501 122.03 194.372 122.456 197.634 123.211Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.457 134.902C162.622 134.541 164.15 134.049 165.967 134.36C164.914 133.787 161.053 132.918 162.457 134.902Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M197.014 126.751L197.778 126.505L196.436 125.111L197.014 126.751Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M230.086 123.341C227.527 121.734 223.542 125.456 221.478 122.783C218.485 125.997 225.235 122.685 224.657 125.112C225.648 123.718 229.034 123.144 230.086 123.324V123.341Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M224.636 125.111C224.492 125.308 224.388 125.538 224.368 125.784C224.512 125.521 224.595 125.308 224.636 125.111Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M206.53 145.51C206.262 145.28 205.973 145.116 205.663 144.969C205.87 145.149 206.138 145.329 206.53 145.51Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M226.329 133.049L222.49 130.639C225.029 132.246 224.636 136.017 228.6 135.935C229.488 134.754 228.517 133.229 226.866 132.557L226.329 133.033V133.049Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.898 155.89L151.391 154.857L150.854 156.054C151.474 155.726 154.343 156.481 152.898 155.89Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.752 156.27L150.856 156.039C150.856 156.039 150.71 156.155 150.752 156.27Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M204.879 141.181C205.209 140.46 205.127 139.886 204.466 139.197C203.702 139.443 202.897 141.214 204.879 141.181Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M158.204 162.94L157.626 161.316L157.812 163.071L158.204 162.94Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.999 170.141L150.235 170.387L151.577 171.78L152.341 171.518L150.999 170.141Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.508 163.547C230.004 162.481 226.494 161.481 225.73 161.744V163.859C228.889 163.449 225.689 163.268 226.556 162.088L229.508 163.564V163.547Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.249 225.809C151.206 225.251 152.547 223.005 154.529 222.956C155.355 223.3 156.098 224.579 157.419 223.841L152.444 221.808C155.789 219.512 159.03 223.923 160.764 225.186C161.589 222.742 158.266 221.873 158.472 219.25C157.956 220.004 156.656 220.447 155.541 220.808C151.949 220.758 153.683 218.364 153.518 216.61C151.887 217.659 150.607 216.954 149.244 216.101C149.141 215.954 148.935 215.839 148.708 215.774C148.543 215.675 148.377 215.577 148.212 215.478V215.692C147.799 215.659 147.304 215.692 146.643 215.806C147.593 217.315 144.517 218.315 144.414 219.25C150.318 218.561 145.549 222.513 147.283 223.775L147.779 225.169V225.678C147.098 225.76 146.313 225.579 145.219 224.743C146.334 225.448 145.776 227.596 147.676 227.481L147.448 232.45C147.201 232.597 146.891 232.745 146.458 232.827C146.808 233.007 147.118 233.056 147.407 233.04L146.354 254.471C146.891 253.455 148.295 252.618 148.997 251.569C152.754 253.356 149.822 249.831 153.456 250.454C154.736 251.241 154.24 252.29 153.311 252.897C155.149 253.225 156.841 252.389 159.05 252.586C161.569 249.995 152.733 249.208 154.261 246.633C156.47 246.83 158.369 247.732 158.183 245.977L158.637 246.437C156.346 243.551 163.798 244.469 157.832 242.468L161.032 242.649C158.699 241.288 158.844 238.828 158.493 237.418L159.112 237.533C155.706 233.483 158.472 235.319 157.213 230.875L160.826 233.04C162.477 231.597 158.431 231.089 158.906 230.023C159.525 230.121 161.878 229.974 162.395 231.023L157.048 225.481C154.715 224.12 154.674 225.645 153.311 225.792L153.249 225.809Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M158.451 219.28C158.637 219.001 158.74 218.69 158.637 218.312C158.513 218.673 158.472 218.985 158.451 219.28Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.252 255.995L146.334 254.52C146.107 254.962 146.004 255.438 146.252 255.995Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.928 211.377C150.214 212.23 149.657 210.59 148.439 210.377L148.274 213.673C149.513 213.706 150.875 214.099 152.01 214.066L151.928 211.361V211.377Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M145.9 214.544C146.746 214.691 147.489 215.069 148.191 215.495L148.274 213.691C147.345 213.658 146.498 213.839 145.879 214.56L145.9 214.544Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M211.795 216.873L211.877 217.463L212.765 218.382L211.795 216.873Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M205.788 225.792C207.708 225.169 206.366 223.791 205.932 223.332C205.891 224.857 205.23 224.168 205.788 225.792Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.958 224.727L226.928 226.235L227.299 226.12L225.958 224.727Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.956 267.473C157.997 267.702 158.059 267.932 158.1 268.178C158.141 267.866 158.079 267.653 157.956 267.473Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M155.892 255.093C152.052 258.34 153.064 252.716 148.378 253.585L149.761 255.503L148.543 255.29L148.77 257.569C150.917 257.208 151.082 256.864 153.291 257.061C152.197 260.045 150.587 257.897 147.614 259.963L147.738 263.325L147.098 263.013C147.119 263.292 147.387 263.439 147.738 263.554C147.882 267.309 148.006 271.048 148.068 274.721C149.616 276.852 152.176 273.885 155.273 275.59C155.521 273.261 158.225 269.9 153.807 269.424C154.406 269.539 155.624 269.769 156.181 269.326L152.672 267.752L151.392 268.982C147.903 267.408 149.1 263.046 151.392 262.341C152.424 264.932 156.924 263.931 154.22 267.309C155.355 267.211 157.399 266.686 157.936 267.506C157.028 263.292 159.34 259.652 155.872 255.11L155.892 255.093Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.394 296.086L153.001 296.004C153.208 296.103 153.352 296.135 153.394 296.086Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.157 294.825L150.153 292.447L150.008 295.464L152.981 296.022C152.279 295.678 150.916 294.464 152.155 294.185L154.137 294.841L154.157 294.825Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M147.903 289.973C148.935 291.629 152.507 291.924 154.282 291.235C155.706 292.826 150.339 291.596 153.931 292.957C156.512 293.187 155.294 291.268 154.881 290.825L147.903 289.973Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.35 278.624L152.775 279.181L153.291 278.115L151.35 278.624Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.775 279.182L152.238 280.231C153.353 280.231 154.426 280.247 155.21 280.133L152.775 279.182Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.875 283.002C150.545 283.445 150.276 283.92 150.091 284.527L150.875 283.002Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.928 281.84H151.453L150.854 283.004C151.185 282.578 151.535 282.217 151.907 281.84H151.928Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.238 280.248C149.719 280.248 147.056 280.248 147.572 281.839H151.453L152.238 280.248Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M221.477 235.27L222.819 236.647L223.211 236.532L221.869 235.139L221.477 235.27Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M218.69 242.846C219.103 243.19 219.557 243.469 220.011 243.715C219.763 243.354 219.35 243.059 218.69 242.846Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.473 249.273C232.851 250.732 232.273 246.961 230.973 249.831C228.599 249.995 225.667 248.502 226.926 247.174C229.135 247.371 228.268 248.568 230.58 247.814C228.082 246.797 229.837 246.518 226.493 246.699C224.511 245.075 222.158 244.813 220.052 243.682C221.394 245.6 217.719 249.322 221.848 251.88C225.77 253.356 231.303 252.799 237.083 253.044C238.466 252.913 239.333 249.519 235.514 249.257L235.473 249.273Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.419 247.041C241.75 246.32 241.543 246.09 241.089 245.631C239.107 245.664 241.378 246.451 241.419 247.041Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.642 261.915C197.447 262.095 198.355 263.456 199.8 263.243L198.933 261.193C198.768 261.652 197.736 261.767 196.642 261.915Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M198.562 260.291L198.954 261.193C199.037 260.98 198.954 260.701 198.562 260.291Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M196.127 261.98C196.292 261.963 196.478 261.931 196.643 261.914C196.478 261.881 196.292 261.881 196.127 261.98Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M148.811 287.315C147.242 287.151 148.068 288.036 148.481 288.496C148.667 288.184 149.245 287.758 148.811 287.315Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M148.729 317.832L147.305 318.276C148.11 318.177 148.523 318.128 148.729 317.832Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.105 337.736C187.394 337.835 187.621 337.95 187.828 338.081C187.662 337.966 187.435 337.851 187.105 337.736Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M187.827 338.081C188.921 338.917 186.32 340.098 188.012 341.147L187.455 340.934L188.157 342.311C188.405 341.229 189.499 339.097 187.827 338.064V338.081Z\",\n    fill: \"#5C4F47\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M276.306 114.549C276.306 114.893 276.74 115.008 276.946 115.074L277.111 111.188C276.636 111.302 276.017 112.401 275.769 111.647C275.233 111.958 275.625 112.991 276.244 113.172L275.563 112.86C276.43 113.778 274.613 114.336 274.118 113.745V113.827L277.462 116.418C277.71 115.516 276.306 115.68 276.306 114.582V114.549Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.002 194.454C270.857 193.946 270.692 193.88 270.527 193.93C270.651 194.11 270.795 194.29 271.002 194.454Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.247 116.994L279.3 117.814C279.032 117.486 278.639 117.207 278.247 116.994Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.98 111.057C261.98 111.057 261.877 111.057 261.794 111.057L262.331 111.419C262.207 111.271 262.104 111.156 261.98 111.041V111.057Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.468 134.768C281.488 134.85 281.508 134.915 281.528 135.031C281.528 134.932 281.508 134.85 281.468 134.768Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.325 100.285L257.274 102.056C256.799 101.81 256.903 102.646 256.345 102.269C256.407 102.4 256.572 103.024 256.841 102.876V102.515C258.224 103.483 258.802 102.942 259.814 104.499C260.722 103.581 259.958 103.155 259.318 102.63C259.235 102.466 259.194 102.318 259.153 102.171L257.212 100.662L256.325 100.302V100.285Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.198 170.005L263.653 170.087C263.426 169.988 263.219 169.627 263.198 170.005Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M277.32 116.664C277.588 116.697 277.918 116.812 278.249 116.976L277.464 116.369C277.464 116.369 277.382 116.566 277.34 116.664H277.32Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.243 115.255L274.119 113.796L273.396 113.238C273.644 113.812 273.809 114.468 274.243 115.272V115.255Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.417 132.49C282.499 135.508 280.765 131.703 280.27 133.064C280.435 133.917 281.219 134.229 281.447 134.753C280.869 132.343 284.089 135.163 283.779 132.736C285.224 133.13 285.286 134.524 284.853 135.327C283.408 136.213 283.862 134.491 282.499 134.229C282.685 135.196 282.954 135.048 283.717 135.475C283.325 136.983 285.307 138.672 283.304 139.525C283.573 140.64 284.233 140.591 284.956 141.23C286.463 141.394 285.823 139.623 287.02 139.246C286.897 139.328 286.628 139.492 286.422 139.426L286.793 138.492C286.236 139.377 285.286 138.328 285.204 137.836C285.204 137.492 285.162 136.787 285.575 136.885L285.885 137.426C286.401 136.754 284.853 135.885 285.699 135.18C286.029 135.147 286.195 135.426 286.401 135.475C285.41 134.638 285.513 133.851 284.832 132.638L286.298 133.376C284.688 132.376 285.266 130.211 286.215 128.735C285.947 128.899 285.761 129.195 285.493 128.998C285.183 128.096 286.236 127.473 287 127.899C285.802 126.997 288.197 124.636 286.649 123.423L279.341 117.766C279.527 117.979 279.671 118.192 279.712 118.422C278.371 118.864 278.515 119.143 277.338 118.241C277.978 119.11 279.052 118.815 279.052 120.094C278.412 119.569 276.926 119.405 276.698 120.619C277.855 123.701 281.488 125.85 283.243 128.752C282.231 128.834 282.396 131.064 282.107 132.146C281.054 131.703 280.765 130.883 280.6 130.047C280.497 130.572 280.435 131.474 280.352 132.146L282.458 132.49H282.417Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M279.384 125.324C279.384 125.324 279.239 125.473 279.177 125.555C279.26 125.522 279.322 125.44 279.384 125.324Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.601 129.816C280.601 129.816 280.539 129.816 280.498 129.816L280.56 130.079C280.56 129.997 280.601 129.882 280.601 129.833V129.816Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.006 117.323C274.717 117.126 274.655 116.995 274.366 116.814C274.449 116.929 274.532 117.077 274.614 117.208C274.738 117.339 274.883 117.405 275.006 117.323Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M276.823 116.765L277.236 116.88C277.236 116.88 277.298 116.748 277.34 116.683C277.112 116.65 276.927 116.683 276.823 116.765Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M272.757 143.754L272.963 144.05C272.963 143.869 272.86 143.803 272.757 143.754Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.539 135.8C280.498 134.75 279.032 135.636 279.094 134.144L278.991 134.57C278.392 133.488 278.785 131.619 278.785 130.356C279.383 130.52 279.548 129.618 280.477 129.782C280.292 128.913 280.126 128.044 279.197 127.568C279.548 127.044 278.723 126.207 279.156 125.535C278.578 125.814 277.298 124.502 277.897 126.191C277.835 126.06 277.69 126.142 277.628 125.994C276.782 127.044 278.103 127.503 278.083 128.438C277.505 128.979 277.236 127.503 276.989 128.028C277.443 129.192 276.142 131.619 278.248 131.602C278.351 132.438 277.897 132.537 277.484 132.783C279.652 134.177 276.307 137.669 279.156 137.735C279.074 137.243 279.156 136.456 278.578 135.734L280.539 135.8Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.068 119.076C275.068 119.076 275.068 119.224 275.027 119.273C275.027 119.208 275.068 119.142 275.068 119.076Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.007 106.104L285.845 106.612C286.154 109.121 285.597 110.006 285.556 112.204C285.287 112.368 285.143 112.089 285.06 111.958C285.205 113.499 284.689 115.778 285.494 116.926C285.452 117.418 284.792 118.681 284.276 118.172C284.42 118.418 284.565 118.697 284.503 118.959C283.821 119.009 284.338 118.336 283.801 118.304C283.739 118.517 283.615 118.599 283.801 118.648C283.243 118.271 281.509 118.959 281.633 117.254C283.223 116.647 281.757 118.435 283.491 118.107C283.532 117.549 282.851 117.582 282.645 117.533C282.727 116.811 283.161 116.844 283.553 116.893C283.037 116.598 283.822 115.713 283.037 115.319C282.975 113.909 284.338 115.434 284.358 114.516L282.645 113.925L283.058 112.417C282.562 110.203 280.023 112.63 279.156 110.088C280.044 110.449 281.633 109.498 282.067 108.334C282.087 109.039 283.161 110.367 282.604 111.253C284.028 110.023 282.686 113.007 284.276 112.4C283.574 111.745 283.512 110.695 283.966 109.892L284.11 110.17C284.338 109.301 282.542 108.58 283.305 107.416C283.285 106.809 283.76 106.94 284.172 107.071C283.945 106.563 283.615 106.088 284.007 106.104ZM284.296 107.416L284.09 108.203C284.379 108.022 284.4 107.727 284.296 107.416Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M264.726 76.1642L264.808 75.7051C264.747 75.8854 264.726 76.033 264.726 76.1642Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.566 65.5383L259.195 64.8496C259.195 65.112 259.36 65.3251 259.566 65.5383Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M264.932 44.8303C265.077 44.7317 265.221 44.6167 265.345 44.4688C265.18 44.4688 265.035 44.6167 264.932 44.8303Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.628 65.6722C259.628 65.6722 259.648 65.6392 259.669 65.6392L259.566 65.5566L259.628 65.6887V65.6722Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.38 80.5586C259.421 80.6572 259.462 80.7558 259.545 80.8708C259.524 80.7229 259.462 80.6408 259.38 80.5586Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M264.355 80.084C264.396 80.199 264.437 80.2976 264.52 80.3798L264.355 80.084Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.081 95.9883L260.308 96.6278C260.308 96.3162 260.205 96.1359 260.081 95.9883Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.136 81.69C263.136 81.69 263.281 81.7725 263.364 81.789C263.323 81.7065 263.219 81.657 263.136 81.69Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.319 35.8936C268.588 35.746 268.918 35.3689 269.186 35.5493C268.835 35.2213 267.948 35.2049 268.319 35.8936Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.543 40.6641C282.419 40.6971 282.315 40.7631 282.274 40.8456C282.523 40.8456 282.564 40.7631 282.543 40.6641Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.789 96.645L283.202 96.8587C283.016 96.6943 282.892 96.6286 282.789 96.645Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M283.141 91.8398C283.141 91.8398 283.203 91.8564 283.244 91.8729C283.203 91.8564 283.182 91.8563 283.141 91.8398Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.009 89.709C259.009 89.709 258.905 89.709 258.863 89.742C258.926 89.841 258.968 89.7915 259.009 89.709Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.25 68.2441C280.25 68.2441 280.043 68.3099 279.858 68.4249C279.961 68.4742 280.085 68.4249 280.25 68.2441Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.331 72.8027C278.331 72.8027 278.247 72.8522 278.205 72.8852L278.331 72.8027Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.199 36.7793C263.158 37.0089 263.199 37.1892 263.219 37.3204C263.26 37.1564 263.26 36.9761 263.199 36.7793Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M283.222 91.8555C283.346 91.9048 283.449 91.9869 283.594 92.102C283.449 91.9705 283.325 91.9048 283.222 91.8555Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.006 60.9805L275.109 61.129L275.171 61.0465L275.006 60.9805Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.978 58.5861C276.101 58.6681 276.225 58.7173 276.349 58.7665C275.936 57.8811 276.535 56.3233 275.358 56.0938C275.358 56.3889 274.574 57.8811 273.893 57.5859C274.161 58.1926 273.273 59.0617 273.438 59.3896C274.14 58.4222 274.45 59.324 274.822 59.9963C274.429 60.5866 273.872 59.8487 273.624 60.357L273.665 61.7672L273.893 60.5538L275.028 60.9637C275.028 60.9637 274.966 60.8818 274.925 60.8326C274.512 58.7501 276.618 60.7178 275.998 58.5697L275.978 58.5861Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M276.348 58.7676C276.41 58.8991 276.493 59.0141 276.617 59.1127C276.617 58.9155 276.493 58.8333 276.348 58.7676Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.744 50.4053C278.702 50.2903 278.661 50.1753 278.579 50.0273C278.62 50.0931 278.682 50.2574 278.744 50.4053Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.623 112.188C273.953 112.155 274.717 110.975 273.83 110.975C273.726 111.335 273.602 111.68 273.499 112.04L273.623 112.188Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.089 27.2168C275.048 27.348 275.027 27.4792 275.048 27.6267C275.089 27.6595 275.131 27.6923 275.172 27.7087C275.317 27.6267 275.172 27.3644 275.089 27.2168Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.499 57.209C273.623 57.4391 273.747 57.5377 273.892 57.6034C273.83 57.4555 273.726 57.324 273.499 57.209Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M277.195 27.216C277.463 27.0521 277.855 26.8225 278.206 26.8061C278.227 26.4618 277.793 26.1994 277.649 25.8223C277.752 26.2322 277.649 26.6913 277.195 27.216Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.211 112.894C273.273 112.992 273.335 113.107 273.376 113.222L273.149 113.041L272.839 113.861C272.881 113.96 272.942 114.074 272.963 114.206C272.942 114.156 272.839 114.107 272.757 114.074L272.633 114.337C273.52 115.025 274.099 116.682 274.615 117.173C274.966 117.813 275.151 118.584 275.069 119.059C275.11 118.616 274.966 118.01 274.449 118.174C273.871 119.059 272.344 119.453 273.562 121.06V120.141L275.44 122.257C274.594 122.945 274.511 121.191 273.81 120.896C274.697 122.535 272.055 123.782 273.706 124.569C272.695 124.634 271.002 124.765 271.064 125.815C272.241 125.093 271.766 126.471 273.025 125.88C273.582 126.258 272.612 127.045 273.355 127.127L272.942 127.012C271.27 128.75 273.727 129.422 274.511 130.209C274.821 132.374 274.119 133.341 274.202 135.096C273.52 135.145 271.642 135.571 271.683 136.276C272.571 136.637 272.922 138.228 274.099 138.424C274.656 137.178 273.17 137.359 272.922 136.604C274.181 136.014 274.14 136.588 274.904 135.752C274.388 136.424 275.399 138.883 274.202 139.605L274.057 139.326C273.293 140.507 270.403 140.654 272.055 142.72L272.736 143.704C272.612 143.655 272.488 143.639 272.385 143.622C272.199 145.196 270.878 144.721 271.848 146.492C271.766 146.361 271.642 146.443 271.559 146.295C270.857 147.262 272.137 148.296 272.385 149.05C271.394 149.476 271.435 148.919 270.734 148.607C270.279 150.329 271.869 152.264 273.004 153.379L272.385 154.477C272.013 153.805 271.023 152.952 270.424 153.149C270.589 153.772 271.064 153.657 270.837 154.527C270.217 154.363 269.66 153.985 268.896 153.543C267.782 155.314 271.085 154.002 269.123 155.215C269.082 155.789 269.99 156.133 270.734 156.215L269.701 157.216C270.651 157.363 270.651 158.626 270.754 159.462C271.167 159.577 271.807 158.823 271.456 158.495C272.199 158.577 272.53 159.478 272.488 160.036C270.465 160.184 272.612 163.758 270.279 163.02C270.837 165.595 270.878 169.186 271.642 170.891C271.064 171.432 270.981 172.564 270.073 171.858C269.97 173.908 272.013 175.023 271.374 177.056C271.105 177.22 271.374 176.138 270.713 176.187C271.477 177.548 269.763 178.598 270.217 180.68C270.197 180.336 269.784 180.221 269.578 180.172C269.908 180.139 270.238 181.041 270.548 181.582C270.362 181.877 270.321 181.172 270.052 181.336C268.917 185.304 271.539 188.42 271.291 192.388C271.353 191.256 270.052 190.797 269.495 190.765L269.433 191.88C270.073 192.322 270.052 193.159 270.527 193.864C270.279 193.946 269.99 194.274 269.681 193.929C268.256 196.094 271.993 197.422 271.188 200.095L268.628 196.766L267.658 197.553L266.481 196.094C265.717 196.93 267.389 197.717 266.378 197.799C266.089 197.619 266.213 197.176 265.655 197.143C265.222 197.963 265.985 198.045 266.151 198.668C264.148 196.996 264.313 193.798 263.859 192.076C263.715 191.798 264.355 192.322 264.561 192.371C264.52 191.666 265.18 191.256 264.85 190.371C264.004 189.797 264.189 190.781 264.086 191.207C263.343 191.125 263.384 190.912 263.302 190.42C264.313 190.338 263.756 187.764 265.015 187.174C264.809 184.583 262.393 187.518 262.93 185.009L264.107 184.288C263.281 182.795 262.559 180.877 262.868 179.221V179.565C263.384 179.811 263.694 179.434 263.962 179.27C264.499 178.024 263.157 176.86 264.334 176.138C263.157 174.679 262.352 172.268 261.795 170.612C263.343 170.202 262.992 172.777 263.921 173.482L263.983 171.99C263.983 172.908 264.52 173.285 265.366 173.859C265.697 172.564 264.396 172.104 264.066 170.858C264.479 170.957 264.747 170.809 264.768 170.235L263.756 170.055C263.756 170.055 263.921 169.989 263.983 169.809L263.467 167.595C263.013 168.054 262.146 168.054 262.104 168.612C262.703 168.431 262.806 168.907 262.765 169.481C262.125 168.973 262.187 170.022 261.65 169.989C261.733 168.841 261.65 167.448 261.403 166.693L262.332 166.48C262.621 165.398 262.146 164.234 262.435 163.512L262.91 163.758C263.24 162.463 262.703 161.167 263.653 160.02C262.641 158.823 261.815 157.33 260.763 156.363C259.586 155.822 262.414 152.985 260.783 151.624C260.907 151.542 261.65 152.559 262.084 153.018C262.311 152.149 260.845 151.411 262.125 151.181C261.609 153.133 263.137 151.099 263.446 152.001C263.446 151.083 263.281 150.116 262.848 149.64C262.786 151.132 261.134 149.066 261.609 150.575C260.597 149.378 260.247 147.771 260.721 146.41C261.258 146.443 261.526 146.279 261.774 145.77L261.01 145.328C261.176 144.688 261.877 146.607 262.228 145.311C260.948 143.934 263.178 141.277 260.721 140.622C261.754 139.621 261.63 142.606 262.91 141.097C263.777 142.015 262.682 143.229 263.921 143.557C263.611 142.671 264.995 143.262 265.036 142.704L264.313 141.704L264.251 141.917C263.157 140.228 263.839 137.637 263.735 135.522C262.559 133.702 260.804 132.423 261.052 130.291C261.754 130.947 261.857 128.537 263.137 129.931C263.839 128.963 263.116 127.963 262.579 127.93C262.352 128.799 262.393 128.225 262.084 128.963C261.444 128.455 261.526 127.307 261.981 126.848C261.919 127.061 262.043 126.979 262.249 127.045C262.744 126.012 261.609 126.52 261.382 125.766C262.311 125.552 261.712 124.11 262.228 123.437L260.969 122.404C261.815 122.978 261.341 121.453 262.146 121.322C261.568 120.584 260.536 119.961 260.825 118.879C261.258 119.338 261.526 117.911 262.414 117.911C263.343 116.075 260.185 114.747 261.526 113.025C261.733 113.09 262.29 113.468 262.538 112.959C262.311 112.549 262.455 111.844 262.373 111.402C262.332 111.188 262.228 111.057 262.022 111.041C261.196 110.27 260.329 109.86 259.689 108.368C258.678 108.45 259.008 109.696 259.297 110.237L260.267 110.729C258.719 111.123 260.453 112.057 259.937 112.369C258.203 111.434 258.76 108.926 257.749 107.368C256.304 108.253 255.973 110.254 256.056 112.008L256.696 111.254V112.172L257.79 111.32C257.563 112.189 257.79 112.943 257.687 113.73C257.707 112.812 259.111 112.5 258.884 113.009C257.852 114.009 259.483 114.091 259.379 114.878C259.503 114.451 259.545 113.878 260.102 114.255C258.822 115.763 259.586 116.206 258.223 117.567C259.916 117.452 258.306 119.321 259.669 119.584L259.834 118.944L260.783 120.355C259.359 121.584 259.441 119.174 258.389 121.092C258.141 122.88 259.896 122.896 259.958 124.306C258.987 123.814 258.182 122.667 258.265 121.535L257.749 122.207C257.191 121.83 257.398 120.256 257.48 119.469C258.554 120.797 257.852 118.879 258.781 118.305C257.831 118.174 257.934 119.01 257.212 117.993C257.191 118.912 257.253 119.059 256.84 120.207C257.398 117.682 253.62 117.829 254.549 115.632C254.941 116.665 255.953 115.321 256.427 115.206C256.345 114.73 256.159 113.746 255.932 113.336L254.528 113.648C253.991 112.336 256.964 111.992 255.602 110.451C254.776 110.237 255.251 111.746 255.106 111.484C254.342 109.418 256.613 108.762 257.749 106.991C257.336 106.876 256.448 106.86 255.746 106.204C256.572 106.433 257.026 105.974 257.604 106.712C257.996 106.122 257.418 105.384 257.109 104.843C256.551 106.089 255.932 104.285 255.457 104.039C255.643 103.4 256.283 104.269 256.489 104.679C256.737 104.17 257.996 103.58 256.778 103.252C257.666 103.252 259.008 104.793 259.194 105.761L259.379 105.105C259.813 105.564 259.669 105.646 259.503 106.302C260.226 105.695 260.969 105.777 261.588 105.941C261.465 106.023 261.382 105.892 261.258 105.958C261.01 106.466 261.217 106.876 261.692 106.778C262.848 107.286 262.476 106.072 263.075 105.745C263.013 105.482 262.951 105.203 262.889 104.941L259.256 102.104C258.884 100.924 259.813 100.432 260.432 99.5955L259.441 99.3168C259.607 98.3165 259.978 97.3655 261.217 98.0542C260.886 98.087 260.948 98.2181 260.886 98.4313C261.031 98.4641 261.114 98.5133 261.196 98.5789L261.361 98.6281C261.093 97.5295 260.907 96.8572 260.886 96.7916C262.249 98.6773 262.724 96.9392 264.499 97.3163L264.004 95.447C263.364 96.5456 263.116 95.447 262.91 95.0371C263.921 94.9551 262.972 93.5449 263.157 92.9054L263.364 92.9546C263.756 92.3643 263.715 91.3149 263.467 90.5442C263.116 90.5606 261.526 89.544 260.556 89.052C260.102 90.331 259.751 89.544 259.111 89.626C259.173 89.4948 259.194 89.2488 259.07 89.216C258.801 89.0192 258.678 89.4456 258.327 89.4784C258.719 90.8557 258.781 92.2823 260.164 92.889C260.825 92.4955 259.586 92.1511 260.04 91.692C260.948 92.3971 260.721 93.2661 260.618 94.3976L259.751 94.7419L260.143 95.9061C259.73 95.4142 258.822 95.6766 258.719 94.4632C257.914 94.5943 258.843 95.6602 258.533 96.3816L259.627 96.7916C259.008 96.6276 258.801 98.2017 258.017 97.0539L257.191 95.201L256.407 95.6766L256.262 94.1352L256.82 94.5124C256.18 92.02 259.091 93.8565 257.914 91.3313C256.593 90.5114 256.489 89.6587 256.923 88.1502C257.171 89.2652 257.873 88.2978 258.636 88.7405C259.276 87.6419 258.162 87.2155 257.666 86.6088C258.409 86.3465 259.008 86.1661 258.843 87.1664C260.35 87.3467 258.657 85.8382 260.205 85.8054C260.35 82.4767 255.354 82.9686 257.501 79.1481L258.12 79.312C257.48 76.8196 258.306 75.4095 257.955 73.1139L259.648 71.3757C259.875 71.7857 260.99 72.9171 261.795 72.4416C260.143 73.2614 260.639 74.2125 259.73 75.1143C260.143 75.2291 260.474 74.852 260.742 74.688C260.701 75.2619 259.958 75.5243 260.185 76.2785C260.515 76.2457 260.969 75.4423 261.134 76.0818L260.081 77.0656C260.474 78.4594 262.414 77.8199 261.857 79.4104C260.99 79.0825 259.751 78.4266 259.565 77.7871C259.338 78.5086 259.09 76.7869 258.512 77.4427C259.751 78.5414 258.698 79.0169 259.441 80.4598C259.276 80.2959 259.008 80.2303 258.946 79.8859L258.285 81.9028C259.07 81.4273 259.029 83.6245 260.185 83.477C260.783 81.3125 260.061 81.9356 260.845 79.476C261.072 80.1811 262.166 81.1321 263.219 81.5913C263.178 81.6077 263.137 81.6405 263.116 81.7224C264.21 82.1488 264.54 81.7716 266.502 81.8372C265.16 80.6566 266.357 79.9351 265.635 78.5742C264.582 78.279 264.21 79.2956 264.458 79.9679L263.818 78.7709L264.293 79.0169L264.829 76.049C264.85 76.6229 265.469 76.836 265.924 77.1476C265.985 76.7705 266.295 76.3933 266.625 75.9998C265.593 76.049 264.871 75.967 264.912 75.5899C265.263 73.6714 266.254 72.6383 267.472 71.9824C267.472 71.9005 267.431 71.8185 267.41 71.7529C266.336 72.0316 265.593 70.3263 264.561 69.6868C265.655 69.7524 265.263 68.7194 265.862 68.1947C264.623 67.8503 262.889 68.1947 261.815 68.8178C262.889 70.1623 262.93 69.5884 264.499 70.2607L265.449 72.376L264.479 71.8677C263.983 72.8843 265.242 73.9337 263.942 73.8189C263.116 73.245 263.694 72.3432 262.848 71.7693L262.332 72.4416C261.134 71.179 263.591 71.8677 262.786 70.3591C261.65 70.851 262.724 70.2279 262.001 69.572C261.196 70.0476 262.166 72.1628 260.329 71.6545C259.545 70.8674 262.683 69.1621 260.866 68.0799L261.072 68.1455C261.403 66.6697 260.37 66.0958 259.73 65.5219C260.37 64.9152 259.565 63.9969 259.545 63.3083L260.081 63.3411L259.916 62.3572C260.887 62.8491 259.813 63.4886 259.916 64.3249L260.928 64.2593C259.669 65.1776 261.444 65.8826 262.29 66.6533C261.485 65.5383 262.724 63.6034 260.763 63.2755L261.815 62.636L261.465 62.308C262.27 61.8325 263.426 62.39 263.611 63.3739C263.343 63.5378 263.219 63.6198 263.013 63.5542C263.446 64.0133 264.189 64.4561 263.9 65.5383L263.405 64.9316C263.24 66.2762 263.57 67.5224 264.54 68.0307C265.077 66.0958 265.284 64.1773 265.346 62.3244C263.095 61.7013 261.857 61.0126 259.73 60.6519C259.421 59.4057 259.214 57.7168 260.061 56.6837L260.474 56.7985C260.721 56.2902 260.639 55.7983 260.412 55.3884C261.01 54.8637 261.506 55.8147 261.836 55.4376L261.237 53.6502C262.187 53.7978 262.104 55.29 262.125 55.9951C262.043 55.8639 261.898 55.5851 261.774 55.6671C261.32 56.4706 262.868 58.0611 261.465 58.3727C261.692 58.7826 260.494 57.52 260.329 58.8646C259.751 59.75 260.99 60.0944 261.403 60.2092C261.939 60.242 262.228 58.8154 262.868 59.3401C262.848 58.635 262.166 58.3235 262.744 57.438C262.765 58.1431 263.818 59.127 262.951 59.4713C263.88 60.8979 266.46 60.7831 266.625 60.1436C265.82 60.2748 265.8 57.5856 264.644 59.3565C263.653 58.5039 263.735 57.0117 263.157 55.9295L263.364 55.9787L263.178 54.6505C263.446 54.8472 263.673 55.2572 264.21 55.29L262.868 53.4043C263.797 54.4701 263.591 52.7976 264.045 52.3385C263.219 52.1089 262.662 51.371 262.146 52.0433C261.485 52.7976 262.559 52.5024 262.579 53.2075L261.32 52.1581L261.444 52.0761L260.412 51.4366C260.577 50.092 262.868 52.1253 261.939 50.3544L260.453 50.5184C260.804 48.5179 262.6 46.0091 262.022 44.5661C262.827 44.9925 264.169 45.222 264.995 44.7137C264.706 45.3204 264.685 46.5502 264.768 47.4357C264.499 47.5996 263.095 46.2715 263.488 45.3368C261.052 45.6975 264.788 47.7964 262.352 47.8128C261.341 50.2068 264.582 49.7149 263.033 51.7154C264.128 51.781 263.529 52.3221 264.479 52.4696C266.295 51.9285 264.582 49.7149 265.304 48.4031C265.366 48.5343 265.511 48.813 265.717 48.8622C266.089 47.9112 265.882 47.5177 265.511 46.829L265.387 46.911C264.396 45.6976 266.233 46.2223 266.77 45.55C266.625 45.2712 266.997 44.3366 266.192 44.4514L267.307 43.2544H266.089C266.068 42.5657 266.873 42.4345 266.171 41.7786L265.098 41.713L264.602 43.4347C264.293 42.5329 263.57 43.1396 263.405 42.1721C264.52 43.3035 264.045 41.4343 265.077 41.3687L264.52 40.6308L264.788 40.8275C265.387 40.2864 264.417 40.1389 264.602 39.4994C263.942 40.2536 263.157 40.7292 263.859 41.7294C263.302 40.9915 262.703 39.5486 262.703 39.1878C262.29 38.4171 263.157 37.9252 263.322 37.2365C263.673 38.5975 266.646 36.8922 265.696 39.565C265.49 39.4994 265.552 39.2862 265.696 39.2042C264.293 39.5158 265.697 40.8276 266.171 41.4343C266.976 41.3195 267.142 41.9426 267.637 40.9095C267.1 41.2375 265.903 39.9585 266.625 39.0075L268.318 39.2534L268.607 37.8268L268.669 37.958C269.805 37.4661 268.566 36.4167 269.268 35.4492C268.71 34.7114 269.371 31.9894 267.513 33.088C268.649 32.2354 267.327 31.3991 267.162 30.4317L266.378 31.6123C265.242 30.1365 266.006 30.5792 264.148 29.3494C264.623 29.251 265.015 29.0051 265.511 29.2674C265.717 27.349 266.398 24.627 265.077 23.4464C265.242 22.1018 267.265 21.9706 266.605 20.0358C266.398 19.6258 264.995 20.2817 265.552 19.0355C265.676 18.9535 266.729 20.2981 266.687 18.8879C265.449 17.8385 267.575 16.5759 266.522 15.2313C267.038 14.5591 266.935 13.3621 267.967 13.6572C267.658 14.7394 267.761 16.2808 268.256 16.5267C267.637 16.3464 267.596 17.281 267.162 16.4611C266.275 18.0681 267.74 17.5598 267.1 19.0027C267.513 19.1175 268.298 18.2976 267.947 17.9697C269.371 18.0189 268.442 20.9048 270.238 19.6586C270.465 18.0845 267.534 17.4942 269.123 16.1988C269.949 16.7891 269.165 17.609 270.61 18.3632L271.25 17.2646L270.279 16.412L270.486 16.4775C271.91 14.5591 269.144 14.5919 268.545 12.7881C267.493 13.772 266.089 12.4438 265.449 13.1981C265.346 12.0011 265.593 11.1484 267.018 11.1976C268.029 13.4604 268.504 11.3944 269.784 13.4932C270.321 13.1817 271.828 14.0671 272.075 12.8537C271.146 11.4436 270.857 13.2145 270.486 11.8207C270.61 11.7387 270.754 11.6731 270.961 11.7223C270.259 11.0664 271.27 11.0008 270.506 10.1974L270.775 10.3941C271.704 9.49229 269.867 9.32832 270.857 8.55764C269.784 8.8364 270.032 7.98374 269.412 7.44263C268.958 8.24609 267.41 8.62323 267.389 10.2466C268.215 10.4761 268.69 10.3777 269.041 11.0664V10.017C269.123 10.2466 269.33 10.4269 269.495 10.6401L268.999 11.6239C268.483 10.3122 267.554 10.8697 266.729 10.2794C267.183 9.11515 266.564 9.29552 266.894 8.57404C268.112 8.70522 269.144 6.40959 270.032 5.08141C269.97 5.29457 269.99 5.55693 269.949 5.70451C270.651 6.72114 271.023 5.08141 271.353 5.04861L270.795 4.31074C270.878 4.44192 271.146 4.65508 271.332 4.34353C271.167 3.35969 269.949 3.37609 269.784 2.39225C270.465 2.34306 271.435 3.21212 271.828 2.62181C272.426 2.44144 274.037 1.85114 273.541 0.539353C273.293 0.440969 273.17 0.0966281 273.087 -0.296907C273.128 -0.247715 273.149 -0.165729 273.19 -0.149331L273.995 -0.969197C275.089 -0.198523 273.355 0.473768 274.449 1.26084L275.544 1.37562C275.502 1.94953 275.936 2.73659 276.473 3.11373C276.72 2.26107 276.452 2.06431 276.287 1.08047C276.989 0.982083 277.443 1.68717 277.525 1.78555L276.906 1.62158C275.915 2.73659 277.835 3.39249 277.525 4.81905C277.463 5.03222 277.402 4.90104 277.195 4.83545C278.165 6.04885 276.638 7.13107 277.959 8.31168L277.401 7.91814C277.814 8.70521 278.785 10.263 279.714 11.8043L280.147 11.8371C280.415 11.6731 280.354 12.247 280.147 12.5422C280.622 13.3129 281.035 14.0671 281.365 14.6738C281.633 14.4935 281.881 14.2639 281.964 13.9851C281.489 13.7228 281.984 12.3618 280.849 12.5094C281.572 11.9027 280.663 10.8369 281.138 10.3777C280.354 11.1976 280.106 9.73824 279.487 9.55787C280.23 9.29552 279.528 8.29528 280.477 8.44286C280.746 8.27888 279.817 8.8364 280.354 9.22993C281.179 10.1646 281.262 7.62299 282.026 8.7708C281.448 7.32784 281.881 5.47494 281.076 3.96639L280.622 4.76986C280.808 4.13037 280.705 2.57262 281.179 2.49064C281.262 2.98256 281.2 3.54007 281.365 4.16316C282.459 4.24515 281.468 2.67101 282.129 2.63821L280.457 0.76892L280.333 1.55599C279.714 1.03128 280.622 -0.575661 280.87 -1.78906C282.315 -1.01839 280.766 0.0474334 281.283 1.35922C281.778 2.31026 282.769 0.850904 283.058 1.75276C283.429 1.53959 283.429 0.965686 283.058 0.670534L283.347 0.342587C284.647 1.19525 284.214 2.93337 285.308 4.16316C285.164 4.04838 285.019 3.95 284.875 3.9172C284.297 4.80266 284.255 5.7209 284.544 6.60636C284.998 6.16363 284.73 5.96687 284.586 5.68811C284.916 5.67172 284.998 6.50797 285.349 6.83592C285.804 6.03245 286.154 6.72114 286.423 6.21283C286.712 6.75394 286.588 7.18027 286.402 7.83616C285.865 8.14771 285.721 7.52461 285.04 7.5738C285.391 8.26249 283.78 8.49205 284.482 9.50868C284.854 8.2133 285.907 9.91862 286.34 10.3777L286.402 10.1646C287.166 10.6073 287.166 10.968 286.423 11.214C286.134 10.6729 286.402 10.1646 285.597 10.2794C285.597 10.6401 285.597 10.9844 285.824 11.3944L285.267 11.0008L285.308 12.7554C285.989 13.0669 286.96 13.5752 287.971 13.854C287.311 14.2475 287.806 14.8542 288.012 15.2641L287.723 15.0674C287.063 15.8216 287.455 17.5598 288.074 17.7237C287.476 18.2485 284.358 13.6572 284.689 17.5762C284.586 19.0519 286.609 18.5764 287.249 19.4619C287.249 19.4619 287.042 19.4127 286.918 19.4783C286.732 20.1177 287.476 20.2161 287.765 20.7572C288.095 20.3801 288.136 19.8226 287.868 19.6258C288.694 19.8554 287.703 20.9704 288.322 21.4951C287.083 20.79 287.744 22.7249 287.125 22.2002C286.216 23.4628 287.125 24.873 288.033 25.5944C286.361 26.3979 288.136 27.1358 287.311 28.5296C287.372 28.3164 287.166 27.9065 287.352 27.6113C286.382 26.7587 286.712 29.0543 285.865 27.7753C286.01 28.054 286.402 27.8081 286.258 27.5293C286.175 27.0538 285.762 26.5783 285.287 26.6767L284.317 27.7917L284.09 27.3818L282.728 29.0871C282.934 29.1363 283.202 28.9887 283.326 28.9067C282.645 30.9236 283.182 33.2848 282.913 35.0557C285.783 35.5148 283.863 39.4994 285.535 41.0079C284.73 40.5816 283.285 40.3192 282.666 40.5324C282.562 40.2045 281.448 39.4994 281.737 38.7779C282.212 38.6795 282.79 37.794 283.285 38.4007C283.079 36.3675 282.005 38.6303 280.973 37.9908C281.097 40.2372 282.707 41.6146 283.306 43.0576H282.955L283.533 44.1726C283.78 43.3035 285.411 43.4183 284.771 44.5169L284.709 44.3858C283.987 44.9925 284.709 46.3534 284.544 47.3537L285.453 48.0752C285.287 49.0754 283.512 49.0426 282.439 49.3378C282.211 50.8955 283.595 51.8629 284.379 53.0108C283.574 53.4863 283.264 55.8311 282.397 54.5521C282.996 55.9951 287.104 55.8639 284.689 58.2087L283.987 57.5528C283.987 59.8812 285.267 63.2427 284.42 64.2757C281.819 63.3247 281.53 67.0797 278.909 67.3912C279.507 67.2928 279.652 68.1783 279.961 68.3094C279.652 68.4898 279.321 68.8014 279.837 69.1621C280.416 68.2766 282.501 69.9 281.551 68.1291C283.285 69.0637 284.627 70.2443 284.42 72.1628L283.326 72.0972L283.739 70.5887C282.934 70.7198 283.037 69.9328 282.686 69.6048C281.902 72.4088 280.168 69.1457 280.147 72.0316C280.828 72.3432 280.56 72.1464 280.787 72.9007C280.787 72.54 280.023 72.458 279.982 73.0155L280.808 73.5894C278.929 74.524 279.734 71.8841 278.392 72.6875C277.608 71.5397 277.257 69.5884 275.853 69.9C275.255 71.7037 278.351 71.6381 277.608 73.5238L277.009 73.7042C277.381 74.3928 278.33 74.524 278.888 74.9176C278.558 74.934 278.289 75.0979 278.165 75.5243C279.507 76.7049 279.734 77.4591 281.2 78.5578C280.209 75.7374 282.397 76.2293 281.551 73.327C281.984 73.7861 282.191 75.8194 283.677 75.9998L282.583 75.9342C283.099 76.8852 283.595 77.8363 283.182 79.0005L282.604 78.2626C283.264 79.8368 280.808 80.7878 282.542 82.0668C282.666 81.6405 282.645 81.2797 282.501 81.0174C282.934 81.8372 282.769 82.8375 282.542 83.6901L284.235 85.543C283.698 85.5102 283.595 86.6416 282.769 86.0677C281.861 87.3303 283.45 88.0026 283.677 88.7569C282.459 90.0359 283.223 87.5927 281.737 87.4123C281.138 89.216 281.489 91.1673 282.397 92.2331C282.645 91.8724 282.831 91.692 283.099 91.7248C282.748 91.774 282.81 92.5119 282.769 92.9218L283.45 93.2334C282.934 93.9056 282.521 93.7909 282.026 93.1842C281.861 93.8237 283.161 94.6599 282.108 95.2994C281.324 94.1516 282.129 92.7578 281.633 92.1675C282.191 94.5124 279.363 94.4304 280.085 97.4147C279.755 97.4475 279.115 96.9228 279.074 97.4803C279.259 98.8084 280.519 97.8738 281.283 98.3165C280.89 97.2835 281.344 96.8244 282.273 96.2669L282.831 96.562C282.521 96.5948 282.48 97.2343 282.191 97.3983L283.347 97.595C282.067 97.4803 281.014 98.4641 281.448 99.284C282.439 98.5133 282.377 98.7265 283.863 98.5625C285.205 99.7267 282.418 99.7923 283.842 101.088C283.429 100.973 283.182 99.8743 282.81 100.809C282.707 101.596 283.719 101.53 284.028 102.055C282.975 101.432 282.17 101.547 280.932 100.858C280.87 99.4479 280.973 100.301 280.581 98.9068L279.61 100.038C279.507 98.8412 278.413 99.1364 278.021 99.0216C276.823 101.006 279.569 100.596 279.218 101.891C279.92 102.547 279.445 100.678 280.168 101.678C279.941 102.891 280.849 101.973 281.262 103.367L280.787 103.121C280.126 103.514 280.89 103.957 280.973 104.449C281.262 104.99 284.751 103.974 284.709 106.154C284.42 106.04 284.235 105.99 284.09 105.99L275.151 103.547C275.048 105.761 274.677 108.319 273.933 110.86C272.137 111.402 272.571 108.975 271.766 109.106L272.179 107.942C272.922 108.04 272.282 110.401 273.665 109.385C273.231 107.302 274.14 106.384 272.695 104.367C270.878 104.925 272.881 106.958 271.435 108.188C271.58 107.663 271.415 107.204 271.167 106.745C270.878 107.942 270.568 109.204 270.217 110.565L270.63 110.893C270.878 109.975 271.064 109.352 271.126 109.27C270.899 110.483 271.828 111.549 273.128 111.664L273.19 111.451L273.562 111.91L273.273 112.763L273.211 112.894ZM269.392 191.912C269.268 191.83 269.123 191.781 268.958 191.732C269.144 191.781 269.268 191.732 269.392 191.912ZM270.135 88.8881C269.846 90.5114 269.412 92.1347 269.165 93.6925C271.89 90.9541 273.933 89.052 273.624 93.7581L273.789 94.0696C274.14 93.4629 274.243 92.4135 274.099 91.3969C273.231 90.5606 270.032 87.8386 269.743 87.855C269 88.1174 269.763 88.5601 269.516 89.0684L270.114 88.8881H270.135ZM274.511 87.8714C274.842 86.9532 274.264 87.15 273.768 86.986C273.809 87.3139 273.871 87.6419 273.913 87.9534C274.057 87.8386 274.222 87.7894 274.511 87.855V87.8714ZM273.231 87.0352C273.231 87.1336 273.19 87.2319 273.108 87.2647L273.231 87.0352ZM271.621 104.925C271.621 104.925 271.621 104.859 271.601 104.826C271.559 105.039 271.497 105.253 271.435 105.482C271.518 105.4 271.601 105.236 271.621 104.925ZM272.963 103.105L272.034 102.859C271.993 103.055 271.952 103.269 271.89 103.482C272.323 103.432 272.695 103.367 272.963 103.121V103.105ZM276.369 97.2015C275.275 96.7916 275.275 95.5126 273.995 95.3978C273.665 95.2994 273.52 95.5618 273.397 95.8569C273.355 96.1849 273.293 96.5456 273.231 96.9227C273.417 96.9391 273.582 97.0211 273.748 97.1523C273.933 96.7916 274.264 96.5456 275.048 96.726C273.252 97.6278 276.245 97.6278 275.729 98.6445C276.617 99.0052 276.7 97.5131 276.349 97.1851L276.369 97.2015ZM277.856 17.281C277.98 17.2482 278.269 17.1662 278.64 17.0351L279.239 17.7893C278.867 19.0847 276.927 20.0522 278.454 21.282C278.021 21.8067 277.133 22.069 276.431 22.3314C276.493 22.069 276.576 21.8231 276.7 21.6099C274.573 18.2157 279.28 20.003 277.856 17.2646V17.281ZM274.573 32.1862C274.511 32.055 274.284 31.9894 274.284 31.9894C276.473 35.0065 277.009 37.4333 276.823 38.991C277.794 38.7287 278.599 37.3513 279.053 36.6954L280.085 37.3349L279.218 37.6629L280.126 38.7287C280.87 38.4663 280.766 37.6301 281.365 37.1054C281.159 37.0562 280.023 35.2197 279.404 34.695L278.558 36.0887C278.888 35.7116 278.764 33.8259 278.537 33.0552C278 33.0224 277.092 34.2686 278.248 34.4818C277.443 34.5966 277.525 33.1208 276.617 34.0227C275.833 32.8749 276.658 31.1367 277.112 30.3333L278.475 30.2513C279.053 29.3658 276.885 29.579 277.732 28.5296C277.918 29.8577 279.218 28.3656 279.259 29.415C279.796 29.1035 280.684 29.4642 280.643 28.4148C278.929 27.4637 281.819 27.349 280.312 26.4635C280.911 25.9388 281.344 27.103 281.654 26.0208C280.808 24.7418 280.126 24.7746 278.847 24.6434C278.413 25.7912 280.436 26.0208 280.065 26.9554L277.98 24.9713C277.649 25.3157 277.587 25.5617 277.67 25.7912C277.567 25.3977 277.257 25.0697 276.823 24.7746C276.576 24.6106 276.369 24.4466 276.204 24.3155C276.122 25.3813 276.018 26.3487 275.461 26.4799L274.842 26.2995C274.243 26.6603 274.656 27.2998 275.089 27.5949C275.089 28.5624 275.915 29.5626 275.089 29.7266L274.532 29.333C274.635 30.53 274.697 30.6612 274.615 32.1534L274.573 32.1862ZM270.734 70.9002C273.087 70.2607 275.151 69.5556 274.945 66.1942L275.089 66.4566C276.638 64.8332 273.376 63.0951 275.089 61.111C275.895 62.1441 275.812 62.0785 277.732 63.2591L277.154 62.1605C278.392 62.5048 277.814 61.4226 277.918 60.6355L279.363 61.3898C278.909 61.8489 278.681 63.0623 279.012 63.0295C278.867 62.7508 277.03 64.5709 277.401 65.6039C278.413 65.5383 278.145 63.3739 279.734 64.3905C279.094 63.5214 280.106 63.4558 279.796 62.554C280.436 63.423 281.159 62.8164 281.861 63.4722L281.613 62.0129C281.943 61.9801 282.232 64.1609 283.553 63.0131C283.058 62.4064 283.822 60.8815 282.728 60.8159H283.058C283.368 59.7173 281.551 60.2584 282.253 58.9466C281.716 58.9138 281.303 59.1433 281.406 59.6353C281.633 60.0452 282.377 60.1436 282.48 60.9798C281.613 61.3242 282.645 59.9796 281.179 60.5043C280.436 60.7667 281.675 62.718 280.085 62.0621L280.395 60.9798C279.301 60.9143 279.425 60.1272 278.537 60.1108C278.186 59.4385 279.445 58.8482 278.537 58.1431C277.856 57.8316 276.514 58.2743 277.154 57.1757C278.826 56.3558 278.661 53.765 278.496 52.7976L277.856 51.9285C277.174 51.9777 277.856 53.5519 277.009 52.978L276.823 51.6498L277.236 51.7646C277.36 51.3382 276.927 50.8627 276.72 50.4528C277.484 50.8955 277.112 51.8301 278.248 51.6826C278.516 51.0759 278.929 50.9939 278.764 50.42C278.847 50.5512 278.95 50.6659 279.094 50.6495C279.672 49.4197 277.897 49.3869 277.546 49.059C276.142 47.7308 276.101 50.2724 274.945 50.0756L274.553 46.3698C274.904 46.6978 275.255 47.0257 275.729 46.9273C276.307 46.0419 276.617 46.9273 276.638 45.6648C275.089 45.6975 275.771 44.025 274.924 43.0904C275.585 42.6968 275.709 42.6149 275.688 43.5331C276.7 43.4675 276.39 42.2213 276.514 41.795C276.287 41.5326 276.163 41.0899 275.956 40.8112C275.44 41.1555 274.821 40.9751 274.429 40.1717L274.222 40.1225C273.871 41.4179 272.633 43.3855 273.624 44.2546L273.149 44.0086C272.179 45.4844 274.759 47.3537 272.798 47.9768C272.055 47.8784 272.612 48.2719 271.518 48.2063L272.303 49.3542L271.828 49.1082L271.952 51.0103L271.745 50.9447C272.674 51.8793 273.438 52.6172 274.057 53.2075C274.532 53.2239 274.677 53.1747 275.007 53.4863C275.213 53.7978 275.255 54.0274 275.172 54.2241C275.007 54.6833 274.305 54.962 273.995 55.5195V53.765C273.19 53.5847 272.344 53.6994 271.724 54.5521C271.724 54.2078 271.105 54.0274 270.981 54.4537C271.188 54.5029 271.435 55.6179 272.096 55.2244C272.282 56.8969 270.011 59.5205 271.394 62.1113C270.589 60.2584 270.217 63.5214 270.011 61.4882C268.628 62.8491 271.208 62.7508 270.919 64.1773C270.445 64.2757 271.023 63.3902 270.135 63.0295C269.474 65.4071 271.972 67.1452 271.456 69.4409L270.445 69.5065C270.548 69.9492 270.651 70.4411 270.775 70.9494L270.734 70.9002ZM271.724 75.5243C271.807 75.967 271.91 76.4261 271.993 76.8852C271.993 76.8361 272.013 76.8033 272.034 76.7541L272.757 78.115C273.19 77.3116 274.326 76.8033 274.78 77.9675C274.367 77.8527 273.851 78.1806 273.624 77.7707C272.984 78.525 272.302 80.1811 273.83 79.804C272.488 78.279 275.791 79.5252 274.78 78.3282C275.729 78.9841 275.255 79.5908 275.667 80.1975C274.883 79.558 273.789 80.2795 273.335 81.1813C273.562 81.5913 273.252 82.6735 273.624 83.3458C274.573 83.149 275.069 83.7393 275.358 82.6571C275.585 83.067 275.729 83.6901 275.213 84.3624C275.069 84.0837 274.986 83.6081 274.635 83.6245C273.748 84.0345 273.768 84.5592 273.376 84.8379C273.417 85.0675 273.459 85.2971 273.479 85.5266C273.562 85.461 273.665 85.4118 273.81 85.3627L274.594 86.1497C274.222 85.1167 275.048 85.6906 275.585 85.7234C274.491 85.6578 275.399 86.3793 275.42 86.7236L276.617 86.0021C277.174 86.3957 275.709 87.2647 276.865 87.1172C277.402 85.5266 277.257 84.9035 276.989 83.4442L276.06 84.0017C275.523 82.3455 277.649 83.0506 277.711 81.2141C276.947 80.4271 277.814 78.4594 276.184 78.361C276.658 78.607 277.711 77.2788 276.989 76.6229C275.544 75.8686 275.461 73.7697 274.738 74.3764C274.697 74.9504 275.461 75.7374 274.47 76.1638L274.222 75.0487L273.376 75.7374C273.686 75.3767 272.901 75.3767 271.683 75.5079L271.724 75.5243ZM261.196 99.8907V99.9399C261.196 99.9399 261.196 99.9071 261.196 99.8907Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.2 173.582L256.613 179.698C256.509 177.944 256.489 176.32 256.2 173.582Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.482 36.8599C267.966 35.2037 266.851 34.4167 266.665 32.7441C265.179 34.8758 268.585 35.7285 267.078 37.5158L268.482 36.8599Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.177 36.0728C264.457 35.8597 264.581 37.401 265.51 37.2042C265.283 36.0892 264.334 36.6467 264.519 35.6465L263.177 36.0892V36.0728Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.502 29.5137L285.122 30.0384L284.915 29.6285L284.502 29.5137Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.817 43.5835L263.549 43.3867L263.095 44.1902L263.817 43.5835Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M287.166 30.2654L287.496 29.5275L286.939 29.1504L287.166 30.2654Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M279.981 36.4828L279.63 35.8105C279.692 35.9417 279.114 36.8272 279.981 36.4828Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.972 48.5675L263.405 49.4038L263.529 49.3218L263.096 48.502L262.972 48.5675Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M283.12 41.7793C284.111 41.3694 283.306 43.1075 284.214 42.2056C284.111 41.3694 283.595 41.6809 283.12 41.7793Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.956 51.207C275.956 51.3221 275.977 51.4371 276.081 51.5521C276.039 51.4207 275.998 51.3056 275.956 51.207Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.956 51.2061C275.977 50.8618 276.369 50.5174 276.101 50.2715C275.626 50.6978 275.791 50.8618 275.956 51.2061Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.937 55.208L276.019 54.8965C276.473 55.2408 276.412 55.0769 276.04 54.7817C276.04 54.4374 275.71 54.4538 275.503 54.4046C275.379 54.339 275.276 54.257 275.132 54.1914C275.255 54.2898 275.359 54.3882 275.462 54.4866C275.421 55.0113 275.462 55.3228 275.895 55.2244L275.937 55.208Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.699 69.4722C259.133 68.308 259.318 68.0128 260.062 68.1112C260.371 67.0126 259.05 67.1274 258.802 66.4551C258.864 67.7177 258.513 67.9636 258.699 69.4722Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.801 66.4574C258.801 66.3095 258.781 66.178 258.76 66.0137C258.72 66.1944 258.76 66.3259 258.801 66.4574Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.441 50.8457L285.556 51.6164L285.412 51.354L284.441 50.8457Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.203 71.1949C258.265 70.9817 258.244 70.6374 258.513 70.4734C257.77 70.375 258.141 71.4081 258.203 71.1949Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M273.231 67.2267C273.705 67.1283 273.458 66.374 273.664 66.0625C273.54 66.4888 272.137 66.8004 273.231 67.2267Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.113 74.6704C261.175 74.4573 261.691 74.1457 262.311 74.3097C261.96 73.9817 260.659 73.5062 261.113 74.6704Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M272.985 69.36L273.253 69.2124L272.799 68.3926L272.985 69.36Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.254 66.9171C283.408 65.9825 282.004 68.2617 281.343 66.6876C280.29 68.6553 282.623 66.5892 282.396 68.0486C282.747 67.1959 283.903 66.8188 284.275 66.9171H284.254Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.398 68.0469C282.336 68.1783 282.315 68.3098 282.295 68.4577C282.356 68.2934 282.377 68.1619 282.398 68.0469Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.977 80.5095C275.894 80.378 275.791 80.2794 275.688 80.1973C275.75 80.2959 275.853 80.4109 275.977 80.5095Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M282.851 72.7864L281.571 71.3926C282.418 72.3272 282.232 74.5901 283.574 74.4917C283.883 73.7702 283.574 72.8683 283.016 72.4912L282.831 72.7864H282.851Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.624 87.4133L257.129 86.8066L256.922 87.5281C257.129 87.3314 258.099 87.7413 257.624 87.4133Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.881 87.6752L256.922 87.5273C256.922 87.5273 256.881 87.593 256.881 87.6752Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M275.46 77.9353C275.584 77.509 275.564 77.1482 275.357 76.7383C275.089 76.8859 274.8 77.9681 275.46 77.9353Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.339 91.5944L259.174 90.627L259.215 91.6928L259.339 91.5944Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.82 96.0215L256.552 96.1855L256.985 96.9889L257.253 96.8414L256.82 96.0215Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M283.573 91.0522C283.759 90.4127 282.582 89.8552 282.314 90.0192V91.2818C283.367 91.003 282.293 90.9375 282.603 90.1996L283.594 91.0522H283.573Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.088 129.488C256.386 129.176 256.881 127.815 257.542 127.75C257.831 127.947 258.058 128.701 258.512 128.242L256.84 127.094C257.996 125.667 259.07 128.275 259.648 129.012C259.937 127.537 258.822 127.061 258.904 125.471C258.719 125.93 258.285 126.209 257.893 126.454C256.675 126.454 257.274 125.012 257.232 123.962C256.675 124.618 256.241 124.208 255.787 123.716C255.746 123.634 255.684 123.569 255.601 123.519L255.436 123.355V123.487C255.292 123.487 255.127 123.487 254.899 123.585C255.209 124.487 254.156 125.126 254.115 125.7C256.117 125.192 254.487 127.652 255.044 128.389L255.188 129.226V129.537C254.961 129.586 254.693 129.504 254.321 129.012C254.693 129.422 254.487 130.718 255.127 130.619L255.003 133.62C254.92 133.719 254.817 133.801 254.672 133.866C254.796 133.981 254.899 133.997 255.003 133.981L254.528 147.033C254.714 146.394 255.188 145.853 255.436 145.197C256.716 146.23 255.725 144.114 256.964 144.442C257.397 144.901 257.232 145.557 256.902 145.935C257.521 146.098 258.099 145.557 258.863 145.639C259.73 144.016 256.737 143.672 257.273 142.081C258.017 142.163 258.657 142.688 258.615 141.622L258.76 141.901C257.996 140.195 260.515 140.638 258.512 139.523L259.606 139.589C258.822 138.802 258.884 137.31 258.781 136.473L258.987 136.522C257.852 134.128 258.78 135.194 258.388 132.538L259.606 133.784C260.164 132.882 258.801 132.636 258.987 131.997C259.193 132.046 259.998 131.915 260.164 132.538L258.388 129.275C257.604 128.488 257.583 129.406 257.108 129.504L257.088 129.488Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.885 125.487C258.946 125.323 258.987 125.126 258.946 124.896C258.905 125.11 258.885 125.306 258.885 125.487Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.528 147.918L254.569 147C254.488 147.279 254.467 147.574 254.528 147.918Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.737 120.813C256.138 121.354 255.973 120.371 255.56 120.256L255.478 122.24C255.891 122.24 256.365 122.453 256.737 122.42V120.797V120.813Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.672 122.817C254.961 122.899 255.208 123.112 255.456 123.358L255.497 122.26C255.188 122.26 254.899 122.375 254.672 122.817Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M277.051 123.305L277.071 123.649L277.36 124.19L277.051 123.305Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.924 128.734C275.584 128.34 275.13 127.52 274.986 127.258C274.965 128.176 274.738 127.766 274.924 128.734Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.799 127.816L282.109 128.718L282.232 128.636L281.799 127.816Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.492 154.805C258.492 154.953 258.533 155.1 258.553 155.248C258.553 155.051 258.553 154.92 258.492 154.805Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.79 147.163C256.469 149.246 256.84 145.753 255.251 146.376L255.726 147.541L255.313 147.426L255.395 148.836C256.118 148.574 256.18 148.361 256.923 148.442C256.551 150.312 255.994 149 254.982 150.361L255.024 152.46L254.797 152.279C254.797 152.46 254.9 152.542 255.024 152.607L255.189 159.675C255.726 160.97 256.572 159.002 257.645 159.986C257.707 158.494 258.616 156.313 257.109 156.149C257.315 156.198 257.728 156.313 257.914 156.018L256.717 155.116L256.283 155.92C255.086 155.018 255.478 152.23 256.283 151.755C256.634 153.362 258.162 152.607 257.253 154.788C257.645 154.706 258.327 154.313 258.513 154.821C258.182 152.214 258.987 149.902 257.811 147.18L257.79 147.163Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.398 173.203H257.252C257.252 173.203 257.377 173.253 257.398 173.203Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M257.624 172.35L256.2 171.055L256.241 173.022L257.273 173.186C257.025 173.006 256.53 172.301 256.943 172.039L257.645 172.334L257.624 172.35Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M255.374 169.547C255.766 170.58 256.984 170.547 257.562 170.006C258.078 170.957 256.241 170.465 257.5 171.137C258.388 171.137 257.913 169.973 257.769 169.711L255.374 169.547Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.325 162.054L256.82 162.349L256.985 161.66L256.325 162.054Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.819 162.35L256.654 163.038C257.025 163.005 257.397 162.956 257.665 162.858L256.819 162.35Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.219 164.873C256.116 165.168 256.033 165.496 255.992 165.89L256.219 164.873Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.571 164.086H256.406L256.22 164.873C256.324 164.594 256.448 164.332 256.571 164.086Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.655 163.053C255.788 163.151 254.9 163.249 255.086 164.266L256.407 164.102L256.655 163.053Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M280.188 134.213L280.642 135.016L280.766 134.934L280.332 134.131L280.188 134.213Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M279.197 138.783C279.342 138.98 279.486 139.144 279.651 139.275C279.569 139.062 279.424 138.898 279.197 138.783Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M284.854 142.393C283.946 143.311 283.781 141.065 283.327 142.786C282.521 142.918 281.531 142.065 281.964 141.261C282.707 141.343 282.418 142.081 283.203 141.589C282.356 141.015 282.955 140.835 281.82 140.983C281.159 140.048 280.354 139.917 279.652 139.277C280.106 140.392 278.826 142.688 280.209 144.131C281.531 144.951 283.409 144.524 285.37 144.59C285.845 144.492 286.155 142.491 284.854 142.376V142.393Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M286.897 140.967C287.021 140.541 286.938 140.393 286.794 140.131C286.112 140.18 286.876 140.623 286.897 140.967Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.642 150.543C271.91 150.641 272.22 151.429 272.715 151.281L272.426 150.084C272.364 150.363 272.013 150.445 271.642 150.559V150.543Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M272.282 149.543L272.406 150.068C272.427 149.937 272.406 149.773 272.282 149.543Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.456 150.592L271.643 150.543C271.643 150.543 271.518 150.526 271.456 150.592Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M255.621 167.759C255.085 167.726 255.374 168.268 255.539 168.546C255.601 168.333 255.787 168.038 255.621 167.759Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.923 187.879L256.469 188.338C256.737 188.174 256.861 188.092 256.923 187.879Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.395 195.471C271.498 195.471 271.581 195.52 271.664 195.57C271.602 195.52 271.519 195.487 271.395 195.471Z\",\n    fill: \"#5C4F47\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M271.663 195.586C272.096 195.914 271.374 196.898 272.034 197.258L271.828 197.209L272.2 197.882C272.158 197.258 272.303 195.963 271.663 195.586Z\",\n    fill: \"#5C4F47\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.778 332.536C240.902 332.93 240.262 333.274 239.973 333.143C240.778 333.913 239.932 333.963 241.418 333.979C242.203 334.389 241.253 334.979 240.572 334.487C240.923 334.93 241.315 335.34 241.728 335.717C241.728 335.455 241.769 335.192 241.81 334.93C243.07 334.996 241.707 336.193 243.194 336.144C243.049 335.75 242.884 335.34 242.781 334.897H243.194C242.698 334.668 242.801 334.045 242.966 333.815C243.173 333.832 243.503 333.799 243.565 334.028C243.565 332.356 241.315 333.7 240.881 332.143C240.902 332.241 240.881 332.372 240.778 332.536Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.895 330.98L242.388 330.226L242.925 329.062C242.388 329.012 242.058 328.078 241.521 328.652C241.583 328.783 241.727 329.029 241.645 329.209C240.489 328.996 241.273 327.504 240.055 327.783C240.22 328.816 239.952 328.947 240.84 329.603C240.633 330.472 240.344 331.078 239.89 331.488C240.055 331.751 240.778 331.8 240.901 332.112C240.901 332.046 240.86 331.98 240.86 331.898H242.615C242.243 331.636 242.45 331.39 242.408 331.111C243.069 331.587 243.73 332.013 244.432 332.407C246.062 332.046 245.154 330.865 245.897 330.373C244.37 330.915 245.195 329.832 243.895 330.997V330.98Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.892 216.771C241.892 216.443 241.458 216.329 241.252 216.279L241.108 219.969C241.582 219.87 242.202 218.821 242.449 219.542C242.986 219.247 242.594 218.263 241.975 218.099L242.676 218.395C241.809 217.526 243.605 216.984 244.122 217.558V217.493L240.736 215.033C240.488 215.886 241.913 215.738 241.913 216.771H241.892Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.329 140.984C244.494 141.46 244.68 141.509 244.845 141.46C244.722 141.296 244.556 141.132 244.329 140.984Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.931 214.46L238.878 213.689C239.167 213.985 239.539 214.263 239.931 214.46Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.261 220.068C256.261 220.068 256.364 220.068 256.447 220.068L255.91 219.723C256.034 219.854 256.137 219.969 256.261 220.084V220.068Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M236.443 197.687C236.443 197.687 236.402 197.538 236.381 197.439C236.381 197.522 236.422 197.604 236.443 197.687Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.939 230.363L260.989 228.674C261.464 228.92 261.361 228.1 261.918 228.477C261.856 228.346 261.691 227.756 261.423 227.903V228.248C260.039 227.33 259.461 227.838 258.429 226.346C257.521 227.215 258.285 227.641 258.925 228.133C259.007 228.297 259.049 228.428 259.11 228.576L261.051 230.019L261.959 230.363H261.939Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.474 163.923L253.02 163.857C253.247 163.94 253.474 164.285 253.474 163.923Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.86 214.77C240.592 214.737 240.261 214.639 239.931 214.475L240.716 215.049C240.716 215.049 240.798 214.868 240.839 214.77H240.86Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.958 216.1L244.102 217.493L244.825 218.018C244.556 217.477 244.391 216.854 243.958 216.1Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.514 199.835C235.37 196.981 237.186 200.572 237.64 199.261C237.455 198.457 236.67 198.178 236.423 197.67C237.042 199.949 233.78 197.326 234.131 199.605C232.686 199.261 232.583 197.932 233.016 197.178C234.441 196.326 234.028 197.965 235.39 198.178C235.184 197.26 234.936 197.424 234.152 197.014C234.523 195.588 232.5 194.013 234.461 193.194C234.172 192.144 233.491 192.21 232.769 191.603C231.262 191.472 231.943 193.128 230.766 193.505C230.89 193.423 231.158 193.276 231.365 193.325L231.034 194.21C231.571 193.374 232.541 194.358 232.645 194.801C232.665 195.129 232.707 195.784 232.294 195.686L231.984 195.178C231.489 195.817 233.037 196.621 232.211 197.293C231.881 197.326 231.716 197.063 231.509 197.014C232.521 197.801 232.438 198.523 233.12 199.671L231.654 198.982C233.285 199.917 232.748 201.95 231.84 203.36C232.087 203.212 232.294 202.934 232.562 203.098C232.892 203.934 231.86 204.541 231.076 204.147C232.294 204.983 229.94 207.23 231.489 208.361L238.858 213.657C238.673 213.461 238.528 213.248 238.466 213.034C239.787 212.608 239.643 212.346 240.84 213.198C240.18 212.378 239.106 212.657 239.106 211.46C239.746 211.952 241.253 212.116 241.439 210.952C240.262 208.033 236.608 206.033 234.771 203.311C235.783 203.229 235.555 201.114 235.824 200.097C236.897 200.507 237.186 201.278 237.372 202.065C237.455 201.573 237.517 200.72 237.579 200.08L235.452 199.785L235.514 199.835Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.714 206.591C238.714 206.591 238.859 206.443 238.901 206.377C238.818 206.41 238.756 206.476 238.714 206.591Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.393 202.361C237.393 202.361 237.455 202.361 237.496 202.361L237.434 202.113C237.434 202.196 237.413 202.295 237.393 202.361Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.172 214.15C243.461 214.33 243.523 214.462 243.812 214.642C243.709 214.527 243.647 214.396 243.564 214.265C243.44 214.134 243.296 214.084 243.172 214.15Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.377 214.671L240.965 214.572C240.965 214.572 240.903 214.704 240.861 214.753C241.088 214.786 241.274 214.753 241.377 214.671Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.906 189.061L244.7 188.781C244.7 188.946 244.803 189.028 244.906 189.061Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.33 196.701C237.392 197.702 238.837 196.849 238.796 198.243L238.899 197.833C239.518 198.849 239.167 200.62 239.188 201.817C238.589 201.67 238.445 202.522 237.516 202.375C237.702 203.195 237.887 204.015 238.837 204.457C238.507 204.949 239.333 205.753 238.92 206.376C239.498 206.113 240.798 207.343 240.158 205.753C240.241 205.884 240.365 205.802 240.447 205.933C241.252 204.933 239.952 204.506 239.952 203.637C240.53 203.129 240.819 204.506 241.067 204.015C240.571 202.916 241.83 200.604 239.745 200.637C239.622 199.85 240.096 199.735 240.468 199.505C238.28 198.21 241.562 194.865 238.713 194.832C238.816 195.291 238.713 196.029 239.312 196.718L237.351 196.685L237.33 196.701Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.091 212.476C243.091 212.476 243.091 212.329 243.131 212.279C243.131 212.329 243.111 212.411 243.091 212.476Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.234 224.757L232.397 224.282C232.066 221.904 232.644 221.084 232.686 219.018C232.954 218.87 233.099 219.116 233.181 219.248C233.037 217.788 233.511 215.64 232.706 214.558C232.748 214.099 233.388 212.902 233.904 213.377C233.738 213.148 233.594 212.885 233.677 212.639C234.358 212.59 233.842 213.213 234.399 213.246C234.461 213.049 234.585 212.967 234.378 212.918C234.936 213.279 236.67 212.623 236.567 214.23C234.977 214.804 236.422 213.115 234.688 213.427C234.647 213.951 235.328 213.918 235.534 213.968C235.473 214.64 235.039 214.624 234.647 214.574C235.163 214.853 234.399 215.689 235.184 216.067C235.266 217.395 233.883 215.952 233.883 216.821L235.617 217.362L235.225 218.788C235.72 220.887 238.259 218.575 239.127 220.986C238.239 220.641 236.649 221.543 236.216 222.642C236.195 221.986 235.122 220.723 235.679 219.887C234.255 221.051 235.596 218.231 234.007 218.805C234.709 219.428 234.771 220.412 234.317 221.182L234.172 220.92C233.945 221.74 235.741 222.412 234.977 223.527C234.998 224.085 234.523 223.97 234.11 223.855C234.337 224.347 234.667 224.774 234.275 224.774L234.234 224.757ZM233.945 223.527L234.151 222.773C233.862 222.937 233.842 223.216 233.945 223.527Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.052 320.795C245.052 320.795 244.927 320.943 244.886 321.009C244.969 320.96 245.031 320.877 245.052 320.795Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.288 253.338L253.205 253.782C253.288 253.617 253.288 253.469 253.288 253.338Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.202 263.57L258.553 264.243C258.553 263.98 258.408 263.783 258.202 263.57Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.918 315.566C245.918 315.566 245.856 315.483 245.836 315.434L245.898 315.566H245.918Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M252.153 283.215C251.988 283.297 251.844 283.412 251.74 283.544C251.906 283.544 252.05 283.412 252.153 283.215Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.139 263.454C258.139 263.454 258.119 263.471 258.098 263.487L258.201 263.57L258.139 263.438V263.454Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.718 249.224C258.676 249.125 258.635 249.043 258.573 248.928C258.593 249.059 258.656 249.141 258.718 249.224Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.702 249.617C253.66 249.519 253.618 249.42 253.556 249.338L253.702 249.617Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.16 234.466L257.953 233.859C257.953 234.155 258.056 234.335 258.16 234.466Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.983 248.091C254.983 248.091 254.838 248.009 254.755 247.992C254.796 248.075 254.9 248.124 254.983 248.091Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.313 324.076V324.043L239.105 324.01L239.313 324.076Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.644 325.75L241.706 326.275C241.747 326.078 241.706 325.898 241.644 325.75Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.395 291.641C248.127 291.772 247.776 292.133 247.507 291.936C247.838 292.264 248.725 292.313 248.395 291.641Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M228.847 320.204C229.074 320.319 229.239 320.451 229.383 320.582C229.156 320.336 228.971 320.138 228.847 320.204Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.403 320.582C229.507 320.697 229.63 320.829 229.754 320.944C229.651 320.829 229.548 320.697 229.403 320.582Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.378 286.626C234.503 286.593 234.606 286.543 234.648 286.461C234.399 286.461 234.358 286.527 234.378 286.626Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.377 326.665C241.769 326.813 242.368 329.043 242.843 327.239C244.123 327.436 243.276 328.453 243.545 328.945C243.896 328.633 244.35 329.174 244.825 329.109C244.701 328.863 244.35 328.567 244.494 328.19C245.114 328.059 245.423 328.682 245.155 329.109C245.898 328.617 246.105 329.863 246.703 329.158C246.455 327.518 246.208 326.108 244.494 324.648C244.659 325.731 244.866 326.944 244.226 327.698L243.152 327.256C244.267 326.419 243.627 325.731 243.875 324.796L242.967 326.862C241.893 327.748 241.769 327.092 241.687 326.288C241.645 326.485 241.542 326.649 241.356 326.682L241.377 326.665Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.798 324.305L231.757 324.338C231.757 324.338 231.819 324.42 231.86 324.437L231.798 324.305Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.452 233.693L235.039 233.496C235.225 233.66 235.348 233.71 235.452 233.693Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.08 238.236C235.08 238.236 235.018 238.22 234.977 238.203C235.018 238.22 235.039 238.22 235.08 238.236Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.171 240.484C259.171 240.484 259.275 240.484 259.317 240.451C259.254 240.352 259.213 240.402 259.171 240.484Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.598 260.585C237.598 260.585 237.805 260.519 237.99 260.421C237.887 260.371 237.763 260.421 237.598 260.585Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.644 256.306C239.644 256.306 239.727 256.257 239.769 256.24L239.644 256.306Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.556 290.97C253.597 290.757 253.577 290.593 253.556 290.445C253.516 290.609 253.495 290.773 253.556 290.97Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.977 238.205C234.853 238.155 234.75 238.09 234.605 237.975C234.75 238.106 234.874 238.172 234.977 238.205Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.657 267.587L242.553 267.455L242.491 267.521L242.657 267.587Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.604 269.832C241.48 269.75 241.356 269.701 241.253 269.652C241.645 270.504 240.984 271.964 242.161 272.21C242.161 271.931 243.007 270.537 243.668 270.816C243.42 270.225 244.349 269.438 244.184 269.11C243.441 270.012 243.173 269.143 242.822 268.504C243.234 267.946 243.771 268.668 244.04 268.192V266.848L243.771 267.995L242.656 267.569C242.656 267.569 242.718 267.651 242.76 267.7C243.09 269.684 241.067 267.766 241.604 269.816V269.832Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.253 269.655C241.191 269.523 241.108 269.408 241.005 269.326C241.005 269.507 241.108 269.589 241.253 269.655Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.568 277.523C238.589 277.622 238.651 277.737 238.714 277.885C238.693 277.819 238.631 277.671 238.568 277.523Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.597 219.002C244.267 219.018 243.503 220.15 244.391 220.15C244.494 219.822 244.618 219.477 244.721 219.133L244.597 219.002Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.191 299.643C241.232 299.512 241.253 299.397 241.253 299.266L241.129 299.184C240.985 299.249 241.129 299.512 241.191 299.643Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.04 271.214C243.916 271 243.792 270.902 243.668 270.836C243.73 270.984 243.834 271.115 244.04 271.214Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.105 299.543C238.837 299.691 238.424 299.887 238.094 299.904C238.052 300.232 238.486 300.494 238.61 300.855C238.527 300.461 238.672 300.035 239.126 299.543H239.105Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.01 218.33C244.948 218.231 244.886 218.133 244.845 218.018L245.072 218.182L245.381 217.395C245.319 217.296 245.278 217.198 245.257 217.067C245.278 217.116 245.381 217.165 245.464 217.182L245.567 216.936C244.679 216.28 244.081 214.706 243.565 214.247C243.193 213.64 243.007 212.902 243.09 212.459C243.049 212.886 243.214 213.443 243.73 213.296C244.287 212.459 245.815 212.066 244.576 210.557V211.426L242.677 209.426C243.523 208.77 243.606 210.426 244.308 210.705C243.4 209.163 246.042 207.966 244.37 207.212C245.381 207.13 247.074 207.015 246.992 205.999C245.815 206.687 246.269 205.376 245.03 205.95C244.473 205.589 245.423 204.851 244.679 204.769L245.092 204.867C246.744 203.195 244.246 202.588 243.461 201.85C243.111 199.801 243.792 198.882 243.668 197.21C244.349 197.161 246.207 196.734 246.166 196.062C245.257 195.734 244.886 194.225 243.709 194.061C243.193 195.242 244.659 195.045 244.927 195.767C243.689 196.341 243.709 195.8 242.945 196.603C243.441 195.947 242.388 193.635 243.544 192.93L243.709 193.192C244.432 192.061 247.322 191.881 245.608 189.946L244.907 189.028C245.03 189.077 245.154 189.077 245.257 189.11C245.402 187.617 246.723 188.044 245.712 186.388C245.794 186.519 245.918 186.437 246.001 186.568C246.682 185.633 245.381 184.682 245.113 183.961C246.104 183.534 246.063 184.076 246.764 184.338C247.177 182.682 245.505 180.894 244.329 179.861L244.907 178.796C245.299 179.435 246.331 180.206 246.93 180.025C246.744 179.435 246.269 179.55 246.475 178.73C247.095 178.878 247.673 179.222 248.457 179.615C249.51 177.91 246.248 179.222 248.168 178.025C248.168 177.484 247.281 177.172 246.517 177.107L247.508 176.139C246.558 176.024 246.496 174.827 246.372 174.04C245.959 173.942 245.34 174.68 245.712 174.975C244.948 174.909 244.618 174.073 244.618 173.532C246.641 173.335 244.349 170.007 246.723 170.646C246.063 168.219 245.835 164.825 244.989 163.218C245.546 162.693 245.567 161.611 246.517 162.251C246.517 160.299 244.452 159.299 244.968 157.364C245.216 157.2 245.01 158.233 245.67 158.168C244.845 156.905 246.496 155.856 245.918 153.904C245.959 154.232 246.372 154.331 246.579 154.364C246.248 154.396 245.877 153.56 245.546 153.068C245.712 152.789 245.794 153.445 246.042 153.281C246.971 149.477 244.184 146.624 244.163 142.853C244.163 143.935 245.505 144.312 246.063 144.312V143.263C245.381 142.869 245.361 142.082 244.845 141.426C245.092 141.344 245.361 141.016 245.67 141.344C246.971 139.229 243.152 138.13 243.771 135.572L246.537 138.606L247.446 137.819L248.705 139.163C249.428 138.343 247.693 137.655 248.705 137.54C248.994 137.704 248.911 138.13 249.469 138.13C249.84 137.343 249.097 137.294 248.87 136.704C250.976 138.212 251.017 141.246 251.574 142.885C251.74 143.148 251.079 142.672 250.873 142.64C250.955 143.312 250.336 143.722 250.707 144.558C251.595 145.066 251.327 144.148 251.409 143.738C252.173 143.787 252.132 143.984 252.256 144.46C251.244 144.574 251.967 147.001 250.749 147.608C251.1 150.067 253.35 147.182 252.958 149.592L251.822 150.33C252.731 151.724 253.556 153.511 253.329 155.101L253.288 154.774C252.792 154.56 252.483 154.921 252.235 155.085C251.76 156.282 253.185 157.348 252.029 158.086C253.288 159.447 254.176 161.71 254.836 163.267C253.309 163.694 253.536 161.234 252.586 160.595V162.005C252.586 161.136 251.987 160.791 251.12 160.267C250.852 161.513 252.173 161.906 252.565 163.087C252.152 163.005 251.905 163.153 251.884 163.694L252.896 163.841C252.896 163.841 252.731 163.907 252.669 164.087L253.288 166.186C253.721 165.743 254.588 165.711 254.609 165.169C254.031 165.366 253.907 164.907 253.907 164.366C254.568 164.841 254.465 163.841 255.001 163.841C254.981 164.923 255.125 166.268 255.394 166.973L254.465 167.203C254.237 168.236 254.754 169.334 254.485 170.039L253.99 169.81C253.721 171.056 254.299 172.286 253.391 173.384C254.444 174.499 255.311 175.893 256.426 176.812C257.623 177.303 254.898 180.058 256.57 181.321C256.446 181.403 255.683 180.452 255.228 180.025C255.043 180.862 256.529 181.534 255.249 181.78C255.683 179.911 254.237 181.878 253.887 181.026C253.887 181.895 254.134 182.829 254.568 183.256C254.568 181.845 256.302 183.78 255.765 182.337C256.818 183.452 257.21 184.977 256.777 186.306C256.24 186.289 255.972 186.453 255.745 186.945L256.529 187.355C256.364 187.978 255.621 186.142 255.311 187.388C256.632 188.683 254.465 191.241 256.962 191.831C255.951 192.799 255.992 189.962 254.754 191.422C253.866 190.552 254.919 189.388 253.68 189.093C254.01 189.929 252.627 189.388 252.607 189.929L253.35 190.88L253.391 190.667C254.527 192.258 253.949 194.734 254.072 196.751C255.27 198.472 257.066 199.669 256.859 201.719C256.137 201.096 256.095 203.408 254.795 202.096C254.114 203.031 254.857 203.965 255.394 203.998C255.6 203.178 255.579 203.703 255.868 203.014C256.508 203.506 256.446 204.589 256.013 205.031C256.075 204.818 255.93 204.9 255.724 204.851C255.249 205.835 256.364 205.343 256.612 206.064C255.683 206.277 256.323 207.638 255.806 208.278L257.086 209.262C256.24 208.721 256.735 210.164 255.93 210.295C256.508 210.984 257.561 211.59 257.293 212.623C256.859 212.181 256.591 213.558 255.724 213.541C254.816 215.296 257.995 216.542 256.673 218.198C256.467 218.133 255.91 217.788 255.662 218.264C255.889 218.657 255.765 219.33 255.827 219.756C255.868 219.953 255.972 220.084 256.178 220.1C257.004 220.838 257.871 221.232 258.511 222.642C259.522 222.576 259.192 221.379 258.903 220.855L257.933 220.379C259.481 220.002 257.747 219.117 258.263 218.805C259.997 219.69 259.44 222.101 260.451 223.577C261.896 222.74 262.227 220.822 262.144 219.133L261.504 219.854V218.969L260.41 219.789C260.637 218.969 260.41 218.231 260.493 217.493C260.493 218.379 259.068 218.674 259.316 218.182C260.348 217.231 258.717 217.149 258.8 216.395C258.697 216.805 258.655 217.346 258.098 216.985C259.357 215.542 258.593 215.116 259.935 213.82C258.242 213.935 259.832 212.131 258.469 211.902L258.304 212.525L257.355 211.18C258.779 210 258.697 212.295 259.749 210.459C259.997 208.753 258.222 208.753 258.139 207.409C259.109 207.868 259.915 208.967 259.853 210.049L260.369 209.409C260.926 209.77 260.74 211.279 260.658 212.017C259.564 210.754 260.286 212.59 259.357 213.132C260.307 213.263 260.204 212.459 260.926 213.427C260.926 212.541 260.864 212.41 261.277 211.295C260.74 213.705 264.518 213.558 263.63 215.657C263.238 214.673 262.227 215.952 261.752 216.067C261.855 216.526 262.041 217.46 262.268 217.854L263.672 217.542C264.229 218.789 261.256 219.133 262.619 220.609C263.445 220.822 262.97 219.363 263.114 219.625C263.878 221.593 261.607 222.232 260.472 223.921C260.885 224.036 261.772 224.036 262.474 224.675C261.649 224.462 261.194 224.888 260.616 224.183C260.224 224.757 260.802 225.446 261.112 225.971C261.669 224.79 262.289 226.495 262.763 226.741C262.598 227.364 261.938 226.528 261.711 226.135C261.463 226.627 260.204 227.184 261.442 227.512C260.554 227.512 259.213 226.036 259.027 225.102L258.862 225.725C258.428 225.282 258.573 225.2 258.738 224.593C258.015 225.184 257.272 225.085 256.653 224.938C256.777 224.856 256.859 224.987 256.983 224.921C257.231 224.429 257.004 224.036 256.55 224.134C255.394 223.642 255.765 224.806 255.166 225.118C255.228 225.38 255.29 225.626 255.352 225.889L259.006 228.611C259.378 229.742 258.449 230.201 257.83 231.005L258.82 231.267C258.655 232.234 258.284 233.12 257.024 232.464C257.375 232.448 257.293 232.316 257.355 232.103C257.21 232.07 257.128 232.021 257.045 231.956L256.88 231.906C257.148 232.956 257.313 233.595 257.355 233.661C255.992 231.857 255.517 233.497 253.742 233.136L254.217 234.924C254.857 233.874 255.105 234.924 255.311 235.334C254.299 235.399 255.228 236.76 255.043 237.367L254.836 237.318C254.444 237.875 254.485 238.892 254.712 239.613C255.063 239.597 256.653 240.581 257.602 241.073C258.057 239.859 258.408 240.613 259.047 240.531C258.986 240.663 258.965 240.892 259.089 240.925C259.357 241.105 259.481 240.695 259.832 240.679C259.44 239.351 259.398 238.006 258.015 237.416C257.355 237.793 258.573 238.121 258.119 238.564C257.21 237.875 257.458 237.055 257.541 235.973L258.408 235.645L258.015 234.53C258.428 235.006 259.337 234.76 259.44 235.924C260.245 235.809 259.337 234.776 259.646 234.087L258.552 233.677C259.171 233.841 259.378 232.349 260.162 233.448L260.967 235.219L261.772 234.76L261.896 236.235L261.339 235.858C261.958 238.252 259.068 236.465 260.224 238.892C261.545 239.695 261.628 240.499 261.215 241.942C260.988 240.876 260.265 241.794 259.502 241.368C258.862 242.417 259.956 242.827 260.451 243.417C259.708 243.663 259.109 243.827 259.275 242.876C257.788 242.696 259.44 244.155 257.891 244.172C257.706 247.353 262.701 246.943 260.493 250.583L259.873 250.419C260.472 252.813 259.646 254.141 259.935 256.355L258.201 257.995C257.995 257.601 256.901 256.502 256.095 256.945C257.768 256.191 257.293 255.273 258.222 254.42C257.809 254.305 257.479 254.666 257.21 254.797C257.272 254.256 258.015 254.01 257.788 253.289C257.458 253.305 257.004 254.076 256.839 253.469L257.891 252.534C257.52 251.206 255.579 251.78 256.137 250.255C257.004 250.583 258.222 251.223 258.387 251.829C258.635 251.141 258.841 252.797 259.419 252.174C258.18 251.091 259.254 250.665 258.552 249.271C258.717 249.435 258.965 249.484 259.027 249.829L259.729 247.91C258.924 248.353 259.006 246.254 257.871 246.385C257.252 248.435 257.974 247.861 257.148 250.206C256.942 249.517 255.848 248.599 254.816 248.156C254.857 248.14 254.898 248.107 254.919 248.025C253.825 247.615 253.494 247.959 251.533 247.861C252.854 249.009 251.636 249.665 252.359 250.977C253.412 251.272 253.783 250.304 253.556 249.665L254.176 250.813L253.701 250.567L253.123 253.387C253.123 252.846 252.503 252.633 252.049 252.321C251.987 252.682 251.678 253.043 251.327 253.403C252.359 253.371 253.081 253.469 253.04 253.813C252.669 255.633 251.636 256.601 250.418 257.208C250.418 257.273 250.46 257.355 250.48 257.421C251.554 257.175 252.256 258.814 253.288 259.438C252.194 259.356 252.545 260.339 251.946 260.848C253.164 261.192 254.919 260.913 255.992 260.323C254.96 259.028 254.898 259.569 253.329 258.896L252.421 256.863L253.37 257.355C253.887 256.388 252.669 255.371 253.948 255.502C254.774 256.076 254.176 256.912 254.981 257.47L255.517 256.847C256.694 258.077 254.238 257.372 255.001 258.831C256.137 258.372 255.063 258.962 255.765 259.602C256.57 259.159 255.662 257.109 257.499 257.634C258.263 258.405 255.105 259.962 256.88 261.028L256.673 260.963C256.302 262.373 257.334 262.93 257.953 263.504C257.293 264.078 258.077 264.963 258.077 265.619L257.541 265.57L257.685 266.505C256.735 266.013 257.809 265.423 257.726 264.619L256.715 264.668C257.995 263.816 256.219 263.111 255.414 262.34C256.199 263.422 254.919 265.242 256.859 265.603L255.786 266.177L256.137 266.505C255.332 266.931 254.176 266.374 254.031 265.439C254.299 265.291 254.423 265.226 254.63 265.275C254.217 264.816 253.474 264.39 253.783 263.357L254.279 263.947C254.465 262.651 254.176 261.454 253.226 260.963C252.648 262.799 252.4 264.636 252.297 266.39C254.547 267.046 255.745 267.718 257.85 268.112C258.119 269.309 258.263 270.932 257.375 271.9L256.962 271.785C256.694 272.277 256.756 272.736 256.962 273.129C256.364 273.621 255.868 272.703 255.538 273.047L256.075 274.769C255.125 274.605 255.27 273.195 255.249 272.506C255.311 272.637 255.455 272.9 255.579 272.834C256.054 272.08 254.568 270.522 255.992 270.26C255.786 269.866 256.942 271.096 257.148 269.817C257.747 268.981 256.529 268.62 256.137 268.505C255.6 268.456 255.249 269.817 254.65 269.309C254.65 269.981 255.332 270.293 254.712 271.129C254.712 270.457 253.701 269.489 254.568 269.178C253.68 267.8 251.12 267.833 250.914 268.456C251.719 268.358 251.657 270.916 252.875 269.26C253.825 270.096 253.701 271.522 254.238 272.572L254.031 272.506L254.155 273.785C253.887 273.588 253.68 273.195 253.143 273.146L254.423 274.982C253.536 273.933 253.68 275.556 253.205 275.966C254.01 276.212 254.568 276.934 255.105 276.31C255.786 275.605 254.692 275.851 254.692 275.179L255.91 276.212L255.765 276.278L256.777 276.917C256.57 278.212 254.341 276.196 255.228 277.917L256.715 277.803C256.323 279.705 254.382 282.049 254.919 283.46C254.134 283.033 252.813 282.771 251.967 283.23C252.276 282.673 252.359 281.492 252.318 280.639C252.586 280.492 253.928 281.804 253.515 282.689C255.951 282.41 252.318 280.311 254.754 280.361C255.848 278.098 252.586 278.475 254.217 276.606C253.143 276.507 253.742 276.015 252.792 275.851C250.955 276.327 252.607 278.475 251.843 279.721C251.781 279.59 251.636 279.328 251.451 279.262C251.038 280.147 251.224 280.541 251.574 281.213L251.719 281.148C252.648 282.328 250.831 281.787 250.295 282.394C250.418 282.656 250.006 283.542 250.831 283.46L249.675 284.575L250.893 284.607C250.893 285.28 250.067 285.378 250.749 286.034L251.822 286.132L252.38 284.493C252.648 285.362 253.391 284.804 253.515 285.739C252.442 284.624 252.834 286.428 251.822 286.46L252.359 287.182L252.091 286.985C251.471 287.477 252.421 287.641 252.214 288.264C252.896 287.575 253.721 287.149 253.04 286.149C253.577 286.87 254.093 288.28 254.093 288.608C254.465 289.363 253.598 289.805 253.391 290.461C253.102 289.15 250.067 290.674 251.12 288.149C251.327 288.215 251.244 288.412 251.12 288.494C252.545 288.248 251.203 286.952 250.728 286.346C249.923 286.428 249.778 285.837 249.242 286.788C249.778 286.493 250.935 287.739 250.171 288.641L248.478 288.346L248.127 289.707L248.065 289.576C246.909 290.019 248.106 291.052 247.342 291.937C247.859 292.659 247.074 295.233 248.994 294.249C247.817 295.02 249.097 295.856 249.221 296.791L250.047 295.692C251.1 297.151 250.356 296.692 252.173 297.938C251.698 298.02 251.285 298.234 250.811 297.971C250.501 299.791 249.717 302.366 250.955 303.546C250.707 304.825 248.684 304.875 249.221 306.744C249.407 307.137 250.852 306.58 250.212 307.728C250.067 307.793 249.097 306.465 249.056 307.81C250.233 308.875 248.044 309.974 249.015 311.302C248.457 311.909 248.478 313.057 247.487 312.729C247.859 311.712 247.838 310.236 247.363 309.974C247.962 310.171 248.065 309.285 248.437 310.089C249.428 308.597 247.921 309.023 248.643 307.662C248.23 307.531 247.404 308.285 247.735 308.613C246.31 308.498 247.425 305.793 245.546 306.908C245.216 308.384 248.127 309.089 246.455 310.253C245.67 309.663 246.496 308.908 245.092 308.121L244.39 309.138L245.319 309.99L245.113 309.925C243.565 311.696 246.331 311.778 246.826 313.532C247.941 312.647 249.242 313.975 249.944 313.286C249.985 314.434 249.675 315.238 248.251 315.123C247.384 312.926 246.764 314.877 245.629 312.811C245.072 313.09 243.627 312.171 243.317 313.319C244.163 314.713 244.556 313.024 244.845 314.369C244.7 314.434 244.576 314.5 244.37 314.434C245.01 315.09 243.998 315.106 244.721 315.91L244.452 315.713C243.461 316.533 245.278 316.779 244.246 317.451C245.34 317.238 245.03 318.042 245.608 318.583C246.125 317.845 247.693 317.55 247.817 316.008C247.012 315.746 246.537 315.828 246.228 315.156L246.186 316.156C246.083 315.926 245.897 315.746 245.753 315.533L246.331 314.615C246.744 315.877 247.714 315.402 248.499 315.992C247.982 317.074 248.602 316.927 248.23 317.615C247.033 317.435 245.835 319.583 244.865 320.78C244.948 320.583 244.948 320.321 244.989 320.19C244.349 319.189 243.874 320.731 243.544 320.747L244.06 321.485C243.998 321.354 243.73 321.141 243.523 321.419C243.627 322.354 244.824 322.42 244.927 323.354C244.246 323.354 243.338 322.485 242.904 323.026C242.285 323.174 240.654 323.649 241.067 324.912C241.315 325.027 241.418 325.355 241.459 325.732C241.438 325.683 241.418 325.617 241.376 325.584L240.53 326.322C239.498 325.535 241.273 324.978 240.22 324.191L239.147 324.027C239.229 323.485 238.858 322.715 238.342 322.321C238.032 323.125 238.301 323.322 238.383 324.256C237.681 324.322 237.268 323.633 237.206 323.535L237.805 323.731C238.858 322.731 237 322.01 237.392 320.665C237.475 320.468 237.537 320.6 237.723 320.665C236.835 319.468 238.424 318.517 237.186 317.32L237.702 317.714C237.351 316.943 236.484 315.418 235.637 313.909L235.225 313.86C234.956 313.991 235.039 313.467 235.245 313.188C234.832 312.434 234.44 311.712 234.151 311.122C233.862 311.286 233.614 311.483 233.511 311.745C233.986 312.007 233.408 313.286 234.543 313.204C233.78 313.745 234.605 314.811 234.13 315.205C234.977 314.467 235.121 315.861 235.72 316.058C234.977 316.271 235.596 317.254 234.667 317.074C234.399 317.205 235.369 316.73 234.832 316.336C234.069 315.418 233.821 317.812 233.119 316.681C233.594 318.074 233.057 319.812 233.738 321.272L234.234 320.534C234.007 321.141 234.007 322.6 233.532 322.666C233.491 322.206 233.573 321.665 233.47 321.059C232.396 320.928 233.284 322.452 232.603 322.469L234.151 324.322L234.316 323.584C234.915 324.109 233.883 325.584 233.573 326.732C232.19 325.929 233.8 324.978 233.367 323.715C232.933 322.78 231.86 324.125 231.633 323.256C231.261 323.436 231.22 323.977 231.55 324.289L231.24 324.584C230.002 323.715 230.538 322.092 229.548 320.878C229.671 320.993 229.816 321.091 229.96 321.124C230.6 320.321 230.704 319.452 230.477 318.599C229.981 318.993 230.249 319.206 230.373 319.468C230.043 319.468 230.002 318.681 229.671 318.337C229.176 319.075 228.866 318.402 228.557 318.878C228.309 318.353 228.453 317.943 228.681 317.353C229.238 317.074 229.341 317.681 230.022 317.681C229.713 317.009 231.344 316.877 230.704 315.877C230.249 317.074 229.3 315.418 228.908 314.959L228.825 315.156C228.102 314.697 228.123 314.369 228.866 314.155C229.114 314.68 228.825 315.156 229.63 315.074C229.63 314.746 229.651 314.401 229.465 314.008L229.981 314.401L230.043 312.745C229.382 312.417 228.453 311.909 227.442 311.581C228.123 311.237 227.669 310.646 227.483 310.253L227.752 310.45C228.453 309.777 228.164 308.121 227.566 307.924C228.185 307.449 231.034 311.925 230.951 308.203C231.137 306.809 229.093 307.17 228.515 306.317C228.515 306.317 228.722 306.383 228.846 306.317C229.073 305.711 228.33 305.596 228.082 305.071C227.731 305.416 227.648 305.94 227.917 306.137C227.112 305.891 228.164 304.875 227.566 304.35C228.763 305.055 228.206 303.218 228.804 303.727C229.795 302.579 228.949 301.202 228.082 300.48C229.795 299.791 228.041 299.021 228.949 297.742C228.866 297.938 229.073 298.332 228.866 298.611C229.795 299.447 229.568 297.266 230.353 298.512C230.229 298.25 229.816 298.447 229.94 298.726C230.002 299.185 230.394 299.644 230.869 299.562L231.901 298.545L232.107 298.939L233.552 297.381C233.346 297.315 233.078 297.463 232.933 297.529C233.718 295.643 233.284 293.396 233.656 291.724C230.827 291.199 232.912 287.493 231.282 286.001C232.066 286.428 233.491 286.723 234.13 286.542C234.213 286.854 235.307 287.559 234.998 288.231C234.523 288.313 233.903 289.117 233.449 288.543C233.573 290.478 234.729 288.379 235.741 289.018C235.699 286.887 234.151 285.526 233.614 284.148H233.965L233.429 283.083C233.14 283.886 231.529 283.738 232.211 282.722L232.273 282.853C233.016 282.295 232.355 280.984 232.562 280.049L231.695 279.344C231.901 278.409 233.656 278.491 234.75 278.245C235.039 276.77 233.676 275.818 232.913 274.72C233.718 274.294 234.13 272.08 234.936 273.326C234.399 271.949 230.27 271.965 232.768 269.817L233.449 270.457C233.511 268.259 232.355 265.045 233.202 264.094C235.782 265.062 236.133 261.504 238.775 261.258C238.177 261.34 238.053 260.503 237.743 260.356C238.073 260.192 238.383 259.913 237.867 259.552C237.268 260.372 235.225 258.798 236.133 260.503C234.42 259.585 233.119 258.437 233.367 256.634L234.44 256.716L233.986 258.126C234.791 258.027 234.667 258.765 235.018 259.077C235.865 256.437 237.537 259.569 237.619 256.83C236.938 256.535 237.206 256.716 237 255.994C237 256.322 237.743 256.437 237.805 255.896L236.979 255.338C238.879 254.486 238.012 256.978 239.374 256.224C240.138 257.322 240.427 259.175 241.851 258.913C242.512 257.208 239.395 257.224 240.179 255.453L240.778 255.289C240.427 254.633 239.477 254.486 238.94 254.108C239.271 254.108 239.539 253.944 239.663 253.551C238.342 252.403 238.135 251.682 236.67 250.632C237.599 253.305 235.452 252.829 236.236 255.584C235.823 255.141 235.658 253.223 234.151 253.026L235.245 253.108C234.75 252.206 234.254 251.288 234.688 250.206L235.245 250.911C234.605 249.402 237.083 248.55 235.348 247.32C235.225 247.73 235.225 248.058 235.369 248.32C234.936 247.55 235.121 246.598 235.369 245.795L233.697 244.024C234.234 244.057 234.358 242.991 235.163 243.549C236.092 242.368 234.502 241.712 234.275 241.007C235.514 239.81 234.729 242.106 236.215 242.302C236.835 240.597 236.484 238.761 235.576 237.744C235.328 238.088 235.142 238.252 234.874 238.219C235.225 238.187 235.183 237.482 235.204 237.104L234.523 236.809C235.039 236.186 235.452 236.285 235.947 236.858C236.133 236.252 234.812 235.465 235.865 234.858C236.649 235.94 235.823 237.252 236.319 237.826C235.761 235.596 238.61 235.694 237.888 232.874C238.218 232.858 238.858 233.349 238.899 232.808C238.713 231.546 237.454 232.431 236.711 232.005C237.083 232.972 236.628 233.415 235.699 233.923L235.142 233.645C235.452 233.612 235.493 233.021 235.803 232.858L234.647 232.661C235.926 232.776 236.979 231.857 236.546 231.087C235.555 231.808 235.617 231.611 234.13 231.759C232.789 230.644 235.576 230.611 234.172 229.365C234.585 229.463 234.832 230.513 235.204 229.627C235.307 228.889 234.296 228.955 233.986 228.43C235.039 229.037 235.844 228.922 237.083 229.578C237.144 230.906 237.041 230.119 237.433 231.415L238.424 230.349C238.528 231.48 239.601 231.218 240.014 231.316C241.232 229.447 238.466 229.808 238.817 228.594C238.115 227.971 238.61 229.742 237.867 228.791C238.094 227.643 237.186 228.496 236.773 227.2L237.248 227.43C237.908 227.053 237.144 226.643 237.062 226.184C236.752 225.676 233.284 226.627 233.325 224.56C233.614 224.675 233.8 224.708 233.945 224.724L242.883 227.053C242.966 224.954 243.358 222.544 244.081 220.117C245.877 219.592 245.443 221.904 246.248 221.773L245.835 222.872C245.092 222.79 245.732 220.527 244.349 221.494C244.783 223.478 243.874 224.331 245.319 226.249C247.115 225.725 245.134 223.79 246.558 222.626C246.414 223.134 246.579 223.56 246.826 223.987C247.115 222.855 247.425 221.642 247.755 220.363L247.342 220.051C247.095 220.92 246.909 221.511 246.847 221.593C247.053 220.445 246.125 219.428 244.845 219.313L244.783 219.51L244.39 219.084L244.679 218.28L245.01 218.33ZM246.104 143.328C246.228 143.394 246.372 143.443 246.558 143.492C246.372 143.459 246.248 143.492 246.104 143.328ZM248.044 241.155C248.333 239.613 248.788 238.072 249.035 236.596C246.31 239.17 244.246 240.974 244.576 236.514L244.411 236.219C244.06 236.793 243.957 237.793 244.081 238.744C244.948 239.548 248.127 242.171 248.416 242.155C249.159 241.909 248.395 241.483 248.643 240.991L248.044 241.155ZM243.689 242.073C243.338 242.942 243.916 242.762 244.432 242.925C244.39 242.614 244.349 242.302 244.308 242.007C244.163 242.122 243.978 242.171 243.709 242.089L243.689 242.073ZM244.948 242.893C244.948 242.794 244.989 242.712 245.072 242.68L244.948 242.893ZM246.62 225.905C246.62 225.905 246.62 225.954 246.641 226.003C246.682 225.79 246.744 225.594 246.785 225.38C246.703 225.462 246.62 225.626 246.599 225.921L246.62 225.905ZM245.278 227.627L246.207 227.873C246.248 227.676 246.29 227.479 246.352 227.282C245.918 227.332 245.546 227.397 245.278 227.627ZM241.872 233.218C242.966 233.628 242.945 234.825 244.246 234.956C244.576 235.038 244.721 234.792 244.845 234.514C244.907 234.202 244.948 233.858 245.01 233.497C244.824 233.481 244.659 233.399 244.494 233.267C244.308 233.612 243.978 233.841 243.193 233.661C244.989 232.825 242.016 232.792 242.512 231.824C241.624 231.48 241.542 232.89 241.893 233.202L241.872 233.218ZM237.888 308.957C237.764 308.974 237.475 309.039 237.083 309.154L236.546 308.416C237 307.203 238.982 306.367 237.537 305.137C238.012 304.645 238.899 304.448 239.622 304.235C239.539 304.481 239.436 304.711 239.312 304.907C241.232 308.22 236.628 306.317 237.908 308.974L237.888 308.957ZM241.975 294.938C242.037 295.069 242.243 295.135 242.243 295.135C240.2 292.199 239.808 289.871 240.055 288.395C239.085 288.608 238.218 289.904 237.743 290.494L236.732 289.855L237.619 289.559L236.752 288.51C236.009 288.723 236.071 289.527 235.452 290.002C235.658 290.068 236.69 291.839 237.31 292.347L238.218 291.052C237.867 291.396 237.908 293.2 238.094 293.921C238.631 293.97 239.601 292.822 238.466 292.577C239.271 292.495 239.126 293.905 240.076 293.068C240.798 294.183 239.89 295.807 239.395 296.561L238.032 296.594C237.413 297.414 239.58 297.299 238.672 298.25C238.569 296.987 237.186 298.348 237.206 297.348C236.67 297.627 235.782 297.25 235.761 298.25C237.433 299.217 234.523 299.201 235.988 300.103C235.369 300.578 234.998 299.463 234.626 300.464C235.41 301.71 236.092 301.693 237.372 301.874C237.867 300.808 235.844 300.496 236.277 299.627L238.28 301.595C238.631 301.284 238.693 301.054 238.631 300.841C238.713 301.218 239.002 301.546 239.415 301.841C239.642 302.005 239.849 302.169 240.014 302.3C240.158 301.284 240.282 300.382 240.86 300.267L241.459 300.464C242.078 300.152 241.707 299.529 241.273 299.217C241.314 298.299 240.551 297.332 241.397 297.184L241.934 297.578C241.893 296.446 241.831 296.315 241.996 294.905L241.975 294.938ZM247.157 258.241C244.803 258.798 242.698 259.438 242.821 262.635L242.677 262.373C241.087 263.881 244.328 265.603 242.532 267.456C241.748 266.456 241.831 266.521 239.952 265.357L240.509 266.406C239.291 266.046 239.828 267.095 239.704 267.833L238.28 267.095C238.755 266.669 239.023 265.537 238.672 265.554C238.817 265.816 240.675 264.144 240.324 263.143C239.312 263.193 239.539 265.242 237.97 264.242C238.59 265.078 237.578 265.127 237.867 265.98C237.248 265.144 236.505 265.701 235.823 265.062L236.03 266.456C235.699 266.456 235.472 264.422 234.13 265.472C234.605 266.046 233.8 267.472 234.874 267.571H234.543C234.213 268.604 236.03 268.128 235.287 269.358C235.823 269.407 236.236 269.194 236.174 268.735C235.968 268.341 235.225 268.243 235.163 267.439C236.05 267.144 234.956 268.374 236.463 267.915C237.206 267.685 236.05 265.8 237.599 266.472L237.268 267.489C238.362 267.587 238.218 268.325 239.106 268.358C239.436 269.014 238.156 269.522 239.044 270.227C239.725 270.539 241.067 270.145 240.406 271.178C238.713 271.916 238.796 274.376 238.92 275.294L239.539 276.146C240.22 276.114 239.601 274.605 240.406 275.179L240.551 276.442L240.138 276.31C240.014 276.72 240.406 277.179 240.613 277.573C239.869 277.13 240.262 276.245 239.126 276.36C238.837 276.934 238.424 276.999 238.59 277.54C238.528 277.409 238.424 277.311 238.259 277.311C237.661 278.458 239.395 278.54 239.746 278.868C241.087 280.164 241.253 277.753 242.388 277.983L242.636 281.508C242.305 281.18 241.975 280.869 241.5 280.934C240.881 281.754 240.613 280.902 240.551 282.099C242.099 282.115 241.356 283.673 242.14 284.591C241.459 284.952 241.335 285.017 241.397 284.148C240.386 284.181 240.633 285.362 240.509 285.772C240.736 286.034 240.84 286.444 241.025 286.723C241.562 286.411 242.182 286.608 242.512 287.379L242.718 287.444C243.131 286.231 244.432 284.394 243.503 283.542L243.978 283.788C245.01 282.41 242.512 280.557 244.494 280.033C245.237 280.147 244.7 279.754 245.774 279.852L245.051 278.737L245.526 278.983L245.464 277.179L245.67 277.245C244.762 276.327 244.039 275.605 243.441 275.031C242.966 274.999 242.822 275.031 242.491 274.736C242.285 274.441 242.264 274.212 242.347 274.031C242.532 273.605 243.234 273.359 243.565 272.834L243.523 274.507C244.308 274.687 245.154 274.605 245.794 273.818C245.794 274.146 246.414 274.326 246.537 273.933C246.331 273.867 246.125 272.801 245.443 273.162C245.299 271.555 247.673 269.128 246.372 266.636C247.115 268.423 247.59 265.308 247.735 267.259C249.159 265.996 246.579 266.029 246.888 264.685C247.363 264.603 246.764 265.423 247.652 265.783C248.375 263.537 245.897 261.832 246.496 259.667L247.508 259.634C247.425 259.208 247.322 258.749 247.219 258.257L247.157 258.241ZM246.29 253.83C246.207 253.403 246.125 252.961 246.042 252.534C246.042 252.583 246.021 252.616 246.001 252.665L245.278 251.354C244.824 252.108 243.689 252.567 243.255 251.452C243.668 251.567 244.205 251.272 244.411 251.665C245.072 250.96 245.774 249.386 244.225 249.73C245.546 251.206 242.264 249.96 243.255 251.124C242.305 250.485 242.801 249.927 242.409 249.337C243.193 249.96 244.287 249.288 244.762 248.435C244.556 248.041 244.865 247.025 244.514 246.369C243.565 246.549 243.09 245.975 242.76 246.992C242.553 246.598 242.388 246.008 242.925 245.385C243.069 245.647 243.152 246.107 243.482 246.09C244.37 245.713 244.37 245.205 244.762 244.959C244.721 244.746 244.7 244.516 244.659 244.303C244.576 244.368 244.473 244.418 244.329 244.45L243.565 243.696C243.936 244.68 243.111 244.122 242.553 244.09C243.647 244.172 242.739 243.483 242.739 243.139L241.542 243.811C240.984 243.434 242.471 242.63 241.315 242.762C240.736 244.254 240.902 244.844 241.129 246.238L242.058 245.729C242.574 247.304 240.447 246.615 240.365 248.353C241.129 249.107 240.22 250.96 241.851 251.091C241.376 250.845 240.324 252.108 241.005 252.731C242.45 253.469 242.491 255.469 243.214 254.896C243.276 254.354 242.512 253.6 243.523 253.207L243.75 254.272L244.618 253.633C244.308 253.977 245.092 253.977 246.31 253.879L246.29 253.83ZM257.066 230.726V230.693C257.066 230.693 257.066 230.726 257.066 230.742V230.726Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239.085 324.668C239.415 324.996 239.25 325.734 240.055 325.668C239.168 325.603 240.117 324.324 239.085 324.668Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.115 325.469C238.322 325.534 238.652 325.534 238.632 325.862L238.549 324.928L238.115 325.469Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.004 325.847C232.582 326.388 232.912 326.716 232.747 327.47C230.58 327.569 232.314 326.175 230.394 325.65C229.981 327.028 231.798 327.634 231.839 328.815C232.788 328.274 233.614 326.028 232.004 325.847Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.403 324.977L229.754 325.797L229.899 325.731L229.527 324.928L229.403 324.977Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M250.233 310.286C250.914 310.286 250.315 309.745 250.191 309.482C250.129 309.679 249.902 309.958 250.233 310.286Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.307 160.3L259.584 154.479C259.77 156.151 259.894 157.709 260.307 160.3Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.291 290.707C248.725 292.314 249.798 293.084 249.901 294.691C251.491 292.707 248.147 291.789 249.716 290.133L248.291 290.707Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.557 291.641C252.277 291.805 252.236 290.329 251.286 290.493C251.472 291.559 252.422 291.067 252.195 292.018L253.557 291.641Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.901 297.103L231.323 296.578L231.509 296.972L231.901 297.103Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.227 284.442L253.474 284.639L253.97 283.885L253.227 284.442Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M229.28 296.281L228.929 296.954L229.465 297.347L229.28 296.281Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M236.773 290.675L237.104 291.331C237.042 291.2 237.661 290.38 236.773 290.675Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.278 279.704L253.886 278.9L253.741 278.982L254.134 279.769L254.278 279.704Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.861 285.542C232.85 285.903 233.737 284.28 232.788 285.1C232.85 285.903 233.387 285.608 233.861 285.542Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.396 276.852C241.396 276.754 241.396 276.638 241.293 276.523C241.314 276.655 241.355 276.754 241.396 276.852Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.397 276.852C241.355 277.18 240.963 277.491 241.211 277.737C241.686 277.36 241.541 277.196 241.397 276.852Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.543 273.031L241.439 273.326C240.985 272.981 241.047 273.145 241.398 273.441C241.398 273.769 241.708 273.769 241.914 273.818C242.017 273.883 242.141 273.965 242.265 274.031C242.141 273.932 242.038 273.834 241.935 273.752C241.997 273.26 241.976 272.949 241.522 273.031H241.543Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.171 259.832C258.717 260.931 258.51 261.209 257.767 261.111C257.437 262.16 258.737 262.062 258.985 262.718C258.944 261.505 259.316 261.275 259.171 259.832Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.986 262.719C258.986 262.85 258.986 262.982 259.007 263.146C259.048 262.965 259.007 262.834 258.986 262.719Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.914 276.934L231.82 276.18L231.964 276.442L232.914 276.934Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.687 258.19C259.625 258.403 259.625 258.731 259.357 258.879C260.1 258.977 259.749 257.977 259.687 258.19Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.577 261.684C244.102 261.766 244.329 262.503 244.123 262.782C244.247 262.372 245.671 262.11 244.577 261.684Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M256.88 254.812C256.818 255.009 256.281 255.304 255.662 255.14C256.013 255.468 257.293 255.944 256.88 254.812Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.887 259.666L244.619 259.814L245.032 260.601L244.887 259.666Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.553 261.75C234.379 262.652 235.824 260.52 236.464 262.029C237.558 260.192 235.184 262.094 235.452 260.717C235.081 261.52 233.904 261.848 233.553 261.75Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.452 260.716C235.514 260.601 235.555 260.469 235.555 260.338C235.494 260.486 235.473 260.617 235.452 260.716Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.119 249.025C242.202 249.157 242.305 249.239 242.408 249.321C242.346 249.223 242.264 249.124 242.119 249.025Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235.101 256.238L236.339 257.583C235.513 256.681 235.761 254.549 234.399 254.615C234.068 255.287 234.357 256.14 234.894 256.517L235.101 256.238Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.555 242.678L261.05 243.269L261.256 242.58C261.05 242.777 260.08 242.367 260.555 242.695V242.678Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.297 242.434L261.256 242.566C261.256 242.566 261.297 242.5 261.297 242.434Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.574 251.483C242.45 251.893 242.45 252.221 242.677 252.615C242.945 252.467 243.255 251.45 242.574 251.483Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.862 238.664L259.027 239.599L259.007 238.582L258.862 238.664Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.422 234.45L261.69 234.303L261.257 233.516L260.989 233.68L261.422 234.45Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M234.646 238.975C234.46 239.582 235.637 240.123 235.905 239.959V238.762C234.852 239.024 235.947 239.09 235.637 239.778L234.667 238.975H234.646Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.927 202.442C261.629 202.721 261.175 204.049 260.514 204.099C260.225 203.918 259.977 203.197 259.523 203.639L261.216 204.722C260.101 206.099 258.966 203.607 258.388 202.918C258.119 204.328 259.255 204.771 259.193 206.296C259.358 205.853 259.791 205.574 260.184 205.361C261.402 205.328 260.824 206.739 260.886 207.739C261.443 207.116 261.876 207.493 262.331 207.968C262.372 208.05 262.434 208.116 262.516 208.149L262.682 208.313V208.198C262.826 208.198 262.991 208.198 263.218 208.099C262.909 207.247 263.941 206.624 263.961 206.083C261.959 206.575 263.549 204.213 262.971 203.525L262.805 202.738V202.442C263.032 202.393 263.301 202.475 263.672 202.934C263.301 202.557 263.466 201.295 262.826 201.393L262.888 198.523C262.971 198.441 263.074 198.343 263.218 198.278C263.094 198.179 262.991 198.163 262.888 198.163C262.991 193.998 262.971 189.833 263.032 185.668C262.867 186.291 262.393 186.816 262.165 187.439C260.865 186.471 261.918 188.472 260.658 188.177C260.204 187.75 260.369 187.111 260.658 186.75C260.039 186.603 259.461 187.127 258.718 187.062C257.892 188.619 260.906 188.898 260.411 190.423C259.668 190.358 259.007 189.866 259.09 190.882L258.924 190.62C259.729 192.243 257.19 191.85 259.255 192.899L258.161 192.85C258.966 193.588 258.945 195.014 259.069 195.818L258.862 195.769C260.039 198.032 259.09 197.031 259.544 199.573L258.305 198.392C257.748 199.245 259.131 199.475 258.966 200.098C258.759 200.048 257.954 200.18 257.768 199.589L259.606 202.688C260.411 203.443 260.411 202.557 260.886 202.459L260.927 202.442Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.191 206.279C259.13 206.443 259.088 206.624 259.13 206.837C259.171 206.624 259.191 206.443 259.191 206.279Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.032 184.799V185.668C263.093 185.389 263.113 185.11 263.032 184.799Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.38 210.721C261.959 210.196 262.144 211.131 262.557 211.246L262.619 209.343C262.206 209.343 261.731 209.147 261.36 209.179V210.737L261.38 210.721Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.444 208.801C263.155 208.736 262.907 208.523 262.66 208.293L262.618 209.342C262.928 209.342 263.217 209.228 263.424 208.801H263.444Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M241.066 208.489L241.045 208.145L240.735 207.637L241.066 208.489Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.091 203.326C242.451 203.703 242.905 204.474 243.05 204.736C243.05 203.867 243.277 204.244 243.091 203.326Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M236.236 204.244L235.905 203.408L235.781 203.49L236.236 204.244Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.798 178.29C258.778 178.158 258.758 178.01 258.738 177.879C258.738 178.076 258.758 178.191 258.798 178.29Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.771 185.568C261.03 183.552 260.762 186.897 262.331 186.29L261.835 185.191L262.248 185.29L262.145 183.945C261.422 184.207 261.381 184.421 260.617 184.355C260.948 182.568 261.526 183.797 262.496 182.486L262.372 180.485L262.599 180.649C262.599 180.485 262.496 180.403 262.372 180.354L261.959 173.598C261.361 172.369 260.597 174.271 259.503 173.369C259.503 174.795 258.677 176.894 260.184 177.025C259.977 176.976 259.565 176.878 259.379 177.173L260.617 178.009L261.01 177.222C262.228 178.058 261.939 180.731 261.175 181.207C260.762 179.682 259.276 180.436 260.101 178.321C259.709 178.419 259.048 178.796 258.842 178.321C259.255 180.797 258.574 183.01 259.792 185.601L259.771 185.568Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.13 160.694H259.276C259.276 160.694 259.151 160.661 259.13 160.694Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.944 161.529L260.431 162.726L260.307 160.84L259.275 160.709C259.543 160.873 260.059 161.529 259.667 161.791L258.965 161.529H258.944Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.318 164.12C260.864 163.152 259.646 163.201 259.109 163.742C258.531 162.857 260.41 163.267 259.109 162.66C258.221 162.677 258.758 163.775 258.923 164.038L261.318 164.136V164.12Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.699 171.318L260.203 171.039L260.059 171.711L260.699 171.318Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.203 171.039L260.327 170.367C259.956 170.416 259.584 170.466 259.336 170.564L260.203 171.039Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.678 168.613C260.76 168.334 260.843 168.022 260.864 167.629L260.678 168.613Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.368 169.384H260.534L260.678 168.613C260.575 168.892 260.472 169.138 260.368 169.384Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.328 170.367C261.175 170.252 262.083 170.137 261.835 169.17L260.514 169.367L260.328 170.383V170.367Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.702 198.194L237.247 197.439L237.124 197.505L237.578 198.276L237.702 198.194Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238.609 193.85C238.464 193.653 238.299 193.522 238.155 193.391C238.237 193.587 238.382 193.751 238.609 193.85Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M232.85 190.537C233.717 189.668 233.965 191.767 234.378 190.144C235.183 190.013 236.194 190.8 235.782 191.554C235.038 191.488 235.307 190.8 234.543 191.259C235.41 191.784 234.811 191.964 235.947 191.8C236.628 192.669 237.433 192.784 238.176 193.374C237.701 192.325 238.899 190.144 237.474 188.799C236.133 188.045 234.254 188.471 232.293 188.455C231.818 188.553 231.57 190.439 232.871 190.537H232.85Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M230.847 191.896C230.744 192.306 230.827 192.438 230.971 192.684C231.652 192.618 230.868 192.224 230.847 191.896Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.836 182.615C245.547 182.533 245.216 181.779 244.721 181.943L245.072 183.075C245.113 182.812 245.464 182.714 245.836 182.615Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.217 183.566L245.071 183.074C245.051 183.205 245.071 183.353 245.217 183.566Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.023 182.566L245.857 182.616C245.857 182.616 245.981 182.616 246.023 182.566Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.154 165.842C261.69 165.842 261.36 165.35 261.216 165.088C261.174 165.301 260.989 165.596 261.154 165.842Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.8 146.69L259.213 146.23C258.965 146.394 258.841 146.476 258.8 146.69Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.875 140.016C243.771 140.016 243.688 139.967 243.605 139.934C243.668 139.983 243.771 140 243.875 140.016Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.585 139.936C243.131 139.641 243.791 138.69 243.11 138.362L243.316 138.395L242.904 137.771C242.986 138.362 242.924 139.592 243.585 139.92V139.936Z\",\n    fill: \"#3F3834\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.9438 57.8655C45.7993 57.5212 46.4186 57.1769 46.7076 57.2916C45.8612 56.6193 46.7489 56.5538 45.2419 56.5374C44.4575 56.111 45.4484 55.5699 46.0883 56.0618L45.0561 54.7828L44.891 55.5863C43.6317 55.4387 45.1593 54.2909 43.673 54.127L43.9207 55.5535L43.5078 55.5043C43.9827 55.7995 43.8588 56.4554 43.6936 56.6849C43.4872 56.6685 43.1569 56.7013 43.095 56.4554C43.1569 58.1935 45.3245 56.7997 45.8612 58.2263C45.8199 58.1443 45.8406 58.0295 45.9438 57.8655Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.0329 59.5067L44.6431 60.0314L44.3334 61.0644C44.8702 61.048 45.3863 61.7531 45.7991 61.2284C45.7166 61.13 45.5308 60.9497 45.5721 60.7857C46.7488 60.8349 46.274 62.0975 47.43 61.7367C47.0584 60.9497 47.2855 60.8185 46.2946 60.3757C46.3359 59.6379 46.563 59.0804 46.9552 58.7196C46.7694 58.5065 46.0469 58.5229 45.8817 58.2441C45.9024 58.3097 45.923 58.3589 45.9437 58.4245L44.1889 58.5557C44.5812 58.7688 44.416 58.9984 44.4779 59.2443L42.331 58.1621C40.7208 58.6376 41.7943 59.7526 41.1543 60.261C42.5787 59.6051 41.9388 60.6873 43.0329 59.4903V59.5067Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.4979 145.377C69.6011 145.623 70.014 145.623 70.2411 145.623L69.4979 142.852C69.0644 143.016 68.7135 143.901 68.3006 143.409C67.8671 143.721 68.4657 144.393 69.1057 144.393L68.3625 144.295C69.4153 144.786 67.7845 145.508 67.1445 145.18V145.229L71.0256 146.459C71.0668 145.77 69.725 146.147 69.4773 145.36L69.4979 145.377Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.1984 204.145C77.0539 203.767 76.8888 203.718 76.7236 203.751C76.8475 203.882 76.992 204.014 77.1984 204.145Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.9548 146.756L73.1728 147.15C72.8219 146.97 72.3884 146.838 71.9548 146.756Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.7388 145.492C54.7388 145.492 54.6356 145.492 54.553 145.525L55.1516 145.689C55.0071 145.607 54.8626 145.541 54.7181 145.492H54.7388Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M79.1802 158.873C79.1802 158.873 79.2428 158.972 79.3054 159.055C79.2845 158.989 79.2428 158.923 79.1802 158.873Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.7285 138.77L48.0704 139.885C47.5336 139.787 47.8433 140.377 47.2033 140.197C47.3065 140.279 47.6162 140.705 47.8226 140.541L47.7194 140.279C49.309 140.722 49.7425 140.246 51.105 141.181C51.7862 140.361 50.9398 140.18 50.1967 139.918C50.0728 139.803 49.9902 139.721 49.9283 139.623L47.6781 138.869L46.7285 138.754V138.77Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.6601 186.783H68.1349C67.9078 186.75 67.6394 186.52 67.6601 186.783Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.9849 146.706C71.2532 146.673 71.5835 146.705 71.9551 146.755L71.0468 146.459C71.0468 146.459 71.0055 146.607 70.9849 146.689V146.706Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.6399 146.261L67.1651 145.245L66.3394 144.982C66.7109 145.343 67.0206 145.769 67.6399 146.261Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M79.5928 157.068C80.3567 159.233 77.7968 156.79 77.6317 157.855C77.9826 158.429 78.829 158.528 79.1593 158.872C78.0446 157.232 81.8224 158.708 80.976 157.019C82.4623 157.052 82.8545 158.036 82.6068 158.708C81.3888 159.61 81.4508 158.265 80.0676 158.331C80.4599 159.003 80.687 158.839 81.5334 159.02C81.4714 160.184 83.7835 161.086 82.0288 162.037C82.5242 162.807 83.1848 162.643 84.0106 163.004C85.5176 162.873 84.506 161.676 85.6002 161.201C85.4969 161.283 85.2699 161.446 85.0428 161.43L85.1873 160.676C84.8363 161.414 83.6803 160.807 83.4945 160.463C83.3913 160.2 83.2055 159.708 83.639 159.708L84.0519 160.053C84.4028 159.479 82.71 159.102 83.3913 158.446C83.7216 158.364 83.928 158.544 84.1345 158.544C82.9784 158.101 82.8958 157.528 81.9669 156.757L83.5564 157.036C81.7604 156.593 81.8224 154.937 82.4004 153.691C82.1733 153.855 82.0701 154.1 81.7398 154.019C81.2237 153.428 82.1114 152.789 82.9578 152.953C81.5746 152.526 83.3706 150.411 81.5746 149.804L73.152 147.115C73.3791 147.23 73.5648 147.361 73.6681 147.509C72.4707 148.066 72.6772 148.23 71.3147 147.804C72.1404 148.296 73.1313 147.902 73.3997 148.804C72.6565 148.558 71.1702 148.706 71.2321 149.591C73.0694 151.575 77.0949 152.444 79.4896 154.199C78.5194 154.428 79.2006 156.019 79.1593 156.839C78.0239 156.708 77.5697 156.167 77.1981 155.593C77.2188 155.986 77.3633 156.642 77.4252 157.134L79.5515 157.003L79.5928 157.068Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M74.9918 152.479C74.9918 152.479 74.8874 152.611 74.8457 152.677C74.9292 152.627 74.9709 152.578 74.9918 152.479Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.1988 155.462C77.1988 155.462 77.1362 155.462 77.0945 155.462L77.2197 155.643C77.2197 155.643 77.2197 155.495 77.2197 155.445L77.1988 155.462Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.8797 147.577C68.57 147.494 68.4668 147.412 68.1365 147.33C68.2603 147.396 68.3636 147.478 68.4668 147.56C68.6319 147.626 68.7764 147.659 68.8797 147.56V147.577Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.5098 146.853H70.9433C70.9433 146.853 70.9846 146.754 70.9846 146.705C70.7575 146.722 70.5717 146.771 70.5098 146.853Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.5945 166.809L72.864 166.99C72.8225 166.858 72.7189 166.825 72.5945 166.809Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.5197 159.775C78.2307 159.02 77.0127 159.906 76.7444 158.824V159.152C75.9186 158.479 75.8567 157.069 75.5883 156.167C76.2076 156.167 76.1664 155.495 77.116 155.462C76.7444 154.872 76.3934 154.282 75.3613 154.101C75.5677 153.658 74.5974 153.216 74.8658 152.658C74.3704 152.953 72.8221 152.265 73.7923 153.347C73.6891 153.265 73.5859 153.347 73.4827 153.265C72.9047 154.15 74.2878 154.249 74.4736 154.921C74.0194 155.413 73.4414 154.413 73.2969 154.823C74.0194 155.577 73.2969 157.528 75.32 157.151C75.609 157.741 75.1755 157.889 74.8452 158.135C77.2811 158.758 74.7626 161.841 77.5701 161.414C77.3843 161.07 77.3018 160.496 76.5792 160.07L78.5197 159.775Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.353 148.822C69.353 148.822 69.3698 148.937 69.353 148.97C69.353 148.921 69.353 148.872 69.353 148.822Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.0504 138.062L76.9497 138.095C77.8167 139.784 77.4864 140.522 77.9405 142.063C77.7135 142.227 77.507 142.063 77.4038 141.981C77.8993 143.031 77.9199 144.736 78.9727 145.408C79.0553 145.769 78.7044 146.769 78.0851 146.507C78.2915 146.655 78.4979 146.819 78.4979 147.032C77.858 147.196 78.1883 146.622 77.6515 146.704C77.6515 146.868 77.5277 146.95 77.7548 146.95C77.1148 146.786 75.5872 147.573 75.3188 146.36C76.7226 145.638 75.711 147.179 77.3419 146.622C77.2593 146.212 76.5987 146.376 76.3923 146.36C76.289 145.835 76.7226 145.786 77.1148 145.753C76.5368 145.638 77.1148 144.867 76.2271 144.736C75.8349 143.752 77.507 144.589 77.3212 143.933L75.5046 143.834L75.5459 142.703C74.555 141.227 72.6351 143.408 71.2107 141.768C72.1603 141.867 73.4815 140.899 73.626 140.014C73.8118 140.506 75.1743 141.244 74.8234 141.965C75.9381 140.85 75.2982 143.195 76.7226 142.473C75.8762 142.145 75.5872 141.408 75.8349 140.768L76.0413 140.932C76.062 140.293 74.1421 140.096 74.6169 139.128C74.4518 138.718 74.9679 138.718 75.3807 138.735C75.0298 138.423 74.6169 138.144 75.0091 138.095L75.0504 138.062ZM75.6285 138.932V139.522C75.8555 139.341 75.7936 139.128 75.6285 138.932Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.9812 67.6737C43.9812 67.6737 44.0647 67.5417 44.1064 67.4922C44.0229 67.5417 44.0021 67.6077 43.9812 67.6737Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.9063 119.849V119.504C49.8665 119.652 49.8864 119.75 49.9063 119.849Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.8674 112.781L42.3926 112.322C42.4545 112.519 42.6403 112.65 42.8674 112.781Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.2295 71.7227C44.2295 71.7227 44.3122 71.7887 44.3328 71.8052L44.2502 71.7227H44.2295Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.7249 96.988C44.8694 96.9059 44.9932 96.8073 45.0758 96.6758C44.9106 96.7086 44.7868 96.8237 44.7249 96.988Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.952 112.862C42.952 112.862 42.952 112.845 42.9729 112.829L42.8477 112.779L42.9311 112.862H42.952Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.4905 123.832C45.4905 123.832 45.6148 123.964 45.6978 124.03C45.6356 123.931 45.5734 123.882 45.4905 123.832Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.2993 122.75C50.2993 122.75 50.4237 122.899 50.5066 122.948L50.2993 122.75Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.4319 135L49.7828 135.427C49.7002 135.197 49.5764 135.082 49.4319 135Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.4106 124.111C49.4106 124.111 49.5765 124.144 49.6594 124.16C49.5972 124.111 49.4936 124.078 49.4106 124.111Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M48.9165 64.4727V64.5057H49.1238L48.9165 64.4727Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.2744 63.5077L46.0886 63.1133C46.0886 63.2612 46.1506 63.4091 46.2744 63.5077Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.7281 90.1185C46.9758 89.9706 47.2442 89.6748 47.5332 89.7899C47.1409 89.5762 46.2533 89.6584 46.7281 90.1185Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.0431 66.0652C59.7954 65.9995 59.6096 65.9337 59.4238 65.8516C59.6922 65.9995 59.9193 66.1474 60.0431 66.0652Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.4239 65.8512C59.3 65.769 59.1555 65.6868 59.011 65.6211C59.1348 65.7033 59.2794 65.769 59.4239 65.8512Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.5305 92.1035C61.4061 92.1365 61.3232 92.2025 61.3025 92.2685C61.5305 92.2355 61.5927 92.186 61.5305 92.1035Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.3562 62.7837C45.9433 62.7345 44.8698 61.0456 44.7873 62.5214C43.4867 62.5214 44.106 61.6195 43.7551 61.2424C43.4661 61.5375 42.9087 61.144 42.4545 61.2588C42.6197 61.4392 43.0119 61.6523 42.95 61.9803C42.3719 62.1606 41.9178 61.7015 42.1242 61.308C41.4843 61.8163 41.0507 60.7669 40.5759 61.4556C41.154 62.8493 41.7113 63.8168 43.6931 64.7022C43.3009 63.9152 42.8467 63.0297 43.3009 62.341L44.4363 62.5542C43.5073 63.3576 44.2918 63.784 44.2505 64.5219L44.7047 62.8329C45.5717 62.0131 45.8194 62.5214 46.0878 63.1117C46.0878 62.9641 46.1497 62.8165 46.3355 62.7673L46.3562 62.7837Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.2865 63.3432V63.3102C56.2865 63.3102 56.2452 63.2606 56.2039 63.2441L56.2865 63.3432Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.7688 131.685L72.223 131.768C72.0165 131.685 71.872 131.669 71.7688 131.685Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.0386 130.588C47.0386 130.588 46.9343 130.604 46.8926 130.637C46.976 130.703 47.0178 130.654 47.0386 130.588Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.7391 112.059C63.7391 112.059 63.5533 112.124 63.3882 112.239C63.4914 112.256 63.6153 112.223 63.7391 112.059Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.6641 115.568C62.6641 115.568 62.6021 115.618 62.5608 115.651L62.6641 115.568Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.7734 91.3008C41.7734 91.4651 41.8146 91.5966 41.8763 91.6952C41.8763 91.5637 41.8763 91.4323 41.7734 91.3008Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.2107 128.277C71.3346 128.294 71.4584 128.327 71.6236 128.392C71.4378 128.327 71.3139 128.294 71.2107 128.277Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.2976 107.533L57.4427 107.616L57.4842 107.55L57.2976 107.533Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.8754 105.696C58.0199 105.746 58.1438 105.762 58.2677 105.778C57.7103 105.204 58.0406 104.007 56.8432 103.975C56.9052 104.188 56.3684 105.352 55.6459 105.221C55.9968 105.631 55.2743 106.352 55.5014 106.565C56.0381 105.778 56.4923 106.401 56.9671 106.844C56.6781 107.32 55.9968 106.844 55.8317 107.254L56.1207 108.254V107.352L57.318 107.516C57.2768 107.484 57.2355 107.467 57.1942 107.434C56.451 105.991 58.8457 107.156 57.8754 105.68V105.696Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.2676 105.777C58.3505 105.86 58.4541 105.942 58.5785 105.992C58.5371 105.843 58.4127 105.81 58.2676 105.777Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.281 99.4995C59.281 99.4995 59.1566 99.351 59.053 99.252C59.0944 99.3015 59.1774 99.417 59.281 99.4995Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.3398 144.198C66.6701 144.116 67.1243 143.149 66.2779 143.297L66.1953 144.116L66.3398 144.198Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M52.178 83.1523C52.178 83.2509 52.178 83.3496 52.178 83.4482L52.3225 83.4975C52.4463 83.4317 52.2606 83.2509 52.178 83.1523Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.1924 104.99C55.3575 105.138 55.502 105.204 55.6465 105.22C55.564 105.122 55.4401 105.04 55.1924 104.99Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.2627 82.9537C54.5104 82.8061 54.8614 82.6094 55.1917 82.5602C55.1917 82.2978 54.6962 82.1503 54.5104 81.9043C54.6756 82.1831 54.6136 82.5274 54.2627 82.9537Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.1128 144.771C66.1128 144.771 66.2779 144.902 66.3605 144.968L66.0921 144.886L65.9889 145.525C65.9889 145.525 66.1334 145.656 66.1954 145.755C66.1541 145.722 66.0509 145.706 65.9476 145.706L65.8857 145.919C66.8973 146.247 67.8675 147.313 68.4662 147.575C68.9616 147.968 69.3332 148.477 69.3332 148.837C69.2713 148.51 68.9823 148.116 68.5075 148.329C68.1565 149.067 66.7528 149.625 68.3217 150.526L68.1359 149.871L70.4273 151.035C69.7667 151.674 69.2713 150.444 68.5281 150.362C69.7667 151.363 67.4753 152.724 69.2713 152.986C68.301 153.216 66.6908 153.609 66.9798 154.347C67.9707 153.626 67.8262 154.691 68.9203 154.052C69.5603 154.216 68.7758 154.954 69.5397 154.872H69.1061C67.8675 156.413 70.4273 156.446 71.3563 156.872C72.1408 158.364 71.6866 159.168 72.1614 160.414C71.5008 160.562 69.7667 161.185 69.9525 161.677C70.9022 161.775 71.604 162.857 72.7807 162.808C73.0491 161.824 71.6453 162.201 71.2324 161.709C72.3266 161.07 72.4091 161.496 72.9872 160.758C72.6362 161.332 74.1639 162.923 73.1523 163.644L72.9459 163.48C72.4711 164.464 69.6635 165.038 71.7073 166.235L72.5743 166.825C72.4504 166.809 72.3266 166.825 72.2027 166.825C72.3266 167.99 70.9641 167.858 72.2646 168.957C72.1614 168.875 72.0582 168.957 71.955 168.859C71.4802 169.662 72.9252 170.203 73.2968 170.712C72.4091 171.171 72.3266 170.761 71.604 170.646C71.4802 171.958 73.4207 173.106 74.7625 173.745L74.3497 174.63C73.8748 174.188 72.7188 173.729 72.1614 173.942C72.4504 174.368 72.884 174.221 72.822 174.876C72.1821 174.844 71.5627 174.647 70.7163 174.45C69.9319 175.877 72.9665 174.483 71.2324 175.614C71.2944 176.024 72.244 176.155 72.9872 176.123L72.1408 176.975C73.111 176.942 73.3175 177.861 73.5858 178.451C74.0193 178.484 74.5148 177.861 74.1019 177.664C74.8657 177.631 75.3199 178.238 75.3818 178.648C73.4413 179.009 76.0837 181.353 73.6684 181.091C74.618 182.895 75.1754 185.502 76.125 186.682C75.6089 187.125 75.6915 187.961 74.6799 187.535C74.8657 189.027 76.9714 189.7 76.5379 191.241C76.2902 191.372 76.4553 190.552 75.7947 190.651C76.6824 191.602 75.0928 192.487 75.7328 193.979C75.6915 193.717 75.258 193.668 75.0515 193.635C75.3818 193.602 75.7741 194.242 76.1044 194.619C75.9392 194.848 75.8566 194.324 75.6089 194.471C75.1754 195.963 75.6709 197.242 76.2695 198.538C76.8063 199.833 77.4669 201.145 77.4049 202.637C77.4462 201.784 76.1044 201.456 75.5676 201.44L75.5263 202.26C76.1869 202.588 76.187 203.211 76.6618 203.736C76.414 203.801 76.125 204.047 75.8154 203.768C74.3703 205.343 78.1068 206.392 77.2811 208.393L74.7419 205.851L73.7716 206.408L72.6156 205.326C71.8311 205.917 73.5033 206.523 72.4917 206.556C72.2233 206.408 72.3266 206.097 71.7898 206.064C71.3563 206.638 72.0995 206.72 72.2853 207.179C70.2828 205.9 70.5099 203.654 69.9938 202.408C69.8287 202.211 70.4893 202.571 70.6957 202.621C70.6338 202.112 71.2737 201.817 70.9228 201.194C70.0557 200.801 70.2828 201.489 70.1796 201.801C69.4158 201.752 69.4777 201.588 69.3539 201.243C70.3654 201.178 69.7255 199.358 70.9641 198.899C70.6131 197.046 68.3836 199.226 68.7552 197.423L69.8906 196.865C68.941 195.832 68.1565 194.52 68.301 193.34L68.363 193.586C68.8584 193.733 69.1474 193.438 69.3951 193.307C69.808 192.389 68.363 191.651 69.4571 191.061C68.1772 190.11 67.1037 188.47 66.3192 187.371C67.8056 186.945 67.7849 188.781 68.7758 189.208L68.652 188.142C68.7552 188.798 69.3539 189.011 70.2622 189.355C70.448 188.404 69.0648 188.175 68.59 187.322C69.0029 187.355 69.2506 187.224 69.2094 186.814L68.1978 186.781C68.1978 186.781 68.3423 186.715 68.4043 186.584L67.5991 185.076C67.2069 185.436 66.3399 185.535 66.3605 185.928C66.9385 185.731 67.083 186.076 67.1243 186.469C66.4224 186.174 66.6082 186.912 66.0715 186.928C66.0096 186.125 65.7618 185.141 65.4109 184.649L66.3192 184.403C66.4431 183.616 65.8031 182.846 65.9889 182.304L66.505 182.419C66.6495 181.468 65.927 180.615 66.6908 179.697C65.4935 178.976 64.42 178.041 63.202 177.5C61.9634 177.287 64.2548 174.926 62.3969 174.204C62.5208 174.122 63.4085 174.729 63.9246 174.991C63.9865 174.352 62.4176 174.04 63.6149 173.696C63.4704 175.139 64.5851 173.499 65.0806 174.073C64.9154 173.417 64.5645 172.761 64.0484 172.499C64.2755 173.548 62.2524 172.351 63.0162 173.335C61.7982 172.646 61.1583 171.597 61.3441 170.564C61.8808 170.498 62.1079 170.351 62.2524 169.957L61.406 169.777C61.4473 169.301 62.5208 170.531 62.6034 169.58C61.0551 168.809 62.7272 166.612 60.1674 166.547C60.9725 165.678 61.4679 167.776 62.3969 166.514C63.4291 167.022 62.6034 168.055 63.8833 168.088C63.3878 167.514 64.8742 167.711 64.7916 167.301L63.8833 166.711V166.875C62.4588 165.874 62.5621 163.939 62.0047 162.464C60.477 161.381 58.4746 160.791 58.2269 159.25C59.0526 159.578 58.6191 157.872 60.1674 158.627C60.6216 157.823 59.6926 157.249 59.1558 157.315C59.1352 157.971 59.032 157.561 58.9081 158.118C58.1649 157.872 57.9998 157.053 58.3301 156.659C58.3301 156.823 58.4333 156.741 58.6397 156.741C58.8875 155.938 57.8966 156.495 57.5043 156.003C58.3714 155.692 57.4424 154.773 57.7934 154.216L56.3276 153.707C57.2773 153.953 56.4722 152.97 57.2153 152.74C56.4928 152.33 55.3161 152.068 55.3574 151.248C55.8735 151.494 55.8115 150.428 56.6786 150.28C57.1534 148.805 53.7678 148.46 54.6761 146.985C54.8826 146.985 55.5225 147.149 55.6464 146.755C55.3367 146.509 55.2955 145.968 55.1303 145.673C55.0477 145.525 54.9239 145.443 54.6968 145.476C53.7265 145.083 52.7769 144.935 51.8067 144C50.8364 144.23 51.4557 145.066 51.8686 145.394L52.9214 145.574C51.5176 146.132 53.4169 146.493 52.9834 146.804C51.0841 146.443 51.0428 144.558 49.701 143.623C48.5037 144.509 48.6482 146.001 49.1436 147.247L49.5978 146.591L49.7836 147.247L50.6712 146.443C50.6506 147.099 51.0428 147.608 51.1461 148.182C50.9603 147.526 52.2608 147.034 52.137 147.46C51.3525 148.362 52.9627 148.132 53.0453 148.706C53.0453 148.378 52.9627 147.968 53.6027 148.149C52.6943 149.444 53.5407 149.625 52.5498 150.838C54.16 150.444 53.0453 152.068 54.4284 152.002V151.51L55.6877 152.347C54.5729 153.478 54.1188 151.756 53.5201 153.298C53.6852 154.593 55.3987 154.281 55.7909 155.265C54.7381 155.085 53.6852 154.429 53.5201 153.609L53.1691 154.183C52.5292 154.019 52.364 152.871 52.2815 152.297C53.644 153.052 52.5085 151.805 53.2724 151.248C52.3021 151.33 52.6118 151.904 51.6621 151.313C51.8479 151.969 51.9512 152.051 51.8067 152.953C51.7654 151.068 48.1114 151.855 48.5037 150.133C49.123 150.789 49.8042 149.657 50.2377 149.493C50.0313 149.165 49.6391 148.51 49.3294 148.247L48.0288 148.723C47.2031 147.886 50.0107 147.099 48.3385 146.247C47.4921 146.247 48.2972 147.231 48.0908 147.067C46.8522 145.722 48.9165 144.853 49.6184 143.377C49.1849 143.377 48.3385 143.525 47.4921 143.164C48.3385 143.164 48.6894 142.77 49.412 143.197C49.6391 142.705 48.9165 142.279 48.5037 141.934C48.2559 142.934 47.2444 141.737 46.7076 141.655C46.7283 141.164 47.554 141.672 47.8637 141.934C47.9876 141.524 49.0817 140.885 47.8018 140.852C48.6688 140.704 50.341 141.573 50.7332 142.246V141.754C51.2699 142.016 51.1667 142.098 51.1461 142.59C51.7034 142.016 52.4466 141.951 53.0866 141.967C52.9834 142.049 52.8801 141.967 52.7563 142.049C52.6324 142.459 52.9421 142.721 53.3756 142.557C54.6142 142.721 53.9743 141.918 54.4904 141.573L54.1188 141.032L49.9074 139.639C49.2675 138.868 50.0726 138.343 50.4855 137.622L49.4533 137.589C49.3913 136.835 49.5358 136.08 50.8983 136.376C50.568 136.458 50.6712 136.54 50.6712 136.703C50.8158 136.703 50.919 136.72 51.0015 136.769H51.1873C50.6712 136.031 50.3616 135.572 50.2997 135.539C52.0544 136.671 52.1163 135.343 53.9536 135.31L53.0659 134.047C52.6943 134.949 52.1989 134.178 51.8892 133.932C52.8595 133.703 51.6209 132.85 51.6621 132.342H51.8686C52.1163 131.866 51.8686 131.096 51.4557 130.587C51.1254 130.653 49.3501 130.177 48.2972 129.964C48.1321 130.964 47.616 130.456 46.9967 130.62C47.0379 130.522 46.9967 130.341 46.8728 130.325C46.5631 130.227 46.5425 130.554 46.2122 130.636C46.8934 131.588 47.2444 132.621 48.7307 132.834C49.2881 132.44 48.0082 132.391 48.3591 131.981C49.412 132.358 49.3501 133.03 49.5152 133.867L48.7514 134.26L49.3913 135.031C48.8752 134.736 48.0495 135.08 47.6779 134.227C46.9141 134.457 48.0701 135.08 47.9256 135.654L49.1023 135.769C48.4624 135.752 48.6069 136.933 47.5747 136.228L46.3567 135.015L45.6961 135.49L45.2213 134.375L45.8613 134.555C44.6846 132.834 47.9463 133.703 46.2328 132.047C44.7671 131.653 44.4781 131.046 44.5607 129.866C45.0355 130.653 45.531 129.817 46.3773 130.03C46.7696 129.128 45.5929 128.98 44.9736 128.62C45.6342 128.308 46.1916 128.095 46.2328 128.849C47.7398 128.751 45.7787 127.898 47.2857 127.636C46.7489 125.193 41.9389 126.275 43.3014 123.143L43.9414 123.176C42.8266 121.438 43.3634 120.29 42.5789 118.634L43.9207 117.125C44.2097 117.404 45.531 118.076 46.2328 117.617C44.7465 118.437 45.4277 119.06 44.7052 119.863C45.1387 119.88 45.3864 119.568 45.6135 119.421C45.6755 119.847 44.9942 120.142 45.3864 120.667C45.7167 120.601 45.9851 119.945 46.2741 120.388L45.4277 121.257C46.0883 122.208 47.8637 121.487 47.6366 122.717C46.7283 122.602 45.3658 122.307 45.0768 121.864C44.9942 122.438 44.4162 121.192 43.9827 121.766C45.4277 122.405 44.4575 122.897 45.469 123.848C45.2626 123.75 45.0149 123.75 44.8704 123.504L44.6226 125.094C45.3039 124.619 45.6961 126.242 46.7902 125.963C46.9347 124.291 46.3361 124.848 46.6251 122.946C46.976 123.438 48.2559 123.963 49.3707 124.143C49.3294 124.16 49.3088 124.192 49.2881 124.258C50.4648 124.405 50.6919 124.078 52.6324 123.848C51.0841 123.192 52.1163 122.503 51.1461 121.618C50.0519 121.552 49.8868 122.356 50.2584 122.799L49.3913 122.011L49.9074 122.126L49.8661 119.896C49.99 120.306 50.6506 120.372 51.1461 120.536C51.1461 120.241 51.3731 119.929 51.6209 119.601C50.6093 119.781 49.8868 119.831 49.8661 119.552C49.8455 118.109 50.63 117.223 51.7034 116.584C51.6622 116.535 51.6415 116.469 51.6002 116.42C50.5887 116.764 49.5565 115.633 48.4004 115.305C49.4739 115.207 48.9165 114.502 49.412 114.042C48.1321 113.96 46.4806 114.42 45.5516 115.026C46.8522 115.862 46.7902 115.436 48.4624 115.715L49.8042 117.125L48.7514 116.896C48.4417 117.715 49.8661 118.306 48.5862 118.388C47.6573 118.076 48.0701 117.355 47.1412 117.043L46.7489 117.601C45.3245 116.846 47.8843 117.01 46.8109 116.026C45.7787 116.535 46.7077 115.944 45.9025 115.551C45.2007 116.01 46.5425 117.437 44.6226 117.305C43.7143 116.83 46.4806 115.174 44.4988 114.616H44.7052C44.7465 113.501 43.6317 113.223 42.9092 112.878C43.4459 112.353 42.4963 111.78 42.3312 111.271L42.8679 111.222L42.517 110.517C43.5491 110.763 42.6202 111.37 42.8679 111.96L43.8588 111.78C42.7853 112.616 44.6639 112.911 45.6135 113.37C44.6226 112.665 45.5103 111.091 43.5079 111.091L44.4368 110.501L44.024 110.304C44.7258 109.861 45.9851 110.123 46.3154 110.812C46.0883 110.96 45.9645 111.042 45.758 111.025C46.2535 111.32 47.0792 111.534 46.976 112.37L46.3773 111.993C46.4599 112.993 46.9967 113.862 48.0495 114.108C48.2146 112.632 48.1114 111.206 47.8431 109.861C45.5103 109.681 44.1685 109.336 42.0215 109.336C41.4848 108.467 41.0306 107.238 41.6706 106.385L42.1041 106.418C42.2692 106.008 42.1041 105.663 41.8151 105.385C42.3105 104.925 42.9711 105.565 43.2395 105.253L42.3312 104.007C43.3014 104.007 43.4666 105.106 43.6111 105.614C43.5079 105.516 43.3221 105.335 43.2188 105.417C42.9092 106.057 44.7052 107.041 43.3634 107.434C43.6524 107.713 42.2486 106.926 42.3312 107.943C41.9183 108.664 43.1776 108.762 43.6111 108.795C44.1478 108.746 44.2097 107.68 44.9116 107.975C44.7671 107.467 44.0446 107.319 44.4575 106.598C44.602 107.106 45.7993 107.713 44.9942 108.057C46.1503 108.976 48.6688 108.582 48.7514 108.09C47.9669 108.287 47.4921 106.336 46.6457 107.762C45.5309 107.254 45.3658 106.155 44.602 105.434H44.8084L44.4162 104.499C44.7258 104.614 45.0149 104.893 45.5516 104.843L43.9001 103.614C44.9736 104.286 44.5194 103.089 44.891 102.695C44.0446 102.63 43.3634 102.154 42.9505 102.695C42.4344 103.319 43.4459 102.991 43.5698 103.499L42.166 102.876L42.2899 102.794L41.1545 102.449C41.0925 101.433 43.6937 102.679 42.4757 101.482L41.0306 101.777C41.0306 100.269 42.4344 98.2354 41.6293 97.2351C42.4963 97.4647 43.8382 97.4811 44.5813 97.022C44.3955 97.4975 44.54 98.3994 44.7671 99.0225C44.5194 99.17 42.9298 98.3502 43.1569 97.6287C40.8035 98.1698 44.8291 99.2848 42.4137 99.5636C41.8151 101.433 44.9323 100.711 43.7143 102.351C44.8084 102.286 44.2923 102.745 45.2626 102.728C46.976 102.122 44.9323 100.711 45.4071 99.662C45.4897 99.7439 45.6961 99.9243 45.9025 99.9571C46.1296 99.2192 45.8406 98.9569 45.3864 98.4977L45.2626 98.5633C44.1065 97.7926 46.0058 97.973 46.4186 97.4155C46.2328 97.2351 46.4599 96.5137 45.6755 96.6776L46.5838 95.6774L45.3864 95.8086C45.2419 95.3003 46.0264 95.1199 45.2419 94.71L44.1478 94.7755L43.9414 96.0873C43.5079 95.4642 42.8885 95.9889 42.5582 95.2839C43.8382 95.9889 43.095 94.6772 44.0859 94.5132L43.4046 94.0377L43.7143 94.1525C44.2098 93.6933 43.2601 93.6933 43.3427 93.2014C42.806 93.8081 42.0834 94.2508 42.9505 94.9067C42.2692 94.4312 41.4641 93.431 41.4022 93.1686C40.8861 92.6439 41.6706 92.2012 41.7325 91.6765C42.2899 92.6439 44.9736 91.0861 44.4368 93.1358C44.2304 93.1194 44.251 92.9555 44.3749 92.8735C43.0124 93.2506 44.602 94.0541 45.18 94.4476C45.9645 94.2836 46.2122 94.71 46.5631 93.9065C46.0883 94.2016 44.7052 93.3982 45.2832 92.6275H46.9967L47.0792 91.5617L47.1618 91.6601C48.2146 91.1845 46.8109 90.545 47.3889 89.7744C46.7076 89.2988 46.976 87.2492 45.2832 88.233C46.2741 87.5115 44.8497 87.036 44.5401 86.3309L43.9414 87.2656C42.5995 86.2981 43.4253 86.5441 41.4022 85.839C41.8564 85.7242 42.228 85.5111 42.7234 85.6422C42.6615 84.2157 42.9298 82.1824 41.4435 81.4445C41.4228 80.4443 43.4046 80.1655 42.4757 78.821C42.2073 78.5422 40.9067 79.1489 41.299 78.1979C41.4228 78.1323 42.6408 79.0013 42.4137 77.9847C41.0306 77.3288 42.9711 76.2138 41.7325 75.3447C42.166 74.82 41.8977 73.951 42.9505 74.0657C42.7853 74.8692 43.1156 75.9842 43.6317 76.1318C42.9918 76.0662 43.0743 76.7385 42.5376 76.181C41.877 77.4272 43.2601 76.9189 42.8266 78.0339C43.2601 78.0831 43.9207 77.4108 43.5285 77.1976C44.9529 77.0992 44.4162 79.2801 46.0264 78.2143C46.0264 77.0501 43.0537 76.9025 44.4368 75.8039C45.3452 76.1482 44.6639 76.8205 46.2122 77.2304L46.7076 76.3778L45.6342 75.853H45.8406C46.9967 74.3445 44.251 74.6232 43.4046 73.377C42.4963 74.1805 40.9274 73.3443 40.37 73.951C40.1016 73.0983 40.2461 72.4424 41.6499 72.3604C42.9505 73.9182 43.1569 72.3604 44.7258 73.7706C45.2213 73.4918 46.8315 74.0001 46.9141 73.0983C45.7993 72.1473 45.758 73.4754 45.2007 72.4916C45.3245 72.426 45.4484 72.3604 45.6548 72.3768C44.8703 71.9669 45.8613 71.8193 44.9942 71.311L45.2832 71.4258C46.0883 70.6879 44.2304 70.7371 45.1181 70.0812C44.0859 70.3763 44.2098 69.7368 43.5285 69.4089C43.1776 70.032 41.7119 70.4419 41.8976 71.6225C42.744 71.7209 43.1982 71.6061 43.6524 72.0653L43.4872 71.2946C43.6317 71.4586 43.8588 71.5733 44.0446 71.7045L43.673 72.4752C42.9918 71.5733 42.1454 72.0489 41.237 71.7045C41.5261 70.8191 40.948 71.0158 41.1545 70.4583C42.3725 70.4419 43.095 68.671 43.7762 67.638C43.7349 67.802 43.7762 67.9823 43.7762 68.0971C44.6226 68.7694 44.7465 67.5396 45.0768 67.4904L44.4162 66.9985C44.4988 67.0969 44.8084 67.2117 44.9529 66.9821C44.6639 66.2934 43.4459 66.3918 43.1569 65.7031C43.8175 65.6047 44.9116 66.1458 45.2213 65.7031C45.7993 65.5227 47.3063 64.9488 46.6251 64.047C46.3567 63.9978 46.1916 63.7518 46.0677 63.4895C46.109 63.5223 46.1296 63.5715 46.1916 63.5879L46.8728 62.9156C48.0701 63.3747 46.4186 64.0142 47.6366 64.4897H48.7307C48.772 64.8832 49.2881 65.4243 49.8868 65.6539C50.0107 65.0144 49.7216 64.8996 49.4326 64.1946C50.1139 64.0634 50.6713 64.5225 50.7538 64.5881L50.1139 64.5225C49.2881 65.4244 51.2699 65.7195 51.1667 66.7853C51.1461 66.9493 51.0428 66.8509 50.8364 66.8345C51.9718 67.6216 50.5887 68.5398 52.075 69.2941L51.4764 69.0646C51.9924 69.6057 53.1691 70.6387 54.3046 71.6717H54.7381C54.9858 71.5242 55.0064 71.9341 54.8619 72.1636C55.44 72.6884 55.9561 73.1803 56.3689 73.5902C56.6167 73.4426 56.8231 73.2459 56.8644 73.0327C56.3483 72.8851 56.6579 71.8521 55.5432 72.0653C56.1831 71.557 55.1303 70.8683 55.5432 70.5075C54.8826 71.1798 54.4284 70.1304 53.7885 70.0648C54.4904 69.8188 53.644 69.1465 54.6142 69.1629C54.8619 69.0318 53.9949 69.5073 54.6142 69.7369C55.5638 70.3436 55.2955 68.4907 56.2244 69.2613C55.44 68.2611 55.6258 66.8837 54.6349 65.8671L54.3046 66.4902C54.4078 66.0147 54.0775 64.8996 54.5523 64.7849C54.6968 65.1292 54.7174 65.5391 54.9652 65.9819C56.0593 65.9491 54.8619 64.8996 55.5225 64.8177L53.6027 63.6042V64.1782C52.9008 63.8502 53.6027 62.604 53.6646 61.7186C55.1922 62.1449 53.8297 63.0631 54.511 63.965C55.1303 64.6209 55.9148 63.4567 56.3276 64.0798C56.6579 63.8994 56.5754 63.4731 56.1831 63.2927L56.4309 63.0303C57.8346 63.5223 57.6488 64.8341 58.8875 65.6211C58.743 65.5555 58.5778 65.4899 58.4127 65.4899C57.9585 66.1786 58.0204 66.8509 58.454 67.474C58.8462 67.1133 58.5572 66.9985 58.3714 66.8017C58.7017 66.7525 58.9081 67.3592 59.3003 67.556C59.6306 66.9329 60.0848 67.392 60.2706 67.0149C60.6215 67.392 60.5596 67.7036 60.4564 68.1791C59.9609 68.4579 59.7339 68.0151 59.0733 68.1135C59.5274 68.5726 57.9379 68.9006 58.7843 69.5565C58.97 68.589 60.2706 69.7205 60.7454 70.0156L60.7867 69.8516C61.5918 70.0976 61.6537 70.3599 60.9518 70.6059C60.6009 70.2288 60.7867 69.8516 60.0022 69.9992C60.0642 70.2616 60.1261 70.5075 60.3945 70.7863L59.7958 70.5567L60.0848 71.8193C60.8073 71.9833 61.8395 72.262 62.8924 72.3768C62.2731 72.7212 62.8511 73.1147 63.1194 73.3934L62.8098 73.2787C62.273 73.869 62.8924 75.0988 63.5117 75.1644C62.9956 75.6071 59.2797 72.5736 60.1261 75.3775C60.2293 76.4597 62.1698 75.9186 62.9337 76.4925C62.9337 76.4925 62.7272 76.4761 62.6034 76.5417C62.5001 77.0172 63.2639 77.0173 63.6149 77.3944C63.8833 77.0992 63.8626 76.6893 63.553 76.5745C64.3994 76.6565 63.5736 77.5584 64.2755 77.8699C62.9543 77.4764 63.8833 78.8046 63.1814 78.493C62.4588 79.4769 63.5736 80.4115 64.5645 80.8378C63.0162 81.5757 64.8948 81.9365 64.2549 83.0187C64.2755 82.8547 64.0071 82.5923 64.1723 82.3628C63.0988 81.8381 63.7594 83.4614 62.7272 82.6251C62.913 82.8055 63.264 82.6087 63.0782 82.412C62.9337 82.0676 62.4382 81.7725 61.984 81.8873L61.1789 82.7891L60.9106 82.5103L59.7958 83.8713C60.0022 83.8877 60.25 83.7565 60.3738 83.691C59.9816 85.1995 60.8693 86.8556 60.8486 88.151C63.7594 88.1838 62.4588 91.2501 64.3374 92.152C63.491 91.9388 62.0047 91.8896 61.4267 92.1192C61.2821 91.8896 60.0642 91.5125 60.25 90.955C60.7041 90.8402 61.1376 90.1515 61.7157 90.5286C61.2202 89.0857 60.477 90.8238 59.3623 90.4631C59.8371 92.07 61.6331 92.8899 62.4382 93.8573L62.1079 93.9065L62.8511 94.628C62.9543 93.9885 64.5852 93.8901 64.131 94.7428L64.0484 94.6444C63.4291 95.1527 64.3374 96.0545 64.3374 96.7924L65.349 97.2024C65.349 97.9238 63.5942 98.1042 62.5827 98.4322C62.6033 99.58 64.131 100.105 65.1012 100.826C64.3787 101.252 64.4406 102.958 63.3878 102.154C64.2136 103.122 68.2597 102.531 66.2573 104.483L65.4522 104.106C65.8444 105.762 67.6611 107.992 67.0211 108.828C64.2755 108.467 64.6677 111.173 62.1285 111.747C62.7066 111.599 62.9956 112.206 63.3465 112.271C63.0575 112.435 62.8098 112.698 63.3878 112.895C63.8007 112.189 66.1541 113.075 64.8948 111.944C66.7734 112.386 68.301 113.042 68.4455 114.42L67.3721 114.518L67.5166 113.403C66.7321 113.6 66.7115 113.026 66.2986 112.845C66.0302 114.928 63.7181 112.845 64.2136 114.911C64.9361 115.043 64.6264 114.944 64.998 115.453C64.9155 115.207 64.1723 115.239 64.2342 115.649L65.1632 115.944C63.491 116.863 63.78 114.879 62.624 115.633C61.6331 114.928 60.9518 113.583 59.61 113.977C59.3416 115.354 62.3969 114.879 62.0047 116.322L61.4473 116.535C61.9221 116.978 62.8924 116.945 63.5117 117.141C63.1814 117.207 62.9543 117.355 62.913 117.666C64.4406 118.322 64.8122 118.83 66.4637 119.388C64.9774 117.535 67.1863 117.568 65.8238 115.633C66.3192 115.912 66.9179 117.305 68.4249 117.223L67.3514 117.322C68.0327 117.929 68.7139 118.519 68.5075 119.388L67.8056 118.945C68.7552 119.962 66.505 120.978 68.4662 121.634C68.5075 121.323 68.4249 121.077 68.2185 120.896C68.8171 121.405 68.8378 122.126 68.7758 122.766L70.7989 123.815C70.2622 123.864 70.386 124.684 69.4571 124.405C68.8171 125.422 70.5099 125.652 70.8815 126.144C69.9525 127.226 70.2003 125.406 68.6933 125.504C68.4662 126.865 69.2094 128.177 70.3448 128.767C70.5099 128.472 70.6544 128.324 70.9228 128.292C70.5925 128.374 70.7989 128.882 70.8402 129.177L71.5834 129.275C71.2118 129.817 70.7989 129.817 70.1796 129.472C70.1383 129.948 71.604 130.309 70.7163 130.932C69.6842 130.259 70.2209 129.161 69.6016 128.816C70.6338 130.358 67.8262 130.768 69.2094 132.752C68.8791 132.834 68.1565 132.571 68.2391 132.965C68.7139 133.867 69.7254 132.998 70.5718 133.178C69.9732 132.522 70.3241 132.129 71.1086 131.588L71.7279 131.702C71.4389 131.768 71.5215 132.227 71.2737 132.407L72.4504 132.358C71.1705 132.489 70.3654 133.358 70.9641 133.85C71.7485 133.145 71.7485 133.309 73.1523 132.932C74.7006 133.522 72.0169 134.031 73.6684 134.703C73.2349 134.703 72.7601 133.965 72.5949 134.687C72.6775 135.244 73.6478 135.031 74.0606 135.359C72.9046 135.097 72.1408 135.326 70.7783 135.064C70.4067 134.096 70.6957 134.67 70.0145 133.768L69.3126 134.719C68.941 133.9 67.9501 134.293 67.5372 134.277C66.794 135.884 69.3952 135.113 69.3539 136.097C70.2003 136.441 69.2919 135.211 70.2209 135.785C70.2828 136.671 70.9641 135.884 71.666 136.785L71.1499 136.703C70.5925 137.097 71.4389 137.277 71.6247 137.605C72.0376 137.933 75.196 136.605 75.6502 138.146C75.3405 138.114 75.1341 138.114 75.0103 138.146L65.7412 137.999C66.1541 139.589 66.3605 141.442 66.2367 143.377C64.6058 144.082 64.4819 142.295 63.7181 142.525L63.8626 141.623C64.6058 141.557 64.5439 143.344 65.638 142.377C64.7297 140.983 65.4109 140.18 63.553 138.999C61.9221 139.704 64.3168 140.803 63.202 141.934C63.202 141.524 62.9543 141.229 62.624 140.967C62.624 141.869 62.6033 142.82 62.5827 143.836L63.0575 143.984C63.0782 143.295 63.1194 142.82 63.1607 142.738C63.2227 143.64 64.3787 144.213 65.6586 144.082V143.918L66.1334 144.164L66.0509 144.82L66.1128 144.771ZM75.547 202.26C75.4231 202.211 75.2786 202.162 75.0928 202.129C75.2786 202.162 75.4025 202.129 75.547 202.26ZM57.7521 128.226C57.814 129.423 57.7314 130.669 57.814 131.817C59.899 129.407 61.5092 127.734 62.1905 131.128L62.4176 131.325C62.624 130.833 62.5001 130.079 62.1698 129.374C61.1583 128.915 57.4424 127.472 57.1534 127.537C56.4928 127.833 57.3185 128.046 57.1947 128.439L57.7521 128.21V128.226ZM61.8189 126.832C61.9634 126.127 61.4267 126.357 60.9106 126.324L61.2409 126.996C61.3441 126.898 61.5092 126.832 61.8189 126.832ZM60.4151 126.422C60.4151 126.422 60.4151 126.57 60.3532 126.603L60.4151 126.422ZM62.7066 139.425C62.7066 139.425 62.6859 139.393 62.6653 139.36C62.6653 139.524 62.6653 139.688 62.6653 139.852C62.7272 139.77 62.7685 139.639 62.7066 139.425ZM63.6149 137.884H62.6446C62.6446 138.015 62.6446 138.179 62.6446 138.327C63.0575 138.212 63.4085 138.097 63.5943 137.884H63.6149ZM65.6173 133.129C64.4406 133.014 64.1929 132.112 62.8924 132.243C62.5414 132.243 62.4795 132.44 62.4176 132.67C62.4382 132.916 62.4588 133.178 62.5001 133.457C62.6859 133.44 62.8717 133.457 63.0575 133.539C63.1607 133.244 63.4291 133.03 64.2342 133.014C62.6859 133.949 65.5967 133.457 65.3283 134.26C66.2779 134.359 66.0302 133.309 65.6173 133.129ZM53.5201 75.7055C53.6233 75.6727 53.9123 75.5907 54.2633 75.4595L54.9652 75.9514C54.7794 76.9189 52.9834 77.8043 54.6761 78.5586C54.3252 78.9849 53.4788 79.2473 52.8182 79.5097C52.8595 79.3129 52.9008 79.1161 52.9834 78.9685C50.4029 76.7057 55.3367 77.5584 53.5201 75.7219V75.7055ZM52.364 86.8064C52.2815 86.7081 52.0544 86.6917 52.0544 86.6917C54.6555 88.6593 55.5638 90.3483 55.6051 91.4961C56.5134 91.2009 57.1328 90.1187 57.4631 89.6104L58.5778 89.9547L57.7727 90.2827L58.8255 90.955C59.5274 90.6926 59.3003 90.1023 59.8164 89.6596C59.61 89.6432 58.2062 88.4462 57.5043 88.1182L56.885 89.2005C57.1534 88.9053 56.7405 87.5443 56.4102 87.0196C55.8735 87.0524 55.151 88.0526 56.3276 88.0854C55.5432 88.2494 55.4193 87.1672 54.6349 87.9215C53.7059 87.1672 54.2633 85.8226 54.5936 85.1995L55.9148 85.0027C56.3689 84.3141 54.2426 84.6748 54.9445 83.8385C55.3161 84.7732 56.3896 83.5762 56.5754 84.3305C57.0502 84.0517 57.9998 84.2321 57.814 83.4778C55.9767 82.9695 58.8462 82.5923 57.2153 82.1004C57.7314 81.6577 58.3301 82.4612 58.4746 81.6577C57.4424 80.8214 56.7818 80.9034 55.4813 80.9362C55.2129 81.8053 57.2566 81.7725 57.0089 82.494L54.6555 81.2642C54.3665 81.5429 54.3458 81.7233 54.4697 81.8873C54.3046 81.6249 53.9536 81.4117 53.4788 81.2314C53.2104 81.133 52.9834 81.0346 52.7976 80.9526C52.8595 81.7397 52.9008 82.4284 52.364 82.5923L51.7241 82.5267C51.1873 82.8383 51.6828 83.2646 52.1576 83.445C52.3021 84.1501 53.2517 84.7896 52.4673 84.9863L51.8686 84.7568C52.137 85.6094 52.2402 85.6914 52.364 86.79V86.8064ZM54.8619 115.223C57.0708 114.452 58.97 113.665 58.1856 111.288L58.3714 111.468C59.61 110.107 56.1006 109.271 57.4631 107.631C58.4333 108.271 58.3507 108.238 60.4564 108.844L59.6926 108.139C60.9725 108.238 60.2087 107.533 60.188 106.959L61.7363 107.319C61.3647 107.697 61.3441 108.598 61.6744 108.533C61.4886 108.353 59.9816 109.877 60.539 110.566C61.5299 110.386 60.8693 108.877 62.624 109.402C61.8395 108.861 62.8304 108.68 62.3763 108.09C63.1607 108.631 63.7594 108.107 64.5645 108.484L64.0691 107.483C64.3994 107.418 65.06 108.926 66.1541 107.959C65.5554 107.598 66.0509 106.418 64.9567 106.5L65.287 106.45C65.4109 105.647 63.6975 106.254 64.1929 105.237C63.6562 105.27 63.3052 105.499 63.4497 105.827C63.7388 106.09 64.4819 106.073 64.7297 106.647C63.9246 106.992 64.7297 105.909 63.3672 106.467C62.6859 106.746 64.2342 107.992 62.5414 107.713L62.6446 106.91C61.5505 106.992 61.5299 106.418 60.6628 106.516C60.188 106.073 61.3441 105.499 60.3325 105.106C59.61 104.975 58.3507 105.45 58.8049 104.581C60.3119 103.794 59.7339 101.958 59.4036 101.285L58.6191 100.728C57.9585 100.843 58.8668 101.892 57.9585 101.58L57.5663 100.646L57.9998 100.679C58.0411 100.351 57.5663 100.072 57.2773 99.7931C58.103 100.023 57.8759 100.744 58.9907 100.515C59.1558 100.039 59.5687 99.9407 59.2797 99.5472C59.3623 99.6292 59.4861 99.6947 59.6513 99.6783C60.0229 98.7273 58.2682 98.9077 57.8759 98.7109C56.2864 97.9238 56.6373 99.7439 55.4606 99.7275L54.4904 97.104C54.8826 97.3007 55.2748 97.4975 55.729 97.3827C56.1625 96.6776 56.596 97.3007 56.4309 96.3825C54.9032 96.5793 55.3161 95.3003 54.3458 94.71C54.9445 94.3492 55.0684 94.2836 55.1716 94.9559C56.1625 94.8083 55.667 93.9393 55.729 93.6113C55.4606 93.4474 55.2748 93.1358 55.0271 92.9554C54.5523 93.267 53.9123 93.2014 53.4169 92.6439H53.2104C53.0453 93.5949 52.137 95.1527 53.2517 95.6774L52.7356 95.5462C52.0131 96.7104 54.8413 97.7926 53.004 98.4485C52.2402 98.4485 52.8595 98.6781 51.786 98.7601L52.7356 99.498L52.2195 99.3668L52.653 100.728H52.4466C53.5201 101.285 54.3871 101.728 55.089 102.072C55.5638 102.04 55.7083 101.974 56.0799 102.171C56.3483 102.368 56.4102 102.531 56.3689 102.679C56.2864 103.023 55.6258 103.319 55.4193 103.745L55.1097 102.482C54.3046 102.449 53.4788 102.63 53.004 103.302C52.9421 103.04 52.3021 102.991 52.2402 103.319C52.4466 103.319 52.8801 104.106 53.4582 103.745C53.933 104.925 52.0957 107.106 53.9123 108.812C52.7976 107.565 53.004 109.976 52.4466 108.533C51.3319 109.681 53.8504 109.304 53.8091 110.369C53.3549 110.501 53.7885 109.795 52.8388 109.648C52.6118 111.452 55.3574 112.386 55.2748 114.108L54.2839 114.288C54.4697 114.6 54.6761 114.928 54.8826 115.289L54.8619 115.223ZM56.6786 118.404C56.8437 118.716 57.0295 119.027 57.1947 119.355V119.257L58.1856 120.126C58.4746 119.486 59.4861 118.962 60.1467 119.732C59.7132 119.716 59.2591 120.011 58.97 119.749C58.4746 120.372 58.1237 121.667 59.5687 121.175C57.9585 120.273 61.4473 120.7 60.2293 119.978C61.2821 120.306 60.9312 120.814 61.4473 121.175C60.539 120.831 59.61 121.503 59.3416 122.208C59.6513 122.471 59.5687 123.274 60.0642 123.717C60.9518 123.438 61.5505 123.782 61.6331 122.979C61.9221 123.241 62.2111 123.651 61.8395 124.209C61.6331 124.028 61.4679 123.7 61.1376 123.766C60.3532 124.192 60.477 124.569 60.1467 124.815L60.3945 125.291C60.3945 125.291 60.5596 125.176 60.6835 125.127L61.6124 125.57C61.0344 124.897 61.9634 125.176 62.5001 125.111C61.4267 125.225 62.4588 125.602 62.5414 125.848L63.5736 125.16C64.1929 125.34 62.9337 126.193 64.0278 125.914C64.2549 124.701 63.9658 124.291 63.4291 123.29L62.624 123.815C61.757 122.717 63.9865 122.897 63.6768 121.602C62.7685 121.159 63.264 119.634 61.6331 119.798C62.1492 119.896 62.913 118.814 62.1079 118.437C60.539 118.109 60.0642 116.617 59.4655 117.141C59.5274 117.551 60.4358 118.011 59.5274 118.453L59.0733 117.699L58.3714 118.322C58.6191 118.011 57.8346 118.142 56.6579 118.388L56.6786 118.404Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.0195 63.9979C48.6272 63.7847 48.6479 63.2108 47.8428 63.3748C48.7098 63.3092 48.0699 64.3914 49.0195 63.9979Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.824 63.2608C49.6176 63.228 49.2873 63.2772 49.2253 63.0312L49.5144 63.7199L49.824 63.2608Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.749 62.2109C55.0677 61.883 54.6755 61.6698 54.6755 61.0959C56.8018 60.7679 55.3568 61.9977 57.3799 62.1453C57.4831 61.0795 55.5839 60.8663 55.3361 60.0137C54.4897 60.4892 54.1181 62.2601 55.749 62.2109Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.4943 62.5224L57.9576 61.9648L57.8337 62.0304L58.3705 62.5879L58.4943 62.5224Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.0718 76.2617C40.4112 76.3601 41.0925 76.6881 41.2783 76.8684C41.2989 76.7045 41.464 76.4749 41.0718 76.2617Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.1577 189.879L62.128 194.011C61.8596 192.814 61.6945 191.715 61.1577 189.879Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.0368 90.8254C46.273 89.6776 45.055 89.2185 44.6215 88.0215C43.4448 89.7268 46.9749 90.0056 45.7569 91.4485L47.0575 90.8254H47.0368Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M41.6492 90.7912C42.8878 90.496 43.2387 91.611 44.1264 91.3651C43.7342 90.578 42.8878 91.0699 42.9084 90.332L41.6492 90.7912Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.8389 83.9062L62.5408 84.2185L62.2724 83.9391L61.8389 83.9062Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.4252 96.2046L43.1362 96.0898L42.8059 96.7293L43.4252 96.2046Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.5854 84.1672L64.8124 83.626L64.1931 83.3965L64.5854 84.1672Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.3721 89.3646L57.918 88.9219C58.0005 89.0039 57.567 89.7089 58.3721 89.3646Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M43.3831 99.9406L43.9404 100.498L44.0437 100.433L43.4863 99.875L43.3831 99.9406Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.2727 92.8398C63.2017 92.4299 62.6443 93.7744 63.4288 93.0202C63.2017 92.4299 62.7269 92.7086 62.2727 92.8398Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.6372 100.385C56.6372 100.385 56.6994 100.55 56.803 100.616C56.7409 100.517 56.6787 100.451 56.6372 100.385Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.6367 100.384C56.5954 100.138 56.9463 99.8429 56.6367 99.6953C56.2444 100.056 56.4302 100.154 56.6367 100.384Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.2559 103.27L57.2972 103.041C57.8133 103.238 57.7307 103.123 57.2972 102.959C57.2352 102.713 56.9256 102.762 56.7191 102.746C56.5953 102.713 56.4714 102.664 56.3269 102.631C56.4714 102.696 56.5953 102.746 56.6985 102.795C56.7398 103.172 56.8224 103.402 57.2559 103.27Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.7225 115.781C42.9289 114.879 43.0734 114.633 43.8166 114.6C43.9198 113.748 42.6399 114.01 42.2683 113.551C42.5573 114.469 42.2683 114.699 42.7225 115.781Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.2684 113.551C42.2273 113.453 42.2067 113.354 42.1655 113.223C42.1655 113.354 42.2067 113.453 42.2684 113.551Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M64.9761 99.1875L66.2147 99.5984L66.0289 99.434L64.9761 99.1875Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M42.558 117.127C42.558 116.963 42.496 116.7 42.7438 116.553C41.9799 116.586 42.558 117.291 42.558 117.127Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.6578 112.257C57.1119 112.125 56.7404 111.601 56.8849 111.371C56.8436 111.699 55.5017 112.093 56.6578 112.257Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.088 119.275C46.088 119.111 46.5628 118.799 47.2027 118.848C46.7899 118.651 45.4274 118.487 46.088 119.275Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.7816 113.811L57.0087 113.663L56.4307 113.139L56.7816 113.811Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.4755 110.615C66.4846 110.058 65.4937 111.862 64.5441 110.829C63.8422 112.354 65.7827 110.583 65.8033 111.665C66.0098 111.009 67.0832 110.599 67.4548 110.615H67.4755Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M65.8228 111.648C65.7818 111.747 65.7818 111.846 65.8023 111.944C65.8228 111.829 65.8228 111.731 65.8228 111.648Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.7985 121.372C61.6952 121.29 61.5714 121.241 61.4475 121.191C61.5301 121.257 61.6333 121.323 61.7985 121.372Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.1234 114.943L65.6165 114.123C66.6074 114.664 66.8344 116.304 68.1556 116.042C68.3414 115.484 67.8666 114.894 67.2473 114.697L67.1234 114.927V114.943Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M45.1799 129.13L44.5606 128.77L44.5193 129.327C44.6844 129.147 45.7166 129.294 45.1799 129.13Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M44.5173 129.44V129.324C44.5173 129.324 44.5003 129.39 44.5173 129.44Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.807 119.618C60.8483 119.29 60.7657 119.044 60.4767 118.781C60.2496 118.929 60.167 119.749 60.807 119.618Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M47.761 131.915L47.3894 131.227L47.6578 131.997L47.761 131.915Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.2533 135.572L46.0469 135.72L46.6455 136.245L46.8726 136.081L46.2533 135.572Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.376 127.653C71.4173 127.177 70.158 126.981 69.9309 127.128L70.1786 128.014C71.1695 127.636 70.0961 127.768 70.2406 127.21L71.376 127.653Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.2004 159.38C53.4572 159.281 53.6224 158.248 54.2623 158.084C54.572 158.166 54.9849 158.658 55.3152 158.265L53.4159 157.757C54.221 156.543 55.8519 158.183 56.5744 158.609C56.5331 157.527 55.3358 157.379 55.0468 156.264C54.9849 156.625 54.6133 156.904 54.283 157.133C53.1063 157.363 53.354 156.232 53.065 155.494C52.6728 156.051 52.1567 155.854 51.5993 155.576C51.5374 155.526 51.4754 155.494 51.3722 155.477L51.1658 155.379V155.461C51.0626 155.461 50.8974 155.526 50.691 155.625C51.2071 156.199 50.3194 156.838 50.402 157.248C52.2392 156.543 51.2071 158.56 51.9296 158.954L52.2599 159.511L52.3218 159.724C52.1154 159.806 51.8264 159.79 51.3722 159.511C51.8264 159.724 51.9296 160.675 52.5283 160.495L53.0856 162.61C53.0856 162.61 52.9411 162.774 52.8173 162.84C52.9618 162.889 53.065 162.889 53.1476 162.872C53.932 165.922 54.6752 168.939 55.3771 171.957C55.439 171.481 55.79 171.038 55.8932 170.546C57.3383 171.055 55.9551 169.759 57.235 169.792C57.7511 170.038 57.7098 170.514 57.4828 170.842C58.1227 170.858 58.5975 170.399 59.3407 170.333C59.8568 169.071 56.8634 169.3 57.0492 168.12C57.7924 168.054 58.5356 168.316 58.2672 167.595L58.4737 167.759C57.3795 166.693 59.9394 166.595 57.7305 166.136L58.804 166.004C57.875 165.578 57.6066 164.529 57.3176 163.971H57.524C55.8932 162.495 57.0492 163.086 56.079 161.298L57.5447 161.971C57.8956 161.249 56.5125 161.315 56.5331 160.823C56.7396 160.823 57.5034 160.593 57.8131 161.003L55.3565 159.036C54.4068 158.626 54.5926 159.265 54.1591 159.429L54.2004 159.38Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.0658 156.252C55.0861 156.12 55.0658 155.972 55.0049 155.824C55.0049 155.989 55.0455 156.12 55.0658 156.252Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.5637 172.565L55.4182 171.926C55.3974 172.123 55.4182 172.336 55.5637 172.565Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M51.9103 153.362C51.4561 153.854 51.0639 153.198 50.6304 153.182L51.002 154.592C51.4148 154.526 51.9103 154.592 52.2819 154.493L51.9103 153.346V153.362Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M50.3401 155.134C50.6291 155.134 50.9388 155.249 51.2278 155.38L51.0213 154.609C50.7117 154.659 50.464 154.79 50.3607 155.15L50.3401 155.134Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.2434 151.463L72.3466 151.709L72.7595 152.037L72.2434 151.463Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M71.4388 155.708C71.9962 155.298 71.3768 154.807 71.1704 154.643C71.3562 155.298 71.0465 155.053 71.4388 155.708Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.9197 153.822L78.4358 154.413L78.539 154.331L77.9197 153.822Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.7246 176.73L60.8493 177.026C60.8285 176.895 60.7869 176.796 60.7246 176.73Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.6391 171.548C57.7308 173.188 57.4418 170.712 55.9761 171.384L56.6573 172.122H56.2238L56.5541 173.057C57.2147 172.762 57.2353 172.614 57.9992 172.549C57.9785 173.893 57.1941 173.073 56.4509 174.155L56.8844 175.582L56.6367 175.5C56.678 175.615 56.7812 175.664 56.905 175.697L58.2675 180.501C59.0314 181.321 59.5268 179.862 60.7448 180.403C60.559 179.37 61.0751 177.747 59.5681 177.829C59.7745 177.829 60.2081 177.861 60.3526 177.632L59.0107 177.173L58.7217 177.779C57.4005 177.32 57.3179 175.369 57.9785 174.91C58.6185 175.959 60.0016 175.238 59.4649 176.861C59.8365 176.746 60.4351 176.386 60.7035 176.713C59.9397 174.959 60.2493 173.237 58.6185 171.532L58.6391 171.548Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.3155 189.52H62.1694C62.1694 189.52 62.2946 189.553 62.3155 189.52Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.4168 188.913L60.8479 188.143L61.1163 189.487L62.1485 189.52C61.8801 189.422 61.3021 188.979 61.6737 188.766L62.3962 188.913H62.4168Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.8358 187.206C60.3519 187.862 61.5699 187.747 62.0654 187.321C62.7053 187.927 60.8061 187.747 62.1273 188.108C62.9943 188.026 62.3957 187.271 62.2099 187.107L59.8152 187.206H59.8358Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.7744 181.992L60.2905 182.139L60.3524 181.631L59.7744 181.992Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.2902 182.141L60.2283 182.633C60.5999 182.568 60.9508 182.502 61.1985 182.387L60.2902 182.125V182.141Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.0843 183.93C60.0225 184.143 59.9814 184.372 60.0019 184.651L60.0843 183.93Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.3118 183.354L60.1466 183.386L60.0847 183.927C60.1466 183.714 60.2292 183.534 60.3118 183.354Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M60.2281 182.632C59.4024 182.796 58.5147 182.976 58.8656 183.632L60.1455 183.37L60.2281 182.615V182.632Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.8174 158.693L78.4367 159.202L78.5399 159.12L77.9206 158.611L77.8174 158.693Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.8594 162.168C78.0452 162.283 78.231 162.382 78.3961 162.447C78.2723 162.316 78.1071 162.201 77.8594 162.168Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M84.1745 163.857C83.4933 164.677 82.8327 163.054 82.7501 164.399C81.9863 164.628 80.8509 164.169 81.0986 163.497C81.8418 163.431 81.6973 164.021 82.3785 163.529C81.4289 163.251 81.9863 163.021 80.8922 163.316C80.0458 162.742 79.22 162.792 78.3943 162.447C79.0755 163.185 78.3324 165.054 79.9839 165.891C81.4496 166.268 83.2043 165.678 85.1448 165.399C85.5783 165.251 85.4545 163.726 84.1745 163.841V163.857Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M85.8486 162.463C85.8486 162.135 85.7661 162.037 85.5596 161.873C84.9197 162.021 85.766 162.217 85.8486 162.463Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.8635 171.843C73.1525 171.876 73.6067 172.401 74.0609 172.22L73.5448 171.4C73.5448 171.614 73.2145 171.728 72.8635 171.86V171.843Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.3176 171.023L73.5447 171.385C73.5447 171.286 73.4828 171.171 73.3176 171.023Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M72.6985 171.91L72.8643 171.844C72.8643 171.844 72.7399 171.844 72.6985 171.91Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M59.8775 185.961C59.3407 185.994 59.6917 186.338 59.8775 186.502C59.8981 186.354 60.0633 186.125 59.8775 185.961Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M62.9758 199.555L62.5422 199.883C62.79 199.768 62.9345 199.719 62.9758 199.555Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.5908 204.918C77.6945 204.918 77.7774 204.967 77.8603 205C77.7981 204.967 77.7152 204.934 77.5908 204.918Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M77.8588 205.001C78.2923 205.263 77.5491 205.985 78.2097 206.263L78.0033 206.214L78.3749 206.722C78.3336 206.247 78.4781 205.263 77.8381 204.984L77.8588 205.001Z\",\n    fill: \"#3F3834\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M164.025 92.6925C163.983 93.0697 164.376 93.2336 164.582 93.3156L165.284 89.0195C164.809 89.1015 164.025 90.2821 163.88 89.4295C163.302 89.741 163.55 90.9052 164.149 91.1348L163.509 90.7413C164.231 91.8235 162.353 92.3154 161.94 91.6103V91.6923L164.912 94.8078C165.284 93.8239 163.86 93.9059 164.025 92.6925Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.044 180.565C146.002 179.991 145.837 179.909 145.651 179.942C145.734 180.155 145.858 180.368 146.044 180.565Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.614 95.543L166.543 96.5268C166.316 96.1497 165.965 95.8053 165.614 95.543Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.214 87.8374C150.214 87.8374 150.11 87.821 150.028 87.8374L150.523 88.2801C150.42 88.1161 150.317 87.9685 150.214 87.8374Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.254 115.482C166.254 115.581 166.254 115.663 166.274 115.778C166.274 115.68 166.274 115.581 166.254 115.482Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.024 75.5723L146.746 77.5891C146.292 77.2776 146.292 78.2122 145.776 77.7531C145.838 77.9007 145.92 78.6058 146.189 78.4418L146.23 78.0483C147.489 79.2125 148.15 78.655 148.955 80.4423C149.987 79.4912 149.285 78.9665 148.707 78.3434C148.645 78.1466 148.625 77.9827 148.583 77.8187L146.849 76.0314L146.003 75.5723H146.024Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M143.071 153.066L142.968 153.033C142.968 153.033 143.03 153.066 143.071 153.066Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M142.514 152.903L142.947 153.034C142.741 152.903 142.596 152.492 142.514 152.903Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M164.726 95.1338C164.994 95.183 165.283 95.3306 165.593 95.5438L164.891 94.8223C164.85 94.9043 164.788 95.019 164.726 95.1338Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M161.857 93.3288L161.919 91.7055L161.279 91.0332C161.444 91.6727 161.527 92.427 161.857 93.3288Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M167.534 113.041C167.163 116.402 165.986 112.04 165.325 113.516C165.367 114.467 166.11 114.877 166.254 115.484C166.048 112.762 168.835 116.14 168.876 113.418C170.259 113.959 170.115 115.517 169.557 116.386C167.988 117.255 168.69 115.369 167.369 114.992C167.41 116.091 167.699 115.927 168.381 116.468C167.761 118.107 169.475 120.141 167.348 120.928C167.431 122.174 168.112 122.174 168.731 122.961C170.197 123.273 169.846 121.239 171.085 120.928C170.94 121.01 170.651 121.157 170.466 121.092L170.961 120.075C170.259 121.01 169.495 119.764 169.475 119.222C169.516 118.829 169.578 118.058 169.97 118.206L170.177 118.829C170.775 118.124 169.392 117.042 170.342 116.336C170.693 116.336 170.796 116.648 170.982 116.714C170.115 115.697 170.342 114.844 169.846 113.434L171.188 114.369C169.743 113.123 170.631 110.778 171.787 109.204C171.498 109.368 171.271 109.679 171.023 109.45C170.837 108.433 171.993 107.81 172.674 108.351C171.622 107.252 174.347 104.826 172.984 103.35L166.502 96.5449C166.646 96.7909 166.77 97.0532 166.791 97.2992C165.408 97.7091 165.511 98.0043 164.438 96.9221C164.974 97.9387 166.068 97.6927 165.883 99.1029C165.325 98.4798 163.86 98.1846 163.467 99.5128C164.169 103.022 167.472 105.645 168.814 109.007C167.802 109.007 167.637 111.516 167.204 112.68C166.213 112.106 166.068 111.171 166.006 110.237C165.841 110.811 165.635 111.811 165.449 112.532L167.493 113.073L167.534 113.041Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.552 104.859C165.449 104.942 165.386 105.008 165.324 105.107C165.407 105.074 165.49 104.991 165.552 104.859Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.109 109.925C166.109 109.925 166.048 109.925 166.006 109.908V110.204C166.068 110.105 166.089 109.99 166.109 109.925Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.332 95.6739C162.084 95.4443 162.022 95.2803 161.774 95.0508C161.857 95.182 161.898 95.3459 161.96 95.5099C162.063 95.6739 162.187 95.7559 162.332 95.6739Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M164.209 95.183L164.602 95.3309C164.602 95.3309 164.684 95.1994 164.726 95.1172C164.498 95.0679 164.313 95.0679 164.209 95.183Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M156.22 124.748L156.385 125.093C156.385 124.896 156.323 124.814 156.22 124.748Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.18 116.565C165.283 115.401 163.714 116.253 164.003 114.613L163.818 115.089C163.384 113.843 164.045 111.81 164.23 110.399C164.788 110.629 165.097 109.629 166.006 109.891C165.965 108.907 165.923 107.94 165.056 107.349C165.469 106.792 164.788 105.808 165.325 105.087C164.705 105.349 163.632 103.808 163.983 105.71C163.941 105.546 163.797 105.628 163.735 105.48C162.744 106.579 163.983 107.185 163.818 108.218C163.157 108.76 163.095 107.12 162.785 107.677C163.074 109.006 161.423 111.58 163.508 111.728C163.508 112.662 163.012 112.744 162.579 112.974C164.54 114.679 160.659 118.286 163.487 118.598C163.487 118.057 163.694 117.188 163.219 116.335L165.159 116.565H165.18Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M162.144 97.627C162.144 97.627 162.104 97.792 162.083 97.858C162.104 97.792 162.124 97.7095 162.144 97.627Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M172.839 83.8848L174.614 84.5734C174.594 87.3774 173.892 88.3284 173.561 90.7552C173.272 90.9192 173.169 90.6077 173.107 90.4437C173.025 92.1654 172.199 94.6742 172.839 96.0024C172.736 96.5435 171.91 97.9045 171.456 97.2978C171.58 97.5765 171.683 97.9045 171.58 98.1996C170.898 98.1996 171.497 97.4945 170.96 97.4289C170.878 97.6585 170.733 97.7405 170.94 97.8225C170.444 97.3634 168.607 97.9865 168.978 96.1172C170.651 95.5597 168.937 97.4453 170.713 97.1994C170.836 96.5763 170.155 96.5763 169.949 96.4943C170.114 95.7072 170.547 95.7728 170.94 95.8548C170.465 95.4941 171.373 94.5758 170.63 94.0675C170.754 92.5098 171.91 94.2971 172.054 93.2804L170.423 92.5098L171.043 90.87C170.857 88.3776 167.988 90.9028 167.471 88.0169C168.318 88.476 170.031 87.525 170.609 86.2788C170.547 87.0658 171.435 88.6072 170.733 89.5582C172.323 88.2956 170.568 91.5095 172.24 90.952C171.621 90.1813 171.724 89.0007 172.281 88.1481L172.385 88.4596C172.736 87.525 171.043 86.5903 171.972 85.3441C172.034 84.6718 172.488 84.8522 172.88 85.0162C172.715 84.4259 172.447 83.9012 172.839 83.934V83.8848ZM172.963 85.3605L172.632 86.2296C172.963 86.0492 173.004 85.7213 172.963 85.3605Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.398 49.4849L157.543 48.9766C157.46 49.1733 157.419 49.3373 157.398 49.4849Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.475 37.4824L153.186 36.6953C153.186 36.9905 153.289 37.2364 153.475 37.4824Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.537 37.6134C153.537 37.6134 153.558 37.5804 153.578 37.5639L153.475 37.4648L153.537 37.6134Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.534 54.0254C151.576 54.1404 151.597 54.239 151.659 54.3705C151.659 54.2062 151.597 54.1076 151.534 54.0254Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M156.572 53.7969C156.593 53.9119 156.635 54.0434 156.697 54.1256L156.572 53.7969Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.317 71.0801L150.442 71.7852C150.463 71.4408 150.4 71.2277 150.317 71.0801Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M155.146 55.5027C155.146 55.5027 155.291 55.6017 155.374 55.6347C155.333 55.5357 155.25 55.4697 155.146 55.5027Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M172.88 73.3105L173.273 73.5735C173.107 73.3763 172.984 73.3105 172.88 73.3105Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.831 67.9805C173.831 67.9805 173.893 67.997 173.913 68.0135C173.893 67.997 173.851 67.9805 173.831 67.9805Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.05 64.0781C150.05 64.0781 149.946 64.0781 149.884 64.0946C149.926 64.2101 149.988 64.1606 150.05 64.0781Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.726 67.98C173.726 67.98 173.788 67.98 173.829 67.98C173.788 67.98 173.767 67.9635 173.726 67.98Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.81 41.6309C173.81 41.6309 173.603 41.6966 173.397 41.8116C173.5 41.8774 173.624 41.8281 173.81 41.6309Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M171.354 46.5801C171.354 46.5801 171.271 46.6296 171.208 46.6626L171.354 46.5801Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M173.933 68.0293C174.036 68.095 174.16 68.1772 174.284 68.3251C174.139 68.1772 174.036 68.0786 173.933 68.0293Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M169.391 33.2852L169.474 33.4502L169.557 33.3677L169.391 33.2852Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.61 30.6946C170.713 30.793 170.857 30.8585 170.961 30.9077C170.651 29.9075 171.415 28.2022 170.259 27.8906C170.238 28.2186 169.288 29.8255 168.628 29.4648C168.814 30.1535 167.843 31.0553 167.988 31.4324C168.814 30.3994 168.999 31.4161 169.288 32.1867C168.834 32.8262 168.359 31.9736 168.05 32.5147L167.947 34.0724L168.318 32.7442L169.392 33.2689C169.392 33.2689 169.33 33.187 169.309 33.1214C169.123 30.793 171.002 33.0886 170.63 30.6782L170.61 30.6946Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.961 30.9219C171.002 31.0698 171.085 31.2013 171.188 31.3163C171.188 31.1026 171.105 31.004 170.961 30.9219Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M161.67 89.9024C162.021 89.9024 162.929 88.6398 162.042 88.5742C161.877 88.9514 161.732 89.3449 161.567 89.7384L161.67 89.9024Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.277 29.0215C168.38 29.2844 168.504 29.3995 168.628 29.4652C168.586 29.3009 168.483 29.1365 168.277 29.0215Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M161.175 90.6584C161.216 90.7732 161.258 90.9043 161.299 91.0355L161.092 90.8224L160.68 91.7078C160.721 91.8226 160.742 91.9538 160.762 92.1013C160.762 92.0358 160.659 91.9865 160.576 91.9374L160.432 92.2161C161.216 93.036 161.567 94.9217 162.001 95.4956C162.269 96.2335 162.352 97.1025 162.187 97.6272C162.29 97.1353 162.228 96.463 161.691 96.6106C160.989 97.5452 159.42 97.8732 160.411 99.7425L160.576 98.7259L162.125 101.202C161.175 101.907 161.361 99.9556 160.7 99.5621C161.34 101.431 158.533 102.612 160.081 103.629C159.069 103.629 157.356 103.629 157.253 104.809C158.533 104.104 157.872 105.58 159.193 105.039C159.689 105.498 158.615 106.285 159.338 106.433L158.946 106.285C157.026 108.089 159.379 109.007 160.04 109.942C160.04 112.352 159.193 113.369 159.007 115.32C158.326 115.32 156.386 115.648 156.324 116.419C157.17 116.878 157.273 118.681 158.388 118.977C159.111 117.648 157.624 117.73 157.5 116.878C158.842 116.32 158.718 116.943 159.606 116.091C158.987 116.796 159.606 119.6 158.326 120.305L158.223 119.993C157.294 121.239 154.383 121.174 155.725 123.584L156.241 124.716C156.138 124.65 155.993 124.634 155.911 124.584C155.477 126.306 154.239 125.683 154.941 127.7C154.879 127.536 154.734 127.618 154.693 127.454C153.847 128.471 154.941 129.717 155.065 130.569C154.012 130.963 154.136 130.34 153.496 129.946C152.773 131.816 154.053 134.078 155.003 135.407L154.218 136.571C153.95 135.8 153.103 134.784 152.484 134.931C152.546 135.636 153.041 135.554 152.67 136.489C152.092 136.259 151.576 135.784 150.894 135.243C149.491 137.112 153 135.948 150.853 137.112C150.729 137.735 151.555 138.194 152.298 138.358L151.122 139.375C152.051 139.604 151.844 141.015 151.823 141.949C152.216 142.113 152.979 141.326 152.67 140.949C153.413 141.097 153.578 142.113 153.454 142.736C151.411 142.736 152.979 146.868 150.771 145.852C150.894 148.738 150.358 152.706 150.833 154.657C150.172 155.198 149.904 156.444 149.119 155.592C148.686 157.855 150.502 159.265 149.532 161.446C149.243 161.61 149.718 160.429 149.037 160.429C149.553 161.987 147.674 162.987 147.777 165.332C147.819 164.938 147.426 164.791 147.22 164.709C147.55 164.709 147.715 165.725 147.922 166.348C147.695 166.66 147.777 165.873 147.488 166.037C145.672 170.317 147.736 173.99 146.786 178.351C147.055 177.105 145.837 176.466 145.3 176.4L145.032 177.613C145.589 178.171 145.424 179.089 145.754 179.909C145.486 179.975 145.156 180.319 144.908 179.909C143.091 182.155 146.58 183.975 145.3 186.861L143.339 182.942L142.245 183.713L141.336 181.991C140.428 182.844 141.956 183.861 140.924 183.861C140.676 183.631 140.862 183.156 140.325 183.074C139.747 183.926 140.49 184.09 140.552 184.795C138.88 182.746 139.602 179.253 139.458 177.302C139.355 176.99 139.891 177.613 140.098 177.695C140.18 176.925 140.903 176.531 140.738 175.514C139.995 174.809 140.015 175.892 139.829 176.367C139.086 176.203 139.189 175.974 139.189 175.432C140.201 175.432 140.118 172.563 141.46 172.022C141.708 169.136 138.797 172.153 139.767 169.431L141.068 168.742C140.49 167.021 140.118 164.84 140.717 163.053L140.676 163.446C141.109 163.758 141.502 163.38 141.791 163.216C142.534 161.905 141.398 160.495 142.699 159.789C141.791 158.068 141.398 155.346 141.109 153.476C142.699 153.165 141.956 155.969 142.74 156.838L143.05 155.198C142.885 156.215 143.38 156.674 144.123 157.395C144.681 156.002 143.442 155.362 143.318 153.968C143.71 154.116 143.999 153.968 144.123 153.345L143.153 153.05C143.153 153.05 143.318 152.985 143.421 152.804L143.277 150.312C142.761 150.771 141.873 150.689 141.749 151.312C142.369 151.164 142.389 151.706 142.265 152.329C141.708 151.706 141.605 152.87 141.068 152.788C141.336 151.542 141.481 149.984 141.378 149.131L142.348 148.967C142.802 147.803 142.534 146.475 142.947 145.704L143.38 146.016C143.938 144.622 143.607 143.13 144.743 141.966C143.938 140.572 143.339 138.85 142.451 137.686C141.357 136.997 144.639 134.111 143.215 132.472C143.359 132.39 143.917 133.57 144.288 134.111C144.639 133.177 143.318 132.242 144.619 132.078C143.814 134.177 145.63 132.078 145.816 133.095C145.981 132.078 145.94 130.996 145.589 130.455C145.3 132.078 143.958 129.668 144.206 131.389C143.38 129.996 143.298 128.192 143.979 126.716C144.516 126.798 144.805 126.634 145.135 126.093L144.433 125.552C144.701 124.863 145.114 127.044 145.651 125.634C144.577 124.011 147.199 121.272 144.846 120.338C146.023 119.321 145.445 122.584 146.952 121.026C147.674 122.108 146.394 123.355 147.571 123.83C147.385 122.83 148.686 123.601 148.809 122.977L148.231 121.813L148.149 122.043C147.302 120.092 148.376 117.288 148.603 114.959C147.715 112.86 146.146 111.319 146.704 108.974C147.302 109.745 147.757 107.105 148.83 108.728C149.656 107.712 149.098 106.547 148.562 106.465C148.211 107.4 148.335 106.777 147.922 107.564C147.364 106.941 147.612 105.695 148.128 105.236C148.046 105.465 148.19 105.4 148.376 105.465C149.016 104.367 147.819 104.842 147.695 103.989C148.665 103.825 148.252 102.202 148.871 101.497L147.757 100.267C148.52 100.956 148.252 99.2506 149.078 99.1686C148.603 98.3159 147.674 97.5452 148.108 96.381C148.479 96.9222 148.933 95.3644 149.821 95.43C150.998 93.4787 148.025 91.7898 149.594 89.9861C149.78 90.0681 150.296 90.5272 150.605 89.9861C150.44 89.5106 150.667 88.7399 150.667 88.2644C150.667 88.0184 150.585 87.8708 150.358 87.838C149.635 86.9362 148.851 86.4115 148.397 84.7226C147.385 84.7226 147.53 86.1327 147.757 86.7558L148.665 87.3625C147.075 87.6905 148.665 88.8383 148.108 89.1498C146.497 88.002 147.426 85.2637 146.621 83.4928C145.052 84.3618 144.454 86.5427 144.309 88.4775L145.052 87.6905L144.908 88.7071L146.126 87.8544C145.775 88.7891 145.899 89.6417 145.692 90.4944C145.837 89.4778 147.282 89.2318 146.972 89.7893C145.795 90.8059 147.406 91.0355 147.199 91.8882C147.364 91.4126 147.488 90.7896 148.004 91.2651C146.518 92.8392 147.22 93.3803 145.672 94.7741C147.364 94.7741 145.506 96.7254 146.828 97.1025L147.096 96.3974L147.839 98.0208C146.229 99.267 146.683 96.627 145.341 98.6603C144.825 100.612 146.58 100.743 146.435 102.317C145.548 101.694 144.908 100.382 145.156 99.1358L144.557 99.8409C144.061 99.3817 144.474 97.66 144.681 96.8074C145.568 98.3487 145.135 96.1843 146.146 95.6268C145.217 95.3972 145.197 96.3318 144.619 95.1676C144.454 96.1843 144.516 96.3318 143.938 97.578C144.846 94.8397 141.047 94.7249 142.265 92.3801C142.513 93.5443 143.71 92.1341 144.185 92.0522C144.165 91.511 144.123 90.4288 143.958 89.9533L142.513 90.1992C142.162 88.7235 145.156 88.5431 144.02 86.7558C143.236 86.4607 143.504 88.166 143.38 87.8544C142.905 85.526 145.259 84.9685 146.621 83.0992C146.229 82.9352 145.341 82.8696 144.743 82.099C145.527 82.4105 146.043 81.935 146.518 82.7877C146.972 82.1646 146.518 81.3119 146.27 80.6888C145.548 82.017 145.176 80.0001 144.722 79.6886C144.99 78.9835 145.506 80.0001 145.672 80.4592C145.981 79.9017 147.323 79.3606 146.146 78.9015C147.013 78.9671 148.169 80.7544 148.211 81.8366L148.479 81.1315C148.851 81.6726 148.706 81.7546 148.438 82.4433C149.222 81.8202 149.965 81.9678 150.564 82.1974C150.42 82.2793 150.358 82.1318 150.234 82.1974C149.924 82.7549 150.089 83.214 150.564 83.132C151.638 83.7715 151.431 82.4105 152.071 82.0826C152.051 81.7874 152.009 81.4759 151.989 81.1807L148.727 77.8029C148.5 76.4911 149.491 75.9992 150.234 75.1137L149.264 74.753C149.553 73.6544 150.048 72.6377 151.204 73.4904C150.853 73.4904 150.915 73.6544 150.833 73.8839C150.956 73.9331 151.06 73.9987 151.122 74.0807L151.287 74.1463C151.163 72.9329 151.08 72.1622 151.039 72.0966C152.154 74.2611 152.856 72.3918 154.569 72.9165L154.321 70.8176C153.558 71.9982 153.454 70.752 153.269 70.2929C154.301 70.2765 153.537 68.6532 153.785 67.9481L153.991 68.0137C154.445 67.3906 154.528 66.2264 154.404 65.3737C154.053 65.3737 152.587 64.1439 151.7 63.5372C151.101 64.9146 150.833 64.0291 150.193 64.0783C150.275 63.9308 150.337 63.6684 150.193 63.6356C149.945 63.406 149.759 63.8652 149.429 63.8816C149.656 65.4393 149.532 66.997 150.833 67.7513C151.534 67.3578 150.358 66.8987 150.853 66.4231C151.679 67.2594 151.328 68.2104 151.101 69.4566L150.193 69.7846L150.44 71.0964C150.089 70.5225 149.16 70.752 149.202 69.4075C148.376 69.4894 149.16 70.7356 148.768 71.5063L149.821 72.031C149.222 71.8015 148.809 73.5232 148.169 72.2114L147.591 70.1125L146.745 70.5881L146.807 68.8827L147.323 69.3419C146.993 66.5543 149.676 68.768 148.809 65.8984C147.591 64.8982 147.612 63.9635 148.211 62.3238C148.314 63.57 149.14 62.5534 149.842 63.0781C150.605 61.8975 149.553 61.3728 149.14 60.6677C149.904 60.4217 150.523 60.2578 150.234 61.3564C151.7 61.6515 150.213 59.8806 151.762 59.9298C152.319 56.2732 147.282 56.4864 149.883 52.4198L150.482 52.6494C150.131 49.8619 151.122 48.3697 151.039 45.8117L152.938 43.9916C153.103 44.4507 154.094 45.7625 154.941 45.287C153.186 46.0905 153.578 47.1727 152.567 48.1238C152.959 48.2713 153.33 47.8778 153.619 47.7138C153.516 48.3369 152.732 48.5829 152.897 49.4355C153.227 49.4355 153.764 48.5665 153.867 49.2716L152.711 50.3046C152.938 51.8623 154.941 51.2884 154.218 53.0101C153.392 52.6002 152.236 51.7967 152.133 51.0917C151.823 51.8787 151.782 49.9603 151.142 50.6489C152.257 51.9443 151.142 52.4034 151.7 54.0268C151.555 53.83 151.307 53.748 151.287 53.3709L150.378 55.5517C151.225 55.0762 150.915 57.4866 152.071 57.4046C152.918 55.0598 152.133 55.6993 153.207 53.0265C153.33 53.83 154.321 54.9286 155.312 55.5025C155.271 55.5189 155.23 55.5517 155.188 55.6337C156.241 56.1584 156.613 55.7649 158.553 55.9781C157.377 54.5843 158.657 53.8792 158.078 52.3215C157.046 51.9443 156.571 53.0429 156.737 53.7972L156.241 52.4362L156.695 52.7478L157.583 49.5011C157.542 50.1242 158.12 50.403 158.553 50.7801C158.657 50.3538 159.007 49.9767 159.4 49.5503C158.368 49.5503 157.645 49.4027 157.748 48.9928C158.326 46.9103 159.42 45.8117 160.721 45.1558C160.721 45.0739 160.7 44.9755 160.68 44.9099C159.585 45.1558 159.028 43.2209 158.078 42.4667C159.152 42.6142 158.904 41.45 159.544 40.8925C158.347 40.4498 156.572 40.7122 155.436 41.3517C156.344 42.893 156.448 42.2699 157.955 43.1062L158.657 45.5002L157.748 44.8935C157.129 45.9921 158.264 47.2219 156.984 47.0087C156.221 46.32 156.902 45.369 156.138 44.6803L155.539 45.3854C154.486 43.926 156.861 44.8279 156.241 43.1226C155.044 43.6145 156.179 42.975 155.56 42.2043C154.714 42.6798 155.415 45.0738 153.64 44.418C152.959 43.4997 156.262 41.8108 154.59 40.5154L154.796 40.5974C155.292 38.974 154.321 38.3018 153.743 37.6131C154.445 36.9736 153.743 35.9241 153.805 35.1699L154.342 35.2355L154.28 34.1532C155.188 34.7599 154.053 35.3994 154.074 36.3341H155.106C153.743 37.2523 155.457 38.1378 156.2 39.0396C155.519 37.7606 156.964 35.6946 155.044 35.2191L156.179 34.5796L155.87 34.186C156.716 33.7105 157.831 34.3828 157.893 35.4814C157.604 35.6454 157.48 35.7274 157.273 35.6454C157.645 36.1865 158.347 36.7112 157.934 37.8918L157.5 37.2031C157.191 38.6953 157.377 40.0891 158.285 40.6958C159.049 38.5805 159.462 36.4653 159.73 34.4484C157.542 33.6285 156.386 32.7923 154.321 32.2839C154.136 30.8902 154.136 29.0209 155.085 27.9223L155.477 28.0698C155.787 27.5123 155.746 26.9712 155.581 26.5121C156.221 25.9546 156.633 27.0368 157.005 26.6433L156.592 24.6264C157.521 24.8396 157.273 26.4793 157.232 27.25C157.17 27.1024 157.067 26.7909 156.922 26.8728C156.386 27.7419 157.748 29.5784 156.324 29.8407C156.489 30.2999 155.436 28.8405 155.147 30.3327C154.466 31.2837 155.663 31.7264 156.055 31.874C156.592 31.9396 157.046 30.3819 157.604 30.9886C157.645 30.2015 157.005 29.8243 157.686 28.8897C157.624 29.6604 158.574 30.8246 157.686 31.1525C158.471 32.7759 161.031 32.8087 161.278 32.1036C160.453 32.202 160.721 29.234 159.379 31.1197C158.491 30.1195 158.739 28.4798 158.285 27.25L158.491 27.3156L158.45 25.8398C158.698 26.0694 158.884 26.5285 159.42 26.5941L158.285 24.446C159.09 25.6758 159.069 23.8065 159.586 23.331C158.78 23.0359 158.306 22.1832 157.707 22.9047C156.984 23.6918 158.079 23.4458 158.037 24.2165L156.902 23.0031L157.046 22.9211L156.076 22.1668C156.386 20.691 158.471 23.0523 157.707 21.0518L156.221 21.1666C156.757 18.9857 158.822 16.2966 158.388 14.6732C159.152 15.1816 160.453 15.4931 161.34 14.9848C160.989 15.6407 160.845 17.0017 160.824 17.9691C160.535 18.1331 159.276 16.5917 159.751 15.5751C157.294 15.8538 160.803 18.3462 158.368 18.2478C157.129 20.8386 160.391 20.4615 158.636 22.5931C159.709 22.7243 159.069 23.2818 159.998 23.495C161.856 22.9867 160.391 20.4615 161.237 19.0349C161.299 19.1825 161.402 19.494 161.609 19.576C162.083 18.5594 161.918 18.1003 161.609 17.3132L161.464 17.3952C160.597 16.0178 162.393 16.6737 162.971 15.9686C162.847 15.6571 163.322 14.6404 162.496 14.7388L163.735 13.4598L162.517 13.4106C162.558 12.6236 163.384 12.5416 162.765 11.7709L161.691 11.6397L161.031 13.5254C160.824 12.5252 160.04 13.1647 159.978 12.0661C160.989 13.3778 160.7 11.279 161.732 11.2462L161.237 10.4099L161.485 10.6395C162.125 10.082 161.196 9.86882 161.443 9.16374C160.721 9.95081 159.875 10.4427 160.473 11.5905C159.978 10.7379 159.544 9.11454 159.565 8.7374C159.235 7.86835 160.143 7.36003 160.37 6.60576C160.576 8.13071 163.714 6.39259 162.517 9.29491C162.31 9.22932 162.393 8.98337 162.538 8.90138C161.092 9.16374 162.352 10.6887 162.785 11.3938C163.611 11.2954 163.694 12.0005 164.313 10.8855C163.756 11.2134 162.682 9.75404 163.487 8.72101L165.159 9.06535L165.593 7.49121L165.655 7.63879C166.831 7.14687 165.696 5.93346 166.501 4.90043C166.006 4.04777 166.935 1.07986 164.974 2.21128C166.171 1.32582 164.953 0.341983 164.87 -0.740239L163.983 0.522354C162.992 -1.16657 163.714 -0.641855 161.96 -2.08482C162.434 -2.16681 162.868 -2.41277 163.322 -2.11761C163.714 -4.23287 164.643 -7.20078 163.425 -8.57815C163.714 -10.0703 165.737 -10.1195 165.263 -12.2839C165.077 -12.7431 163.632 -12.0872 164.313 -13.4318C164.457 -13.5137 165.386 -11.9888 165.469 -13.5465C164.313 -14.7599 166.563 -16.0717 165.634 -17.5967C166.212 -18.3182 166.212 -19.6299 167.224 -19.2692C166.811 -18.0886 166.79 -16.3833 167.244 -16.0717C166.646 -16.2849 166.522 -15.2683 166.171 -16.2029C165.139 -14.4648 166.646 -14.9731 165.882 -13.399C166.274 -13.2514 167.141 -14.1368 166.831 -14.514C168.256 -14.3992 167.059 -11.2509 168.958 -12.5463C169.329 -14.268 166.439 -15.0551 168.153 -16.4161C168.937 -15.7438 168.07 -14.8583 169.453 -13.9565L170.196 -15.1371L169.309 -16.1209L169.515 -16.0553C171.125 -18.1214 168.338 -18.2034 167.905 -20.2202C166.77 -19.1708 165.49 -20.6958 164.767 -19.8923C164.767 -21.2205 165.077 -22.1551 166.501 -22.0403C167.327 -19.4988 167.988 -21.778 169.082 -19.384C169.639 -19.7119 171.084 -18.6625 171.414 -19.9907C170.609 -21.5976 170.176 -19.6463 169.907 -21.1877C170.052 -21.2697 170.196 -21.3517 170.382 -21.2697C169.742 -22.024 170.754 -22.0567 170.052 -22.975L170.3 -22.7454C171.311 -23.7129 169.474 -23.9588 170.547 -24.7787C169.453 -24.5163 169.763 -25.451 169.185 -26.0577C168.669 -25.1886 167.079 -24.8279 166.935 -23.0406C167.74 -22.7454 168.215 -22.8438 168.524 -22.0731L168.586 -23.2373C168.689 -22.975 168.875 -22.7618 169.02 -22.5159L168.442 -21.4336C168.049 -22.893 167.059 -22.3355 166.295 -23.0078C166.831 -24.2704 166.212 -24.09 166.604 -24.8935C167.802 -24.7131 169.02 -27.2055 170.011 -28.6321C169.928 -28.4025 169.928 -28.1074 169.866 -27.9434C170.485 -26.7956 170.981 -28.5993 171.332 -28.6157L170.836 -29.4519C170.898 -29.288 171.146 -29.0584 171.373 -29.3863C171.291 -30.4686 170.073 -30.5178 169.99 -31.6C170.671 -31.6164 171.559 -30.6325 172.013 -31.272C172.632 -31.4524 174.284 -32.0427 173.892 -33.5185C173.644 -33.6332 173.561 -34.0268 173.499 -34.4531C173.52 -34.3875 173.541 -34.3219 173.582 -34.2891L174.428 -35.1746C175.461 -34.2727 173.665 -33.6005 174.717 -32.6986L175.791 -32.5346C175.708 -31.9115 176.059 -31.0097 176.575 -30.5669C176.885 -31.5016 176.637 -31.7312 176.555 -32.8298C177.257 -32.9282 177.669 -32.1247 177.731 -32.0099L177.133 -32.2231C176.059 -31.0261 177.917 -30.2226 177.484 -28.6485C177.401 -28.4189 177.339 -28.5665 177.153 -28.6485C178.041 -27.2711 176.41 -26.1397 177.628 -24.7623L177.112 -25.2214C177.463 -24.336 178.309 -22.5651 179.115 -20.8105L179.527 -20.7614C179.816 -20.9253 179.713 -20.3022 179.486 -19.9743C179.899 -19.0888 180.25 -18.2526 180.518 -17.5639C180.807 -17.7443 181.076 -18.0066 181.179 -18.3018C180.725 -18.6133 181.344 -20.1055 180.188 -19.9907C180.972 -20.6466 180.147 -21.86 180.642 -22.3519C179.796 -21.4664 179.672 -23.1062 179.073 -23.3193C179.837 -23.5817 179.218 -24.7295 180.147 -24.5163C180.415 -24.6803 179.445 -24.1064 179.961 -23.6473C180.725 -22.5815 180.993 -25.3854 181.674 -24.09C181.22 -25.7133 181.798 -27.763 181.138 -29.4519L180.622 -28.5829C180.869 -29.288 180.89 -31.0097 181.365 -31.1081C181.406 -30.5669 181.303 -29.9439 181.406 -29.2388C182.479 -29.1076 181.633 -30.8785 182.294 -30.8949L180.766 -33.0429L180.58 -32.1739C180.002 -32.7806 181.034 -34.5351 181.365 -35.8633C182.748 -34.9614 181.138 -33.83 181.53 -32.3543C181.943 -31.272 183.057 -32.8626 183.264 -31.8623C183.635 -32.0919 183.697 -32.7314 183.367 -33.0757L183.697 -33.4365C184.936 -32.4526 184.358 -30.5178 185.328 -29.124C185.204 -29.2552 185.06 -29.3699 184.915 -29.4191C184.255 -28.4681 184.131 -27.4515 184.358 -26.4348C184.853 -26.9103 184.585 -27.1399 184.482 -27.4515C184.812 -27.4515 184.833 -26.5332 185.163 -26.1397C185.679 -27.0087 185.989 -26.2381 186.278 -26.7956C186.526 -26.1725 186.36 -25.6969 186.113 -24.9919C185.555 -24.6639 185.452 -25.369 184.771 -25.3362C185.06 -24.5655 183.429 -24.3524 184.048 -23.2046C184.523 -24.6311 185.452 -22.6962 185.824 -22.1551L185.906 -22.4011C186.629 -21.8764 186.608 -21.4828 185.844 -21.2369C185.597 -21.86 185.906 -22.4011 185.081 -22.3027C185.081 -21.9092 185.039 -21.5156 185.225 -21.0565L184.709 -21.5156L184.606 -19.5644C185.266 -19.2036 186.175 -18.5969 187.186 -18.2362C186.484 -17.8262 186.918 -17.1375 187.104 -16.662L186.835 -16.8916C186.113 -16.0881 186.34 -14.1368 186.938 -13.9237C186.299 -13.3662 183.594 -18.5969 183.574 -14.2188C183.346 -12.5791 185.411 -13.0218 185.968 -12.0216C185.968 -12.0216 185.782 -12.0872 185.638 -12.0216C185.39 -11.3165 186.133 -11.1689 186.36 -10.5622C186.711 -10.9722 186.815 -11.5953 186.567 -11.8248C187.372 -11.5297 186.278 -10.3327 186.856 -9.72597C185.679 -10.5622 186.175 -8.38138 185.597 -8.98809C184.564 -7.62711 185.37 -6.00377 186.195 -5.16751C184.461 -4.34765 186.175 -3.4458 185.204 -1.93724C185.287 -2.1832 185.101 -2.64233 185.328 -2.95388C184.441 -3.93772 184.564 -1.36334 183.821 -2.83909C183.945 -2.52754 184.358 -2.77351 184.234 -3.08506C184.193 -3.62617 183.821 -4.16728 183.346 -4.06889L182.273 -2.87189L182.087 -3.34741L180.56 -1.51092C180.745 -1.44533 181.034 -1.5929 181.179 -1.67489C180.312 0.538751 180.622 3.17872 180.167 5.1464C182.975 5.78589 180.683 10.1312 182.211 11.8857C181.447 11.3774 180.043 11.0166 179.404 11.2134C179.342 10.8527 178.289 10 178.64 9.22933C179.114 9.14734 179.775 8.19629 180.209 8.88498C180.209 6.62215 178.908 9.06535 177.938 8.31108C177.855 10.8035 179.321 12.4104 179.754 14.0501H179.404L179.858 15.2963C180.188 14.3453 181.819 14.5421 181.055 15.7391L180.993 15.5751C180.209 16.2146 180.787 17.7723 180.518 18.8709L181.344 19.7072C181.076 20.8058 179.321 20.691 178.206 20.9534C177.814 22.6751 179.115 23.8229 179.775 25.1347C178.929 25.6266 178.351 28.201 177.628 26.7417C178.062 28.365 182.19 28.447 179.507 30.923L178.887 30.1523C178.64 32.7431 179.548 36.5473 178.578 37.6459C176.08 36.4325 175.399 40.5974 172.736 40.7942C173.355 40.7286 173.396 41.7124 173.685 41.8764C173.355 42.0567 173.004 42.3847 173.479 42.811C174.16 41.86 176.059 43.7785 175.316 41.7616C176.947 42.9094 178.124 44.2868 177.711 46.402L176.637 46.2709L177.236 44.6311C176.41 44.7295 176.617 43.8604 176.307 43.4669C175.213 46.5332 173.85 42.811 173.479 46.0085C174.139 46.3856 173.871 46.1561 174.015 47.0087C174.036 46.6152 173.314 46.4676 173.19 47.0907L173.954 47.7794C171.972 48.7141 173.066 45.8117 171.662 46.648C171.002 45.3362 170.898 43.1554 169.453 43.4177C168.627 45.3854 171.745 45.4838 170.795 47.5334L170.176 47.6974C170.465 48.4845 171.394 48.6977 171.889 49.1568C171.559 49.1568 171.27 49.3207 171.105 49.7963C172.302 51.19 172.426 52.0427 173.768 53.3545C173.107 50.1734 175.233 50.8293 174.738 47.5662C175.11 48.1073 175.089 50.3702 176.555 50.6653L175.481 50.5342C175.873 51.6164 176.266 52.715 175.708 53.9612L175.233 53.1085C175.708 54.8958 173.148 55.7977 174.717 57.3226C174.883 56.8471 174.924 56.47 174.8 56.1584C175.13 57.0931 174.841 58.1917 174.511 59.1263L175.977 61.2908C175.44 61.2252 175.213 62.4714 174.449 61.7827C173.396 63.1273 174.903 63.9636 175.027 64.8162C173.644 66.1608 174.717 63.488 173.252 63.1929C172.426 65.1605 172.529 67.3414 173.314 68.5876C173.603 68.1941 173.809 68.0137 174.077 68.0629C173.726 68.0957 173.685 68.9155 173.603 69.3583L174.263 69.7354C173.665 70.4405 173.272 70.2929 172.839 69.5878C172.591 70.2929 173.788 71.2931 172.653 71.9326C172.013 70.6209 173.004 69.1287 172.591 68.4236C172.859 71.0636 170.031 70.7848 170.382 74.1463C170.031 74.1463 169.474 73.5232 169.371 74.1463C169.371 75.622 170.754 74.671 171.456 75.2121C171.208 74.0479 171.724 73.5724 172.715 73.0149L173.231 73.3756C172.921 73.3756 172.798 74.0971 172.467 74.2611L173.603 74.5562C172.343 74.343 171.167 75.3597 171.497 76.2943C172.57 75.4909 172.488 75.7368 173.995 75.6384C175.172 77.0322 172.405 76.901 173.644 78.4424C173.252 78.2948 173.148 77.0486 172.653 78.0652C172.447 78.9343 173.479 78.9179 173.685 79.541C172.736 78.7703 171.91 78.8523 170.754 78.016C170.878 76.4583 170.878 77.3929 170.651 75.8352L169.536 77.0158C169.577 75.6876 168.462 75.9336 168.07 75.786C166.604 77.9013 169.412 77.6389 168.896 79.0491C169.515 79.8198 169.267 77.7209 169.866 78.8851C169.495 80.2133 170.506 79.2622 170.733 80.82L170.279 80.5084C169.577 80.902 170.279 81.4431 170.279 81.9842C170.506 82.6073 174.098 81.7054 173.768 84.1322C173.479 83.9847 173.314 83.9191 173.19 83.9027L164.602 80.5904C164.21 83.0336 163.487 85.8376 162.393 88.5923C160.514 89.0678 161.299 86.4115 160.473 86.5099L161.051 85.2637C161.774 85.4112 160.824 88.002 162.331 86.969C162.187 84.6242 163.219 83.6895 162.042 81.3611C160.164 81.853 161.877 84.247 160.287 85.5096C160.494 84.9357 160.391 84.411 160.225 83.9027C159.771 85.1981 159.276 86.5918 158.76 88.0676L159.131 88.4447C159.503 87.4609 159.771 86.7722 159.854 86.6902C159.462 88.0184 160.246 89.2482 161.526 89.4778L161.609 89.2482L161.918 89.7729L161.505 90.6912L161.175 90.6584ZM144.887 177.613C144.784 177.515 144.66 177.433 144.474 177.367C144.66 177.433 144.784 177.4 144.887 177.613ZM161.258 63.8816C160.783 65.6525 160.143 67.4234 159.689 69.1287C162.744 66.292 165.015 64.2915 164.127 69.4894L164.251 69.8502C164.685 69.2107 164.912 68.0465 164.891 66.9151C164.127 65.9312 161.278 62.7173 160.989 62.7173C160.225 62.9633 160.927 63.5044 160.618 64.0455L161.237 63.8816H161.258ZM165.717 63.0453C166.171 62.0615 165.572 62.2254 165.077 62.0287C165.077 62.3894 165.077 62.7502 165.077 63.1109C165.221 62.9961 165.428 62.9469 165.696 63.0453H165.717ZM164.561 62.0287C164.54 62.1434 164.499 62.2418 164.416 62.2746L164.561 62.0287ZM160.659 81.7218C160.659 81.7218 160.659 81.6563 160.659 81.6071C160.576 81.8366 160.494 82.0826 160.411 82.3285C160.514 82.2466 160.597 82.0662 160.659 81.7218ZM162.249 79.8034L161.361 79.459C161.299 79.6722 161.216 79.9017 161.134 80.1313C161.567 80.0985 161.939 80.0657 162.249 79.8034ZM166.398 73.4904C165.345 72.9493 165.531 71.5555 164.251 71.3259C163.941 71.1948 163.756 71.4899 163.59 71.8015C163.487 72.1622 163.384 72.5557 163.281 72.9657C163.467 72.9985 163.632 73.0968 163.776 73.2608C164.003 72.8673 164.375 72.6213 165.139 72.8673C163.239 73.7527 166.212 73.9495 165.572 75.0481C166.419 75.5073 166.687 73.8675 166.377 73.474L166.398 73.4904ZM176.555 -15.0223C176.679 -15.0387 176.968 -15.1371 177.36 -15.2519L177.876 -14.3828C177.401 -12.9726 175.378 -11.9724 176.782 -10.5294C176.286 -9.95553 175.399 -9.70957 174.655 -9.46361C174.759 -9.75876 174.862 -10.0211 175.006 -10.2507C173.19 -14.104 177.731 -11.9232 176.555 -15.0059V-15.0223ZM171.91 1.35861C171.848 1.19464 171.641 1.12905 171.641 1.12905C173.541 4.57249 173.83 7.27805 173.499 9.01616C174.49 8.7702 175.44 7.27804 175.935 6.57296L176.906 7.32724L175.997 7.65518L176.802 8.88498C177.566 8.63902 177.546 7.70437 178.186 7.13047C178 7.06488 177.029 4.96603 176.451 4.35933L175.481 5.86788C175.853 5.47434 175.894 3.35909 175.75 2.50643C175.213 2.44084 174.181 3.78542 175.316 4.08057C174.49 4.17895 174.717 2.53923 173.726 3.49027C173.066 2.17848 174.057 0.292791 174.573 -0.592663L175.935 -0.625459C176.596 -1.5765 174.428 -1.44532 175.378 -2.56034C175.419 -1.08458 176.885 -2.67512 176.802 -1.51092C177.36 -1.83886 178.227 -1.39613 178.289 -2.56034C176.658 -3.69176 179.569 -3.69176 178.144 -4.74118C178.784 -5.29869 179.114 -3.98691 179.527 -5.16751C178.784 -6.62687 178.124 -6.61048 176.844 -6.80724C176.307 -5.54465 178.309 -5.20031 177.855 -4.18368L175.935 -6.4793C175.564 -6.11856 175.502 -5.8398 175.543 -5.59384C175.481 -6.02017 175.192 -6.41371 174.8 -6.75805C174.573 -6.95482 174.387 -7.13519 174.222 -7.29916C174.036 -6.11856 173.871 -5.05273 173.293 -4.92155L172.694 -5.13472C172.054 -4.75758 172.405 -4.0361 172.818 -3.67536C172.736 -2.60953 173.437 -1.46172 172.612 -1.31414L172.096 -1.77327C172.096 -0.445086 172.137 -0.297511 171.91 1.34222V1.35861ZM164.003 44.0408C166.419 43.4833 168.586 42.811 168.751 39.0724L168.855 39.384C170.568 37.6623 167.513 35.5634 169.453 33.4646C170.155 34.6452 170.073 34.5796 171.869 35.9897L171.414 34.7435C172.612 35.1863 172.137 33.9565 172.343 33.0874L173.706 33.9893C173.19 34.4648 172.839 35.793 173.19 35.793C173.066 35.4814 171.043 37.3835 171.311 38.5641C172.323 38.5477 172.302 36.1209 173.768 37.3507C173.231 36.3505 174.243 36.3341 174.036 35.3175C174.573 36.3177 175.378 35.6782 175.997 36.4489L175.894 34.8091C176.245 34.8091 176.266 37.2195 177.711 36.0225C177.277 35.3339 178.206 33.6777 177.133 33.5301H177.463C177.876 32.3495 176.018 32.8415 176.864 31.4313C176.328 31.3657 175.894 31.6117 175.935 32.1528C176.101 32.6283 176.844 32.7595 176.844 33.6941C175.935 34.0221 177.112 32.5955 175.584 33.0874C174.821 33.3334 175.832 35.5798 174.325 34.7435L174.738 33.5629C173.665 33.4318 173.85 32.5627 172.983 32.4971C172.694 31.7264 174.015 31.1525 173.19 30.3163C172.529 29.9391 171.146 30.3491 171.91 29.1685C173.665 28.3486 173.788 25.4627 173.726 24.3804L173.169 23.3802C172.488 23.3802 172.983 25.1839 172.219 24.4952L172.178 23.0031L172.57 23.1506C172.736 22.6751 172.364 22.134 172.199 21.6749C172.901 22.1996 172.447 23.2326 173.603 23.1179C173.933 22.4456 174.366 22.3964 174.243 21.7405C174.305 21.888 174.387 22.0192 174.552 22.0192C175.254 20.6747 173.499 20.5599 173.169 20.1827C171.91 18.6414 171.6 21.4617 170.465 21.1666V17.0344C170.774 17.4116 171.084 17.8051 171.559 17.7067C172.219 16.7557 172.447 17.7723 172.591 16.3622C171.043 16.313 171.889 14.5093 171.146 13.427C171.848 13.0171 171.992 12.9351 171.848 13.9518C172.859 13.9354 172.694 12.5416 172.859 12.0661C172.653 11.7545 172.57 11.279 172.405 10.951C171.848 11.3118 171.249 11.0822 170.94 10.164L170.733 10.0984C170.238 11.5086 168.813 13.6402 169.701 14.6404L169.247 14.3453C168.132 15.9194 170.506 18.1331 168.504 18.7234C167.76 18.5758 168.277 19.0349 167.203 18.9037L167.864 20.2155L167.409 19.9204L167.348 22.0356L167.162 21.9536C167.988 23.0359 168.669 23.8885 169.226 24.5772C169.701 24.6264 169.845 24.5772 170.155 24.938C170.341 25.2987 170.341 25.5447 170.238 25.7578C170.031 26.2497 169.288 26.5285 168.916 27.1352L169.102 25.1839C168.318 24.9544 167.471 25.0363 166.77 25.9218C166.79 25.5283 166.191 25.3151 166.026 25.7742C166.233 25.8398 166.336 27.086 167.059 26.6925C167.059 28.5618 164.499 31.3329 165.593 34.268C164.994 32.1692 164.272 35.7766 164.292 33.5137C162.765 34.9403 165.345 34.9731 164.912 36.5473C164.437 36.6292 165.097 35.6946 164.251 35.2355C163.322 37.8262 165.634 39.8923 164.85 42.4011H163.838C163.879 42.9094 163.941 43.4505 164.003 44.0244V44.0408ZM164.457 49.206C164.499 49.7143 164.519 50.2226 164.561 50.7309C164.561 50.6817 164.602 50.6325 164.623 50.5833L165.201 52.1411C165.737 51.272 166.935 50.7801 167.244 52.1083C166.852 51.9607 166.274 52.2723 166.109 51.8131C165.366 52.6002 164.499 54.4039 166.088 54.076C164.912 52.3051 168.07 53.8956 167.224 52.5018C168.091 53.2889 167.554 53.9284 167.884 54.6171C167.162 53.8628 166.006 54.5843 165.448 55.5681C165.613 56.0437 165.201 57.2079 165.469 57.9785C166.439 57.8146 166.852 58.5033 167.286 57.3226C167.451 57.7818 167.533 58.4868 166.935 59.2083C166.831 58.8968 166.79 58.3557 166.46 58.3557C165.531 58.7656 165.469 59.3395 165.056 59.6183C165.056 59.8806 165.056 60.143 165.077 60.3889C165.159 60.3233 165.283 60.2742 165.428 60.2414L166.109 61.1596C165.861 59.9954 166.625 60.6841 167.162 60.7497C166.088 60.6021 166.914 61.4548 166.873 61.8483L168.153 61.1268C168.669 61.5859 167.1 62.4714 168.256 62.373C168.999 60.6513 168.916 59.9462 168.834 58.3065L167.843 58.864C167.513 56.9947 169.536 57.9129 169.825 55.8797C169.164 54.9614 170.258 52.8298 168.648 52.6166C169.102 52.9282 170.3 51.5016 169.66 50.7309C168.297 49.8127 168.462 47.4679 167.678 48.1074C167.554 48.7304 168.235 49.6651 167.203 50.0586L167.079 48.8124L166.15 49.5339C166.501 49.1568 165.717 49.1076 164.499 49.1896L164.457 49.206ZM150.936 75.4581V75.5073C150.936 75.5073 150.936 75.4745 150.936 75.4581Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.979 156.213L134.339 162.969C134.546 161.017 134.793 159.246 134.979 156.213Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.94 26.956L171.064 26.6117C171.476 27.0216 171.435 26.8412 171.105 26.4805C171.126 26.1033 170.816 26.1033 170.63 26.0377C170.527 25.9558 170.403 25.8738 170.3 25.7754C170.403 25.9066 170.506 26.0213 170.609 26.1197C170.506 26.6936 170.506 27.0544 170.96 26.9724L170.94 26.956Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.153 41.7603C152.711 40.5141 152.938 40.1862 153.681 40.3337C154.114 39.1367 152.793 39.2023 152.607 38.4316C152.525 39.8254 152.153 40.0714 152.153 41.7603Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.608 38.4353C152.608 38.2713 152.608 38.1237 152.608 37.9434C152.547 38.1401 152.567 38.2877 152.608 38.4353Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M151.472 43.6321C151.555 43.4025 151.576 43.009 151.865 42.845C151.121 42.6974 151.39 43.8616 151.472 43.6321Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.934 40.12C167.409 40.038 167.264 39.1854 167.491 38.8574C167.326 39.3329 165.881 39.5953 166.934 40.12Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.971 47.6472C154.054 47.4176 154.611 47.0897 155.21 47.3192C154.9 46.9421 153.662 46.3354 153.971 47.6472Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M166.419 42.4678L166.708 42.3038L166.357 41.3691L166.419 42.4678Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M177.958 40.4009C177.215 39.3187 175.564 41.7619 175.068 39.9746C173.788 42.0899 176.369 39.9254 175.956 41.5487C176.41 40.6305 177.607 40.2698 177.958 40.4009Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M175.958 41.5488C175.896 41.6803 175.833 41.8282 175.812 41.9926C175.875 41.8118 175.937 41.6639 175.958 41.5488Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.09 54.9944C168.028 54.8465 167.925 54.7314 167.842 54.6328C167.904 54.7479 167.966 54.8793 168.09 54.9944Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M175.872 46.8284L174.778 45.2051C175.521 46.2873 175.067 48.7961 176.409 48.7633C176.801 47.9762 176.615 46.9596 176.099 46.5005L175.872 46.812V46.8284Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M148.953 61.4699L148.52 60.7812L148.231 61.5683C148.458 61.3552 149.387 61.8799 148.933 61.4863L148.953 61.4699Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M148.189 61.7182L148.25 61.5703C148.25 61.5703 148.189 61.6525 148.189 61.7182Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M167.906 52.1075C168.071 51.632 168.091 51.2548 167.926 50.7793C167.637 50.9433 167.224 52.1075 167.906 52.1075Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.153 66.1935L150.09 65.1113L150.007 66.2755L150.153 66.1935Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M147.055 70.8984L146.787 71.0624L147.117 71.9807L147.406 71.8331L147.055 70.8984Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M174.367 67.1449C174.635 66.4398 173.52 65.7511 173.231 65.9151L173.066 67.3252C174.181 67.0793 173.107 66.9317 173.5 66.1446L174.367 67.1449Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M142.74 107.777C142.1 107.383 142.761 105.907 143.442 105.907C143.69 106.137 143.834 107.006 144.33 106.531L142.823 105.137C144.165 103.661 144.867 106.596 145.341 107.465C145.858 105.858 144.805 105.252 145.114 103.513C144.867 104.005 144.392 104.284 143.979 104.514C142.761 104.432 143.587 102.874 143.69 101.71C143.029 102.382 142.678 101.906 142.286 101.333C142.286 101.234 142.204 101.169 142.142 101.103L141.997 100.906V101.037C141.832 101.005 141.667 101.037 141.44 101.103C141.626 102.103 140.49 102.743 140.366 103.366C142.431 102.972 140.449 105.547 140.924 106.399L140.965 107.334L140.903 107.678C140.676 107.728 140.428 107.596 140.119 107.039C140.428 107.514 140.036 108.941 140.697 108.875L140.139 112.155C140.036 112.253 139.933 112.335 139.768 112.401C139.871 112.532 139.974 112.565 140.077 112.548L137.641 126.863C137.93 126.175 138.488 125.617 138.839 124.912C139.953 126.158 139.293 123.748 140.47 124.207C140.821 124.748 140.552 125.453 140.181 125.847C140.779 126.076 141.44 125.535 142.162 125.683C143.277 123.961 140.346 123.354 141.11 121.632C141.853 121.78 142.389 122.403 142.513 121.239L142.617 121.55C142.121 119.599 144.557 120.304 142.72 118.911L143.793 119.058C143.133 118.123 143.422 116.5 143.442 115.565L143.649 115.647C142.885 112.925 143.649 114.172 143.649 111.22L144.66 112.696C145.362 111.761 144.02 111.368 144.289 110.679C144.495 110.761 145.3 110.679 145.383 111.368L144.082 107.646C143.422 106.711 143.256 107.728 142.782 107.81L142.74 107.777Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M145.136 103.497C145.219 103.317 145.281 103.103 145.281 102.857C145.198 103.087 145.157 103.3 145.136 103.497Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.435 127.846L137.62 126.846C137.496 127.157 137.414 127.469 137.435 127.846Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M143.669 98.2004C143.008 98.7415 142.967 97.6593 142.575 97.5117L142.203 99.6926C142.616 99.7254 143.05 100.004 143.442 99.9877L143.669 98.2004Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M141.316 100.249C141.584 100.348 141.811 100.61 142.018 100.905L142.224 99.7083C141.914 99.6756 141.605 99.7903 141.336 100.249H141.316Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M163.529 102.445L163.488 102.839L163.715 103.462L163.529 102.445Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M160.639 108.317C161.341 107.924 161.032 106.989 160.928 106.678C160.763 107.694 160.619 107.219 160.639 108.317Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M167.596 107.809L167.782 108.825L167.926 108.743L167.596 107.809Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.325 135.75C140.325 135.914 140.325 136.062 140.325 136.226C140.365 136.012 140.365 135.865 140.325 135.75Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M140.821 127.289C139.19 129.47 140.099 125.649 138.406 126.207L138.695 127.535L138.303 127.387L138.158 128.945C138.922 128.715 139.025 128.486 139.748 128.633C139.087 130.65 138.736 129.175 137.518 130.585L137.229 132.897L137.044 132.684C137.044 132.88 137.105 132.979 137.209 133.061L136.259 140.849C136.589 142.325 137.745 140.226 138.654 141.391C138.943 139.751 140.181 137.422 138.736 137.111C138.922 137.193 139.314 137.34 139.562 137.029L138.509 135.947L137.952 136.799C136.899 135.701 137.745 132.684 138.592 132.208C138.695 133.995 140.326 133.29 139.067 135.635C139.459 135.57 140.202 135.209 140.305 135.766C140.388 132.864 141.544 130.404 140.821 127.305V127.289Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M136.238 155.902L136.113 155.869C136.113 155.869 136.218 155.952 136.238 155.902Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M136.589 154.968L135.391 153.41L135.102 155.591L136.093 155.87C135.866 155.64 135.495 154.82 135.949 154.574L136.589 154.968Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.812 151.705C135.04 152.869 136.258 152.951 136.918 152.41C137.29 153.509 135.514 152.804 136.67 153.656C137.537 153.738 137.269 152.41 137.166 152.099L134.812 151.705Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.002 143.537L137.435 143.914L137.724 143.16L137.002 143.537Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.434 143.916L137.166 144.67C137.537 144.67 137.909 144.654 138.198 144.556L137.455 143.916H137.434Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M136.444 146.641C136.3 146.952 136.155 147.313 136.052 147.739L136.444 146.641Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M136.919 145.803H136.754L136.444 146.639C136.588 146.344 136.753 146.065 136.919 145.803Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M137.166 144.67C136.299 144.703 135.39 144.736 135.411 145.867L136.753 145.801L137.166 144.67Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M165.077 114.777L165.387 115.712L165.552 115.63L165.221 114.695L165.077 114.777Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M163.384 119.762C163.487 119.991 163.611 120.172 163.755 120.352C163.693 120.106 163.59 119.909 163.384 119.762Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M168.483 124.206C167.451 125.141 167.616 122.649 166.894 124.518C166.068 124.6 165.222 123.583 165.779 122.714C166.502 122.878 166.089 123.649 166.956 123.173C166.213 122.468 166.832 122.321 165.676 122.386C165.16 121.304 164.375 121.091 163.777 120.32C164.045 121.599 162.435 124.026 163.591 125.748C164.788 126.764 166.729 126.453 168.669 126.666C169.144 126.584 169.763 124.403 168.483 124.174V124.206Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M170.712 122.798C170.897 122.322 170.835 122.175 170.732 121.863C170.051 121.863 170.732 122.404 170.712 122.798Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.053 132.143C154.322 132.274 154.487 133.176 155.003 133.045L154.9 131.684C154.796 131.979 154.445 132.061 154.053 132.143Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M154.859 131.092L154.9 131.682C154.94 131.535 154.94 131.354 154.859 131.092Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M153.867 132.193L154.054 132.143C154.054 132.143 153.93 132.11 153.867 132.193Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M135.351 149.753C134.814 149.671 135.02 150.295 135.124 150.606C135.206 150.377 135.454 150.065 135.351 149.753Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.244 171.988L132.728 172.447C133.017 172.3 133.162 172.218 133.244 171.988Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.249 181.744C146.249 181.744 146.435 181.827 146.498 181.876C146.435 181.81 146.352 181.777 146.249 181.744Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M146.497 181.875C146.868 182.285 145.96 183.285 146.558 183.761L146.352 183.679L146.6 184.466C146.682 183.777 147.033 182.351 146.476 181.875H146.497Z\",\n    fill: \"#3F3834\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.361 54.5519C261.402 54.8471 261.815 54.9291 262.042 54.9619L261.898 51.666C261.443 51.7808 260.907 52.7318 260.597 52.1088C260.102 52.4039 260.556 53.2566 261.196 53.3713L260.473 53.1418C261.402 53.8797 259.647 54.4372 259.09 53.9616V54.0272L262.641 56.0605C262.827 55.2898 261.423 55.4866 261.361 54.5683V54.5519Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.283 122.322C265.077 121.911 264.891 121.878 264.726 121.928C264.87 122.076 265.035 122.207 265.283 122.322Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.465 56.5371L264.58 57.1766C264.27 56.9142 263.878 56.7011 263.465 56.5371Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.766 52.2891C246.766 52.2891 246.663 52.2891 246.58 52.2891L247.137 52.5849C247.014 52.4698 246.89 52.3712 246.766 52.2891Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.255 71.3086C268.255 71.3086 268.317 71.4406 268.337 71.5231C268.337 71.4406 268.296 71.3746 268.255 71.3086Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.346 43.2867L241.419 44.7625C240.924 44.5657 241.089 45.2872 240.49 44.9756C240.573 45.0904 240.779 45.6151 241.027 45.4675L240.986 45.156C242.451 45.9267 242.988 45.4347 244.103 46.7301C244.949 45.9103 244.165 45.5659 243.484 45.1396C243.38 44.992 243.339 44.8772 243.277 44.7461L241.233 43.5327L240.304 43.2539L240.346 43.2867Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254.093 102.416L254.568 102.449C254.341 102.383 254.073 102.087 254.093 102.416Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.537 56.3053C262.805 56.3053 263.136 56.4037 263.487 56.5185L262.661 56.043C262.661 56.043 262.599 56.2069 262.558 56.2889L262.537 56.3053Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.336 55.2565L259.089 54.0267L258.325 53.584C258.614 54.0595 258.841 54.6006 259.336 55.2565Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.998 69.3402C269.349 71.8818 267.264 68.7827 266.913 69.9633C267.141 70.6684 267.966 70.8816 268.255 71.3079C267.43 69.3238 270.918 71.4883 270.382 69.4714C271.847 69.701 272.054 70.8816 271.703 71.5867C270.34 72.4229 270.629 70.9472 269.246 70.816C269.535 71.6194 269.783 71.4719 270.588 71.7834C270.34 73.0788 272.487 74.3578 270.588 75.1941C270.96 76.1123 271.62 76.0139 272.405 76.5222C273.912 76.5714 273.107 75.1121 274.263 74.7185C274.139 74.8005 273.891 74.9481 273.685 74.9153L273.953 74.1118C273.478 74.8825 272.446 74.0626 272.301 73.6691C272.24 73.374 272.136 72.8001 272.57 72.8492L272.921 73.2756C273.354 72.6853 271.744 72.0458 272.508 71.4063C272.838 71.3571 273.024 71.5866 273.23 71.6194C272.157 70.9799 272.178 70.3241 271.393 69.3402L272.921 69.8649C271.228 69.1271 271.6 67.2742 272.425 65.9788C272.178 66.1264 272.012 66.3887 271.723 66.2411C271.331 65.5032 272.322 64.9129 273.127 65.2409C271.847 64.5522 274.036 62.4533 272.384 61.5023L264.622 57.1406C264.808 57.3046 264.973 57.485 265.055 57.6817C263.755 58.1245 263.92 58.354 262.661 57.6489C263.383 58.354 264.416 58.0425 264.519 59.1247C263.838 58.7148 262.331 58.6492 262.227 59.6822C263.672 62.2238 267.471 63.8307 269.494 66.1591C268.482 66.2739 268.875 68.1596 268.668 69.0779C267.574 68.7663 267.223 68.094 266.975 67.4053C266.934 67.8481 266.934 68.6187 266.913 69.1762L269.04 69.3238L268.998 69.3402Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.325 63.4883C265.325 63.4883 265.2 63.6203 265.138 63.6863C265.221 63.6533 265.283 63.5873 265.325 63.4883Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.955 67.1934C266.955 67.1934 266.893 67.1934 266.852 67.1934L266.935 67.4079C266.935 67.4079 266.935 67.2429 266.955 67.1934Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.265 56.9636C259.976 56.8157 259.894 56.7006 259.584 56.5527C259.687 56.6513 259.77 56.7664 259.853 56.8814C259.997 56.98 260.142 57.0293 260.245 56.9636H260.265Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.021 56.4033L262.434 56.469C262.434 56.469 262.496 56.354 262.516 56.3047C262.289 56.3047 262.103 56.3047 262.021 56.4033Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.514 79.459L260.742 79.69C260.721 79.5415 260.618 79.4755 260.514 79.459Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M267.451 72.2431C267.285 71.3576 265.944 72.1939 265.84 70.9477L265.779 71.3248C265.077 70.4558 265.304 68.8488 265.2 67.783C265.799 67.8814 265.902 67.1107 266.831 67.2091C266.584 66.4876 266.336 65.7661 265.345 65.4218C265.634 64.9627 264.767 64.2904 265.118 63.7165C264.561 63.9788 263.177 62.9458 263.921 64.3396C263.838 64.2248 263.714 64.3068 263.632 64.192C262.888 65.1266 264.251 65.4382 264.292 66.2253C263.755 66.7008 263.363 65.4874 263.157 65.9465C263.714 66.8976 262.641 69.0292 264.726 68.8816C264.911 69.5867 264.457 69.7015 264.086 69.9147C266.357 70.9477 263.404 74.096 266.233 73.9812C266.088 73.5713 266.109 72.9154 265.469 72.3415L267.43 72.2759L267.451 72.2431Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.471 58.4551C260.471 58.4551 260.471 58.5865 260.451 58.6358C260.451 58.5865 260.471 58.5208 260.471 58.4551Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.379 47.0898L270.258 47.4342C270.754 49.533 270.258 50.3037 270.403 52.1402C270.155 52.2878 269.99 52.0582 269.886 51.9598C270.155 53.2552 269.825 55.1901 270.712 56.1084C270.712 56.5183 270.155 57.6169 269.597 57.2234C269.763 57.4201 269.928 57.6497 269.886 57.8793C269.226 57.9613 269.68 57.371 269.123 57.371C269.081 57.5513 268.958 57.6333 269.164 57.6661C268.586 57.371 266.893 58.0432 266.893 56.6003C268.441 56.01 267.1 57.5841 268.834 57.2234C268.834 56.7479 268.173 56.8135 267.946 56.7807C267.946 56.174 268.4 56.174 268.792 56.2068C268.256 55.9936 268.978 55.2065 268.152 54.9114C267.987 53.7308 269.453 54.9442 269.412 54.1735L267.657 53.7635L267.946 52.4682C267.265 50.6317 264.932 52.7961 263.879 50.6809C264.808 50.9432 266.315 50.0578 266.645 49.0739C266.728 49.6642 267.905 50.73 267.409 51.5007C268.751 50.4021 267.616 52.9765 269.164 52.3862C268.4 51.8779 268.276 50.9924 268.648 50.2873L268.813 50.5169C268.978 49.779 267.12 49.2543 267.801 48.2377C267.74 47.7293 268.235 47.8277 268.648 47.9097C268.379 47.4834 268.029 47.1062 268.421 47.1062L268.379 47.0898ZM268.772 48.1885L268.627 48.8608C268.916 48.6968 268.896 48.4508 268.772 48.1885Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.203 26.2168C242.265 26.299 242.306 26.3811 242.368 26.4797C242.327 26.3647 242.265 26.2825 242.203 26.2168Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.178 25.6914C247.22 25.7904 247.282 25.8729 247.344 25.9389L247.178 25.6914Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.812 39.4492L244.08 39.9903C244.039 39.728 243.956 39.564 243.812 39.4492Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.021 27.1025C246.021 27.1025 246.187 27.1685 246.249 27.185C246.187 27.1025 246.083 27.0695 246.021 27.1025Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.521 39.1866L266.955 39.351C266.769 39.2195 266.624 39.1702 266.521 39.1866Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.583 35.1191C266.583 35.1191 266.645 35.1191 266.686 35.1356C266.645 35.1356 266.624 35.1356 266.583 35.1191Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.37 34.0879C242.37 34.0879 242.266 34.0879 242.224 34.1209C242.286 34.2034 242.349 34.1704 242.37 34.0879Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.666 35.1367C266.79 35.1696 266.914 35.2353 267.058 35.3339C266.893 35.2353 266.769 35.1696 266.666 35.1367Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.491 52.6998C258.821 52.667 259.482 51.634 258.615 51.6668L258.367 52.585L258.491 52.6998Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.139 53.3235C258.201 53.4054 258.263 53.5038 258.325 53.5858L258.077 53.4546L257.829 54.1597C257.891 54.2417 257.953 54.3401 257.974 54.4385C257.933 54.3893 257.85 54.3565 257.747 54.3401L257.644 54.5697C258.573 55.1108 259.295 56.4881 259.832 56.8817C260.245 57.4064 260.493 58.0459 260.431 58.4558C260.431 58.0787 260.245 57.5868 259.729 57.7507C259.233 58.5378 257.706 58.9477 259.089 60.2431L259.027 59.4724L261.071 61.1614C260.286 61.8009 260.038 60.3251 259.336 60.0955C260.369 61.4237 257.85 62.6371 259.564 63.211C258.552 63.3258 256.88 63.5226 257.024 64.4244C258.139 63.7521 257.788 64.9327 258.986 64.3752C259.584 64.6704 258.676 65.3755 259.419 65.4083L259.006 65.3427C257.479 66.9168 260.018 67.3432 260.864 67.9662C261.36 69.77 260.74 70.639 261.029 72.1148C260.369 72.1968 258.531 72.6723 258.635 73.2626C259.564 73.5085 260.08 74.8367 261.256 74.9187C261.669 73.8365 260.224 74.0824 259.894 73.4593C261.091 72.8854 261.112 73.361 261.793 72.6067C261.36 73.2134 262.598 75.2303 261.504 75.9025L261.318 75.6894C260.678 76.7388 257.809 77.0668 259.667 78.6901L260.431 79.4772C260.307 79.4444 260.183 79.4444 260.059 79.428C260.018 80.7725 258.676 80.461 259.811 81.8876C259.729 81.7728 259.605 81.8548 259.502 81.74C258.903 82.609 260.307 83.3961 260.616 84.0192C259.667 84.4619 259.646 83.97 258.924 83.7733C258.676 85.2654 260.472 86.774 261.731 87.6266L261.236 88.6105C260.782 88.0693 259.708 87.4299 259.13 87.643C259.378 88.1513 259.811 88.0366 259.687 88.7744C259.047 88.6761 258.449 88.3973 257.644 88.0857C256.735 89.6763 259.873 88.3153 258.057 89.4795C258.077 89.955 259.027 90.1846 259.77 90.201L258.862 91.1192C259.832 91.1684 259.976 92.2343 260.183 92.923C260.596 92.9885 261.153 92.2999 260.761 92.0539C261.525 92.0539 261.938 92.7918 261.958 93.2673C259.956 93.5625 262.557 96.3992 260.142 95.9729C261.009 98.1045 261.525 101.122 262.495 102.499C261.979 103.007 262.061 103.975 261.05 103.45C261.215 105.188 263.383 105.942 263.032 107.713C262.805 107.877 262.929 106.943 262.268 107.041C263.197 108.107 261.649 109.156 262.392 110.862C262.33 110.566 261.896 110.517 261.69 110.484C262.02 110.435 262.454 111.157 262.846 111.583C262.701 111.845 262.557 111.255 262.33 111.419C261.731 114.879 264.786 117.24 265.158 120.602C265.055 119.651 263.692 119.388 263.135 119.421L263.238 120.356C263.94 120.667 264.043 121.372 264.621 121.913C264.374 122.012 264.146 122.323 263.796 122.045C262.701 124.012 266.603 124.734 266.211 127.062L263.176 124.537L262.33 125.308L260.947 124.193C260.307 124.98 262.082 125.472 261.091 125.636C260.782 125.504 260.823 125.127 260.286 125.16C259.976 125.898 260.74 125.882 261.009 126.39C258.779 125.193 258.449 122.471 257.747 121.061C257.561 120.848 258.263 121.208 258.469 121.241C258.325 120.651 258.903 120.241 258.469 119.519C257.54 119.126 257.871 119.929 257.829 120.306C257.066 120.306 257.086 120.126 256.921 119.733C257.912 119.569 256.983 117.437 258.118 116.814C257.54 114.633 255.559 117.371 255.744 115.19L256.818 114.453C255.786 113.272 254.815 111.714 254.898 110.288L254.96 110.583C255.476 110.747 255.744 110.402 255.972 110.239C256.343 109.14 254.836 108.271 255.91 107.549C254.547 106.418 253.412 104.45 252.648 103.089C254.134 102.614 254.114 104.827 255.125 105.336L254.981 104.073C255.084 104.86 255.683 105.123 256.612 105.532C256.756 104.401 255.414 104.122 254.919 103.106C255.332 103.155 255.579 103.007 255.538 102.515L254.527 102.45C254.527 102.45 254.671 102.384 254.733 102.22L253.928 100.384C253.536 100.81 252.669 100.892 252.689 101.368C253.267 101.154 253.412 101.564 253.453 102.04C252.751 101.663 252.937 102.548 252.4 102.581C252.338 101.597 252.07 100.417 251.74 99.7934L252.648 99.5311C252.792 98.5964 252.173 97.6454 252.38 96.9895L252.896 97.1535C253.061 96.022 252.359 94.9562 253.164 93.9232C252.029 92.9885 251.038 91.7915 249.861 91.0373C248.622 90.6601 251.12 88.0366 249.345 87.0035C249.469 86.9215 250.315 87.725 250.79 88.0857C250.914 87.3315 249.366 86.8068 250.625 86.5116C250.336 88.2005 251.616 86.364 252.049 87.1019C251.967 86.3148 251.657 85.5114 251.182 85.1506C251.306 86.4132 249.407 84.7899 250.067 86.0361C248.932 85.1014 248.395 83.7569 248.705 82.5435C249.242 82.5435 249.489 82.3795 249.696 81.9204L248.891 81.5924C248.994 81.0349 249.902 82.6254 250.109 81.494C248.684 80.4118 250.645 78.0014 248.106 77.6079C249.035 76.6896 249.221 79.2312 250.336 77.8538C251.285 78.5753 250.336 79.6903 251.595 79.8871C251.182 79.1492 252.627 79.5591 252.607 79.0836L251.781 78.2802L251.74 78.4605C250.48 77.0996 250.893 74.8531 250.563 73.0494C249.2 71.5737 247.322 70.5898 247.384 68.7533C248.148 69.2616 248.024 67.212 249.427 68.3106C250.026 67.4415 249.221 66.6381 248.684 66.6381C248.54 67.3923 248.519 66.9004 248.292 67.5399C247.611 67.13 247.59 66.1625 248.003 65.7362C247.962 65.9166 248.086 65.851 248.292 65.8838C248.684 64.9819 247.611 65.4739 247.301 64.8344C248.21 64.6048 247.487 63.4078 247.92 62.8011L246.558 61.9812C247.446 62.424 246.826 61.1614 247.631 60.9974C246.992 60.4071 245.877 59.9152 246.083 58.9805C246.558 59.3577 246.703 58.1115 247.59 58.0787C248.375 56.4717 245.113 55.4879 246.31 53.9465C246.517 53.9957 247.115 54.2745 247.322 53.8318C247.074 53.4874 247.157 52.8807 247.033 52.5036C246.971 52.3232 246.868 52.2084 246.661 52.2084C245.774 51.5853 244.886 51.2738 244.122 50.0276C243.11 50.1424 243.544 51.1918 243.874 51.6509L244.886 52.0281C243.379 52.438 245.196 53.1595 244.679 53.4546C242.883 52.7332 243.234 50.5523 242.099 49.2733C240.716 50.0932 240.551 51.8313 240.778 53.3399L241.356 52.6676L241.397 53.4546L242.45 52.6676C242.285 53.4218 242.574 54.0613 242.553 54.7336C242.512 53.9466 243.895 53.6022 243.689 54.0613C242.739 54.9632 244.37 54.9632 244.328 55.6355C244.411 55.2583 244.411 54.7664 244.989 55.078C243.833 56.4389 244.617 56.7669 243.379 58.0131C245.051 57.8163 243.606 59.5216 244.968 59.6692L245.092 59.1117L246.145 60.2759C244.824 61.4073 244.7 59.3413 243.812 61.0302C243.73 62.5715 245.485 62.4895 245.67 63.6865C244.659 63.3094 243.75 62.3748 243.73 61.4073L243.276 62.014C242.677 61.7189 242.739 60.3579 242.76 59.6856C243.936 60.7678 243.09 59.1609 243.978 58.6198C243.007 58.5542 243.193 59.2593 242.388 58.4394C242.429 59.2265 242.512 59.3413 242.202 60.3579C242.553 58.1607 238.796 58.4722 239.539 56.5537C239.993 57.4228 240.922 56.2094 241.376 56.0946C241.253 55.6847 240.984 54.8484 240.736 54.5041L239.353 54.8484C238.713 53.7498 241.645 53.3071 240.179 52.0445C239.333 51.8969 239.931 53.1759 239.766 52.9463C238.837 51.2082 241.046 50.5359 242.058 48.9618C241.645 48.8798 240.757 48.9126 240.014 48.3879C240.86 48.5518 241.273 48.1419 241.892 48.7322C242.223 48.2075 241.603 47.6008 241.273 47.1417C240.798 48.2403 240.076 46.7153 239.56 46.5186C239.684 45.9611 240.406 46.6825 240.633 47.0269C240.84 46.5678 242.078 46.0266 240.819 45.7807C241.707 45.7479 243.152 47.0105 243.4 47.8304L243.523 47.2728C243.978 47.65 243.854 47.732 243.73 48.2895C244.411 47.732 245.154 47.7812 245.774 47.8959C245.65 47.9615 245.567 47.8631 245.443 47.9287C245.216 48.3879 245.485 48.7158 245.939 48.6174C247.136 48.9946 246.661 47.9779 247.239 47.6664L246.992 46.9941L243.172 44.7149C242.718 43.731 243.606 43.2555 244.184 42.5176L243.172 42.3209C243.255 41.4518 243.565 40.6319 244.865 41.173C244.535 41.2058 244.617 41.3206 244.556 41.5174C244.7 41.5338 244.783 41.583 244.865 41.6322L245.051 41.665C244.7 40.7467 244.494 40.1564 244.452 40.1072C245.939 41.665 246.29 40.1728 248.106 40.4188L247.487 38.8446C246.93 39.8121 246.599 38.861 246.352 38.5331C247.363 38.4347 246.31 37.2541 246.455 36.6966L246.661 36.7294C247.012 36.2047 246.909 35.3028 246.641 34.6633C246.31 34.6961 244.659 33.8762 243.647 33.4827C243.276 34.5977 242.863 33.9418 242.243 34.0238C242.305 33.909 242.305 33.6959 242.182 33.6795C241.892 33.5155 241.789 33.8926 241.459 33.9254C241.934 35.106 242.058 36.3194 243.482 36.795C244.122 36.4342 242.863 36.1883 243.296 35.7783C244.246 36.3522 244.06 37.1065 244.039 38.0904L243.193 38.4183L243.668 39.4021C243.214 38.9922 242.326 39.2546 242.14 38.2215C241.335 38.3527 242.347 39.2382 242.078 39.8777L243.214 40.1892C242.594 40.0744 242.491 41.419 241.624 40.468L240.675 38.9102L239.911 39.3529L239.663 38.0248L240.241 38.3363C239.436 36.2047 242.45 37.6968 241.129 35.5652C239.766 34.8929 239.622 34.1714 239.952 32.8596C240.262 33.8107 240.902 32.958 241.707 33.3187C242.285 32.3513 241.149 32.0233 240.633 31.515C241.356 31.2691 241.934 31.0887 241.831 31.9578C243.338 32.0725 241.562 30.8263 243.11 30.7444C243.069 27.8912 238.094 28.4323 240.055 25.0873L240.675 25.2185C239.931 23.0868 240.695 21.857 240.241 19.8893L241.851 18.348C242.099 18.6923 243.255 19.6434 244.039 19.217C242.429 19.9549 242.966 20.7584 242.099 21.5619C242.512 21.6438 242.821 21.3159 243.09 21.1847C243.069 21.6766 242.347 21.9062 242.615 22.5621C242.945 22.5293 243.358 21.8242 243.544 22.3653L242.532 23.2344C242.987 24.415 244.886 23.8247 244.411 25.2021C243.523 24.9397 242.264 24.415 242.058 23.8739C241.851 24.5134 241.542 23.0212 241.005 23.5951C242.305 24.5134 241.253 24.9561 242.058 26.1695C241.872 26.0219 241.624 25.9891 241.542 25.694L240.984 27.4485C241.748 27.0222 241.831 28.9079 242.966 28.7439C243.441 26.8746 242.739 27.4157 243.4 25.284C243.647 25.8907 244.803 26.6778 245.877 27.0386C245.835 27.055 245.794 27.0878 245.774 27.1533C246.888 27.4813 247.198 27.1533 249.159 27.1533C247.755 26.1859 248.911 25.53 248.127 24.3822C247.053 24.1526 246.744 25.0381 247.012 25.612L246.31 24.5954L246.806 24.7921L247.219 22.2342C247.26 22.7261 247.879 22.89 248.354 23.1524C248.395 22.8245 248.684 22.4965 249.015 22.1522C247.982 22.2178 247.26 22.1522 247.281 21.8406C247.549 20.2009 248.499 19.299 249.675 18.6923C249.655 18.6267 249.634 18.5612 249.613 18.4956C248.56 18.7579 247.735 17.2986 246.661 16.7738C247.755 16.8066 247.322 15.9376 247.9 15.4621C246.661 15.1833 244.927 15.4949 243.895 16.0688C245.01 17.2002 245.03 16.7083 246.641 17.2658L247.693 19.0695L246.702 18.6595C246.248 19.545 247.549 20.414 246.248 20.3321C245.402 19.8565 245.939 19.0859 245.072 18.5939L244.597 19.1843C243.338 18.1184 245.835 18.6595 244.968 17.3969C243.854 17.8397 244.886 17.2822 244.163 16.7247C243.379 17.151 244.432 18.9547 242.574 18.5448C241.769 17.8725 244.803 16.3639 242.966 15.4621L243.172 15.5113C243.441 14.2323 242.367 13.7567 241.727 13.2648C242.347 12.7237 241.521 11.953 241.48 11.3627H242.016L241.81 10.5429C242.801 10.9528 241.748 11.5267 241.872 12.2482L242.883 12.1826C241.665 12.9861 243.461 13.5764 244.308 14.2323C243.461 13.2812 244.638 11.6087 242.677 11.3463L243.73 10.7888L243.379 10.5101C244.163 10.1001 245.34 10.5593 245.546 11.3955C245.278 11.5267 245.154 11.6087 244.948 11.5595C245.381 11.953 246.166 12.3302 245.897 13.2484L245.381 12.7401C245.257 13.9043 245.65 14.9701 246.641 15.3801C247.074 13.7076 247.239 12.0678 247.239 10.4773C244.968 9.96896 243.709 9.39506 241.583 9.1163C241.232 8.05048 240.984 6.59112 241.789 5.68927L242.202 5.78764C242.429 5.34492 242.326 4.91859 242.099 4.57425C242.677 4.11512 243.214 4.91859 243.523 4.60704L242.863 3.06569C243.812 3.18047 243.792 4.45946 243.833 5.06617C243.75 4.95138 243.606 4.72182 243.482 4.78741C243.069 5.49249 244.659 6.83708 243.255 7.11583C243.482 7.46017 242.243 6.39435 242.14 7.55856C241.583 8.32923 242.821 8.60799 243.255 8.70637C243.792 8.72277 244.039 7.49297 244.679 7.9357C244.638 7.32899 243.936 7.06663 244.494 6.31236C244.535 6.91906 245.629 7.75532 244.762 8.05048C245.732 9.26388 248.313 9.1327 248.457 8.59158C247.652 8.70636 247.549 6.41075 246.434 7.9357C245.423 7.21421 245.464 5.93522 244.845 5.00057L245.051 5.04976L244.824 3.90196C245.113 4.06593 245.34 4.42667 245.877 4.44307L244.473 2.83613C245.423 3.75438 245.175 2.31141 245.629 1.91788C244.803 1.72111 244.225 1.09802 243.709 1.67192C243.069 2.31142 244.143 2.06546 244.184 2.67216L242.904 1.7867L243.028 1.72111L241.975 1.18C242.12 0.0157953 244.452 1.75391 243.482 0.228957L241.996 0.376533C242.305 -1.34518 244.06 -3.50963 243.441 -4.75583C244.267 -4.39509 245.588 -4.19832 246.413 -4.64105C246.124 -4.13273 246.124 -3.0669 246.228 -2.31262C245.959 -2.18145 244.535 -3.31286 244.906 -4.11633C242.491 -3.78839 246.248 -2.01748 243.812 -1.98468C242.863 0.0813777 246.083 -0.361345 244.556 1.37677C245.65 1.42596 245.072 1.90148 246.021 2.01626C247.817 1.54074 246.083 -0.34495 246.764 -1.47636C246.847 -1.36158 246.992 -1.13202 247.198 -1.08283C247.549 -1.88629 247.342 -2.24704 246.95 -2.82094L246.826 -2.75535C245.815 -3.78838 247.673 -3.34566 248.168 -3.91957C248.024 -4.14913 248.375 -4.96899 247.57 -4.85421L248.664 -5.88724H247.446C247.404 -6.47754 248.209 -6.59232 247.508 -7.14983L246.413 -7.21542L245.959 -5.73966C245.65 -6.51034 244.927 -5.98562 244.741 -6.82189C245.877 -5.85444 245.381 -7.46138 246.393 -7.51058L245.815 -8.15007L246.104 -7.9861C246.682 -8.44522 245.732 -8.5764 245.897 -9.13391C245.257 -8.49441 244.473 -8.08448 245.196 -7.21542C244.617 -7.85492 243.998 -9.10111 243.978 -9.39626C243.565 -10.0522 244.432 -10.4785 244.576 -11.0852C244.927 -9.90458 247.9 -11.3639 246.971 -9.06832C246.764 -9.11751 246.826 -9.29788 246.971 -9.37987C245.546 -9.11751 246.971 -7.9861 247.487 -7.46139C248.292 -7.55977 248.457 -7.03505 248.953 -7.90411C248.437 -7.62535 247.198 -8.72397 247.92 -9.54384L249.613 -9.33068L249.902 -10.5605L249.985 -10.4457C251.12 -10.872 249.861 -11.7739 250.563 -12.5937C249.985 -13.2332 250.645 -15.5617 248.788 -14.627C249.902 -15.3485 248.581 -16.07 248.416 -16.9062L247.652 -15.906C246.517 -17.185 247.281 -16.7915 245.402 -17.8737C245.877 -17.9557 246.269 -18.1524 246.744 -17.9393C246.93 -19.579 247.611 -21.9074 246.29 -22.9568C246.455 -24.1211 248.478 -24.1866 247.838 -25.8592C247.631 -26.2199 246.228 -25.6788 246.806 -26.7282C246.93 -26.7938 247.982 -25.6296 247.941 -26.8266C246.703 -27.7613 248.829 -28.7943 247.797 -29.9749C248.313 -30.5324 248.23 -31.5654 249.242 -31.2867C248.932 -30.3684 249.035 -29.0402 249.51 -28.8107C248.891 -28.9747 248.849 -28.1876 248.416 -28.8927C247.508 -27.5317 248.994 -27.9416 248.333 -26.7118C248.746 -26.597 249.531 -27.3021 249.18 -27.5809C250.604 -27.5153 249.655 -25.0557 251.451 -26.0887C251.678 -27.4169 248.767 -27.9908 250.356 -29.073C251.182 -28.5647 250.398 -27.8596 251.822 -27.1873L252.483 -28.1056L251.512 -28.8599L251.719 -28.8107C253.164 -30.434 250.377 -30.4504 249.82 -32.0082C248.746 -31.1883 247.384 -32.3525 246.702 -31.7294C246.62 -32.7624 246.888 -33.4839 248.313 -33.4183C249.283 -31.4506 249.799 -33.2216 251.038 -31.3851C251.574 -31.6474 253.081 -30.8439 253.329 -31.877C252.441 -33.1068 252.111 -31.5982 251.76 -32.7952C251.884 -32.8608 252.029 -32.9264 252.235 -32.8608C251.554 -33.4347 252.565 -33.4675 251.822 -34.1726L252.091 -34.0086C253.04 -34.7629 251.203 -34.9433 252.214 -35.5828C251.141 -35.3696 251.389 -36.1075 250.79 -36.5666C250.315 -35.8943 248.767 -35.5992 248.726 -34.2054C249.551 -33.9922 250.006 -34.0578 250.356 -33.4675V-34.3694C250.46 -34.1726 250.666 -34.0086 250.811 -33.8119L250.295 -32.9756C249.799 -34.107 248.87 -33.6643 248.044 -34.1726C248.519 -35.1564 247.9 -35.0089 248.23 -35.632C249.448 -35.5008 250.501 -37.4357 251.409 -38.5343C251.347 -38.3539 251.347 -38.1244 251.306 -38.0096C251.987 -37.1241 252.38 -38.5179 252.73 -38.5343L252.173 -39.1902C252.235 -39.0754 252.524 -38.895 252.71 -39.141C252.565 -39.9773 251.347 -40.01 251.203 -40.8627C251.884 -40.8791 252.834 -40.1084 253.247 -40.6003C253.845 -40.7315 255.476 -41.1907 254.981 -42.3385C254.733 -42.4368 254.609 -42.732 254.547 -43.0599C254.568 -43.0108 254.588 -42.9452 254.65 -42.9288L255.476 -43.6011C256.55 -42.896 254.795 -42.3877 255.889 -41.6826L256.983 -41.5514C256.942 -41.0595 257.355 -40.3872 257.871 -40.0428C258.139 -40.7643 257.871 -40.9447 257.706 -41.781C258.408 -41.8465 258.862 -41.2398 258.924 -41.1415L258.325 -41.3054C257.313 -40.3872 259.233 -39.7641 258.903 -38.5671C258.841 -38.3867 258.779 -38.5015 258.573 -38.5671C259.522 -37.5177 257.974 -36.6322 259.275 -35.5828L258.738 -35.9271C259.13 -35.2384 260.08 -33.8938 260.988 -32.5657L261.422 -32.5329C261.69 -32.6641 261.628 -32.1885 261.422 -31.9426C261.876 -31.2703 262.289 -30.6308 262.619 -30.1061C262.887 -30.2536 263.135 -30.4504 263.218 -30.68C262.743 -30.9095 263.259 -32.0574 262.123 -31.959C262.867 -32.4509 261.958 -33.3855 262.433 -33.7627C261.628 -33.0904 261.422 -34.3366 260.802 -34.5006C261.545 -34.6973 260.864 -35.5828 261.814 -35.4188C262.082 -35.55 261.132 -35.1073 261.69 -34.7629C262.516 -33.943 262.619 -36.1075 263.383 -35.1073C262.825 -36.3534 263.279 -37.9112 262.516 -39.2066L262.061 -38.5343C262.247 -39.0754 262.165 -40.3872 262.639 -40.4528C262.701 -40.0428 262.64 -39.5509 262.784 -39.0262C263.857 -38.9278 262.908 -40.2888 263.589 -40.3052L261.938 -41.9449L261.814 -41.289C261.194 -41.7482 262.144 -43.0927 262.412 -44.1094C263.837 -43.4207 262.247 -42.5516 262.743 -41.4202C263.218 -40.6003 264.229 -41.8138 264.497 -41.0431C264.869 -41.2071 264.869 -41.699 264.518 -41.9613L264.828 -42.2401C266.108 -41.4858 265.653 -40.01 266.727 -38.9442C266.582 -39.0426 266.438 -39.1246 266.293 -39.1574C265.695 -38.4359 265.633 -37.6488 265.922 -36.8946C266.397 -37.2553 266.108 -37.4357 265.984 -37.6652C266.314 -37.6652 266.397 -36.9601 266.727 -36.665C267.181 -37.3373 267.532 -36.747 267.8 -37.1733C268.069 -36.6978 267.945 -36.3534 267.759 -35.8123C267.222 -35.5664 267.078 -36.0911 266.417 -36.0747C266.768 -35.4844 265.137 -35.3204 265.819 -34.4514C266.211 -35.5336 267.243 -34.0742 267.656 -33.6643L267.718 -33.8447C268.461 -33.4511 268.461 -33.156 267.718 -32.9592C267.449 -33.4347 267.718 -33.8447 266.892 -33.7627C266.892 -33.4675 266.892 -33.1724 267.099 -32.8116L266.562 -33.156V-31.6638C267.264 -31.3851 268.213 -30.9423 269.225 -30.68C268.544 -30.3684 269.039 -29.8437 269.266 -29.483L268.977 -29.6633C268.317 -29.0402 268.709 -27.5645 269.307 -27.4169C268.709 -26.9742 265.612 -30.9259 265.922 -27.5973C265.819 -26.3511 267.842 -26.7118 268.482 -25.9575C268.482 -25.9575 268.275 -26.0067 268.151 -25.9575C267.966 -25.4164 268.709 -25.3181 268.998 -24.8589C269.328 -25.1705 269.369 -25.646 269.101 -25.81C269.927 -25.5968 268.936 -24.6786 269.555 -24.2194C268.317 -24.8261 268.977 -23.1864 268.358 -23.6455C267.449 -22.5961 268.358 -21.3827 269.266 -20.776C267.594 -20.1201 269.369 -19.4806 268.544 -18.3164C268.606 -18.4968 268.378 -18.8411 268.585 -19.0871C267.615 -19.825 267.966 -17.8737 267.099 -18.9723C267.243 -18.7427 267.635 -18.9231 267.491 -19.1691C267.408 -19.579 266.995 -19.9725 266.521 -19.9069L265.55 -18.9723L265.323 -19.333L263.981 -17.9065C264.188 -17.8573 264.456 -17.9885 264.58 -18.054C263.919 -16.3487 264.477 -14.3483 264.208 -12.8561C267.078 -12.4462 265.179 -9.08472 266.892 -7.80573C266.087 -8.16647 264.642 -8.39603 264.023 -8.21566C263.919 -8.49442 262.784 -9.10112 263.073 -9.70782C263.548 -9.7898 264.126 -10.5277 264.621 -10.0194C264.415 -11.7411 263.341 -9.83899 262.309 -10.3801C262.454 -8.47802 264.085 -7.29741 264.704 -6.08401H264.353L264.952 -5.14937C265.179 -5.87085 266.81 -5.78886 266.19 -4.85421L266.108 -4.96899C265.385 -4.44428 266.149 -3.29646 266.004 -2.4602L266.913 -1.8535C266.768 -1.01724 264.993 -1.03363 263.94 -0.787674C263.754 0.540508 265.158 1.34398 265.963 2.31142C265.158 2.72135 264.931 4.70542 264.023 3.6232C264.663 4.8366 268.771 4.68902 266.438 6.6895L265.715 6.14839C265.798 8.11607 267.181 10.9364 266.376 11.8219C263.734 11.0512 263.589 14.2159 260.967 14.5274C261.566 14.4454 261.752 15.1833 262.061 15.2981C261.752 15.4621 261.442 15.7244 261.979 16.0196C262.516 15.2653 264.683 16.5935 263.651 15.1177C265.426 15.8884 266.81 16.8558 266.686 18.4792L265.592 18.4464L265.943 17.1674C265.137 17.2822 265.199 16.6263 264.848 16.3475C264.188 18.7251 262.309 16.0032 262.412 18.4464C263.114 18.6923 262.825 18.5284 263.094 19.1679C263.052 18.8727 262.309 18.8071 262.289 19.2826L263.156 19.7582C261.318 20.5944 262 18.3316 260.72 19.0531C259.873 18.102 259.46 16.4459 258.057 16.741C257.52 18.2824 260.637 18.1676 259.976 19.7746L259.378 19.9385C259.77 20.5124 260.72 20.6108 261.298 20.9224C260.967 20.9552 260.699 21.0863 260.596 21.4471C261.979 22.4145 262.247 23.054 263.754 23.9559C262.639 21.5947 264.848 21.9554 263.878 19.5286C264.332 19.9057 264.621 21.6274 266.128 21.7422L265.034 21.7094C265.592 22.4965 266.128 23.2836 265.757 24.2838L265.158 23.6771C265.881 24.9889 263.465 25.8416 265.282 26.891C265.385 26.5302 265.344 26.2351 265.179 26.0055C265.653 26.6778 265.55 27.5305 265.364 28.252L267.16 29.7769C266.624 29.7769 266.582 30.728 265.715 30.2524C264.89 31.3511 266.5 31.8594 266.768 32.4825C265.612 33.5975 266.252 31.515 264.745 31.4002C264.25 32.9416 264.704 34.5813 265.674 35.434C265.901 35.1224 266.087 34.9585 266.355 34.9749C266.004 35.0241 266.108 35.6472 266.087 35.9915L266.789 36.2211C266.314 36.795 265.901 36.713 265.364 36.2211C265.22 36.7786 266.603 37.4181 265.592 37.992C264.725 37.0573 265.468 35.8603 264.931 35.3684C265.612 37.3361 262.784 37.3525 263.734 39.8449C263.403 39.8777 262.722 39.4677 262.722 39.9432C263.011 41.0583 264.188 40.222 264.972 40.5663C264.518 39.7137 264.952 39.3037 265.819 38.8118L266.397 39.0414C266.108 39.0742 266.087 39.6153 265.798 39.7793L266.975 39.9105C265.674 39.8613 264.704 40.7303 265.199 41.4026C266.128 40.7139 266.087 40.8943 267.553 40.6975C268.956 41.6322 266.19 41.7797 267.697 42.8292C267.284 42.7472 266.954 41.8289 266.644 42.6324C266.603 43.3047 267.615 43.1899 267.945 43.6326C266.851 43.1407 266.066 43.2883 264.766 42.7472C264.601 41.5666 264.766 42.2717 264.291 41.1239L263.403 42.1077C263.218 41.1075 262.165 41.3862 261.752 41.3042C260.678 43.0259 263.403 42.5832 263.156 43.6818C263.899 44.2065 263.3 42.6488 264.085 43.4687C263.94 44.5017 264.786 43.6982 265.282 44.846L264.786 44.6657C264.146 45.0264 264.952 45.3708 265.055 45.7807C265.385 46.2234 268.791 45.2232 268.895 47.0597C268.585 46.9777 268.399 46.9449 268.275 46.9449L259.192 45.2724C259.233 47.1581 259.047 49.3225 258.511 51.5198C256.756 52.0609 257.004 49.9948 256.199 50.1424L256.529 49.1421C257.272 49.1913 256.839 51.2246 258.118 50.3063C257.52 48.5518 258.366 47.7484 256.797 46.0922C255.022 46.6334 257.148 48.2895 255.806 49.3881C255.91 48.929 255.703 48.5518 255.435 48.1747C255.228 49.1913 255.022 50.29 254.795 51.4706L255.228 51.7165C255.394 50.9294 255.538 50.3883 255.6 50.3227C255.476 51.3558 256.488 52.2248 257.788 52.2576L257.829 52.0773L258.242 52.438L258.015 53.1759L258.139 53.3235ZM263.3 120.339C263.176 120.29 263.011 120.257 262.825 120.224C263.011 120.241 263.135 120.192 263.3 120.339ZM253.432 33.04C253.247 34.4337 252.875 35.8275 252.73 37.1557C255.29 34.7289 257.231 33.0564 257.19 37.0573L257.375 37.3197C257.685 36.795 257.726 35.8931 257.54 35.0404C256.632 34.3518 253.288 32.1381 252.999 32.1709C252.276 32.4169 253.061 32.7776 252.854 33.2203L253.453 33.04H253.432ZM257.726 32.0561C258.015 31.2691 257.437 31.4494 256.942 31.3347L257.128 32.1545C257.251 32.0561 257.437 32.0069 257.726 32.0561ZM256.426 31.3675C256.426 31.4494 256.384 31.5314 256.322 31.5642L256.426 31.3675ZM255.93 46.6333C255.93 46.6333 255.93 46.5842 255.889 46.5514C255.848 46.7317 255.806 46.9285 255.786 47.1253C255.868 47.0433 255.93 46.9121 255.93 46.6333ZM257.169 45.0264L256.219 44.846C256.178 45.0264 256.157 45.1904 256.116 45.3708C256.55 45.3052 256.901 45.2396 257.148 45.01L257.169 45.0264ZM260.162 39.8777C259.027 39.5661 258.965 38.4839 257.664 38.4347C257.334 38.3691 257.21 38.5987 257.107 38.8446C257.086 39.1234 257.045 39.4349 257.004 39.7629C257.19 39.7629 257.375 39.8285 257.54 39.9432C257.706 39.6317 258.015 39.4021 258.82 39.5333C257.086 40.3696 260.08 40.2548 259.646 41.1403C260.575 41.419 260.534 40.1564 260.162 39.8941V39.8777ZM259.316 -27.958C259.44 -27.9744 259.729 -28.04 260.1 -28.1548L260.678 -27.4989C260.307 -26.4167 258.366 -25.6132 259.894 -24.531C259.46 -24.0883 258.573 -23.8751 257.85 -23.6783C257.912 -23.9079 258.015 -24.1211 258.139 -24.285C256.033 -27.2037 260.74 -25.6132 259.316 -27.958ZM256.054 -15.3157C255.972 -15.4305 255.765 -15.4797 255.765 -15.4797C257.974 -12.8889 258.531 -10.8392 258.346 -9.49465C259.316 -9.72421 260.121 -10.8884 260.554 -11.4295L261.587 -10.8884L260.72 -10.6097L261.649 -9.69142C262.392 -9.90458 262.289 -10.6097 262.867 -11.0688C262.66 -11.118 261.504 -12.6757 260.885 -13.1185L260.059 -11.9379C260.389 -12.2494 260.245 -13.8563 260.018 -14.5122C259.481 -14.545 258.573 -13.4956 259.729 -13.2988C258.924 -13.2004 259.006 -14.463 258.077 -13.7088C257.293 -14.6926 258.098 -16.1684 258.552 -16.857L259.894 -16.9226C260.472 -17.6605 258.304 -17.5129 259.151 -18.382C259.336 -17.2506 260.637 -18.4968 260.678 -17.6113C261.215 -17.8737 262.103 -17.5457 262.061 -18.4476C260.327 -19.2674 263.238 -19.333 261.731 -20.1037C262.33 -20.5464 262.763 -19.5462 263.073 -20.4644C262.227 -21.5631 261.545 -21.5303 260.265 -21.6615C259.811 -20.694 261.855 -20.4645 261.483 -19.6774L259.398 -21.3991C259.068 -21.1203 259.006 -20.9072 259.089 -20.7104C258.986 -21.0384 258.676 -21.3335 258.242 -21.5959C257.995 -21.7434 257.788 -21.8746 257.623 -22.0058C257.54 -21.0875 257.437 -20.2841 256.88 -20.1693L256.261 -20.3333C255.662 -20.0381 256.075 -19.4806 256.508 -19.2183C256.508 -18.3984 257.334 -17.5457 256.508 -17.3982L255.951 -17.7425C256.075 -16.7259 256.137 -16.6111 256.054 -15.3485V-15.3157ZM253.143 17.7085C255.455 17.1182 257.499 16.4787 257.169 13.6256L257.313 13.8551C258.8 12.445 255.497 11.0184 257.169 9.31307C258.015 10.1821 257.933 10.1329 259.894 11.1004L259.275 10.1821C260.513 10.4609 259.894 9.54263 259.976 8.87034L261.442 9.49344C261.009 9.88698 260.802 10.92 261.153 10.8872C260.988 10.6576 259.233 12.2154 259.625 13.0844C260.637 13.0189 260.286 11.1824 261.917 12.0186C261.256 11.2807 262.268 11.2152 261.917 10.4609C262.578 11.1988 263.3 10.6576 264.002 11.2152L263.692 9.98536C264.023 9.96896 264.374 11.7891 265.653 10.8052C265.137 10.2969 265.86 9.00152 264.766 8.95233H265.096C265.364 8.01768 263.568 8.4932 264.229 7.37819C263.672 7.34539 263.3 7.55856 263.403 7.96849C263.63 8.31283 264.374 8.37842 264.518 9.0999C263.651 9.39505 264.663 8.24725 263.197 8.70637C262.474 8.93593 263.754 10.5757 262.144 10.0345L262.412 9.1163C261.318 9.06711 261.401 8.41122 260.534 8.41122C260.142 7.83731 261.401 7.329 260.472 6.73869C259.77 6.47634 258.449 6.86987 259.047 5.93522C260.699 5.23014 260.431 3.0329 260.265 2.19664L259.605 1.45876C258.924 1.50795 259.626 2.83613 258.779 2.34421L258.573 1.21279L258.986 1.31118C259.089 0.934041 258.676 0.556903 258.449 0.196162C259.213 0.5733 258.862 1.36037 259.997 1.24559C260.245 0.720875 260.678 0.655286 260.472 0.163367C260.554 0.278148 260.658 0.360139 260.823 0.360139C261.36 -0.689289 259.605 -0.705692 259.254 -0.984447C257.829 -2.09946 257.829 0.0485884 256.673 -0.115385L256.199 -3.26367C256.55 -2.98492 256.901 -2.70616 257.375 -2.78815C257.933 -3.54242 258.263 -2.78815 258.263 -3.85398C256.715 -3.82118 257.355 -5.24774 256.508 -6.03482C257.169 -6.36276 257.293 -6.44475 257.272 -5.65768C258.284 -5.70687 257.953 -6.7727 258.057 -7.13344C257.809 -7.363 257.685 -7.72374 257.479 -7.9697C256.962 -7.67455 256.343 -7.83852 255.951 -8.52721L255.744 -8.5764C255.414 -7.47778 254.217 -5.78886 255.228 -5.06737L254.733 -5.28054C253.804 -4.01795 256.405 -2.42741 254.465 -1.90269C253.721 -1.98468 254.279 -1.65673 253.185 -1.70593L253.99 -0.738484L253.515 -0.951651L253.68 0.671685L253.474 0.622496C254.423 1.40957 255.187 2.03266 255.827 2.52458C256.302 2.52458 256.446 2.49179 256.777 2.75414C257.004 3.0165 257.024 3.21327 256.962 3.37724C256.818 3.77078 256.116 4.01673 255.827 4.49226L255.765 3.0001C254.96 2.85252 254.114 2.96731 253.536 3.68879C253.515 3.39364 252.896 3.24606 252.792 3.60681C252.999 3.656 253.267 4.60704 253.928 4.26269C254.176 5.68926 251.987 7.95209 253.432 10.1493C252.565 8.57519 252.318 11.3791 252.029 9.64102C250.707 10.8216 253.267 10.7068 253.019 11.9202C252.545 12.0186 253.102 11.248 252.194 10.9528C251.616 12.9861 254.155 14.429 253.742 16.3967L252.73 16.4623C252.854 16.8394 252.978 17.2494 253.123 17.6921L253.143 17.7085ZM254.341 21.6274C254.444 22.0046 254.547 22.3981 254.671 22.7917L254.712 22.6769L255.497 23.8247C255.91 23.1196 257.024 22.6769 257.52 23.6607C257.107 23.5787 256.591 23.8575 256.343 23.5131C255.724 24.169 255.125 25.5956 256.653 25.2349C255.228 23.9723 258.593 24.9561 257.54 23.9559C258.531 24.497 258.077 25.0217 258.511 25.5136C257.685 24.9889 256.632 25.6284 256.24 26.3991C256.488 26.7434 256.24 27.6617 256.653 28.2356C257.582 28.0388 258.118 28.5307 258.346 27.6125C258.593 27.9568 258.779 28.4815 258.304 29.0554C258.139 28.8259 258.036 28.4159 257.685 28.4487C256.839 28.8259 256.859 29.2686 256.508 29.5146C256.55 29.7113 256.612 29.9081 256.653 30.1049C256.735 30.0557 256.839 30.0065 256.962 29.9573L257.788 30.6132C257.355 29.7441 258.222 30.2196 258.758 30.2196C257.664 30.2032 258.614 30.7772 258.655 31.0723L259.811 30.4328C260.389 30.7444 258.986 31.5314 260.121 31.3675C260.575 30.0065 260.389 29.4818 260.038 28.252L259.151 28.7439C258.511 27.3501 260.678 27.8912 260.637 26.3335C259.811 25.6776 260.616 23.9887 258.986 23.9559C259.481 24.1526 260.451 23.0048 259.729 22.4637C258.242 21.857 258.077 20.0697 257.375 20.6108C257.355 21.0863 258.16 21.7586 257.19 22.1358L256.901 21.2011L256.075 21.8078C256.364 21.4963 255.579 21.5127 254.382 21.6438L254.341 21.6274Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.612 106.086L248.871 111.267C248.52 109.775 248.272 108.398 247.612 106.086Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.781 25.7571C258.677 25.642 258.595 25.5763 258.471 25.4941C258.554 25.5763 258.636 25.6585 258.781 25.7571Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.839 32.1704L240.303 31.6621L240.137 32.2852C240.344 32.1048 241.335 32.4328 240.819 32.154L240.839 32.1704Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.801 35.7113L242.554 34.875L242.657 35.7932L242.801 35.7113Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.552 39.5977L240.304 39.7452L240.8 40.4339L241.048 40.2863L240.552 39.5977Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.974 34.4458C267.119 33.8883 265.901 33.462 265.653 33.6096L265.715 34.6754C266.768 34.3966 265.674 34.3802 265.942 33.7571L266.974 34.4458Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M243.461 68.3253C242.739 68.1121 243.09 66.8987 243.75 66.8167C244.039 66.9643 244.349 67.6038 244.762 67.1775L242.986 66.292C243.998 64.9966 245.319 67.1775 245.959 67.7678C246.124 66.4888 244.968 66.1445 244.906 64.7835C244.762 65.1934 244.349 65.4558 243.998 65.6853C242.78 65.7673 243.255 64.4883 243.11 63.5865C242.615 64.1768 242.14 63.8652 241.645 63.4553C241.603 63.3733 241.521 63.3405 241.459 63.2913L241.273 63.1602V63.2749C241.149 63.2749 240.984 63.3077 240.757 63.3897C241.149 64.144 240.158 64.7507 240.158 65.2426C242.119 64.7015 240.695 66.8987 241.335 67.489L241.562 68.1941V68.4565C241.356 68.5221 241.087 68.4565 240.674 68.0629C241.087 68.3909 241.005 69.5223 241.624 69.3911L241.789 71.9655C241.706 72.0475 241.624 72.1295 241.479 72.1951C241.603 72.2771 241.706 72.2935 241.81 72.2771L242.697 83.4928C242.801 82.9353 243.234 82.427 243.399 81.8531C244.762 82.6402 243.564 80.9021 244.844 81.0988C245.319 81.4596 245.216 82.0335 244.927 82.3778C245.567 82.4762 246.083 81.9679 246.847 81.9843C247.549 80.5413 244.514 80.4593 244.886 79.0492C245.649 79.0656 246.331 79.4755 246.166 78.5736L246.351 78.8032C245.422 77.393 247.982 77.6062 245.856 76.7863H246.95C246.083 76.1468 246 74.8678 245.794 74.1628L246 74.1955C244.617 72.2279 245.649 73.0805 244.989 70.8341L246.31 71.8343C246.785 71.0309 245.402 70.9161 245.505 70.3422C245.711 70.375 246.516 70.211 246.723 70.7357L244.659 68.0465C243.812 67.4235 243.874 68.2105 243.399 68.3253H243.461Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M244.908 64.7837C244.948 64.6361 244.969 64.4722 244.908 64.2754C244.887 64.4722 244.887 64.6197 244.908 64.7837Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.802 84.2793L242.719 83.4922C242.678 83.7381 242.678 84.0005 242.802 84.2793Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M242.348 60.9138C241.811 61.4058 241.543 60.5695 241.13 60.5039L241.233 62.2092C241.646 62.1928 242.121 62.3404 242.513 62.3076L242.348 60.9138Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240.448 62.7329C240.737 62.7821 241.005 62.9625 241.273 63.1593L241.211 62.2246C240.902 62.2246 240.613 62.3558 240.448 62.7493V62.7329Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M262.804 61.9141L262.866 62.2092L263.196 62.6519L262.804 61.9141Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.195 66.6337C261.814 66.2566 261.298 65.6007 261.133 65.3711C261.195 66.1418 260.926 65.8138 261.195 66.6337Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M267.946 65.4551L268.359 66.1766L268.483 66.111L267.946 65.4551Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.549 89.8711L247.652 90.2326C247.652 90.0683 247.611 89.9533 247.549 89.8711Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.98 83.4093C244.907 85.2786 244.865 82.2615 243.358 82.9174L243.957 83.8849L243.524 83.8193L243.751 85.0163C244.453 84.7375 244.473 84.5407 245.237 84.5571C245.072 86.1805 244.391 85.1147 243.544 86.3445L243.833 88.1318L243.585 88.0006C243.606 88.1482 243.709 88.2138 243.833 88.2629L244.803 94.2972C245.505 95.363 246.104 93.6085 247.281 94.3627C247.157 93.0838 247.817 91.1489 246.31 91.1161C246.517 91.1489 246.95 91.2145 247.095 90.9357L245.794 90.2634L245.464 90.9849C244.164 90.3126 244.246 87.8858 244.969 87.4103C245.505 88.7549 246.93 87.9842 246.269 89.9355C246.641 89.8371 247.281 89.4436 247.528 89.8699C246.909 87.6726 247.425 85.6394 245.96 83.4093H245.98Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.747 105.66H248.601C248.601 105.66 248.727 105.693 248.747 105.66Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M248.849 104.908L247.281 103.924L247.57 105.613L248.622 105.662C248.354 105.531 247.755 104.973 248.148 104.711L248.87 104.908H248.849Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.269 102.727C246.785 103.579 248.003 103.448 248.519 102.923C249.159 103.694 247.26 103.432 248.602 103.891C249.469 103.809 248.87 102.858 248.685 102.645L246.29 102.71L246.269 102.727Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.249 96.2334L246.786 96.4629L246.868 95.8398L246.249 96.2334Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.786 96.4629L246.704 97.0696C247.075 97.004 247.426 96.9384 247.674 96.8236L246.766 96.4629H246.786Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.516 98.6602C246.454 98.9225 246.413 99.2013 246.413 99.5456L246.516 98.6602Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.765 97.9531L246.6 97.9859L246.517 98.6582C246.579 98.4123 246.662 98.1827 246.765 97.9531Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.702 97.0703C245.856 97.2179 244.989 97.3819 245.298 98.2345L246.599 97.9886L246.702 97.0703Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.954 70.9171L267.47 71.573L267.594 71.4911L267.078 70.8516L266.954 70.9171Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.418 74.834C266.583 74.9983 266.748 75.1134 266.913 75.2284C266.81 75.0641 266.666 74.9162 266.418 74.834Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M272.424 77.4749C271.619 78.2948 271.227 76.4419 270.938 77.9177C270.154 78.0816 269.08 77.4421 269.431 76.7371C270.195 76.7535 269.947 77.393 270.69 76.9338C269.782 76.5075 270.381 76.3107 269.245 76.5239C268.482 75.786 267.676 75.7368 266.913 75.2285C267.47 76.1468 266.438 78.1472 267.965 79.2787C269.369 79.869 271.206 79.3934 273.168 79.3114C273.622 79.1967 273.725 77.5077 272.424 77.4913V77.4749Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M274.304 76.1477C274.387 75.7869 274.304 75.6721 274.118 75.459C273.458 75.541 274.263 75.8525 274.304 76.1477Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.143 85.2638C260.432 85.313 260.824 85.9689 261.299 85.8049L260.865 84.8047C260.844 85.0506 260.494 85.149 260.143 85.2638Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.658 84.3613L260.844 84.805C260.844 84.69 260.802 84.5585 260.658 84.3613Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M259.957 85.3151L260.122 85.2656C260.122 85.2656 259.998 85.2656 259.957 85.3151Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M246.269 101.184C245.732 101.2 246.104 101.643 246.269 101.856C246.29 101.659 246.455 101.397 246.269 101.184Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M250.336 118.189L249.964 118.633C250.191 118.469 250.315 118.387 250.336 118.189Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M265.82 123.141C265.923 123.141 266.027 123.157 266.11 123.19C266.048 123.157 265.944 123.141 265.82 123.141Z\",\n    fill: \"#3F3834\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M266.107 123.189C266.582 123.419 266.004 124.321 266.727 124.567H266.52L266.995 125.075C266.871 124.55 266.809 123.452 266.107 123.206V123.189Z\",\n    fill: \"#3F3834\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.656 115.861C133.739 115.976 133.822 116.091 133.987 116.141C133.925 115.96 133.801 115.878 133.656 115.861Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M114.375 96.3314C114.479 96.3314 114.562 96.3314 114.645 96.3314C114.583 96.2984 114.479 96.2984 114.375 96.3314Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M132.604 120.928C132.604 120.928 132.77 120.961 132.874 120.961C132.77 120.944 132.687 120.928 132.604 120.928Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M113.241 26.1172C113.241 26.1172 113.324 26.1997 113.344 26.2492C113.344 26.1997 113.324 26.1502 113.241 26.1172Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.195 92.3625C134.091 92.2965 133.987 92.247 133.884 92.2305C133.946 92.313 134.05 92.3625 134.195 92.3625Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M131.51 92.2972C132.295 93.2974 133.059 92.084 133.884 92.2316C133.657 91.9692 133.823 91.3953 133.203 91.6741C134.855 91.1494 132.295 90.0999 133.595 89.526C133.43 89.5096 132.894 89.8376 132.481 89.444C132.316 88.8537 133.079 88.9029 133.43 88.657C132.956 88.4766 132.625 87.5911 132.852 87.6895C132.439 87.296 131.242 88.0995 130.54 87.5583C129.425 87.1976 130.375 86.6893 130.065 86.263C130.829 85.7382 130.602 86.7877 130.974 87.0008L130.458 85.5251C131.036 85.0988 131.531 85.7218 131.407 86.1482C132.109 85.5579 131.469 84.8036 130.561 84.6396C130.767 84.2789 130.561 84.0821 130.932 83.7214C131.449 84.0657 133.017 84.0493 133.286 84.5904C133.183 85.4759 132.068 84.2625 131.841 85.0332L132.79 85.0988C132.254 85.4267 132.956 85.6727 133.038 86.0334C132.811 86.2302 132.708 85.9842 132.563 85.8694C132.646 86.4925 132.13 87.0008 133.203 87.4764C134.07 86.6237 132.894 85.3611 133.967 84.984L132.646 83.295C132.212 83.295 131.51 83.8854 130.87 83.4098C131.985 83.2131 132.481 82.7211 132.687 82.0653C131.49 82.3112 131.614 81.0322 130.643 81.3602C131.242 81.6553 130.231 81.8193 130.148 81.8521C130.065 81.229 129.033 81.7701 128.971 81.4258C129.24 80.2779 129.735 81.4749 130.169 80.3435C130.705 80.5895 131.923 81.1798 132.419 81.8193C132.956 81.7701 132.336 81.1962 132.956 80.9338C132.316 81.311 131.82 80.6715 131.552 80.983C131.036 80.0648 129.797 79.0154 129.529 77.9167C131.304 78.0807 130.891 79.7696 132.997 79.4253C132.728 78.8842 131.861 78.8842 131.985 78.4578C133.059 78.0807 132.109 77.1789 132.088 76.441L131.552 76.7689C131.118 76.4902 131.449 75.9655 131.552 75.6375L131.779 75.7195L131.449 75.3915C131.449 75.3915 131.552 75.326 131.614 75.326C131.056 74.9652 131.593 74.0634 131.263 73.3911C130.396 73.3911 131.221 74.0634 131.139 74.3913C130.932 74.4733 130.561 75.1128 129.962 74.8012C129.962 73.965 128.909 73.3747 128.93 72.4236L128.662 72.7352C128.063 72.44 128.352 72.0137 128.311 71.571C128.909 70.7511 129.529 72.1777 130.024 71.6694C130.788 71.9973 129.921 72.5548 131.036 72.6368L132.254 72.1121C131.51 71.6858 132.625 71.1938 132.46 70.8987L131.923 71.2266C130.974 71.161 131.696 70.8659 131.82 70.7019L130.437 70.9315C130.21 71.407 131.407 71.7349 130.602 72.0793C130.169 71.243 129.054 71.4398 129.013 70.4232C129.549 70.374 129.219 70.6199 129.611 70.7183C129.983 70.374 128.868 70.0132 129.302 69.4393C129.632 69.7673 130.189 70.2756 130.912 69.8656L129.88 69.5705C130.045 69.3081 130.458 69.4229 130.478 69.3081C130.685 68.931 129.405 69.3901 129.673 68.8162C129.88 68.7342 130.107 68.5375 130.354 68.6195C130.396 67.9472 130.024 68.2915 129.508 67.6684C129.508 68.2259 127.939 68.2587 127.753 67.6684C127.918 66.8485 127.051 66.291 128.352 65.7171L127.671 65.3564C128.641 65.5859 128.001 64.8317 128.166 64.5693C129.24 64.4873 128.146 65.7991 129.88 65.7991C130.045 65.258 130.581 65.4876 131.056 65.6679C130.891 65.0776 129.818 65.4548 129.116 65.1924C129.549 65.1924 129.24 64.1922 130.189 64.5365C130.251 64.0446 129.136 63.9462 129.343 63.5855C129.776 63.6347 130.334 63.7003 130.87 63.6675C130.499 63.6183 130.953 63.1592 130.994 63.0608C130.788 63.1428 130.086 62.8968 130.396 63.3231C129.549 63.2247 130.354 62.3065 129.653 62.3229C130.623 62.2737 129.859 61.3882 130.251 60.9291C127.96 60.9783 131.118 61.7654 129.24 61.9294C128.455 61.3226 129.157 59.8961 128.146 58.9122C128.579 58.076 129.013 58.9122 129.859 58.7319C130.231 59.5025 129.549 59.6993 129.962 60.3716C130.354 59.6337 130.127 58.4203 129.405 57.8792C129.302 57.0757 131.676 56.9774 131.118 56.0099C130.375 56.1411 130.21 56.1247 129.942 56.4199C129.673 56.1575 129.942 55.8623 129.942 55.5672C129.467 55.4032 129.384 56.0099 128.971 55.6164C129.116 55.4688 129.198 55.1409 129.714 55.2065L129.776 55.272C129.095 54.3374 131.552 54.5998 130.148 53.7963C129.776 53.8619 130.251 54.0422 130.003 54.2226C129.425 54.3702 128.62 53.8783 128.393 53.5011C128.889 53.5667 128.496 53.1732 128.662 52.9108C129.508 52.7305 128.909 53.5667 129.467 53.6979L129.591 52.9764L129.467 53.124L128.662 52.3533C128.93 52.8944 127.629 52.6157 127.526 52.3697C127.691 51.8286 127.857 51.2875 128.806 51.3531C127.857 51.2875 127.898 50.6152 127.691 50.1397C127.361 50.6644 126.886 50.2053 126.577 50.0577L127.506 49.2706C127.774 50.0905 128.352 49.0903 128.992 49.287C129.962 49.5166 129.467 50.0249 129.343 50.4512C131.098 49.5986 128.393 49.2542 129.24 48.5163C129.673 48.5163 130.189 48.5819 130.086 48.9099C130.375 48.7787 129.24 48.2376 129.735 47.7457C129.425 47.8768 128.558 48.1556 128.187 47.6637L129.26 47.0078C129.487 46.2535 128.125 46.7454 127.609 46.1223L126.866 46.5323C125.916 46.4667 126.866 45.6796 125.813 45.6632C125.771 46.0567 126.597 46.2699 126.288 46.6798C125.276 46.8274 125.751 46.1551 125.193 45.9256C125.627 45.0729 125.668 45.2533 126.473 44.6138C128.042 44.581 128.435 45.6468 130.478 45.5156C130.21 44.6958 129.694 43.4988 130.292 42.9577C129.818 42.2198 128.579 42.2854 127.671 42.4001C127.506 42.0886 127.629 41.941 127.877 41.7443L128.393 42.0886C127.877 41.1867 127.34 40.662 127.382 39.711C127.113 39.1699 126.164 39.383 125.421 39.5142L125.255 38.9239L125.049 39.0059C124.037 38.8747 124.368 38.35 124.409 37.9729C124.843 37.9729 124.946 38.2024 125.214 38.186C125.586 37.8417 125.482 37.317 125.049 37.0382C125.482 37.0382 126.453 37.2678 126.164 37.6777C126.061 37.7269 125.895 37.6941 125.792 37.7433L126.37 38.432C125.833 37.6285 126.928 37.153 127.98 37.1694C127.444 36.3659 126.907 37.8253 126.494 36.8743C128.538 35.6117 125.916 34.4802 128.827 33.7752C128.207 33.1849 127.196 32.4962 127.113 31.5779C126.246 31.5779 126.762 30.9712 125.689 31.0696C124.574 31.9551 127.402 32.6929 125.792 33.398C126.205 33.7916 126.928 33.644 127.402 33.8244C127.485 34.1687 127.382 34.4966 126.845 34.5458C126.308 33.7424 124.719 34.3327 124.677 33.316C123.934 33.4472 124.223 34.2671 124.017 34.6442C123.604 34.5458 123.15 34.6442 122.799 34.8902C122.097 34.6278 121.478 34.0539 120.879 33.7588C121.292 33.8571 121.519 33.6604 121.767 33.7588L120.507 32.7093C121.044 32.3814 121.684 32.283 122.159 32.4634C122.427 31.8731 121.23 30.8892 122.53 30.8728C122.324 30.1186 121.767 31.1188 121.395 31.1844L121.333 31.1188L121.457 31.9223C119.95 32.0207 121.808 31.004 120.363 30.8892C117.597 30.7909 121.23 29.7578 120.776 29.2003L122.778 29.8234L122.324 29.2659C123.108 29.5774 124.409 29.561 125.235 30.053C125.276 29.2659 125.854 28.1509 125.482 27.6426C126.143 27.4294 126.783 27.331 127.464 27.413C126.184 26.6423 128.063 26.1668 128.063 25.4781C127.299 24.773 127.093 26.2324 126.081 25.7241C126.577 25.4945 126.164 25.101 125.957 24.9206C126.329 25.1338 125.689 25.9208 125.379 26.4456C125.4 26.052 124.43 26.1176 124.017 26.0192L123.831 26.6751C122.613 26.6587 123.707 25.8717 123.088 25.5765C124.182 25.7405 124.203 25.6421 125.276 25.8061C124.822 25.2486 124.781 24.3959 125.421 23.904C125.854 23.6088 125.978 24.1335 126.288 24.2811C127.031 24.1335 125.813 23.7236 126.721 23.5924C127.402 23.658 126.804 23.9368 127.01 24.1335L127.258 22.4446C127.691 22.4446 127.857 22.8382 127.691 23.1169C128.166 22.5922 127.918 22.2315 126.391 21.6903C126.783 21.1 127.382 20.4114 128.042 20.5917C127.753 20.3294 127.361 20.5261 126.928 20.5589C127.113 19.7719 125.565 19.7555 125.482 19.2963L124.698 19.6899C125.482 18.9028 123.336 19.5751 123.934 18.9028C124.781 18.9684 125.751 18.8864 126.639 18.7224C125.792 18.6568 126.494 18.1977 126.473 17.9026C125.648 18.1321 125.648 17.3287 124.843 17.837C124.099 17.2139 125.214 16.8367 124.099 16.4268C123.872 16.7548 123.17 15.9185 122.592 16.2136C122.468 15.5905 123.418 15.0822 124.347 15.197C124.306 15.4266 123.975 15.8037 124.677 15.7217L124.388 14.5739C124.801 14.2624 124.946 13.8688 125.916 13.754C124.76 13.4589 126.556 12.5898 125.214 12.4095C126.102 12.7374 125.008 13.1473 124.884 13.2949L124.677 13.1309C124.677 13.1309 124.677 13.1801 124.636 13.2293L122.902 12.8686C122.303 13.3933 124.017 12.8686 124.058 13.5409C122.572 14.246 121.519 12.4095 120.631 13.0981C120.198 13.6229 121.684 13.4261 122.303 13.7868V13.6721L123.108 14.5575C122.572 14.6395 122.118 14.3935 122.118 14.3935C122.241 15.5249 121.436 15.7545 121.354 16.9679C121.54 16.8695 123.17 16.5252 123.48 17.0663C123.914 17.427 122.943 17.5418 122.881 17.8698C122.675 17.6894 121.746 17.5582 122.324 17.2631L121.189 17.345C119.723 16.5252 118.67 17.0663 118.133 15.8857C117.287 15.8857 116.771 15.0494 116.936 14.3771L116.213 14.7543C114.686 14.1968 117.369 14.5411 116.048 13.7704C117.514 13.2949 119.186 12.475 120.507 12.8686C120.796 12.2127 119.95 12.0651 119.867 11.524C121.044 11.0649 121.23 11.5732 122.448 11.3928C122.262 10.9829 121.643 10.5238 120.982 10.9009L121.354 10.081C121.622 10.0318 121.663 10.3106 121.643 10.4254C121.849 10.0974 121.168 9.57273 120.672 9.45795C120.755 9.50714 120.982 9.68751 120.796 9.78589C120.404 9.49074 119.723 8.98242 119.372 8.98242C120.074 9.37596 118.691 9.57273 119.578 9.98266C119.248 9.98266 118.567 9.96626 118.691 9.68751C118.03 10.163 118.216 10.5566 117.411 10.8025C117.989 10.409 117.039 10.2778 116.895 10.2286C116.709 10.5566 117.039 11.1305 117.411 11.2944C116.007 11.4748 117.824 12.4423 116.317 12.1799C116.833 12.1963 116.915 12.639 116.626 12.9014C116.028 12.9342 115.594 12.3767 114.872 12.1963C114.025 11.0977 115.904 12.1143 116.296 11.8192L116.069 10.9337C115.883 11.0485 115.037 10.6713 115.202 11.2453C114.294 11.0649 113.592 10.573 114.19 10.0482C113.777 9.98266 113.901 10.3106 113.881 10.409C113.468 10.3434 111.899 9.96626 111.796 10.6877C111.837 10.4746 112.518 10.9665 112.931 10.5566C113.138 10.8189 112.663 11.6552 111.858 11.4256C112.147 11.7372 112.807 12.3439 113.014 12.6226C112.394 12.7538 112.704 12.4095 112.394 12.2947L112.91 13.2621L113.571 12.9178C113.179 13.6885 114.892 14.0328 115.491 14.5903C114.376 14.5903 114.211 14.0984 113.592 13.754C112.291 14.2296 114.314 13.9508 114.19 14.5739C114.005 14.6723 113.736 14.7215 113.385 14.7051L114.417 15.1314C114.294 15.279 114.046 15.2134 113.984 15.1642C115.284 15.9349 115.553 15.033 116.193 16.148C116.688 15.4102 115.367 15.6069 115.388 15.0166C116.151 14.6231 116.895 15.5741 117.39 15.7217C117.184 16.312 115.532 16.476 116.502 17.1319C115.924 16.6564 115.47 17.1647 115.346 16.4596C114.727 16.0989 114.872 16.7056 114.232 16.8203C114.459 17.0007 115.388 16.6236 115.284 17.1483H115.119L116.399 17.919C115.883 18.7388 117.886 19.6571 116.626 20.2802L117.782 20.0998C117.927 20.6081 117.989 21.3296 118.257 21.6739C117.576 21.6084 117.493 21.2804 117.225 20.9361C117.08 21.8543 117.844 22.625 118.815 23.2153C119.64 22.7398 119.558 22.6742 120.115 22.2315C121.787 22.7726 119.145 22.9693 119.991 23.7236C118.856 23.7728 119 23.5104 117.906 23.74C118.711 24.0352 118.567 24.5763 119.248 24.9206C118.154 25.1502 117.184 24.8222 117.06 24.0352C118.009 23.4121 116.255 22.8054 117.163 22.2806L116.461 22.6086C116.09 22.0347 116.275 21.6575 115.697 21.182H115.862L114.706 20.9853V21.264C114.066 21.1 112.993 20.5753 112.952 20.4277C113.179 21.2476 114.995 21.2312 116.028 21.592C116.028 22.3626 114.005 22.7234 115.016 23.1989C114.479 23.2645 113.922 23.6908 113.406 23.3793C113.076 22.9693 113.777 22.6578 112.993 22.6414C113.055 23.0841 112.58 22.9201 112.745 23.5924C113.757 23.6908 114.768 24.1499 115.594 24.6255C116.152 25.1174 116.151 25.7733 115.862 26.1832C115.739 25.6749 114.748 25.1994 114.005 25.3469C115.057 25.6257 113.199 26.3636 114.644 26.1668C114.562 26.7571 114.644 27.7573 113.385 27.8393C112.91 27.2982 113.654 26.7407 113.365 26.2652C113.344 26.3964 113.034 26.5275 112.725 26.462L112.828 25.7733C112.25 26.3144 111.837 26.216 112.002 26.8883C112.105 26.8391 112.291 26.7571 112.374 26.8227C112.415 26.9867 112.374 27.1998 112.394 27.3638L111.259 27.413C111.816 27.9049 110.392 28.9052 111.259 29.807L111.032 29.725C110.805 30.4629 113.055 30.5121 113.344 31.3156C112.807 31.086 112.332 31.2008 111.796 31.25C112.374 31.6435 111.445 31.8731 111.135 32.283C111.796 31.8075 112.353 32.5946 112.704 32.2502C113.839 32.2174 113.86 33.0537 113.736 33.48C112.27 33.7424 112.91 32.1682 111.403 32.8077C111.28 33.234 112.105 33.3324 112.374 33.0373C112.209 33.5784 112.043 34.3819 111.156 34.7754C112.27 35.4149 111.672 35.6609 113.117 36.0708C113.055 35.7264 112.002 35.71 112.58 35.2837L113.654 35.7592C113.736 36.3823 112.787 36.8906 112.663 37.317L112.188 36.8743H112.353C111.878 36.7267 112.147 36.1364 111.341 36.2184C112.353 36.6283 111.383 36.9562 112.085 37.481H111.92C112.766 38.3992 110.268 39.1043 112.374 39.711C112.332 39.5306 113.138 39.1863 113.55 39.3011C113.055 39.5142 113.22 40.1045 112.621 40.0881L112.415 39.8914C112.25 40.4325 112.147 40.7604 112.353 40.9572C113.096 41.1048 113.674 40.9572 114.066 41.3343C113.592 42.2854 112.353 40.9572 111.713 41.5967L112.498 42.4821L111.816 42.6789C111.156 44.0071 113.365 45.0073 113.385 46.4175C112.25 46.4339 111.775 45.4173 111.692 45.0729C110.681 45.5156 112.064 46.1387 111.362 46.7126C111.197 47.2538 112.209 47.6637 112.848 47.5817C113.261 48.254 112.167 48.0572 111.981 48.1392C113.22 48.3524 112.787 49.205 113.055 49.7461L112.353 49.7789L113.22 50.6152C113.282 50.402 113.922 50.5988 114.355 50.5988L114.294 50.812C116.213 49.9921 112.952 48.9591 115.119 48.1064C115.388 48.3688 115.759 48.0244 116.028 48.2704C115.966 48.4835 115.862 48.5327 115.594 48.5491C116.172 48.6803 116.668 49.0247 116.647 48.5655C118.133 48.5819 117.762 49.5002 118.278 50.1233C117.328 50.6316 116.853 49.5986 116.151 49.3526C116.255 49.5986 116.895 49.7789 116.523 50.1397L115.408 50.0577C116.007 50.9267 116.379 50.2873 117.452 50.484C118.876 50.7136 117.39 51.2711 117.493 51.5007L117.225 51.2383C116.75 51.9106 117.927 52.0582 117.844 52.6649L116.957 52.9436C118.071 52.1893 115.408 52.009 115.986 51.5826C114.954 52.6813 113.695 51.3531 112.766 51.0087C112.972 51.4843 112.848 51.927 112.229 52.1729C113.674 52.8616 111.692 53.6323 113.406 54.2882C113.199 54.6653 112.621 53.9603 112.601 54.3538C112.477 55.0753 112.683 55.8295 113.323 56.5838C113.282 56.9774 112.787 56.9118 112.312 57.0266C111.651 58.9122 114.314 59.6501 113.674 61.6998L113.076 61.4046C112.952 61.831 112.745 62.2081 113.55 62.4213C111.631 62.9624 114.727 64.2578 112.683 64.9629C112.312 65.8811 113.963 65.9139 114.273 66.6354C113.839 66.6354 113.014 66.4222 112.828 66.783C113.509 69.1278 113.654 71.2266 114.005 73.801C113.839 73.7846 113.695 73.6534 113.633 73.5878C113.468 75.2604 115.326 76.9001 114.727 78.2939C114.995 78.5562 115.367 79.3269 116.151 79.0973C116.255 78.7694 117.225 78.7202 117.824 78.753C118.67 79.9828 116.42 79.3597 116.688 80.1796C115.202 80.4419 115.718 79.6548 114.397 79.6712L115.346 80.8682C114.872 81.5405 115.718 82.2128 115.016 82.8031C115.181 82.5408 113.901 82.7211 114.479 82.2784C114.541 82.344 114.645 82.2948 114.706 82.3604C114.83 81.3602 114.005 81.8193 113.654 80.9338C114.025 81.7209 114.397 82.7703 114.108 83.4754C115.119 83.3278 114.541 84.0329 115.181 84.2297L115.078 84.2789C115.512 84.2789 115.821 84.7052 115.945 84.8364L114.665 85.0168C114.83 85.3283 115.305 84.9348 115.47 85.2299C115.78 85.6563 115.924 87.1976 114.583 87.3124C114.686 87.8371 115.429 87.9847 115.264 88.5258C114.934 88.4766 114.789 88.3618 114.624 88.329C114.355 89.4768 114.789 90.887 114.025 91.9692C114.355 92.8547 114.562 93.609 115.45 94.1665C115.346 93.9205 115.656 93.2318 116.379 93.6746C116.915 93.9205 116.709 94.2812 116.957 94.642C116.296 94.56 116.317 95.5766 115.862 94.8388C114.397 95.0191 116.152 96.4293 114.706 96.4129C115.161 96.5769 114.892 97.6263 115.677 98.0198C115.037 98.1018 115.243 97.4623 114.789 97.4623L114.995 97.9379H114.562C114.19 98.8561 115.986 99.0201 116.255 99.5612H116.09L116.317 99.9055L115.14 99.4792C115.305 100.07 116.358 100.365 116.606 101.021L116.234 101.086L116.647 101.48C116.647 101.48 116.42 101.398 116.317 101.43C117.431 101.791 116.998 102.644 117.927 102.988C117.762 103.251 116.379 103.464 117.328 103.808L115.945 103.743C115.78 102.873 116.915 103.415 116.399 102.513C114.624 103.185 114.83 105.071 114.975 106.333C115.883 107.35 114.417 109.022 116.461 109.449L115.615 109.35L114.913 111.056C115.264 112.515 114.624 114.007 115.759 115.106L115.057 115.417C117.411 116.565 116.048 119.32 118.876 120.074C118.237 120.73 117.803 119.877 117.287 119.812C117.06 120.287 118.897 121.091 117.638 121.55C117.204 121.55 117.225 120.878 116.957 121.189C116.151 121.534 117.762 121.681 116.853 122.075C117.7 121.894 118.67 122.698 118.835 123.288C118.863 123.212 118.904 123.162 118.959 123.141C119.599 123.059 119.475 123.485 119.558 123.731C119.558 123.731 119.393 123.714 119.331 123.649C120.425 126.65 120.941 130.093 120.136 133.258L119.537 132.684C120.012 133.143 119.682 133.946 119.516 134.192L119.454 134.127C118.154 134.979 120.734 135.078 119.227 135.734L119.083 135.602C119.124 136.619 117.72 137.226 118.464 138.226C117.968 139.013 117.287 138.931 116.688 139.472C116.73 139.931 117.535 140.145 117.7 140.161L117.762 139.948C118.526 139.702 118.402 140.423 118.732 140.751C119.95 140.505 121.829 140.636 123.067 139.718C122.654 139.046 125.008 139.062 124.822 138.308C123.212 137.882 126.019 137.226 124.574 136.537C125.689 136.898 125.173 135.717 126.391 136.324C127.258 136.045 125.441 134.848 126.494 134.307C126.742 134.389 126.989 134.373 127.134 134.504C126.494 133.75 127.898 133.979 127.898 133.422H126.762C126.391 133.225 127.196 133.159 126.989 132.963C126.845 133.11 126.308 133.438 125.854 133.274C125.586 133.012 125.214 132.799 125.214 132.52C125.648 132.52 125.854 132.717 125.999 132.848C125.999 132.848 126.102 132.241 126.639 132.192C127.01 132.405 127.01 132.684 127.65 132.881C127.98 132.077 128.022 132.815 128.93 132.421C127.588 132.536 128.352 131.733 128.042 131.29C128.579 131.241 128.207 131.602 128.62 131.7C130.974 130.864 128.207 130.47 128.703 129.404C128.868 129.421 129.013 129.552 129.074 129.617C128.703 129.126 129.942 128.765 129.178 128.453C129.405 127.978 130.685 128.371 130.664 127.633C129.281 127.847 130.932 126.764 129.446 126.748L130.313 126.174C129.508 125.682 127.836 126.305 127.691 125.338C128.228 124.452 130.127 125.42 130.891 124.895L130.086 124.682L130.664 124.239L130.726 124.305C130.458 124.042 130.685 123.567 131.118 123.567C131.449 123.616 131.449 123.895 131.799 123.928C131.056 123.501 133.802 122.222 131.593 121.763C131.985 121.501 131.985 120.976 132.687 121.042C131.717 120.812 132.997 119.894 132.357 119.55C132.687 119.599 133.224 119.271 132.956 119.008C132.584 119.353 132.212 119.14 131.676 118.91C132.377 118.598 131.779 117.746 132.956 117.598C132.316 117.123 131.469 117.303 130.623 117.188C131.325 116.877 131.18 115.909 132.543 116.073C132.378 116.336 132.109 116.926 133.017 116.811C133.513 116.319 132.646 116.598 132.501 116.188C132.749 116.221 133.327 115.909 133.719 115.991C133.575 115.745 133.575 115.417 133.802 115.057C133.203 115.598 132.852 114.712 132.316 115.04L133.286 115.565C133.348 116.188 132.543 115.696 132.212 115.942C131.944 114.843 130.561 115.057 129.921 114.024C130.148 113.827 130.52 113.483 130.561 113.368C130.623 113.712 131.882 113.646 132.109 113.45C131.056 112.876 132.77 112.417 133.017 111.925C132.708 112.335 131.903 112.122 131.614 111.974C130.87 110.974 132.088 111.58 132.646 111.154C132.501 109.613 134.112 108.645 133.265 107.399L132.13 107.989L133.203 108.186C132.357 108.645 130.788 108.104 130.086 107.842C130.458 107.776 130.251 107.022 130.85 107.317L130.375 106.579C129.9 106.694 130.107 107.17 129.591 106.825C129.921 106.579 130.169 105.825 130.809 106.3C130.85 105.907 130.478 105.415 129.838 105.497C129.776 104.874 131.221 105.563 131.655 105.841C131.717 105.349 132.667 105.415 132.956 105.563L132.811 104.874C133.121 105.021 133.554 105.021 133.843 105.169C134.256 104.71 133.038 104.398 133.946 104.005L133.038 103.841C133.781 102.578 133.905 102.709 134.008 101.545L133.327 101.742C132.109 100.857 134.401 101.086 133.905 99.9055C133.492 99.2332 133.183 98.8069 132.109 98.8889C131.696 98.4954 132.336 98.4134 132.749 98.233C132.15 97.9379 131.036 97.282 131.696 96.8064C132.027 97.1344 132.295 97.3967 132.481 97.6919C133.554 97.6099 132.708 96.6589 133.203 96.1505C132.687 95.8062 131.387 94.6748 130.437 94.0517C129.57 94.3304 128.29 94.2321 127.402 93.6746C128.084 93.7565 128.084 92.9203 128.538 92.5267C129.178 92.7235 130.107 91.6577 130.375 92.4775C130.045 92.7235 129.136 92.8219 129.467 93.1498C130.148 92.9531 130.912 92.4283 131.51 91.8872C131.841 91.9364 132.274 92.2152 132.274 92.4939C131.985 92.3464 131.779 92.4284 131.51 92.4448V92.2972Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M131.882 75.3924C131.882 75.3924 131.676 75.2773 131.552 75.2773C131.634 75.3266 131.738 75.3759 131.882 75.3924Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M131.139 63.584H130.849C130.849 63.584 130.994 63.617 131.139 63.584Z\",\n    fill: \"#7E6A5E\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.32\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M105.624 379.222C105.562 379.123 105.479 379.041 105.313 378.975C105.354 379.107 105.479 379.189 105.624 379.222Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.108 395.34C123.004 395.34 122.922 395.323 122.839 395.307C122.901 395.34 123.004 395.34 123.108 395.34Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M107.13 375.499C107.13 375.499 106.985 375.466 106.881 375.449C106.985 375.482 107.068 375.482 107.13 375.499Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.022 396.85C103.022 396.85 103.229 396.949 103.333 396.965C103.27 396.899 103.188 396.85 103.022 396.85Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M105.684 397.094C105.003 396.291 104.115 397.144 103.31 396.963C103.517 397.176 103.31 397.586 103.95 397.439C102.257 397.717 104.714 398.685 103.372 399.029C103.537 399.062 104.095 398.849 104.466 399.177C104.569 399.636 103.806 399.538 103.455 399.702C103.909 399.865 104.156 400.554 103.95 400.472C104.322 400.8 105.602 400.275 106.242 400.735C107.315 401.095 106.324 401.39 106.592 401.751C105.767 402.079 106.097 401.325 105.746 401.128L106.118 402.276C105.519 402.555 105.065 402.046 105.23 401.735C104.487 402.128 105.044 402.735 105.932 402.932C105.705 403.194 105.891 403.358 105.478 403.588C105.003 403.293 103.434 403.194 103.207 402.768C103.393 402.112 104.384 403.096 104.693 402.555L103.764 402.44C104.322 402.243 103.64 401.997 103.599 401.718C103.847 401.587 103.929 401.768 104.053 401.882C104.053 401.407 104.59 401.063 103.558 400.636C102.608 401.21 103.682 402.259 102.567 402.456L103.723 403.817C104.157 403.85 104.92 403.457 105.498 403.866C104.384 403.932 103.826 404.276 103.578 404.752C104.796 404.653 104.569 405.605 105.56 405.441C104.982 405.162 105.994 405.129 106.097 405.096C106.097 405.572 107.191 405.244 107.232 405.506C106.861 406.359 106.469 405.424 105.932 406.228C105.416 406.014 104.26 405.473 103.806 404.965C103.269 404.965 103.806 405.441 103.186 405.588C103.847 405.359 104.301 405.867 104.59 405.654C105.024 406.375 106.159 407.261 106.345 408.113C104.59 407.851 105.168 406.621 103.021 406.72C103.248 407.146 104.115 407.211 103.95 407.523C102.856 407.72 103.702 408.474 103.682 409.032L104.239 408.818C104.652 409.064 104.28 409.425 104.136 409.671L103.909 409.589L104.218 409.851C104.218 409.851 104.115 409.884 104.053 409.884C104.569 410.196 103.971 410.835 104.218 411.36C105.085 411.426 104.322 410.852 104.446 410.622C104.652 410.573 105.085 410.13 105.643 410.393C105.581 411.032 106.572 411.54 106.448 412.262L106.737 412.049C107.315 412.327 106.985 412.606 106.985 412.951C106.303 413.524 105.829 412.409 105.292 412.754C104.549 412.459 105.478 412.098 104.363 411.95L103.104 412.245C103.806 412.623 102.65 412.901 102.794 413.147L103.351 412.934C104.28 413.049 103.558 413.229 103.413 413.328L104.796 413.262C105.065 412.918 103.888 412.59 104.735 412.393C105.106 413.065 106.221 413 106.159 413.754C105.622 413.754 105.973 413.59 105.581 413.475C105.189 413.705 106.262 414.066 105.767 414.459C105.457 414.197 104.962 413.754 104.198 414.016L105.209 414.312C105.024 414.492 104.631 414.394 104.59 414.459C104.363 414.721 105.663 414.459 105.354 414.885C105.147 414.935 104.9 415.066 104.673 414.984C104.569 415.492 104.982 415.246 105.436 415.754C105.478 415.328 107.067 415.427 107.17 415.886C106.923 416.492 107.749 416.984 106.407 417.312L107.047 417.64C106.097 417.394 106.675 418.001 106.469 418.198C105.395 418.198 106.613 417.279 104.858 417.148C104.652 417.542 104.136 417.329 103.682 417.148C103.785 417.607 104.9 417.394 105.581 417.64C105.147 417.607 105.354 418.378 104.446 418.05C104.342 418.427 105.436 418.558 105.209 418.821C104.796 418.755 104.239 418.657 103.682 418.64C104.033 418.706 103.558 419.018 103.517 419.083C103.723 419.034 104.404 419.28 104.136 418.936C104.962 419.083 104.074 419.706 104.796 419.739C103.826 419.706 104.507 420.428 104.074 420.739C106.365 420.87 103.269 420.034 105.168 420.067C105.891 420.575 105.065 421.608 105.994 422.412C105.478 423.019 105.127 422.346 104.26 422.412C103.95 421.805 104.652 421.707 104.301 421.166C103.847 421.69 103.971 422.625 104.631 423.084C104.673 423.691 102.278 423.592 102.773 424.363C103.517 424.314 103.682 424.363 103.991 424.133C104.239 424.347 103.95 424.56 103.909 424.773C104.363 424.937 104.507 424.494 104.879 424.806C104.735 424.904 104.611 425.15 104.115 425.068L104.053 425.019C104.652 425.773 102.216 425.396 103.558 426.101C103.929 426.085 103.475 425.921 103.723 425.79C104.301 425.724 105.065 426.15 105.271 426.446C104.776 426.364 105.147 426.675 104.962 426.872C104.115 426.937 104.776 426.364 104.218 426.232L104.033 426.757L104.177 426.659L104.92 427.298C104.693 426.872 105.973 427.183 106.056 427.364C105.849 427.757 105.622 428.151 104.693 428.036C105.622 428.151 105.54 428.659 105.705 429.036C106.076 428.676 106.51 429.036 106.799 429.184L105.787 429.709C105.581 429.069 104.941 429.774 104.322 429.594C103.372 429.348 103.909 429.003 104.095 428.692C102.278 429.2 104.92 429.659 104.033 430.151C103.599 430.119 103.104 430.037 103.228 429.791C102.918 429.873 104.012 430.364 103.475 430.692C103.785 430.61 104.673 430.463 105.003 430.873L103.867 431.283C103.558 431.84 104.982 431.561 105.436 432.07L106.2 431.807C107.129 431.922 106.118 432.447 107.17 432.529C107.232 432.234 106.448 432.021 106.778 431.725C107.79 431.676 107.274 432.152 107.79 432.365C107.274 432.972 107.253 432.84 106.407 433.25C104.838 433.152 104.549 432.332 102.505 432.283C102.711 432.922 103.104 433.857 102.464 434.218C102.877 434.808 104.115 434.841 105.024 434.825C105.168 435.071 105.024 435.169 104.776 435.3L104.301 435.005C104.735 435.726 105.23 436.153 105.106 436.874C105.333 437.301 106.283 437.202 107.026 437.153L107.15 437.612L107.356 437.563C108.347 437.727 107.976 438.104 107.893 438.399C107.46 438.366 107.377 438.186 107.109 438.186C106.716 438.416 106.778 438.825 107.17 439.055C106.737 439.022 105.787 438.776 106.118 438.481C106.221 438.448 106.386 438.481 106.489 438.465L105.973 437.907C106.448 438.547 105.292 438.825 104.26 438.744C104.735 439.383 105.395 438.334 105.705 439.071C103.558 439.875 106.076 440.908 103.104 441.22C103.661 441.695 104.611 442.302 104.59 442.99C105.457 443.056 104.879 443.466 105.953 443.482C107.17 442.908 104.404 442.138 106.076 441.728C105.705 441.4 104.962 441.449 104.507 441.285C104.466 441.023 104.59 440.777 105.127 440.793C105.602 441.433 107.212 441.105 107.17 441.875C107.914 441.826 107.728 441.187 107.955 440.924C108.347 441.039 108.822 440.99 109.173 440.826C109.854 441.072 110.412 441.547 110.99 441.826C110.597 441.711 110.35 441.843 110.123 441.761L111.279 442.646C110.721 442.859 110.061 442.876 109.627 442.712C109.317 443.138 110.391 443.974 109.09 443.876C109.235 444.466 109.875 443.745 110.267 443.728L110.329 443.777L110.288 443.171C111.795 443.22 109.834 443.827 111.279 444.023C114.004 444.319 110.308 444.811 110.701 445.27L108.781 444.63L109.173 445.089C108.43 444.794 107.129 444.696 106.365 444.269C106.242 444.843 105.54 445.63 105.87 446.04C105.189 446.139 104.528 446.155 103.867 446.04C105.044 446.713 103.124 446.909 103.042 447.418C103.723 448.008 104.115 446.959 105.024 447.418C104.507 447.549 104.879 447.86 105.065 448.024C104.714 447.828 105.457 447.319 105.829 446.942C105.767 447.237 106.737 447.27 107.129 447.385L107.398 446.909C108.595 447.024 107.418 447.516 107.996 447.795C106.943 447.565 106.902 447.647 105.849 447.418C106.242 447.877 106.159 448.516 105.457 448.811C105.003 448.992 104.941 448.598 104.652 448.451C103.909 448.5 105.044 448.91 104.115 448.926C103.455 448.811 104.074 448.664 103.888 448.5L103.413 449.713C102.98 449.681 102.877 449.369 103.062 449.172C102.526 449.517 102.732 449.812 104.136 450.353C103.661 450.746 102.959 451.189 102.34 450.992C102.588 451.205 103 451.107 103.434 451.14C103.124 451.697 104.673 451.861 104.652 452.206L105.478 452.009C104.569 452.501 106.799 452.238 106.118 452.681C105.292 452.534 104.322 452.501 103.393 452.517C104.218 452.665 103.455 452.911 103.434 453.124C104.28 453.058 104.157 453.632 105.024 453.354C105.643 453.895 104.466 454.042 105.498 454.469C105.787 454.255 106.324 454.96 106.943 454.796C106.943 455.272 105.911 455.534 105.024 455.338C105.106 455.174 105.519 454.944 104.796 454.911L104.858 455.78C104.404 455.961 104.177 456.223 103.207 456.19C104.28 456.551 102.34 456.945 103.62 457.256C102.815 456.895 103.971 456.748 104.136 456.649L104.301 456.797C104.301 456.797 104.322 456.764 104.363 456.731L105.994 457.223C106.696 456.912 104.9 457.076 104.982 456.567C106.592 456.239 107.232 457.732 108.265 457.354C108.801 457.01 107.294 456.977 106.758 456.617L106.716 456.699L106.118 455.944C106.654 455.944 107.067 456.19 107.067 456.19C107.17 455.338 108.017 455.272 108.327 454.37C108.12 454.419 106.448 454.485 106.242 454.059C105.87 453.731 106.84 453.78 106.985 453.534C107.17 453.698 108.058 453.895 107.439 454.042L108.574 454.108C109.875 454.895 111.01 454.616 111.32 455.567C112.146 455.666 112.497 456.371 112.208 456.863L112.992 456.666C114.375 457.289 111.815 456.666 112.93 457.436C111.382 457.6 109.565 457.978 108.368 457.518C107.955 457.961 108.739 458.191 108.677 458.617C107.418 458.781 107.356 458.387 106.118 458.355C106.221 458.683 106.716 459.109 107.439 458.929L106.881 459.486C106.613 459.486 106.634 459.273 106.675 459.191C106.386 459.404 106.943 459.88 107.398 460.044C107.336 459.994 107.15 459.83 107.356 459.781C107.666 460.044 108.223 460.536 108.554 460.585C107.955 460.175 109.379 460.257 108.616 459.814C108.946 459.863 109.606 459.978 109.421 460.175C110.184 459.912 110.102 459.601 110.948 459.535C110.288 459.748 111.175 459.978 111.299 460.044C111.568 459.83 111.382 459.339 111.052 459.158C112.455 459.224 110.928 458.224 112.331 458.65C111.836 458.568 111.836 458.224 112.187 458.06C112.786 458.125 113.075 458.601 113.756 458.847C114.334 459.814 112.724 458.748 112.27 458.929V459.634C112.497 459.584 113.24 459.978 113.219 459.519C114.066 459.798 114.623 460.273 113.9 460.585C114.293 460.7 114.251 460.437 114.293 460.355C114.685 460.47 116.109 461.011 116.398 460.454C116.316 460.618 115.758 460.126 115.263 460.388C115.118 460.142 115.8 459.568 116.543 459.88C116.336 459.585 115.82 459.027 115.676 458.781C116.316 458.765 115.923 458.994 116.212 459.125L115.923 458.305L115.201 458.486C115.779 457.945 114.148 457.436 113.694 456.928C114.788 457.076 114.85 457.469 115.387 457.83C116.77 457.633 114.705 457.584 114.974 457.109C115.18 457.059 115.449 457.059 115.779 457.109L114.85 456.649C114.994 456.551 115.222 456.633 115.283 456.682C114.148 455.928 113.715 456.584 113.302 455.649C112.682 456.141 114.024 456.157 113.859 456.617C113.033 456.813 112.476 455.994 112.022 455.83C112.331 455.403 114.004 455.485 113.178 454.862C113.673 455.288 114.21 454.96 114.189 455.518C114.726 455.862 114.705 455.387 115.345 455.37C115.16 455.206 114.169 455.37 114.375 454.993L114.54 455.026L113.405 454.272C114.086 453.698 112.228 452.78 113.57 452.452H112.393C112.331 452.075 112.373 451.517 112.166 451.222C112.827 451.337 112.868 451.599 113.075 451.894C113.364 451.205 112.724 450.533 111.836 449.992C110.969 450.271 111.01 450.336 110.412 450.615C108.822 450.041 111.485 450.156 110.742 449.5C111.877 449.566 111.691 449.746 112.827 449.681C112.084 449.385 112.29 448.992 111.65 448.664C112.765 448.598 113.673 448.926 113.715 449.533C112.682 449.91 114.334 450.55 113.364 450.861L114.086 450.681C114.375 451.156 114.127 451.419 114.623 451.845L114.458 451.812L115.573 452.091V451.878C116.212 452.075 117.203 452.583 117.224 452.714C117.121 452.042 115.325 451.878 114.355 451.484C114.499 450.91 116.522 450.812 115.593 450.353C116.13 450.353 116.749 450.074 117.203 450.369C117.472 450.714 116.749 450.894 117.513 450.976C117.513 450.632 117.967 450.796 117.885 450.271C116.894 450.107 115.965 449.631 115.201 449.205C114.705 448.779 114.809 448.27 115.139 447.975C115.201 448.369 116.13 448.828 116.873 448.795C115.862 448.484 117.802 448.09 116.336 448.106C116.481 447.664 116.543 446.893 117.781 446.926C118.194 447.385 117.389 447.746 117.616 448.139C117.658 448.041 117.988 447.959 118.256 448.041L118.07 448.565C118.71 448.205 119.103 448.32 119.041 447.778C118.937 447.811 118.731 447.86 118.669 447.795C118.669 447.664 118.731 447.5 118.71 447.369L119.846 447.434C119.35 447.008 120.878 446.352 120.135 445.581L120.362 445.663C120.672 445.106 118.421 444.893 118.215 444.253C118.731 444.466 119.206 444.417 119.743 444.433C119.206 444.089 120.155 443.991 120.506 443.695C119.804 444.007 119.33 443.368 118.937 443.597C117.802 443.532 117.864 442.892 118.029 442.58C119.515 442.498 118.71 443.646 120.279 443.269C120.444 442.958 119.619 442.81 119.33 443.023C119.536 442.63 119.784 442.023 120.713 441.793C119.66 441.22 120.279 441.072 118.876 440.662C118.917 440.924 119.949 441.023 119.35 441.301L118.318 440.859C118.318 440.383 119.288 440.072 119.454 439.76L119.887 440.137L119.722 440.105C120.176 440.268 119.866 440.695 120.672 440.695C119.701 440.318 120.713 440.137 120.052 439.678L120.217 439.711C119.454 438.94 121.993 438.596 119.97 437.989C119.97 438.12 119.165 438.317 118.772 438.219C119.288 438.088 119.165 437.645 119.784 437.694L119.97 437.858C120.176 437.465 120.3 437.219 120.135 437.071C119.412 436.907 118.834 436.973 118.463 436.661C119.02 435.972 120.135 437.071 120.837 436.628L120.135 435.907L120.816 435.808C121.6 434.857 119.474 433.939 119.598 432.873C120.733 432.939 121.126 433.742 121.167 434.005C122.199 433.759 120.878 433.185 121.642 432.791C121.848 432.398 120.878 432.021 120.238 432.037C119.887 431.496 120.94 431.725 121.146 431.676C119.928 431.414 120.444 430.824 120.217 430.397L120.919 430.43L120.114 429.725C120.032 429.889 119.412 429.692 118.979 429.659L119.061 429.495C117.079 429.971 120.238 430.988 117.988 431.463C117.74 431.25 117.348 431.48 117.1 431.266C117.183 431.102 117.286 431.086 117.554 431.086C116.997 430.955 116.522 430.643 116.522 430.988C115.056 430.856 115.49 430.201 115.036 429.692C116.027 429.381 116.398 430.184 117.079 430.43C116.997 430.25 116.378 430.053 116.77 429.823L117.864 429.971C117.327 429.282 116.914 429.725 115.862 429.495C114.478 429.217 115.985 428.922 115.903 428.725L116.151 428.938C116.687 428.462 115.511 428.266 115.676 427.823L116.584 427.675C115.407 428.167 118.05 428.479 117.43 428.774C118.566 428.02 119.681 429.118 120.589 429.446C120.424 429.069 120.589 428.758 121.229 428.61C119.846 427.987 121.89 427.561 120.238 426.921C120.465 426.659 120.981 427.216 121.043 426.921C121.229 426.396 121.105 425.806 120.527 425.199C120.589 424.904 121.084 425.003 121.559 424.953C122.385 423.592 119.804 422.838 120.61 421.33L121.188 421.608C121.353 421.297 121.6 421.034 120.795 420.805C122.757 420.542 119.784 419.329 121.889 418.968C122.344 418.312 120.692 418.165 120.465 417.591C120.899 417.624 121.683 417.853 121.931 417.591C121.456 415.787 121.497 414.197 121.394 412.229C121.559 412.262 121.683 412.36 121.745 412.426C122.055 411.18 120.362 409.819 121.084 408.818C120.837 408.605 120.527 407.982 119.743 408.113C119.619 408.343 118.648 408.31 118.05 408.244C117.307 407.261 119.495 407.884 119.309 407.244C120.795 407.162 120.238 407.703 121.539 407.802L120.713 406.834C121.229 406.359 120.465 405.801 121.208 405.408C121.022 405.588 122.302 405.555 121.704 405.834C121.642 405.785 121.539 405.801 121.477 405.752C121.27 406.49 122.137 406.211 122.385 406.9C122.075 406.293 121.807 405.457 122.158 404.965C121.146 405.014 121.766 404.506 121.146 404.309L121.25 404.276C120.816 404.244 120.548 403.899 120.424 403.784L121.704 403.752C121.559 403.506 121.064 403.768 120.919 403.538C120.651 403.194 120.651 402.03 121.993 402.046C121.931 401.653 121.208 401.472 121.435 401.079C121.766 401.128 121.889 401.243 122.055 401.276C122.426 400.439 122.117 399.341 122.963 398.587C122.695 397.898 122.571 397.308 121.745 396.832C121.828 397.012 121.456 397.521 120.775 397.144C120.259 396.93 120.486 396.668 120.3 396.373C120.961 396.488 121.002 395.717 121.415 396.307C122.901 396.274 121.27 395.094 122.715 395.209C122.282 395.045 122.633 394.274 121.889 393.93C122.529 393.913 122.282 394.389 122.715 394.422L122.55 394.044L122.984 394.077C123.438 393.421 121.662 393.159 121.456 392.733L121.621 392.765L121.415 392.47L122.55 392.88C122.426 392.421 121.415 392.126 121.229 391.618H121.6L121.229 391.273C121.291 391.323 121.456 391.355 121.559 391.339C120.486 390.978 120.981 390.371 120.093 390.044C120.279 389.863 121.683 389.798 120.775 389.47L122.137 389.617C122.24 390.273 121.146 389.781 121.559 390.519C123.396 390.142 123.355 388.715 123.335 387.748C122.509 386.912 124.119 385.764 122.117 385.288L122.942 385.436L123.789 384.206C123.582 383.091 124.346 382.009 123.293 381.091L124.016 380.91C121.766 379.877 123.376 377.909 120.63 377.139C121.311 376.696 121.683 377.368 122.179 377.45C122.447 377.106 120.672 376.368 121.993 376.122C122.426 376.155 122.344 376.663 122.633 376.45C123.458 376.253 121.869 376.024 122.798 375.794C121.951 375.86 121.043 375.188 120.919 374.745C120.919 374.745 120.871 374.778 120.775 374.843C120.135 374.86 120.3 374.548 120.217 374.351C120.217 374.351 120.383 374.384 120.444 374.433C119.619 372.088 119.412 369.465 120.486 367.153L121.043 367.628C120.61 367.251 121.022 366.677 121.208 366.497L121.27 366.546C122.653 366.005 120.093 365.743 121.642 365.349L121.766 365.448C121.807 364.677 123.273 364.333 122.633 363.529C123.211 362.972 123.871 363.086 124.511 362.726C124.511 362.381 123.727 362.168 123.562 362.135L123.479 362.299C122.695 362.43 122.88 361.889 122.571 361.627C121.353 361.725 119.474 361.479 118.174 362.086C118.525 362.627 116.171 362.43 116.316 363.021C117.885 363.463 115.015 363.742 116.398 364.365C115.325 364.005 115.717 364.939 114.582 364.398C113.694 364.546 115.387 365.579 114.313 365.907C114.086 365.825 113.818 365.825 113.694 365.71C114.272 366.333 112.889 366.038 112.827 366.464L113.962 366.53C114.313 366.727 113.508 366.71 113.694 366.874C113.838 366.776 114.416 366.563 114.85 366.727C115.098 366.94 115.449 367.136 115.428 367.35C114.994 367.317 114.809 367.153 114.685 367.054C114.685 367.054 114.54 367.497 113.983 367.497C113.632 367.3 113.653 367.087 113.033 366.907C112.62 367.481 112.662 366.923 111.733 367.153C113.075 367.153 112.249 367.71 112.517 368.071C111.98 368.071 112.373 367.825 111.98 367.727C109.565 368.169 112.269 368.678 111.691 369.448C111.526 369.416 111.402 369.317 111.341 369.252C111.671 369.662 110.391 369.826 111.134 370.121C110.866 370.465 109.606 370.072 109.586 370.629C110.969 370.563 109.256 371.269 110.721 371.383L109.813 371.744C110.577 372.17 112.311 371.826 112.352 372.564C111.733 373.187 109.937 372.318 109.132 372.662L109.916 372.892L109.317 373.171L109.256 373.121C109.503 373.335 109.235 373.679 108.801 373.646C108.471 373.597 108.492 373.384 108.161 373.318C108.863 373.695 106.014 374.45 108.161 374.958C107.749 375.122 107.707 375.515 107.026 375.417C107.976 375.663 106.613 376.27 107.212 376.565C106.881 376.499 106.324 376.713 106.551 376.926C106.943 376.696 107.294 376.876 107.81 377.106C107.088 377.286 107.604 377.975 106.427 377.991C107.026 378.401 107.872 378.319 108.698 378.467C107.976 378.647 108.017 379.385 106.696 379.156C106.881 378.975 107.191 378.549 106.283 378.565C105.746 378.91 106.634 378.762 106.737 379.074C106.489 379.041 105.891 379.221 105.498 379.139C105.622 379.336 105.581 379.582 105.333 379.828C105.994 379.467 106.242 380.156 106.799 379.959L105.87 379.5C105.87 379.024 106.613 379.451 106.985 379.303C107.15 380.156 108.554 380.09 109.09 380.91C108.843 381.041 108.45 381.271 108.388 381.353C108.347 381.091 107.109 381.041 106.861 381.173C107.852 381.681 106.097 381.91 105.829 382.255C106.159 381.96 106.943 382.189 107.232 382.32C107.872 383.124 106.737 382.583 106.118 382.861C106.118 384.026 104.425 384.649 105.168 385.633L106.365 385.272L105.313 385.042C106.18 384.764 107.707 385.288 108.388 385.534C108.017 385.551 108.161 386.141 107.583 385.879L107.996 386.469C108.471 386.42 108.306 386.043 108.781 386.338C108.43 386.502 108.12 387.043 107.521 386.649C107.46 386.944 107.79 387.338 108.43 387.322C108.43 387.797 107.067 387.174 106.654 386.928C106.551 387.305 105.622 387.174 105.333 387.043L105.416 387.568C105.127 387.436 104.693 387.404 104.404 387.272C103.971 387.584 105.147 387.912 104.198 388.141L105.085 388.338C104.239 389.224 104.115 389.125 103.909 389.994L104.59 389.896C105.725 390.65 103.455 390.306 103.867 391.24C104.218 391.782 104.487 392.126 105.56 392.142C105.932 392.47 105.292 392.487 104.858 392.585C105.436 392.864 106.489 393.421 105.787 393.733C105.478 393.471 105.23 393.257 105.085 393.011C104.012 393.011 104.755 393.782 104.218 394.11C104.693 394.405 105.911 395.356 106.778 395.897C107.666 395.75 108.946 395.914 109.772 396.406C109.111 396.291 109.028 396.93 108.533 397.193C107.914 396.996 106.881 397.734 106.696 397.094C107.047 396.947 107.976 396.93 107.666 396.652C106.985 396.75 106.159 397.078 105.519 397.455C105.189 397.406 104.776 397.16 104.796 396.947C105.085 397.078 105.292 397.029 105.56 397.029L105.684 397.094Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.806 409.77C103.806 409.77 103.991 409.868 104.136 409.885C104.053 409.835 103.95 409.802 103.806 409.77Z\",\n    fill: \"#7E6A5E\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M103.517 418.705C103.517 418.705 103.704 418.705 103.808 418.705C103.745 418.705 103.662 418.688 103.517 418.705Z\",\n    fill: \"#7E6A5E\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.79,\n    filter: \"url(#filter2_d_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.338 12.5234L230.118 447.659\",\n    stroke: \"black\",\n    strokeWidth: 0.1,\n    strokeMiterlimit: 10\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.79,\n    filter: \"url(#filter3_d_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M233.037 18.6758L229.816 453.811\",\n    stroke: \"black\",\n    strokeWidth: 0.1,\n    strokeMiterlimit: 10\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M119.331 19.0332H66.9104V451.36H119.331V19.0332Z\",\n    fill: \"#6B594A\",\n    fillOpacity: 0.26\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.79,\n    filter: \"url(#filter4_d_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M66.8753 25.5469L63.6343 460.682\",\n    stroke: \"black\",\n    strokeWidth: 0.1,\n    strokeMiterlimit: 10\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.34\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.714 308.801C123.714 308.801 123.714 308.883 123.714 308.932C123.777 309.031 123.84 309.129 123.871 309.228L123.714 308.801Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.083 331.771C123.083 331.771 123.083 331.87 123.083 331.919C123.114 331.919 123.145 331.919 123.083 331.771Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.035 123.955C125.035 123.955 125.035 124.021 125.035 124.054C125.035 123.972 125.035 123.889 125.066 123.807V123.955H125.035Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.128 124.429C125.065 124.937 125.034 124.282 125.034 124.068C124.939 124.626 124.939 125.183 124.971 125.757C125.065 125.757 125.065 124.691 125.128 124.429Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M125.382 59.6759L125.54 59.8079C125.476 59.6924 125.445 59.6594 125.382 59.6759Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M123.869 309.227L123.93 309.391C123.93 309.391 123.899 309.276 123.869 309.227Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M122.738 352.973C122.738 352.973 122.643 353.022 122.611 353.088C122.611 353.121 122.611 353.138 122.611 353.154L122.738 352.989V352.973Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.729 382.081C121.729 382.081 121.761 382.179 121.792 382.179C121.855 381.687 121.887 380.375 121.887 378.686L121.698 378.588V382.081H121.729Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M116.974 413.89L117.383 410.791C117.446 420.744 117.005 425.401 117.226 433.911L117.163 433.436C117.068 434.682 117.918 435.387 116.722 449.079H116.69C116.69 449.555 116.753 449.555 116.659 450.506L116.911 448.144C117.005 449.571 117.163 450.801 117.163 452.703C117.131 453.096 117.037 453.244 116.974 453.277V457.917L116.722 459.344C116.848 460.77 117.352 460.114 117.037 463.919C117.415 462.492 117.226 465.804 117.415 465.329C117.383 465.525 117.289 465.952 117.226 466.313C117.226 468.575 117.289 472.822 117.478 473.872C117.478 473.872 118.328 465.05 118.737 462.672C118.611 465.853 118.768 463.509 118.894 462.886L118.8 462.672C118.894 460.77 119.146 460.77 119.209 459.819C119.209 459.819 119.178 459.852 119.146 459.868V459.983C119.146 460.065 119.115 460.016 119.083 459.918C119.02 459.934 118.989 459.852 119.02 459.327V459.426C119.02 458.639 119.083 457.261 119.083 456.655H119.272C118.926 455.228 119.933 447.161 119.965 445.258C120.217 443.356 119.965 440.995 120.091 438.618C120.185 434.83 120.374 436.732 120.563 434.83C120.721 432.452 120.343 435.305 120.343 434.354L120.626 431.517C120.626 433.174 120.752 432.272 120.847 431.977C120.91 429.517 121.287 425.647 120.941 424.877C121.161 421.564 121.319 421.548 121.35 420.121C121.287 420.597 121.193 421.548 121.13 421.548C121.319 420.22 121.098 420.908 121.067 421.45C120.941 419.416 121.886 410.939 121.476 410.513H121.539C121.224 410.037 120.941 410.791 120.784 409.381L120.941 408.43L120.815 407.003C120.941 406.052 121.004 406.512 121.035 406.512C120.91 404.2 121.13 400.969 121.193 398.149L120.311 401.117C120.532 398.756 120.972 394.476 120.721 394L121.035 392.574C121.634 387.835 120.847 389.262 121.035 387.36L121.382 384.982V387.36C121.539 384.982 121.634 384.031 121.854 382.145V382.129C121.854 382.26 121.854 382.342 121.791 382.358V382.03C121.634 381.735 121.539 380.505 121.571 378.833C121.634 376.455 121.445 374.602 121.791 370.815L121.476 369.864L121.697 367.01H121.949C121.917 369.798 121.949 375.045 121.917 378.636L122.043 378.702C122.043 376.57 121.98 374.16 122.043 372.75C122.106 372.061 122.389 370.306 122.547 371.585L122.326 370.274C122.389 363.174 122.358 363.141 122.736 355.729L122.61 356.369C122.547 354.893 122.484 353.433 122.704 353.024C122.799 348.58 123.019 343.972 123.365 341.086L123.082 340.447C123.082 339.512 123.586 338.102 123.176 337.643L123.082 335.642C123.114 334.363 122.956 333.576 123.145 332.117C123.145 332.035 123.145 331.937 123.176 331.838C123.334 328.936 122.925 331.871 123.114 328.542C123.334 327.477 122.767 327.362 122.83 325.738L123.271 324.115C123.554 321.18 123.114 320.672 123.176 316.425C123.365 314.375 123.712 313.391 124.027 314.752C123.649 312.883 123.775 313.9 123.617 311.44C123.775 311.063 123.806 311.325 123.964 311.866C124.184 309.669 123.838 310.522 123.869 308.866C123.586 308.39 123.114 307.833 123.082 307.291L122.988 307.931C122.862 306.176 122.799 304.274 122.988 302.241L123.145 302.323L123.082 300.159L123.271 300.027V296.928L123.176 297.355C123.176 296.633 123.114 294.239 123.239 292.878L123.334 292.927C123.712 289.09 123.334 285.909 123.334 281.417L123.554 282.007C123.775 280.465 123.208 281.58 123.365 279.76L123.649 279.662C123.302 278.055 123.743 277.58 123.901 276.481L123.554 277.006L123.649 274.923C123.806 272.628 124.121 273.513 124.278 273.857L124.027 272.283L124.341 271.972C123.995 270.824 124.404 270.824 124.247 268.823C124.373 268.659 124.436 269.168 124.499 268.479L124.09 265.167L124.247 267.167L123.806 266.921C123.491 264.839 123.901 264.101 123.806 262.625L123.932 263.642C123.838 261.215 124.058 261.084 124.153 259.723C124.058 260.149 123.932 260.789 123.869 259.821C123.869 259.1 124.027 259.428 124.09 258.755C123.775 258.591 123.649 256.853 123.806 255.279C123.838 255.296 123.901 255.328 123.932 255.443C123.901 255.033 123.806 254.836 123.901 254.131L124.247 254.541L123.932 253.197C124.027 252.295 123.806 250.983 124.027 251.114L124.09 251.623L124.247 244.818L124.53 244.719C124.153 244.047 124.719 241.014 124.247 241.243C124.499 239.964 124.121 236.193 124.625 236.947C124.719 232.487 124.247 230.06 124.562 224.633C125.034 222.698 124.94 217.401 125.034 213.909C124.94 207.087 124.814 202.693 124.751 195.724C125.412 191.543 124.656 185.279 125.066 180.77L124.845 179.54C125.286 176.539 124.845 171.964 125.286 167.767C125.192 166.734 125.16 166.193 125.16 165.963C125.16 166.16 125.097 166.439 124.94 166.537C125.066 165.34 124.94 162.913 125.255 163.077V163.389C125.601 163.569 125.192 159.748 125.475 158.404L125.129 159.142L125.223 156.863L125.286 157.469C124.656 147.598 125.758 143.138 125.192 133.857C125.538 135.087 125.034 132.021 125.412 131.906C125.947 129.561 125.349 127.577 125.255 125.658C125.255 125.658 125.223 125.642 125.192 125.527L125.286 122.182C125.758 124.183 124.908 119.772 125.286 121.608C125.758 112.869 125.506 101.472 125.79 91.3553L125.664 91.798C125.727 89.24 125.601 86.0425 125.821 84.0912C126.042 82.14 125.538 79.8279 125.538 79.0737C125.349 76.942 125.79 75.0071 125.758 75.909C125.727 73.6298 125.286 71.4817 125.506 68.317C125.947 67.2348 125.192 59.6757 125.664 59.5937V59.5609C126.01 55.5107 125.475 51.6738 125.821 47.3121C125.821 47.3121 125.853 47.3941 125.884 47.5416L124.53 38.6543L122.893 41.1795L121.508 48.8698V69.7436L120.847 86.4033L120.563 126.954L120.878 129.856C120.154 137.825 120.784 148.041 120.217 156.617L120.532 156.797C120.532 159.224 120.343 159.06 120.28 159.65C120.091 182.164 120.28 205.333 119.619 225.584C119.398 227.535 119.43 233.471 119.209 235.012C119.524 241.587 119.43 248.556 119.335 255.148V254.902V258.001C119.335 258.132 119.272 258.149 119.241 258.05C119.493 261.543 119.146 267.069 118.989 271.349V271.103C118.611 296.108 118.926 319.311 118.233 344.103C117.604 355.631 118.139 369.044 117.572 382.26C117.226 384.687 117.163 411.447 117.289 413.808L116.974 413.89Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.161 398.017C121.161 398.017 121.161 398.131 121.161 398.197L121.35 397.541L121.161 398.017Z\",\n    fill: \"#202020\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.877 433.419C120.934 431.828 120.877 431.746 120.877 431.976C120.877 432.55 120.877 433.058 120.877 433.419Z\",\n    fill: \"#202020\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.79,\n    filter: \"url(#filter5_d_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M122.552 33.3574L119.332 468.493\",\n    stroke: \"black\",\n    strokeWidth: 0.1,\n    strokeMiterlimit: 10\n  }))))), /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter6_d_42_3399)\"\n  }, _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5733 140.075L10.4739 194.357L301.681 201.435L303.78 147.152L12.5733 140.075Z\",\n    fill: \"#5D5042\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask1_42_3399\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 10,\n    y: 140,\n    width: 294,\n    height: 62\n  }, _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5726 140.077L10.4731 194.359L301.68 201.437L303.779 147.154L12.5726 140.077Z\",\n    fill: \"white\"\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask1_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.5\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M99.2717 170.611C99.0791 170.557 98.9857 170.663 99.2717 170.611Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M252.479 163.391C252.479 163.391 252.561 163.386 252.623 163.382C252.714 163.048 252.809 162.762 252.891 162.543L252.479 163.391Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M277.249 164.647C277.249 164.647 277.359 164.706 277.404 164.737C277.384 164.539 277.406 164.339 277.249 164.647Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M195.808 168.238C195.599 168.218 195.484 168.308 195.391 168.413C195.507 168.339 195.624 168.266 195.808 168.238Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.1733 173.786C54.1733 173.786 54.2353 173.782 54.2733 173.747C54.1841 173.686 54.0965 173.642 54.0039 173.549L54.1717 173.77L54.1733 173.786Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M54.633 173.212C55.1943 173.44 54.5143 173.68 54.274 173.761C54.8961 174.182 55.4994 174.21 56.0971 173.975C56.0668 173.467 54.9193 173.589 54.633 173.212Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199.474 192.988C199.355 193.045 199.213 193.071 199.115 193.126C199.302 193.131 199.42 193.074 199.474 192.988Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M252.89 162.542L253.044 162.219C253.044 162.219 252.938 162.407 252.89 162.542Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M300.051 164.451C300.076 164.696 300.137 164.89 300.196 165.067C300.217 165.066 300.238 165.064 300.258 165.063L300.051 164.451Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M366.824 188.852L363.385 186.981C374.028 185.73 379.12 187.562 388.188 185.671L387.694 186.113C389.041 186.538 389.585 182.062 404.581 187.032L404.601 187.228C405.093 187.18 405.074 186.787 406.118 187.28L403.519 186.145C405.018 185.606 406.305 184.603 408.335 184.409C408.77 184.611 408.955 185.011 409.008 185.336L413.97 184.841L415.564 186.072C417.064 185.335 416.214 182.642 420.37 184.023C418.738 182.202 422.342 182.829 421.792 181.893C422.002 182.127 422.491 182.458 422.894 182.761C425.308 182.46 429.838 181.794 430.919 180.804C430.919 180.804 421.234 177.158 418.597 175.237C422.035 175.644 419.483 174.983 418.78 174.37L418.579 174.843C416.509 174.448 416.453 173.267 415.409 172.972C415.418 173.07 415.45 173.183 415.483 173.296L415.612 173.14C415.715 173.347 415.668 173.498 415.556 173.62C415.583 173.882 415.518 174.067 414.955 174.02L415.046 173.899C414.197 174.101 412.712 173.965 412.063 173.891L412.006 172.908C410.584 174.84 401.685 170.355 399.634 170.354C397.527 169.171 395.062 170.808 392.481 170.265C388.403 170.079 390.375 168.885 388.287 168.096C385.705 167.553 388.856 169.228 387.83 169.326L384.699 168.044C386.462 167.867 385.473 167.304 385.125 166.932C382.467 166.854 378.217 165.166 377.507 167.168C373.902 166.328 373.844 165.542 372.307 165.491C372.838 165.836 373.862 166.133 373.901 166.525C372.431 165.697 373.221 166.766 373.819 166.942C371.675 167.867 362.332 163.706 361.991 165.883L361.952 165.49C361.555 167.111 362.435 168.651 360.956 169.6L359.914 168.91L358.414 169.646C357.37 169.153 357.843 168.712 357.844 168.515C355.401 169.344 351.885 168.564 348.849 168.444L352.262 172.734C349.662 171.797 344.975 169.874 344.54 171.316L342.947 169.888C337.71 167.226 339.458 171.228 337.37 170.439L334.731 168.912L337.274 168.866C334.693 168.125 333.629 167.633 331.563 166.646C331.563 166.646 331.545 166.68 331.547 166.696C331.698 166.752 331.788 166.829 331.798 166.927L331.452 166.982C331.181 167.788 329.873 168.381 328.094 168.396C325.531 168.246 323.607 169.503 319.452 167.924L318.522 169.595L315.409 168.707L315.34 167.395C318.342 167.386 323.947 166.701 327.802 166.522L327.846 165.927C325.555 166.007 322.991 166.663 321.491 166.577C320.743 166.345 318.789 165.038 320.125 164.114L318.788 165.433C311.184 165.817 311.129 165.886 303.115 164.651L303.841 165.279C302.291 165.723 300.737 166.134 300.24 165.097C295.448 165.022 290.474 164.367 287.293 162.793L286.684 164.361C285.664 164.311 284.047 162.028 283.666 164.207L281.545 164.95C280.17 164.873 279.371 165.779 277.754 164.944C277.645 164.885 277.558 164.842 277.447 164.766C277.452 164.815 277.455 164.848 277.46 164.897C274.315 164.307 277.557 166.273 273.938 165.499C272.734 164.44 272.771 167.498 271.002 167.199L269.15 165.046C265.925 163.869 265.509 166.116 260.946 166.258C258.721 165.543 257.56 163.676 258.92 161.961C257.018 164.056 258.082 163.314 255.475 164.368C255.02 163.541 255.291 163.359 255.855 162.583C253.446 161.684 254.444 163.38 252.665 163.394C252.224 164.985 251.751 167.499 251.185 167.634L251.895 168.099C250.06 169.005 248.033 169.446 245.807 168.732L245.852 167.939L243.539 168.415L243.334 167.408L240.022 167.832L240.484 168.099C239.713 168.263 237.167 168.688 235.669 168.207L235.696 167.646C231.474 166.022 228.195 168.434 223.361 168.758L223.947 167.585C222.243 166.493 223.588 169.368 221.59 168.854L221.448 167.448C219.777 169.363 219.159 167.133 217.933 166.47L218.573 168.305L216.305 167.988C213.807 167.456 214.667 165.707 214.984 164.733L213.374 166.233L212.963 164.614C211.831 166.545 211.714 164.348 209.608 165.436C209.401 164.824 209.924 164.462 209.174 164.213L205.73 166.619L207.816 165.533L207.683 167.927C205.553 169.805 204.643 167.758 203.079 168.482L204.144 167.74C201.58 168.396 201.375 167.389 199.898 166.907C200.376 167.337 201.102 167.966 200.06 168.312C199.287 168.459 199.604 167.485 198.856 167.253C198.766 168.838 196.931 169.744 195.205 169.047C195.223 168.816 195.243 168.601 195.353 168.462C194.925 168.736 194.738 169.143 193.958 168.798L194.317 167.015L192.958 168.746C191.981 168.298 190.623 169.618 190.69 168.429L191.213 168.067L183.883 167.874L183.742 166.468C183.09 168.434 179.704 165.853 180.051 168.282C178.598 167.009 174.673 169.38 175.349 166.623C170.539 166.566 168.077 169.272 162.185 168.132C159.99 165.87 154.347 166.804 150.587 166.681C143.314 167.882 138.633 168.903 131.193 169.885C126.533 166.792 120.033 171.35 115.101 169.672L113.847 171.002C110.525 169.058 105.738 171.714 101.121 169.869C100.042 170.464 99.4822 170.664 99.2179 170.713C99.4303 170.766 99.7446 171.009 99.8884 171.822C98.5708 171.281 96.0008 172.085 96.1058 170.45L96.4186 170.266C96.5237 168.631 92.5522 171.153 91.0274 169.785L91.9043 171.506L89.4383 171.284L90.0656 170.932C79.6577 175.146 74.5815 169.76 64.7993 173.605C66.0321 171.651 62.8761 174.664 62.6471 172.59C60.0098 170.043 58.0169 173.295 56.0025 174.064C56.0123 174.162 55.9827 174.279 55.8756 174.45L52.2589 174.318C54.287 171.623 49.7732 176.581 51.6333 174.276C42.1466 172.607 30.0016 174.99 19.0938 174.432L19.5949 175.091C16.8366 175.052 13.4501 175.975 11.2979 174.96C9.14577 173.945 6.80479 176.824 6.01045 176.957C3.77449 178.201 1.57992 175.938 2.56187 176.024C0.13767 176.425 -2.0575 178.9 -5.50444 177.983C-6.78044 175.794 -14.6772 180.474 -14.8888 177.954L-14.9086 178.169C-19.3604 176.527 -23.3106 179.673 -28.0752 178.215C-28.0752 178.215 -27.9904 178.028 -27.8421 177.855L-37.0066 185.789L-33.8722 194.111L-25.2611 200.671L-2.90785 198.479L15.1128 200.576L58.6235 198.309L61.6326 196.308C70.3468 199.358 81.1333 195.203 90.4743 197.275L90.5793 195.64C93.1722 195.475 93.0443 196.47 93.7134 196.74C117.872 195.618 142.655 192.664 164.515 194.024C166.668 195.039 173.025 194.208 174.707 195.285C181.67 193.067 189.166 192.855 196.247 192.833L195.996 193.013L199.308 192.589C199.465 192.711 199.485 192.907 199.375 193.046C203.069 191.479 209.055 192.728 213.677 193.174L213.426 193.355C240.293 192.802 265.071 188.976 291.805 190.405C304.313 192.671 318.54 188.544 332.863 190.316C335.544 191.857 364.221 189.741 366.725 188.891L366.824 188.852Z\",\n    fill: \"#72665A\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.4\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M207.522 178.05C207.788 178 207.677 178.14 207.522 178.05Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.724 172.619C78.724 172.619 78.6417 172.624 78.6006 172.627C78.4597 173.08 78.3344 173.483 78.2199 173.786L78.7257 172.635L78.724 172.619Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M58.3696 168.304C58.3696 168.304 58.2993 168.226 58.2512 168.163C58.2378 168.444 58.1813 168.711 58.3696 168.304Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M126.788 171.561C126.957 171.6 127.073 171.51 127.161 171.356C127.046 171.446 126.93 171.536 126.788 171.561Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.641 178.181C245.641 178.181 245.58 178.185 245.542 178.22C245.613 178.315 245.663 178.394 245.738 178.521L245.643 178.197L245.641 178.181Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M245.138 178.956C244.728 178.587 245.341 178.301 245.541 178.223C245.101 177.56 244.616 177.475 244.062 177.724C243.988 178.436 244.959 178.408 245.138 178.956Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M303.776 179.46L303.538 180.594C303.697 180.123 303.766 179.773 303.776 179.46Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M78.1969 173.769L77.9927 174.211C78.0446 174.109 78.1121 173.956 78.1969 173.769Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.3582 166.251C39.3853 165.904 39.3779 165.625 39.3533 165.38C39.3328 165.381 39.3123 165.382 39.3123 165.382L39.4009 166.265L39.3582 166.251Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13.7275 159.519C13.6995 159.653 13.6081 159.774 13.6006 159.906C14.0153 160.324 15.1701 160.481 16.6888 160.549L16.9435 159.167L13.7291 159.536L13.7275 159.519Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M-11.3579 125.023L-8.88201 128.024C-17.9883 128.7 -21.8627 125.591 -29.7635 127.342L-29.262 126.767C-30.308 126.044 -31.6268 132.297 -43.1092 123.748L-43.0754 123.466C-43.5075 123.493 -43.5768 124.04 -44.3413 123.234L-42.3935 125.1C-43.7403 125.712 -45.0009 126.977 -46.7327 127.054C-47.0569 126.712 -47.1144 126.14 -47.0986 125.679L-51.3254 125.865L-52.4072 123.959C-53.7878 124.853 -53.6268 128.725 -56.805 126.36C-55.8041 129.11 -58.6649 127.844 -58.4035 129.209C-58.5409 128.872 -58.8832 128.351 -59.1382 127.874C-61.1927 128.037 -65.0986 128.532 -66.2118 129.819C-66.2118 129.819 -58.8862 135.951 -57.0532 138.943C-59.8384 138.018 -57.8328 139.223 -57.3672 140.148L-57.1003 139.506C-55.4494 140.273 -55.6334 141.946 -54.8352 142.471C-54.8277 142.339 -54.8235 142.174 -54.84 142.011L-54.9832 142.234C-55.0144 141.923 -54.9724 141.723 -54.8431 141.567C-54.8175 141.203 -54.7203 140.934 -54.2511 141.069L-54.3582 141.24C-53.6116 141.044 -52.4165 141.396 -51.884 141.543L-52.0326 142.951C-50.4695 140.368 -43.9444 147.603 -42.2463 147.808C-40.7324 149.686 -38.3711 147.628 -36.3202 148.665C-32.9579 149.357 -34.84 150.825 -33.2567 152.156C-31.2075 153.177 -33.5065 150.494 -32.6405 150.455L-30.2945 152.576C-31.8 152.639 -31.0874 153.548 -30.8653 154.11C-28.6727 154.497 -25.4708 157.304 -24.483 154.56C-21.6355 156.106 -21.7519 157.216 -20.486 157.448C-20.8505 156.912 -21.6693 156.388 -21.6017 155.825C-20.5378 157.139 -21.0073 155.557 -21.4517 155.256C-19.4907 154.161 -12.5489 161.008 -11.8204 157.951L-11.888 158.515C-11.2231 156.268 -11.6587 153.993 -10.2442 152.817L-9.51528 153.89L-8.13464 152.996C-7.34963 153.802 -7.85108 154.376 -7.88491 154.658C-5.67786 153.745 -2.9225 155.199 -0.430243 155.682L-2.4211 149.261C-0.439508 150.846 3.06931 154.029 3.72099 152.063L4.76899 154.25C8.59521 158.531 7.94914 152.716 9.51185 154.048L11.4125 156.477L9.2807 156.283C11.2961 157.586 12.0606 158.393 13.6084 159.989C13.6067 159.973 13.6257 159.955 13.643 159.921C13.5286 159.813 13.4759 159.702 13.4628 159.571L13.7715 159.551C14.1554 158.425 15.3467 157.708 16.8562 157.891C18.9525 158.351 20.8042 156.786 23.9502 159.448L25.0472 157.174L27.461 158.732L27.2538 160.587C24.7607 160.301 19.9536 160.689 16.7311 160.564L16.5885 161.412C18.5063 161.537 20.7585 160.868 22.0071 161.134C22.5865 161.542 23.9506 163.577 22.6612 164.761L24.0405 163.028C30.4426 163.264 30.4961 163.178 36.9239 165.731L36.4534 164.758C37.8372 164.308 39.2004 163.859 39.4164 165.392C43.3894 165.979 47.3877 167.436 49.732 169.952L50.5319 167.812C51.3574 167.99 52.2783 171.386 53.0085 168.346L54.9118 167.501C56.0542 167.741 56.8875 166.553 58.0782 167.892C58.1481 167.97 58.2197 168.064 58.2929 168.175C58.2864 168.11 58.2798 168.044 58.2955 167.994C60.7916 169.135 58.4911 166.024 61.3304 167.489C62.1152 169.117 62.6952 164.787 64.1017 165.388L65.2136 168.624C67.6494 170.608 68.4554 167.497 72.291 167.747C74.0101 168.987 74.5962 171.73 73.1287 174.027C75.1091 171.27 74.0849 172.206 76.4682 170.986C76.672 172.19 76.4258 172.42 75.8057 173.463C77.6366 174.991 77.1353 172.473 78.6226 172.642C79.2925 170.445 80.1825 166.934 80.6887 166.82L80.1794 166.079C81.8935 165 83.6715 164.558 85.3701 165.799L85.1714 166.914L87.1774 166.474L87.135 167.907L89.9683 167.662L89.6375 167.255C90.3067 167.114 92.5079 166.761 93.6476 167.593L93.5206 168.391C96.7143 171.116 99.9065 168.051 103.988 168.072L103.278 169.663C104.486 171.379 103.92 167.188 105.483 168.109L105.352 170.107C107.087 167.579 107.161 170.798 108.055 171.86L107.871 169.207L109.679 169.882C111.644 170.892 110.579 173.279 110.155 174.622L111.78 172.66L111.807 174.994C113.139 172.377 112.789 175.491 114.75 174.183C114.797 175.068 114.284 175.528 114.865 175.952L118.203 172.894L116.244 174.219L116.839 170.859C118.996 168.419 119.338 171.408 120.763 170.544L119.738 171.481C122.011 170.81 121.971 172.26 123.11 173.093C122.796 172.438 122.326 171.465 123.241 171.094C123.91 170.953 123.465 172.297 124.026 172.722C124.423 170.493 126.115 169.398 127.413 170.566C127.362 170.882 127.29 171.199 127.184 171.387C127.585 171.049 127.84 170.49 128.415 171.062L127.773 173.537L129.241 171.24C129.978 171.983 131.357 170.25 131.05 171.931L130.537 172.391L136.584 173.422L136.453 175.421C137.362 172.715 139.667 176.697 139.838 173.249C140.78 175.196 144.521 172.244 143.414 176.065C147.406 176.634 149.968 173.066 154.664 175.285C156.041 178.685 160.937 177.947 164.018 178.524C170.301 177.566 174.389 176.616 180.765 175.981C184.027 180.824 190.343 175.044 194.11 177.914L195.426 176.169C197.807 179.259 202.305 175.996 205.783 179.082C206.786 178.344 207.303 178.13 207.526 178.083C207.37 177.978 207.148 177.613 207.177 176.46C208.177 177.351 210.472 176.481 210.06 178.778L209.751 178.995C209.339 181.291 213.144 178.138 214.141 180.229L213.742 177.705L215.746 178.269L215.147 178.701C224.639 173.822 227.795 181.945 236.668 177.5C235.274 180.122 238.463 176.202 238.263 179.159C239.955 183.016 242.248 178.627 244.086 177.753C244.092 177.605 244.138 177.438 244.26 177.216L247.237 177.784C245.032 181.395 249.738 174.845 247.746 177.9C255.309 181.236 265.862 179.086 274.835 181L274.549 180.015C276.842 180.363 279.829 179.384 281.425 181.043C283.018 182.685 285.514 178.875 286.208 178.765C288.313 177.25 289.69 180.65 288.88 180.422C290.981 180.107 293.283 176.836 295.976 178.491C296.611 181.724 304.084 175.92 303.78 179.493L303.853 179.192C307.237 181.955 311.14 177.923 314.811 180.454C314.811 180.454 314.712 180.707 314.55 180.948L323.728 170.677L322.745 158.616L316.86 148.478L297.848 149.289L283.261 144.474L246.648 143.244L243.751 145.748C237.1 140.56 227.307 145.327 219.959 141.451L219.548 143.747C217.352 143.738 217.665 142.32 217.165 141.875C196.864 140.992 175.677 142.632 157.78 138.471C156.186 136.828 150.751 137.354 149.543 135.638C143.325 138.056 137.046 137.599 131.156 136.903L131.401 136.658L128.568 136.903C128.466 136.712 128.479 136.432 128.586 136.26C125.207 138.087 120.476 135.722 116.721 134.628L116.967 134.399C94.5281 132.434 73.1748 135.302 51.2212 130.543C41.2653 126.059 28.6366 130.43 17.0771 126.475C15.1542 124.031 -9.11131 124.091 -11.3562 125.039L-11.3579 125.023Z\",\n    fill: \"#72665A\"\n  }))))), /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter7_d_42_3399)\"\n  }, _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M302.152 268.014H10.8066V322.322H302.152V268.014Z\",\n    fill: \"#5D5042\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask2_42_3399\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 10,\n    y: 268,\n    width: 293,\n    height: 55\n  }, _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M302.152 268.014H10.8062V322.322H302.152V268.014Z\",\n    fill: \"white\"\n  }))), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask2_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.5\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M115.307 308.171C115.1 308.105 115.017 308.221 115.307 308.171Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M268.731 305.466C268.731 305.466 268.813 305.466 268.875 305.466C268.978 305.138 269.082 304.86 269.185 304.646L268.731 305.483V305.466Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M293.42 307.469C293.42 307.469 293.524 307.518 293.566 307.551C293.566 307.353 293.566 307.155 293.42 307.469Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M211.879 308.633C211.672 308.617 211.548 308.683 211.466 308.798C211.59 308.732 211.714 308.666 211.879 308.633Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.076 310.01C70.076 310.01 70.1382 310.01 70.1796 309.977C70.0967 309.911 69.9931 309.862 69.9102 309.779L70.076 310.01Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M70.5719 309.436C71.1086 309.682 70.4274 309.895 70.1797 309.96C70.7784 310.403 71.377 310.436 71.9963 310.239C71.9963 309.731 70.8403 309.813 70.5719 309.436Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M269.184 304.631L269.37 304.318C269.37 304.318 269.246 304.499 269.184 304.631Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M381.817 334.277L378.473 332.292C389.166 331.358 394.182 333.342 403.328 331.719L402.832 332.145C404.174 332.604 404.897 328.144 419.657 333.555V333.752C420.173 333.719 420.173 333.326 421.185 333.85L418.625 332.637C420.152 332.129 421.474 331.194 423.517 331.046C423.951 331.259 424.095 331.669 424.137 331.997L429.132 331.653L430.66 332.932C432.188 332.227 431.486 329.538 435.573 331.03C434.025 329.161 437.596 329.898 437.08 328.947C437.287 329.177 437.761 329.521 438.133 329.849C440.548 329.62 445.131 329.095 446.246 328.128C446.246 328.128 436.75 324.192 434.19 322.192C437.617 322.7 435.098 321.962 434.417 321.339L434.19 321.815C432.146 321.355 432.146 320.175 431.114 319.847C431.114 319.945 431.155 320.06 431.176 320.175L431.3 320.011C431.403 320.224 431.341 320.372 431.238 320.486C431.259 320.732 431.176 320.946 430.619 320.864L430.722 320.732C429.876 320.913 428.389 320.732 427.749 320.634V319.65C426.222 321.536 417.531 316.797 415.487 316.731C413.443 315.485 410.904 317.043 408.344 316.436C404.277 316.125 406.3 314.993 404.257 314.141C401.697 313.518 404.773 315.288 403.761 315.354L400.706 313.977C402.481 313.862 401.511 313.255 401.181 312.878C398.538 312.714 394.368 310.91 393.563 312.878C389.992 311.943 389.992 311.156 388.444 311.058C388.96 311.419 389.971 311.747 389.992 312.14C388.567 311.271 389.311 312.353 389.889 312.55C387.721 313.419 378.576 308.976 378.122 311.14V310.746C377.626 312.353 378.431 313.928 376.924 314.829L375.913 314.108L374.385 314.813C373.353 314.288 373.869 313.862 373.869 313.665C371.371 314.419 367.903 313.534 364.889 313.321L368.089 317.715C365.55 316.699 360.946 314.649 360.43 316.059L358.902 314.583C353.783 311.763 355.352 315.813 353.308 314.977L350.748 313.37H353.308C350.748 312.583 349.736 312.058 347.693 311.009C347.693 311.009 347.672 311.042 347.672 311.058C347.817 311.124 347.899 311.206 347.92 311.304L347.569 311.337C347.259 312.14 345.938 312.698 344.142 312.649C341.582 312.435 339.6 313.616 335.513 311.927L334.501 313.583L331.446 312.599V311.288C334.439 311.353 340.075 310.845 343.936 310.779L343.998 310.173C341.706 310.173 339.126 310.763 337.598 310.632C336.855 310.369 334.976 309.008 336.339 308.123L334.935 309.402C327.317 309.566 327.255 309.631 319.308 308.156L320.009 308.812C318.441 309.205 316.851 309.582 316.417 308.516C311.649 308.303 306.694 307.5 303.577 305.844L302.896 307.385C301.884 307.303 300.357 304.975 299.882 307.139L297.735 307.828C296.352 307.713 295.505 308.598 293.936 307.713C293.833 307.664 293.73 307.598 293.647 307.533C293.647 307.582 293.647 307.615 293.647 307.664C290.53 306.991 293.689 309.041 290.097 308.172C288.941 307.073 288.837 310.14 287.083 309.795L285.328 307.582C282.169 306.319 281.633 308.533 277.07 308.549C274.882 307.762 273.809 305.876 275.254 304.188C273.251 306.221 274.345 305.516 271.703 306.5C271.29 305.663 271.579 305.483 272.157 304.729C269.804 303.761 270.712 305.483 268.937 305.434C268.421 307.008 267.843 309.517 267.265 309.615L267.946 310.107C266.067 310.96 264.024 311.353 261.835 310.566L261.918 309.779L259.585 310.189L259.441 309.172L256.117 309.5L256.571 309.779C255.787 309.91 253.227 310.271 251.761 309.746L251.823 309.189C247.694 307.451 244.288 309.746 239.437 309.943L240.077 308.795C238.425 307.664 239.623 310.566 237.661 309.992L237.558 308.582C235.824 310.435 235.329 308.188 234.131 307.5L234.689 309.353L232.439 308.976C229.961 308.369 230.911 306.647 231.283 305.68L229.61 307.139L229.28 305.516C228.062 307.418 228.041 305.221 225.894 306.237C225.709 305.614 226.266 305.27 225.523 305.007L221.972 307.319L224.119 306.303L223.871 308.68C221.642 310.5 220.837 308.434 219.247 309.09L220.341 308.385C217.74 308.976 217.596 307.959 216.13 307.434C216.584 307.877 217.286 308.533 216.233 308.844C215.469 308.976 215.82 308.008 215.077 307.746C214.912 309.336 213.033 310.173 211.341 309.435C211.341 309.205 211.403 308.992 211.506 308.844C211.072 309.107 210.845 309.517 210.102 309.139L210.536 307.369L209.09 309.058C208.12 308.582 206.716 309.861 206.84 308.664L207.398 308.303L200.09 307.893L199.987 306.483C199.264 308.434 196.002 305.745 196.25 308.172C194.867 306.86 190.821 309.123 191.626 306.385C186.816 306.188 184.235 308.828 178.393 307.5C176.308 305.188 170.611 305.942 166.874 305.712C159.545 306.696 154.818 307.582 147.345 308.336C142.824 305.106 136.115 309.467 131.263 307.647L129.942 308.943C126.722 306.893 121.809 309.418 117.288 307.434C116.173 307.992 115.595 308.172 115.347 308.221C115.554 308.287 115.863 308.533 115.966 309.336C114.666 308.762 112.065 309.484 112.251 307.861L112.581 307.697C112.767 306.057 108.659 308.467 107.234 307.057L108.039 308.812L105.603 308.516L106.264 308.172C95.653 312.075 90.843 306.532 80.8927 310.107C82.2139 308.188 78.9315 311.107 78.787 309.025C76.2685 306.401 74.1422 309.599 72.0778 310.304C72.0778 310.402 72.0572 310.533 71.9333 310.681L68.3206 310.435C70.4676 307.795 65.7402 312.632 67.7013 310.386C58.3084 308.434 46.046 310.468 35.1668 309.582L35.6416 310.255C32.8753 310.123 29.4484 310.96 27.3634 309.877C25.2577 308.795 22.8011 311.615 21.9754 311.714C19.6839 312.878 17.5989 310.566 18.5692 310.681C16.1126 311.009 13.8211 313.419 10.4149 312.403C9.23819 310.173 1.14583 314.616 1.02197 312.091L0.980679 312.304C-3.37516 310.533 -7.48326 313.567 -12.19 311.96C-12.19 311.96 -12.1075 311.779 -11.9423 311.599L-21.4797 319.257L-18.7341 327.668L-10.4353 334.473L12.0045 332.948L29.9232 335.588L73.5022 334.605L76.5988 332.702C85.1659 335.998 96.1484 332.161 105.376 334.523L105.562 332.883C108.163 332.784 107.998 333.801 108.638 334.08C132.832 333.67 157.729 331.44 179.508 333.457C181.614 334.539 187.993 333.883 189.644 335.031C196.704 333.014 204.198 333.03 211.279 333.211L211.01 333.391L214.334 333.063C214.479 333.194 214.499 333.391 214.396 333.522C218.153 332.063 224.078 333.49 228.681 334.063L228.413 334.244C255.291 334.49 280.229 331.391 306.88 333.621C319.287 336.261 333.676 332.555 347.899 334.752C350.521 336.375 379.278 335.096 381.817 334.326V334.277Z\",\n    fill: \"#72665A\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.4\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M223.169 307.452C223.439 307.419 223.314 307.568 223.169 307.452Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M95.3227 293.891C95.3227 293.891 95.2401 293.891 95.1988 293.891C95.013 294.333 94.8479 294.727 94.7034 295.022L95.3227 293.907V293.891Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.4644 288.3C75.4644 288.3 75.4021 288.218 75.3605 288.152C75.319 288.432 75.2359 288.695 75.4644 288.3Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M143.341 295.876C143.506 295.925 143.63 295.843 143.733 295.695C143.609 295.777 143.485 295.86 143.341 295.876Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M261.175 309.994C261.175 309.994 261.114 309.994 261.072 310.027C261.134 310.126 261.175 310.208 261.237 310.339L261.175 310.011V309.994Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M260.597 310.732C260.225 310.338 260.865 310.092 261.071 310.027C260.7 309.338 260.225 309.223 259.647 309.437C259.502 310.142 260.473 310.174 260.597 310.732Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M94.683 295.008L94.4353 295.435C94.4972 295.337 94.5798 295.189 94.683 295.008Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M56.74 285.055C56.8017 284.71 56.8223 284.432 56.8223 284.186C56.8017 284.186 56.7811 284.186 56.7606 284.186V285.071L56.74 285.055Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.8441 276.726C31.8028 276.857 31.6996 276.972 31.679 277.103C32.0505 277.546 33.186 277.775 34.693 277.939L35.0852 276.578L31.8441 276.742V276.726Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.2915 240.749L12.4591 243.897C3.3139 243.995 -0.236826 240.65 -8.2879 241.896L-7.73051 241.355C-8.70077 240.568 -10.6413 246.717 -21.2315 237.469L-21.1696 237.19C-21.6031 237.19 -21.727 237.732 -22.4082 236.879L-20.6535 238.863C-22.0573 239.388 -23.4404 240.568 -25.1745 240.536C-25.4635 240.175 -25.4635 239.601 -25.4016 239.142L-29.6336 239.06L-30.5212 237.092C-31.9869 237.896 -32.214 241.765 -35.1454 239.207C-34.4229 242.011 -37.1479 240.568 -37.024 241.946C-37.1272 241.601 -37.4163 241.06 -37.6227 240.568C-39.6871 240.601 -43.63 240.847 -44.8687 242.06C-44.8687 242.06 -38.1801 248.636 -36.6524 251.735C-39.3361 250.636 -37.4575 251.964 -37.086 252.915L-36.7557 252.292C-35.1867 253.161 -35.5377 254.818 -34.7945 255.391C-34.7738 255.26 -34.7532 255.096 -34.7532 254.916L-34.9184 255.129C-34.9184 254.818 -34.8564 254.621 -34.7119 254.473C-34.65 254.113 -34.5261 253.85 -34.072 254.014L-34.1958 254.178C-33.432 254.031 -32.276 254.457 -31.7599 254.637L-32.0489 256.031C-30.2322 253.555 -24.452 261.18 -22.7798 261.491C-21.4586 263.459 -18.8988 261.557 -16.9583 262.721C-13.6759 263.623 -15.699 264.968 -14.2539 266.394C-12.3134 267.542 -14.3365 264.722 -13.4695 264.738L-11.3432 267.001C-12.8502 266.968 -12.2309 267.919 -12.0657 268.493C-9.91875 269.018 -7.00798 272.018 -5.74871 269.346C-3.06502 271.067 -3.2921 272.166 -2.05348 272.477C-2.36313 271.92 -3.12696 271.346 -3.00309 270.789C-2.07412 272.166 -2.38378 270.559 -2.79665 270.231C-0.732277 269.264 5.50215 276.528 6.53433 273.527L6.41047 274.084C7.29815 271.887 7.09171 269.592 8.61935 268.509L9.23866 269.624L10.7044 268.821C11.4063 269.674 10.8489 270.215 10.7869 270.493C13.0784 269.723 15.6795 271.346 18.1155 271.986L16.7736 265.459C18.5903 267.165 21.7694 270.559 22.6158 268.641L23.4416 270.887C26.8272 275.396 26.7652 269.559 28.1896 270.985L29.8411 273.527L27.7355 273.199C29.6141 274.626 30.2953 275.478 31.6784 277.167C31.6784 277.151 31.6991 277.134 31.7197 277.102C31.6165 276.987 31.5752 276.872 31.5752 276.741H31.8849C32.3803 275.642 33.6396 275.003 35.1259 275.281C37.1697 275.872 39.1721 274.429 42.0416 277.282L43.3628 275.085L45.613 276.79L45.2208 278.626C42.7641 278.184 37.9335 278.266 34.7337 277.938L34.5066 278.774C36.4059 279.02 38.718 278.495 39.9359 278.84C40.4727 279.282 41.6287 281.398 40.225 282.496L41.7732 280.857C48.1315 281.496 48.1935 281.414 54.3453 284.366L53.9737 283.365C55.3981 283.005 56.8019 282.644 56.8638 284.185C60.7655 285.021 64.6053 286.727 66.6903 289.383L67.7018 287.301C68.5069 287.53 69.0849 290.974 70.1171 287.989L72.0989 287.268C73.2137 287.579 74.1633 286.448 75.2161 287.858C75.2781 287.94 75.34 288.039 75.4019 288.153C75.4019 288.088 75.4019 288.022 75.4226 287.973C77.7966 289.268 75.8148 286.022 78.4985 287.661C79.1178 289.334 80.1294 285.054 81.4712 285.743L82.2557 289.039C84.4852 291.17 85.6 288.121 89.3984 288.612C90.988 289.957 91.2976 292.728 89.6049 294.925C91.855 292.302 90.7403 293.171 93.2382 292.105C93.3207 293.318 93.0524 293.532 92.3298 294.532C94.002 296.172 93.7543 293.63 95.22 293.892C96.1076 291.744 97.3463 288.301 97.8624 288.219L97.4288 287.448C99.2455 286.481 101.062 286.153 102.631 287.497L102.321 288.596L104.365 288.284L104.179 289.711L107.028 289.645L106.739 289.219C107.42 289.121 109.65 288.908 110.703 289.809L110.496 290.597C113.407 293.515 116.896 290.662 120.963 290.941L120.096 292.482C121.128 294.27 120.983 290.055 122.449 291.072L122.119 293.056C124.101 290.646 123.853 293.86 124.637 294.975L124.72 292.318L126.475 293.105C128.333 294.237 127.032 296.549 126.475 297.861L128.291 296.008L128.085 298.336C129.674 295.811 129.014 298.894 131.099 297.713C131.058 298.598 130.5 299.025 131.037 299.484L134.67 296.647L132.585 297.844L133.514 294.532C135.909 292.236 135.95 295.237 137.457 294.466L136.342 295.335C138.675 294.811 138.489 296.254 139.542 297.155C139.294 296.483 138.923 295.483 139.872 295.171C140.554 295.073 139.976 296.385 140.492 296.844C141.111 294.647 142.907 293.663 144.084 294.909C144.001 295.221 143.898 295.532 143.774 295.712C144.208 295.401 144.517 294.86 145.033 295.467L144.146 297.893L145.838 295.696C146.499 296.483 148.047 294.843 147.573 296.5L147.015 296.942L152.94 298.352L152.61 300.337C153.786 297.697 155.686 301.812 156.202 298.385C156.945 300.386 160.97 297.68 159.484 301.419C163.406 302.239 166.317 298.844 170.776 301.353C171.808 304.829 176.763 304.403 179.777 305.174C186.135 304.616 190.305 303.928 196.725 303.698C199.492 308.732 206.366 303.37 209.834 306.469L211.321 304.813C213.385 308.043 218.195 305.075 221.353 308.371C222.427 307.699 222.964 307.519 223.191 307.486C223.046 307.371 222.86 306.994 223.005 305.846C223.913 306.797 226.287 306.076 225.647 308.338L225.317 308.535C224.677 310.798 228.785 307.896 229.57 310.044L229.425 307.502L231.366 308.191L230.726 308.584C240.676 304.321 243.009 312.618 252.298 308.748C250.647 311.274 254.218 307.568 253.723 310.503C255.023 314.455 257.748 310.224 259.668 309.47C259.689 309.322 259.751 309.158 259.895 308.945L262.806 309.699C260.246 313.159 265.593 306.928 263.302 309.847C270.506 313.651 281.262 312.175 289.994 314.651L289.808 313.651C292.058 314.143 295.134 313.356 296.559 315.11C297.983 316.849 300.853 313.208 301.554 313.143C303.805 311.765 304.837 315.242 304.052 314.963C306.179 314.783 308.8 311.667 311.319 313.487C311.629 316.75 319.659 311.437 318.998 314.979L319.102 314.684C322.198 317.652 326.492 313.881 329.898 316.635C329.898 316.635 329.774 316.881 329.589 317.111L339.766 307.453L339.993 295.368L335.142 284.89L316.108 284.497L302.05 278.774L265.676 275.232L262.538 277.544C256.427 271.953 246.188 276.085 239.252 271.756L238.612 274.019C236.423 273.871 236.878 272.477 236.423 272.002C216.275 269.838 194.991 270.133 177.568 264.853C176.144 263.115 170.673 263.295 169.641 261.508C163.2 263.525 156.986 262.672 151.185 261.606L151.454 261.376L148.605 261.442C148.522 261.245 148.563 260.967 148.687 260.803C145.137 262.41 140.657 259.753 137.024 258.425L137.292 258.212C115.121 254.834 93.5478 256.343 72.1402 250.21C62.6647 245.11 49.6385 248.669 38.5115 243.995C36.8394 241.437 12.6449 239.962 10.3121 240.749H10.2915Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18.24 272.034C18.24 272.034 18.1367 272.001 18.0955 271.984L18.3845 273.427L18.24 272.034Z\",\n    fill: \"#72665A\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.28\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M192.245 306.253C192.245 306.253 192.204 306.253 192.183 306.253C192.142 306.515 192.101 306.728 192.039 306.892L192.245 306.236V306.253Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181.489 304.663C181.489 304.663 181.449 304.614 181.429 304.598C181.429 304.746 181.429 304.91 181.489 304.663Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M216.997 303.876C216.997 303.876 217.142 303.827 217.184 303.744C217.122 303.794 217.08 303.843 216.997 303.876Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.722 303.022C278.722 303.022 278.702 303.022 278.681 303.039C278.722 303.088 278.764 303.121 278.806 303.187L278.743 303.006L278.722 303.022Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M278.495 303.465C278.268 303.284 278.557 303.104 278.66 303.055C278.392 302.71 278.144 302.678 277.875 302.842C277.875 303.235 278.371 303.186 278.495 303.465Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M215.945 284.494C215.945 284.494 216.048 284.444 216.111 284.395C216.028 284.395 215.986 284.428 215.945 284.494Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M192.039 306.908L191.956 307.156C191.956 307.156 191.998 307.007 192.039 306.908Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M171.58 304.251C171.58 304.054 171.56 303.907 171.518 303.775H171.498L171.58 304.251Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M121.54 294.299C121.54 294.299 121.54 294.463 121.56 294.545L121.767 294.102C121.664 294.134 121.581 294.217 121.54 294.299Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M157.956 301.547C157.956 301.547 157.915 301.678 157.915 301.76C158.142 301.973 158.761 302.022 159.546 301.989L159.587 301.219L157.956 301.53V301.547Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M143.072 283.608L144.517 285.149C139.851 285.854 137.684 284.313 133.699 285.559L133.927 285.231C133.348 284.87 133.018 288.347 126.598 284.1V283.952C126.371 283.985 126.371 284.28 125.937 283.87L127.052 284.821C126.392 285.215 125.814 285.953 124.926 286.051C124.74 285.887 124.678 285.559 124.657 285.313L122.49 285.575L121.829 284.575C121.169 285.116 121.458 287.232 119.703 286.051C120.364 287.51 118.815 286.936 119.042 287.674C118.96 287.494 118.753 287.215 118.588 286.969C117.535 287.133 115.554 287.543 115.058 288.297C115.058 288.297 119.187 291.38 120.302 292.938C118.815 292.544 119.909 293.118 120.198 293.61L120.302 293.249C121.189 293.61 121.189 294.528 121.643 294.791C121.643 294.709 121.643 294.627 121.623 294.528L121.561 294.659C121.52 294.496 121.561 294.381 121.582 294.299C121.582 294.102 121.602 293.938 121.85 294.004L121.809 294.102C122.18 293.971 122.82 294.102 123.109 294.184V294.955C123.77 293.479 127.548 297.201 128.435 297.25C129.323 298.218 130.438 297.004 131.532 297.496C133.307 297.742 132.42 298.628 133.307 299.284C134.422 299.759 133.08 298.382 133.534 298.332L134.855 299.398C134.092 299.497 134.505 299.956 134.649 300.251C135.805 300.382 137.622 301.792 137.973 300.251C139.521 300.989 139.521 301.612 140.202 301.678C139.975 301.399 139.542 301.136 139.542 300.825C140.161 301.497 139.831 300.661 139.583 300.513C140.533 299.841 144.496 303.317 144.703 301.628V301.94C144.93 300.677 144.579 299.464 145.239 298.759L145.673 299.316L146.333 298.775C146.788 299.185 146.561 299.513 146.561 299.677C147.655 299.103 149.162 299.792 150.462 299.956L149.079 296.529C150.194 297.316 152.176 298.923 152.403 297.824L153.063 298.972C155.293 301.169 154.612 298.021 155.499 298.677L156.614 299.939H155.499C156.614 300.563 157.048 300.956 157.935 301.776C157.935 301.776 157.935 301.76 157.935 301.743C157.873 301.694 157.832 301.628 157.832 301.563L157.977 301.53C158.121 300.907 158.699 300.481 159.463 300.513C160.578 300.694 161.445 299.759 163.22 301.087L163.654 299.808L164.995 300.579V301.596C163.695 301.53 161.238 301.923 159.566 301.973V302.432C160.536 302.432 161.651 301.973 162.312 302.087C162.642 302.284 163.447 303.35 162.848 304.039L163.468 303.039C166.791 302.924 166.812 302.875 170.28 304.039L169.971 303.53C170.652 303.235 171.333 302.94 171.539 303.76C173.624 303.924 175.771 304.58 177.113 305.875L177.402 304.678C177.836 304.744 178.496 306.564 178.723 304.875L179.652 304.35C180.251 304.449 180.623 303.76 181.304 304.449C181.345 304.498 181.387 304.531 181.428 304.596C181.428 304.563 181.428 304.531 181.428 304.498C182.79 305.023 181.428 303.416 182.976 304.104C183.472 304.957 183.533 302.579 184.277 302.842L185.04 304.563C186.424 305.547 186.651 303.826 188.632 303.809C189.582 304.432 190.057 305.892 189.417 307.203C190.284 305.613 189.809 306.17 190.965 305.416C191.151 306.072 191.027 306.203 190.759 306.793C191.791 307.564 191.399 306.203 192.163 306.236C192.39 305.006 192.637 303.055 192.906 302.973L192.596 302.596C193.422 301.94 194.31 301.628 195.259 302.251L195.218 302.875L196.229 302.563L196.291 303.35L197.736 303.104L197.53 302.891C197.86 302.793 198.975 302.514 199.615 302.924V303.366C201.39 304.727 202.877 302.94 204.982 302.793L204.714 303.694C205.437 304.58 204.92 302.317 205.767 302.76L205.808 303.858C206.551 302.415 206.778 304.17 207.294 304.711L207.047 303.268L208.017 303.58C209.09 304.055 208.678 305.4 208.512 306.154L209.235 305.023L209.379 306.302C209.916 304.826 209.916 306.548 210.845 305.744C210.928 306.22 210.68 306.498 211.01 306.712L212.559 304.924L211.63 305.711L211.733 303.858C212.703 302.448 213.054 304.055 213.735 303.547L213.261 304.104C214.396 303.645 214.458 304.449 215.098 304.859C214.891 304.514 214.602 304.006 215.057 303.76C215.387 303.662 215.242 304.416 215.552 304.613C215.635 303.383 216.44 302.727 217.183 303.301C217.183 303.481 217.162 303.645 217.1 303.76C217.286 303.563 217.389 303.235 217.72 303.53L217.534 304.908L218.153 303.596C218.566 303.973 219.185 302.973 219.123 303.908L218.876 304.186L222.055 304.514L222.096 305.613C222.406 304.104 223.83 306.187 223.727 304.301C224.326 305.334 226.08 303.58 225.729 305.711C227.814 305.875 228.95 303.826 231.489 304.859C232.397 306.662 234.875 306.088 236.505 306.269C239.685 305.515 241.749 304.826 245.011 304.252C246.972 306.777 249.903 303.383 252.009 304.809L252.587 303.809C253.991 305.4 256.138 303.448 258.099 305.006C258.574 304.563 258.842 304.432 258.945 304.399C258.863 304.35 258.718 304.154 258.677 303.53C259.234 303.973 260.37 303.416 260.287 304.695L260.142 304.826C260.06 306.105 261.856 304.236 262.475 305.334L262.124 303.973L263.198 304.203L262.909 304.465C267.533 301.432 269.618 305.76 273.953 303.006C273.375 304.498 274.8 302.219 274.862 303.858C275.956 305.908 276.885 303.416 277.793 302.875C277.793 302.793 277.793 302.694 277.855 302.579L279.424 302.776C278.495 304.826 280.559 301.071 279.692 302.825C283.78 304.367 289.106 302.793 293.854 303.514L293.647 302.989C294.845 303.088 296.331 302.448 297.26 303.301C298.168 304.137 299.242 301.956 299.613 301.874C300.604 300.956 301.513 302.776 301.1 302.678C302.173 302.432 303.164 300.546 304.65 301.35C305.167 303.088 308.697 299.644 308.738 301.596V301.432C310.658 302.809 312.433 300.464 314.477 301.71C314.477 301.71 314.436 301.858 314.374 301.989L318.523 296.037L317.346 289.478L313.734 284.149L303.969 285.297L296.166 283.214L277.194 283.919L275.832 285.395C272.095 282.804 267.327 285.789 263.301 283.936L263.218 285.215C262.083 285.297 262.166 284.493 261.877 284.28C251.348 284.559 240.51 286.264 231.035 284.657C230.126 283.821 227.34 284.313 226.617 283.427C223.541 284.985 220.279 284.969 217.203 284.805L217.327 284.657L215.882 284.903C215.82 284.805 215.82 284.641 215.862 284.542C214.231 285.674 211.65 284.542 209.648 284.1L209.772 283.968C198.067 283.739 187.208 286.116 175.627 284.329C170.239 282.247 163.963 285.116 157.77 283.395C156.635 282.132 144.125 283.083 143.01 283.673L143.072 283.608Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M124.636 285.313H124.677C124.677 284.771 124.596 284.968 124.636 285.313Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150.503 299.988C150.503 299.988 150.441 299.988 150.42 299.988L150.73 300.743L150.503 300.005V299.988Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M133.927 300.432C134.67 300.597 134.711 300.465 134.608 300.252C134.34 300.219 134.113 300.252 133.927 300.432Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M118.568 286.347C118.176 286.298 118.32 286.625 118.568 286.986C118.96 286.921 119.249 286.888 119.249 286.888C119.022 286.757 118.816 286.478 118.589 286.347H118.568Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M120.157 293.627L120.033 294.071C120.261 293.972 120.261 293.808 120.157 293.627Z\",\n    fill: \"#9F8F80\"\n  }))))), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M302.153 399.176H10.8071V438.447H302.153V399.176Z\",\n    fill: \"#5D5042\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask3_42_3399\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 10,\n    y: 399,\n    width: 293,\n    height: 40\n  }, _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M302.151 399.174H10.8059V438.445H302.151V399.174Z\",\n    fill: \"white\"\n  }))), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask3_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.22\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M258.634 429.244C258.884 429.178 258.8 429.327 258.634 429.244Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M129.714 432.656C129.714 432.656 129.631 432.656 129.59 432.656C129.508 433.115 129.404 433.525 129.322 433.837L129.714 432.656Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M108.988 429.737C108.988 429.737 108.905 429.655 108.864 429.605C108.864 429.885 108.864 430.164 108.988 429.737Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M177.504 428.31C177.69 428.343 177.793 428.228 177.855 428.08C177.752 428.179 177.648 428.261 177.504 428.31Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M296.64 426.755C296.64 426.755 296.578 426.771 296.557 426.788C296.64 426.886 296.702 426.952 296.784 427.067L296.661 426.738L296.64 426.755Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M296.227 427.556C295.772 427.212 296.351 426.9 296.557 426.802C296.061 426.162 295.545 426.113 295.029 426.408C295.029 427.13 296 427.015 296.227 427.556Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M129.342 433.838L129.197 434.282C129.238 434.183 129.3 434.019 129.342 433.838Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M89.8287 429C89.8287 428.656 89.7874 428.377 89.7255 428.131C89.7049 428.131 89.6842 428.131 89.6636 428.131L89.8287 429Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M63.5506 424.062C63.53 424.193 63.468 424.308 63.468 424.456C63.9222 424.833 65.0989 424.915 66.6265 424.882L66.7091 423.488L63.5506 424.062Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.7932 391.4L37.6008 394.221C28.6001 395.516 24.4094 392.696 16.7093 394.958L17.1428 394.352C16.0281 393.696 15.3881 400.025 3.02249 392.302V392.023C2.58897 392.072 2.58896 392.63 1.74257 391.892L3.88952 393.614C2.60961 394.319 1.49485 395.663 -0.218587 395.86C-0.590175 395.549 -0.714037 394.975 -0.734681 394.516L-4.92536 394.991L-6.20528 393.171C-7.48519 394.155 -6.90717 397.992 -10.334 395.86C-9.03348 398.517 -12.0268 397.451 -11.6139 398.812C-11.7791 398.484 -12.1713 397.992 -12.5016 397.533C-14.5454 397.844 -18.3851 398.582 -19.3347 399.96C-19.3347 399.96 -11.3662 405.567 -9.21927 408.421C-12.0888 407.699 -9.98309 408.749 -9.40506 409.65L-9.21927 408.995C-7.50583 409.65 -7.50583 411.323 -6.6388 411.798C-6.6388 411.667 -6.65944 411.503 -6.68008 411.339L-6.78331 411.569C-6.86588 411.274 -6.82459 411.061 -6.72137 410.897C-6.74202 410.536 -6.65944 410.257 -6.18463 410.355L-6.26721 410.536C-5.54468 410.29 -4.30605 410.552 -3.76931 410.667V412.077C-2.4894 409.404 4.79785 416.16 6.51128 416.242C8.22471 418.013 10.3717 415.799 12.498 416.685C15.9248 417.144 14.2114 418.735 15.9248 419.948C18.0718 420.833 15.4913 418.308 16.3584 418.21L18.9182 420.161C17.4318 420.325 18.2369 421.178 18.5053 421.719C20.7348 421.965 24.2236 424.539 24.9049 421.719C27.8982 423.063 27.8982 424.178 29.1988 424.326C28.7653 423.818 27.9189 423.359 27.8982 422.785C29.0956 424.014 28.4763 422.473 27.9808 422.211C29.8181 420.997 37.4769 427.327 37.8692 424.244V424.801C38.3027 422.506 37.6214 420.276 38.8807 419.013L39.7271 420.03L41.007 419.046C41.8741 419.784 41.4405 420.407 41.4405 420.686C43.5256 419.62 46.457 420.883 48.9962 421.194L46.3125 414.947C48.4594 416.39 52.2992 419.325 52.7327 417.308L54.0126 419.407C58.3065 423.424 57.0059 417.669 58.7194 418.866L60.8663 421.161L58.7194 421.129C60.8663 422.293 61.7127 423.031 63.4262 424.523C63.4262 424.506 63.4262 424.49 63.4262 424.457C63.3023 424.359 63.2404 424.26 63.2197 424.113L63.5294 424.064C63.7977 422.916 64.9125 422.145 66.4195 422.211C68.5665 422.539 70.2386 420.85 73.6655 423.26L74.5119 420.915L77.0717 422.309V424.178C74.5531 424.064 69.8257 424.769 66.5846 424.867L66.5227 425.72C68.4426 425.72 70.6308 424.9 71.8901 425.08C72.5094 425.457 74.099 427.392 72.9429 428.638L74.1196 426.818C80.5192 426.605 80.5605 426.523 87.2491 428.622L86.671 427.687C87.9922 427.146 89.3134 426.605 89.685 428.114C93.6899 428.425 97.86 429.59 100.461 431.951L101.039 429.753C101.885 429.868 103.165 433.197 103.578 430.114L105.395 429.147C106.551 429.311 107.274 428.065 108.574 429.327C108.657 429.409 108.739 429.491 108.822 429.59C108.822 429.524 108.822 429.458 108.822 429.409C111.444 430.377 108.801 427.441 111.795 428.704C112.765 430.262 112.868 425.917 114.313 426.408L115.779 429.557C118.421 431.36 118.875 428.212 122.715 428.196C124.552 429.311 125.44 432 124.222 434.394C125.894 431.508 124.986 432.508 127.215 431.131C127.566 432.311 127.319 432.574 126.823 433.64C128.805 435.033 128.041 432.574 129.527 432.639C129.961 430.409 130.456 426.851 130.952 426.704L130.374 425.999C131.963 424.802 133.677 424.244 135.514 425.375L135.452 426.507L137.413 425.933L137.537 427.376L140.324 426.933L139.932 426.54C140.593 426.343 142.74 425.851 143.978 426.605L143.937 427.409C147.405 429.901 150.274 426.638 154.341 426.376L153.805 427.999C155.188 429.622 154.176 425.49 155.828 426.294L155.91 428.294C157.355 425.654 157.789 428.852 158.78 429.852L158.305 427.228L160.184 427.786C162.269 428.655 161.463 431.098 161.154 432.475L162.578 430.409L162.847 432.721C163.879 430.032 163.879 433.148 165.695 431.705C165.84 432.574 165.386 433.082 166.005 433.459L168.998 430.196L167.202 431.639L167.429 428.261C169.308 425.687 169.969 428.638 171.31 427.687L170.382 428.688C172.57 427.868 172.694 429.311 173.912 430.049C173.519 429.426 172.941 428.491 173.829 428.048C174.469 427.868 174.18 429.245 174.799 429.606C174.944 427.343 176.513 426.162 177.937 427.212C177.937 427.54 177.896 427.835 177.793 428.048C178.164 427.687 178.35 427.097 178.969 427.638L178.598 430.147L179.816 427.753C180.621 428.442 181.818 426.622 181.694 428.311L181.24 428.819L187.371 429.426L187.454 431.426C188.053 428.671 190.798 432.475 190.592 429.032C191.748 430.918 195.154 427.704 194.473 431.59C198.498 431.885 200.687 428.147 205.579 430.049C207.334 433.345 212.103 432.279 215.261 432.623C221.413 431.246 225.397 429.999 231.673 428.95C235.451 433.558 241.107 427.359 245.174 429.967L246.289 428.13C248.993 431.032 253.122 427.474 256.92 430.311C257.849 429.508 258.345 429.262 258.551 429.196C258.386 429.114 258.118 428.77 258.035 427.605C259.108 428.425 261.317 427.392 261.152 429.721L260.884 429.967C260.719 432.279 264.166 428.884 265.384 430.885L264.724 428.393L266.767 428.819L266.21 429.294C275.128 423.785 279.154 431.656 287.535 426.622C286.42 429.327 289.186 425.195 289.29 428.163C291.395 431.885 293.191 427.359 294.925 426.359C294.925 426.212 294.946 426.048 295.049 425.818L298.084 426.179C296.267 429.917 300.272 423.08 298.6 426.261C306.486 429.065 316.787 426.212 325.932 427.507L325.54 426.54C327.852 426.72 330.742 425.556 332.497 427.097C334.252 428.638 336.337 424.654 337.018 424.506C338.938 422.85 340.693 426.146 339.867 425.982C341.931 425.523 343.872 422.096 346.721 423.572C347.691 426.753 354.524 420.456 354.607 424.031L354.648 423.736C358.302 426.261 361.77 421.965 365.713 424.244C365.713 424.244 365.63 424.506 365.506 424.752L373.537 413.897L371.245 401.96L364.288 392.253L345.441 394.352L330.391 390.564L293.769 391.843L291.148 394.532C283.943 389.826 274.736 395.237 266.974 391.876L266.809 394.188C264.62 394.319 264.765 392.892 264.228 392.482C243.894 392.991 222.982 396.09 204.691 393.171C202.937 391.63 197.569 392.532 196.186 390.925C190.241 393.761 183.944 393.729 177.999 393.45L178.226 393.187L175.419 393.63C175.295 393.433 175.295 393.171 175.377 392.991C172.219 395.04 167.244 393.007 163.363 392.171L163.59 391.925C141.005 391.499 120.052 395.827 97.6742 392.597C87.2697 388.809 75.1518 394.04 63.2197 390.892C61.0315 388.58 36.8576 390.318 34.7313 391.4H34.7932Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.1412 421.228C49.1412 421.228 49.038 421.212 48.9761 421.195L49.5747 422.573L49.1412 421.212V421.228Z\",\n    fill: \"#72665A\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.1838 422.029C18.6289 422.34 18.6908 422.094 18.4844 421.701C17.9683 421.635 17.5141 421.701 17.1838 422.029Z\",\n    fill: \"#72665A\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.25\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M225.729 433.117C225.729 433.117 225.832 433.067 225.895 433.018C225.812 433.018 225.77 433.051 225.729 433.117Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M152.856 432.246L154.301 433.788C149.636 434.493 147.468 432.951 143.484 434.198L143.711 433.87C143.133 433.509 142.803 436.985 136.382 432.738V432.591C136.155 432.623 136.155 432.919 135.722 432.509L136.837 433.46C136.176 433.853 135.598 434.591 134.71 434.69C134.524 434.526 134.463 434.198 134.442 433.952L132.274 434.214L131.614 433.214C130.953 433.755 131.242 435.87 129.487 434.69C130.148 436.149 128.6 435.575 128.827 436.313C128.744 436.133 128.538 435.854 128.373 435.608C127.32 435.772 125.338 436.182 124.843 436.936C124.843 436.936 128.971 440.019 130.086 441.576C128.6 441.183 129.694 441.757 129.983 442.249L130.086 441.888C130.974 442.249 130.974 443.167 131.428 443.429C131.428 443.347 131.428 443.265 131.407 443.167L131.345 443.298C131.304 443.134 131.345 443.019 131.366 442.937C131.366 442.741 131.387 442.577 131.634 442.642L131.593 442.741C131.965 442.609 132.605 442.741 132.894 442.823V443.593C133.554 442.118 137.332 445.84 138.22 445.889C139.107 446.856 140.222 445.643 141.316 446.135C143.092 446.381 142.204 447.266 143.092 447.922C144.206 448.398 142.865 447.02 143.319 446.971L144.64 448.037C143.876 448.135 144.289 448.594 144.433 448.89C145.59 449.021 147.406 450.431 147.757 448.89C149.305 449.628 149.305 450.251 149.987 450.316C149.76 450.037 149.326 449.775 149.326 449.464C149.945 450.136 149.615 449.3 149.367 449.152C150.317 448.48 154.281 451.956 154.487 450.267V450.579C154.714 449.316 154.363 448.103 155.024 447.397L155.457 447.955L156.118 447.414C156.572 447.824 156.345 448.152 156.345 448.316C157.439 447.742 158.946 448.431 160.247 448.594L158.863 445.167C159.978 445.955 161.96 447.561 162.187 446.463L162.848 447.611C165.077 449.808 164.396 446.66 165.284 447.316L166.398 448.578H165.284C166.398 449.201 166.832 449.595 167.72 450.415C167.72 450.415 167.72 450.398 167.72 450.382C167.658 450.333 167.616 450.267 167.616 450.201L167.782 450.169C167.926 449.546 168.504 449.119 169.268 449.152C170.383 449.332 171.25 448.398 173.025 449.726L173.459 448.447L174.8 449.218V450.234C173.5 450.169 171.043 450.562 169.371 450.611V451.07C170.341 451.07 171.477 450.611 172.117 450.726C172.447 450.923 173.252 451.989 172.653 452.677L173.273 451.677C176.596 451.562 176.617 451.513 180.085 452.677L179.776 452.169C180.457 451.874 181.138 451.579 181.345 452.399C183.43 452.563 185.576 453.219 186.918 454.514L187.207 453.317C187.641 453.383 188.301 455.203 188.529 453.514L189.458 452.989C190.056 453.087 190.428 452.399 191.109 453.087C191.15 453.137 191.192 453.169 191.233 453.235C191.233 453.202 191.233 453.169 191.233 453.137C192.595 453.661 191.233 452.054 192.781 452.743C193.277 453.596 193.339 451.218 194.082 451.48L194.846 453.202C196.229 454.186 196.456 452.464 198.438 452.448C199.387 453.071 199.862 454.53 199.222 455.842C200.089 454.252 199.614 454.809 200.77 454.055C200.956 454.711 200.832 454.842 200.564 455.432C201.596 456.203 201.204 454.842 201.968 454.875C202.195 453.645 202.442 451.694 202.711 451.612L202.401 451.234C203.227 450.579 204.115 450.267 205.064 450.89L205.023 451.513L206.034 451.202L206.096 451.989L207.541 451.743L207.335 451.53C207.665 451.431 208.78 451.152 209.42 451.562V452.005C211.195 453.366 212.682 451.579 214.787 451.431L214.519 452.333C215.242 453.219 214.725 450.956 215.572 451.398L215.613 452.497C216.356 451.054 216.583 452.809 217.1 453.35L216.852 451.907L217.822 452.218C218.896 452.694 218.483 454.038 218.317 454.793L219.04 453.661L219.185 454.94C219.721 453.464 219.721 455.186 220.65 454.383C220.733 454.858 220.485 455.137 220.815 455.35L222.364 453.563L221.435 454.35L221.538 452.497C222.508 451.087 222.859 452.694 223.54 452.186L223.066 452.743C224.201 452.284 224.263 453.087 224.903 453.497C224.696 453.153 224.407 452.645 224.862 452.399C225.192 452.3 225.047 453.055 225.357 453.251C225.44 452.022 226.245 451.366 226.988 451.94C226.988 452.12 226.967 452.284 226.905 452.399C227.091 452.202 227.194 451.874 227.525 452.169L227.339 453.546L227.958 452.235C228.371 452.612 228.99 451.612 228.928 452.546L228.681 452.825L231.86 453.153L231.901 454.252C232.211 452.743 233.635 454.825 233.532 452.94C234.131 453.973 235.885 452.218 235.534 454.35C237.619 454.514 238.755 452.464 241.294 453.497C242.202 455.301 244.68 454.727 246.31 454.907C249.49 454.153 251.554 453.464 254.816 452.891C256.777 455.416 259.708 452.022 261.814 453.448L262.392 452.448C263.796 454.038 265.943 452.087 267.904 453.645C268.379 453.202 268.647 453.071 268.75 453.038C268.668 452.989 268.523 452.792 268.482 452.169C269.039 452.612 270.175 452.054 270.092 453.333L269.948 453.465C269.865 454.743 271.661 452.874 272.28 453.973L271.929 452.612L273.003 452.841L272.714 453.104C277.338 450.07 279.423 454.399 283.758 451.644C283.18 453.137 284.605 450.857 284.667 452.497C285.761 454.547 286.69 452.054 287.598 451.513C287.598 451.431 287.598 451.333 287.66 451.218L289.229 451.415C288.3 453.465 290.364 449.71 289.497 451.464C293.585 453.005 298.911 451.431 303.659 452.153L303.452 451.628C304.65 451.726 306.136 451.087 307.065 451.94C307.973 452.776 309.047 450.595 309.418 450.513C310.409 449.595 311.318 451.415 310.905 451.316C311.978 451.07 312.969 449.185 314.456 449.988C314.972 451.726 318.502 448.283 318.543 450.234V450.07C320.463 451.448 322.238 449.103 324.282 450.349C324.282 450.349 324.241 450.497 324.179 450.628L328.328 444.676L327.151 438.117L323.539 432.787L313.774 433.935L305.971 431.853L286.999 432.558L285.637 434.034C281.9 431.443 277.132 434.427 273.106 432.574L273.023 433.853C271.888 433.935 271.971 433.132 271.682 432.919C261.153 433.197 250.315 434.903 240.84 433.296C239.932 432.46 237.145 432.951 236.422 432.066C233.346 433.624 230.084 433.607 227.009 433.443L227.132 433.296L225.687 433.542C225.625 433.443 225.625 433.279 225.667 433.181C224.036 434.312 221.455 433.181 219.453 432.738L219.577 432.607C207.872 432.378 197.034 434.755 185.432 432.968C180.044 430.885 173.768 433.755 167.575 432.033C166.44 430.771 153.93 431.722 152.815 432.312L152.856 432.246Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M134.421 433.952H134.461C134.461 433.41 134.38 433.607 134.421 433.952Z\",\n    fill: \"#9F8F80\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M128.353 434.968C127.96 434.919 128.105 435.247 128.353 435.607C128.745 435.542 129.034 435.509 129.034 435.509C128.807 435.378 128.6 435.099 128.373 434.968H128.353Z\",\n    fill: \"#9F8F80\"\n  })))), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter8_dd_42_3399)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M295.159 28.9911C203.228 27.7212 111.277 26.4666 19.3459 25.1967C24.658 19.8151 29.97 14.4335 35.2817 9.06762L277 13.1094C283.06 18.3982 289.119 23.7027 295.179 28.9915L295.159 28.9911Z\",\n    fill: \"#C4CAB9\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_d_42_3399\",\n    x: 10.4636,\n    y: 23.5449,\n    width: 292.033,\n    height: 430.033,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 4\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter1_d_42_3399\",\n    x: 187.997,\n    y: 10.8258,\n    width: 15.3411,\n    height: 447.136,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 3\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.75 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter2_d_42_3399\",\n    x: 221.068,\n    y: 5.52307,\n    width: 23.3206,\n    height: 455.136,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 3\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.75 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter3_d_42_3399\",\n    x: 218.766,\n    y: 9.67542,\n    width: 27.3206,\n    height: 459.136,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 3\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 6\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.75 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter4_d_42_3399\",\n    x: 58.5842,\n    y: 22.5465,\n    width: 15.3411,\n    height: 447.136,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 3\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.75 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter5_d_42_3399\",\n    x: 108.281,\n    y: 24.3571,\n    width: 27.3206,\n    height: 459.136,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 1,\n    dy: 3\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 6\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.75 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter6_d_42_3399\",\n    x: 4.47314,\n    y: 138.075,\n    width: 305.307,\n    height: 73.36,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 4\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter7_d_42_3399\",\n    x: 4.80615,\n    y: 266.014,\n    width: 303.346,\n    height: 66.3079,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 4\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"shape\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter8_dd_42_3399\",\n    x: 13.3459,\n    y: 7.06763,\n    width: 287.833,\n    height: 31.9238,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 4\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 3\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 2\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"hardAlpha\",\n    operator: \"out\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0.452255 0 0 0 0 0.466667 0 0 0 0 0.425833 0 0 0 1 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"effect1_dropShadow_42_3399\",\n    result: \"effect2_dropShadow_42_3399\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect2_dropShadow_42_3399\",\n    result: \"shape\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgProductItem);\nexport default __webpack_public_path__ + \"static/media/ProductItem.e8611f0e440e1deeec6d2fd33d5bd0ad.svg\";\nexport { ForwardRef as ReactComponent };","import { FC, useEffect, useRef, useState } from 'react';\r\n\r\nimport ProductItemBG from '../../../assets/ProductItem.svg';\r\nimport {\r\n  ProductsState,\r\n  ProductType,\r\n  useProducts,\r\n} from '../../../context/ProductContext';\r\n\r\ninterface IProductItemProps {\r\n  product: ProductType;\r\n  productKey: keyof ProductsState;\r\n}\r\n\r\nconst ProductItem: FC<IProductItemProps> = ({ productKey, product }) => {\r\n  const { setProduct } = useProducts();\r\n  const { nameOpened, priceOpened } = product;\r\n\r\n  const [productName, setProductName] = useState<string>('');\r\n  const [productImage, setProductImage] = useState<string>('');\r\n  const [productPrice, setProductPrice] = useState<string>('');\r\n  const [parentHeight, setParentHeight] = useState<number | null>(null);\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleShowName = () => {\r\n    !!product.productName.length &&\r\n      setProduct(productKey, { ...product, nameOpened: true });\r\n  };\r\n\r\n  const handleShowPrice = () => {\r\n    !!product.productPrice.length &&\r\n      setProduct(productKey, { ...product, priceOpened: true });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (containerRef.current) {\r\n      const parentElement = containerRef.current.parentElement;\r\n      if (parentElement) {\r\n        setParentHeight(parentElement.clientHeight);\r\n      }\r\n    }\r\n  }, [containerRef]);\r\n\r\n  useEffect(() => {\r\n    if (!nameOpened) {\r\n      setProductName('');\r\n      setProductImage('');\r\n    }\r\n    if (nameOpened) {\r\n      setProductName(product.productName);\r\n      setProductImage(product.imgSrc);\r\n    }\r\n  }, [nameOpened, product]);\r\n\r\n  useEffect(() => {\r\n    if (priceOpened) {\r\n      setProductPrice(product.productPrice);\r\n    }\r\n  }, [priceOpened, product]);\r\n\r\n  return (\r\n    <div\r\n      className='w-fit pt-5'\r\n      ref={containerRef}\r\n      style={parentHeight ? { maxHeight: parentHeight } : {}}\r\n    >\r\n      <div className='w-full h-[200px] lg:h-[200px]'>\r\n        {productImage && (\r\n          <img\r\n            src={productImage}\r\n            alt='Product image'\r\n            className={`max-w-[315px] w-full h-[200px] lg:h-[200px] rounded-[5px] transition-opacity duration-500 object-contain ${\r\n              productImage ? 'opacity-100 animate-fadeIn' : 'opacity-0'\r\n            }`}\r\n          />\r\n        )}\r\n      </div>\r\n      <div className='relative w-fit'>\r\n        <div className='absolute top-[55px] left-0 right-0 m-auto z-40'>\r\n          <div\r\n            style={{ boxShadow: '0 4px 6px 0 rgba(0, 0, 0, 0.5)' }}\r\n            className='bg-[#56639d] hover:brightness-110 active:brightness-[1.18] transition w-full md:h-[46px] h-[36px] mb-2 flex items-center justify-center cursor-pointer rounded-[5px]'\r\n            onClick={handleShowName}\r\n          >\r\n            <p\r\n              className={`md:text-[28px] text-[26px] font-bold uppercase text-white transition-opacity duration-500 ${\r\n                nameOpened ? 'opacity-100 animate-fadeIn' : 'opacity-0'\r\n              }`}\r\n            >\r\n              {productName}\r\n            </p>\r\n          </div>\r\n          <div\r\n            style={{ boxShadow: '0 4px 6px 0 rgba(0, 0, 0, 0.5)' }}\r\n            className='bg-[#e3e3e3] hover:brightness-110 active:brightness-[1.18] transition w-[142px] md:h-[46px] h-[36px] m-auto flex items-center justify-center rounded-[5px]'\r\n            onClick={() => productName && handleShowPrice()}\r\n          >\r\n            <p\r\n              className={`text-center md:text-[32px] text-[26px] font-bold uppercase text-[#333] cursor-pointer transition-opacity duration-500 ${\r\n                priceOpened && productPrice\r\n                  ? 'opacity-100 animate-fadeIn'\r\n                  : 'opacity-0'\r\n              }`}\r\n            >\r\n              {productPrice ? '$' + productPrice : ''}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <img\r\n          src={ProductItemBG}\r\n          alt='Product item'\r\n          className='relative top-[16px]'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductItem;\r\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgCrossIcon(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 25,\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.7495 17.9062C24.8453 19.3274 20.0348 24.1368 18.8609 23.8122C18.6092 23.7307 16.0798 21.4102 12.9585 18.3419C9.72355 21.5483 7.06843 24.0806 6.69167 24.042C5.72796 23.8411 1.30113 19.7383 1.57776 17.8538C1.61492 17.3098 3.76889 14.8654 6.5048 11.9979C3.3398 8.72079 0.807521 6.06566 0.846118 5.6889C1.00552 4.76738 5.1083 0.340546 6.9921 0.533528C7.57833 0.612156 10.0227 2.76613 12.8902 5.50203C15.96 2.54794 18.5329 0.183665 18.909 0.138618C20.3717 0.000605302 25.1395 4.85331 24.815 6.02721C24.775 6.23668 22.4129 8.80827 19.3446 11.9297C22.3402 14.9572 24.7044 17.5301 24.7495 17.9062Z\",\n    fill: \"#5C5C5C\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCrossIcon);\nexport default __webpack_public_path__ + \"static/media/CrossIcon.8e81af2e16e8951d0163d53892cfc111.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAcceptImages(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 78,\n    height: 48,\n    viewBox: \"0 0 78 48\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    opacity: 0.8,\n    clipPath: \"url(#clip0_10_2324)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M75.1449 38.0482H42.5021C41.282 38.0482 40.2931 37.0557 40.2931 35.8312V3.0661C40.2931 1.8416 41.282 0.84906 42.5021 0.84906H70.2532C72.6214 3.31329 74.9895 5.77371 77.3539 8.23793V35.8312C77.3539 35.9795 77.3388 36.7667 75.1449 38.0482Z\",\n    fill: \"#7C7258\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M76.2738 38.048H41.3727C40.7741 38.048 40.2891 37.5613 40.2891 36.9604V1.9327C40.2891 1.33185 40.7741 0.845093 41.3727 0.845093H69.6657C69.965 0.845093 70.2075 1.08847 70.2075 1.3889V6.99045C70.2075 7.56087 70.666 8.02101 71.2343 8.02101H76.8156C77.115 8.02101 77.3575 8.26439 77.3575 8.56481V36.9604C77.3575 37.5613 76.8725 38.048 76.2738 38.048Z\",\n    fill: \"#C8B992\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.1454 18.6042C55.1454 19.7983 54.3269 20.5018 52.9364 20.5018H51.6708V22.6922H50.4166V16.6686H52.9364C54.3269 16.6686 55.1454 17.3721 55.1454 18.6042ZM53.8723 18.5966C53.8723 17.9844 53.5274 17.6763 52.7431 17.6763H51.6708V19.5283H52.7431C53.5237 19.5283 53.8723 19.2089 53.8723 18.5966Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M61.4466 22.6961H60.0105L57.9114 19.1556L57.3923 18.1441H57.3847L57.4226 19.2127V22.6999H56.2935V16.6762H57.7219L59.8211 20.209L60.3402 21.232H60.3591L60.3212 20.1634V16.6762H61.4504V22.6999L61.4466 22.6961Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M68.2139 19.5093V22.696H67.2969L67.2704 21.9735C66.9256 22.4831 66.3421 22.7873 65.4971 22.7873C63.8527 22.7873 62.7159 21.6541 62.7159 19.6918C62.7159 17.7296 63.8527 16.5811 65.6373 16.5811C66.937 16.5811 67.7213 17.0375 68.1911 18.0604L67.0355 18.5624C66.846 17.9235 66.3345 17.6117 65.6714 17.6117C64.6446 17.6117 64.0156 18.3418 64.0156 19.6842C64.0156 21.0266 64.5877 21.7758 65.6979 21.7758C66.5088 21.7758 67.134 21.3841 67.134 20.5817V20.4448H65.3797V19.5131H68.2177L68.2139 19.5093Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.8556 47.1992H2.20902C0.988945 47.1992 0 46.2066 0 44.9821V12.217C0 10.9925 0.988945 10 2.20902 10H29.9601C32.3283 12.4642 34.6964 14.9246 37.0608 17.3889V44.9821C37.0608 45.1304 37.0457 45.9176 34.8518 47.1992H34.8556Z\",\n    fill: \"#7C7258\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.9847 47.1992H1.08367C0.485 47.1992 0 46.7124 0 46.1115V11.0876C0 10.4868 0.485 10 1.08367 10H29.3766C29.6759 10 29.9184 10.2434 29.9184 10.5438V16.1454C29.9184 16.7158 30.3769 17.1759 30.9453 17.1759H36.5266C36.8259 17.1759 37.0684 17.4193 37.0684 17.7197V46.1154C37.0684 46.7162 36.5834 47.203 35.9847 47.203V47.1992Z\",\n    fill: \"#C8B992\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.1181 29.6302C14.1181 31.0829 13.2542 31.9385 11.7613 31.9385C10.132 31.9385 9.44997 30.9878 9.70763 29.6112L10.9353 29.3906C10.7913 30.4592 11.0452 30.9041 11.7992 30.9041C12.5532 30.9041 12.8639 30.4212 12.8639 29.4515V25.8198H14.1181V29.6264V29.6302Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.3208 27.7554C20.3208 28.9495 19.5024 29.653 18.1118 29.653H16.8462V31.8434H15.592V25.8198H18.1118C19.5024 25.8198 20.3208 26.5233 20.3208 27.7554ZM19.0477 27.7478C19.0477 27.1355 18.7029 26.8275 17.9185 26.8275H16.8462V28.6795H17.9185C18.6991 28.6795 19.0477 28.36 19.0477 27.7478Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M26.6675 28.6605V31.8472H25.7505L25.724 31.1247C25.3792 31.6343 24.7957 31.9385 23.9507 31.9385C22.3063 31.9385 21.1696 30.8053 21.1696 28.843C21.1696 26.8808 22.3063 25.7323 24.0909 25.7323C25.3906 25.7323 26.1749 26.1886 26.6448 27.2116L25.4891 27.7136C25.2996 27.0747 24.7881 26.7629 24.125 26.7629C23.0982 26.7629 22.4692 27.493 22.4692 28.8354C22.4692 30.1778 23.0414 30.9269 24.1515 30.9269C24.9624 30.9269 25.5876 30.5353 25.5876 29.7329V29.596H23.8333V28.6643H26.6713L26.6675 28.6605Z\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_10_2324\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 78,\n    height: 48,\n    fill: \"white\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAcceptImages);\nexport default __webpack_public_path__ + \"static/media/AcceptImages.6338bcc3223723b354ffc5d1dc36eb94.svg\";\nexport { ForwardRef as ReactComponent };","import { FC } from 'react';\r\n\r\ninterface ConfirmationPopupProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onReset: () => void;\r\n}\r\n\r\nconst ConfirmationPopup: FC<ConfirmationPopupProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onReset,\r\n}) => {\r\n  const handleBackdropClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div\r\n      className='fixed w-screen h-screen bg-black/70 z-50 flex justify-center items-center transition-opacity duration-[50ms] animate-fadeIn'\r\n      onClick={handleBackdropClick}\r\n    >\r\n      <div className='bg-[#ffffee] rounded-[15px] m-auto w-full max-w-[500px] p-5'>\r\n        <h6 className='text-[28px] font-bold text-black/80 font-inter text-center mb-5'>\r\n          Are you sure you want to reset the game?\r\n        </h6>\r\n        <div className='flex justify-around'>\r\n          <button\r\n            style={{\r\n              textShadow: '0 2px 1px 0 rgba(0, 0, 0, 0.25)',\r\n              boxShadow:\r\n                'inset 3px -2px 4px 0 rgba(144, 144, 144, 0.25), inset -2px 0 4px 0 rgba(92, 92, 92, 0.25)',\r\n            }}\r\n            className='w-fit h-[43px] bg-[#56639d] hover:bg-[#56639d]/70 active:bg-[#56639d]/50 transition text-[#fff] text-[28px] font-bold rounded-[5px] uppercase px-2'\r\n            onClick={onClose}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            style={{\r\n              textShadow: '0 2px 1px 0 rgba(0, 0, 0, 0.25)',\r\n              boxShadow:\r\n                'inset 3px -2px 4px 0 rgba(144, 144, 144, 0.25), inset -2px 0 4px 0 rgba(92, 92, 92, 0.25)',\r\n            }}\r\n            className='w-[111px] h-[43px] px-1 bg-[#9D5656] hover:bg-[#9D5656]/70 active:bg-[#9D5656]/50 transition text-[#fff] text-[28px] font-bold rounded-[5px] uppercase'\r\n            onClick={() => {\r\n              onClose(), onReset();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationPopup;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport CrossIcon from '../../assets/CrossIcon.svg';\r\nimport AcceptImages from '../../assets/AcceptImages.svg';\r\nimport { ProductType, useProducts } from '../../context/ProductContext';\r\nimport ConfirmationPopup from './ConfirmationPopup/ConfirmationPopup';\r\nimport { useGame } from '../../context/GameContext';\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst SettingsModal: FC<ModalProps> = ({ isOpen, onClose }) => {\r\n  const { products, setProduct, resetProducts } = useProducts();\r\n  const { resetGame } = useGame();\r\n\r\n  const [openConfirmationModal, setOpenConfirmationModal] =\r\n    useState<boolean>(false);\r\n  const [product1, setProduct1] = useState<ProductType>(products.product1);\r\n  const [product2, setProduct2] = useState<ProductType>(products.product2);\r\n  const [product3, setProduct3] = useState<ProductType>(products.product3);\r\n\r\n  const [imagePreview1, setImagePreview1] = useState<\r\n    string | ArrayBuffer | null\r\n  >(product1.imgSrc || null);\r\n  const [imagePreview2, setImagePreview2] = useState<\r\n    string | ArrayBuffer | null\r\n  >(product2.imgSrc || null);\r\n  const [imagePreview3, setImagePreview3] = useState<\r\n    string | ArrayBuffer | null\r\n  >(product3.imgSrc || null);\r\n\r\n  const handleBackdropClick = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    productSetter: React.Dispatch<React.SetStateAction<ProductType>>,\r\n    setImagePreview: React.Dispatch<\r\n      React.SetStateAction<string | ArrayBuffer | null>\r\n    >,\r\n  ) => {\r\n    const file = e.target.files?.[0];\r\n    if (file) {\r\n      if (file.type !== 'image/png' && file.type !== 'image/jpeg') return;\r\n\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n        productSetter((prev) => ({\r\n          ...prev,\r\n          imgSrc: reader.result as string,\r\n        }));\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProduct('product1', product1);\r\n  }, [product1]);\r\n\r\n  useEffect(() => {\r\n    setProduct('product2', product2);\r\n  }, [product2]);\r\n\r\n  useEffect(() => {\r\n    setProduct('product3', product3);\r\n  }, [product3]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div\r\n      id='default-modal'\r\n      tabIndex={-1}\r\n      className='fixed inset-0 z-50 overflow-auto'\r\n    >\r\n      <div\r\n        className='fixed inset-0 bg-black bg-opacity-70 transition-opacity duration-[50ms] animate-fadeIn'\r\n        onClick={handleBackdropClick}\r\n      />\r\n      <div className='absolute top-5 left-0 right-0 pb-5 z-10 w-fit h-fit flex justify-center items-center m-auto transition-opacity duration-[200ms] animate-fadeIn'>\r\n        <button\r\n          style={{ boxShadow: 'inset 0 0 7px 0 rgba(255, 255, 255, 0.15)' }}\r\n          className='absolute top-[10px] right-5 px-4 py-[6px] bg-[#e3e3e3] hover:bg-[#e3e3e3]/70 active:bg-[#e3e3e3]/50 transition rounded-[5px]'\r\n          onClick={onClose}\r\n        >\r\n          <img src={CrossIcon} alt='CrossIcon' />\r\n        </button>\r\n        <div className='bg-[#ffe] rounded-[15px] p-8 w-full max-w-[788px]'>\r\n          <h3 className='font-bold text-[18px] font-inter mb-[5px]'>\r\n            How To Play\r\n          </h3>\r\n          <ul className='list-disc pl-5 text-[18px] font-inter font-normal mb-[26px] ml-[10px]'>\r\n            <li>\r\n              The player needs to prevent the climber from falling off the\r\n              mountain by guessing the prices of three different items. The\r\n              difference between their guess and the actual retail price of the\r\n              item will dictate how successful they are.\r\n            </li>\r\n            <li>\r\n              Start the game by showing the player the first item, describing\r\n              that item, and asking them to guess the price. For every dollar\r\n              the guess is off from the actual price, the climber moves up one\r\n              step on the mountain.\r\n            </li>\r\n            <li>Then move on to the second and third items.</li>\r\n            <li>\r\n              The goal is to guess as accurately as possible to minimize the\r\n              climber's movement. If the climber moves more than 25 steps, he\r\n              falls off the mountain, and the game is lost. The game is won if\r\n              the climber does not fall after all three prices have been\r\n              guessed.\r\n            </li>\r\n          </ul>\r\n\r\n          <h3 className='font-bold text-[18px] font-inter mb-[5px]'>\r\n            Game Controls\r\n          </h3>\r\n          <p className='text-[18px] font-inter font-normal underline'>\r\n            Game Screen\r\n          </p>\r\n          <ul className='list-disc pl-5 text-[18px] font-inter font-normal mb-[5px] ml-[10px]'>\r\n            <li>&larr; &rarr; : Move Climber (left and right arrows)</li>\r\n            <li>(Spacebar) Button: Winning sound effect</li>\r\n          </ul>\r\n          <p className='text-[18px] font-inter font-normal underline'>\r\n            Product Page\r\n          </p>\r\n          <ul className='list-disc pl-5 text-[18px] font-inter font-normal mb-[23px] ml-[10px]'>\r\n            <li>Click the nameplate to reveal the product</li>\r\n            <li>Y Button: Correct Guess sound effect</li>\r\n            <li>N Button: Incorrect Guess sound effect</li>\r\n            <li>Click the price to reveal the price</li>\r\n          </ul>\r\n\r\n          <div className='flex justify-between items-start gap-[25px]'>\r\n            <div className='w-full'>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Product 1:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product1.productName}\r\n                  onChange={(e) =>\r\n                    setProduct1((prev) => ({\r\n                      ...prev,\r\n                      productName: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Name'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Price:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product1.productPrice}\r\n                  onChange={(e) =>\r\n                    +e.target.value < 999999 &&\r\n                    setProduct1((prev) => ({\r\n                      ...prev,\r\n                      productPrice: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Price'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='relative w-[223px] h-[101px] bg-white flex flex-col items-center justify-center text-center text-[#B6BBC1] border border-[#c0bfc1] rounded-[2px]'>\r\n                {imagePreview1 ? (\r\n                  <img\r\n                    src={imagePreview1 as string}\r\n                    alt='Product 1'\r\n                    className='w-full h-full object-contain'\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <img src={AcceptImages} alt='Accept images' />\r\n                    <span className='text-xs font-inter font-normal text-[#B6BBC1]'>\r\n                      Upload image\r\n                    </span>\r\n                  </>\r\n                )}\r\n                <input\r\n                  type='file'\r\n                  accept='image/png, image/jpeg'\r\n                  onChange={(e) =>\r\n                    handleFileChange(e, setProduct1, setImagePreview1)\r\n                  }\r\n                  className='absolute inset-0 opacity-0 cursor-pointer'\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='w-full'>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Product 2:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product2.productName}\r\n                  onChange={(e) =>\r\n                    setProduct2((prev) => ({\r\n                      ...prev,\r\n                      productName: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Name'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Price:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product2.productPrice}\r\n                  onChange={(e) =>\r\n                    +e.target.value < 999999 &&\r\n                    setProduct2((prev) => ({\r\n                      ...prev,\r\n                      productPrice: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Price'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='relative w-[223px] h-[101px] bg-white flex flex-col items-center justify-center text-center text-[#B6BBC1] border border-[#c0bfc1] rounded-[2px]'>\r\n                {imagePreview2 ? (\r\n                  <img\r\n                    src={imagePreview2 as string}\r\n                    alt='Product 2'\r\n                    className='w-full h-full object-contain'\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <img src={AcceptImages} alt='Accept images' />\r\n                    <span className='text-xs font-inter font-normal text-[#B6BBC1]'>\r\n                      Upload image\r\n                    </span>\r\n                  </>\r\n                )}\r\n                <input\r\n                  type='file'\r\n                  accept='image/png, image/jpeg'\r\n                  onChange={(e) =>\r\n                    handleFileChange(e, setProduct2, setImagePreview2)\r\n                  }\r\n                  className='absolute inset-0 opacity-0 cursor-pointer'\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className='w-full'>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Product 3:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product3.productName}\r\n                  onChange={(e) =>\r\n                    setProduct3((prev) => ({\r\n                      ...prev,\r\n                      productName: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Name'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='flex items-center justify-between'>\r\n                <p className='font-bold text-base font-inter'>Price:</p>\r\n                <input\r\n                  type='text'\r\n                  value={product3.productPrice}\r\n                  onChange={(e) =>\r\n                    +e.target.value < 999999 &&\r\n                    setProduct3((prev) => ({\r\n                      ...prev,\r\n                      productPrice: e.target.value,\r\n                    }))\r\n                  }\r\n                  placeholder='Product Price'\r\n                  className='font-inter max-w-[142px] w-full h-[28px] rounded-[2px] p-2 border border-[#c0bfc1] border-solid mb-[5px]'\r\n                />\r\n              </div>\r\n              <div className='relative w-[223px] h-[101px] bg-white flex flex-col items-center justify-center text-center text-[#B6BBC1] border border-[#c0bfc1] rounded-[2px]'>\r\n                {imagePreview3 ? (\r\n                  <img\r\n                    src={imagePreview3 as string}\r\n                    alt='Product 3'\r\n                    className='w-full h-full object-contain'\r\n                  />\r\n                ) : (\r\n                  <>\r\n                    <img src={AcceptImages} alt='Accept images' />\r\n                    <span className='text-xs font-inter font-normal text-[#B6BBC1]'>\r\n                      Upload image\r\n                    </span>\r\n                  </>\r\n                )}\r\n                <input\r\n                  type='file'\r\n                  accept='image/png, image/jpeg'\r\n                  onChange={(e) =>\r\n                    handleFileChange(e, setProduct3, setImagePreview3)\r\n                  }\r\n                  className='absolute inset-0 opacity-0 cursor-pointer'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='w-full mt-3 flex'>\r\n            <button\r\n              style={{\r\n                textShadow: '0 2px 1px 0 rgba(0, 0, 0, 0.25)',\r\n                boxShadow:\r\n                  'inset 3px -2px 4px 0 rgba(144, 144, 144, 0.25), inset -2px 0 4px 0 rgba(92, 92, 92, 0.25)',\r\n              }}\r\n              className='w-[111px] h-[43px] px-1 bg-[#9D5656] hover:bg-[#9D5656]/70 active:bg-[#9D5656]/50 transition text-[#fff] text-[28px] font-bold rounded-[5px] uppercase ml-auto'\r\n              onClick={() => setOpenConfirmationModal(true)}\r\n            >\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ConfirmationPopup\r\n        isOpen={openConfirmationModal}\r\n        onClose={() => setOpenConfirmationModal(false)}\r\n        onReset={() => {\r\n          resetProducts();\r\n          resetGame();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSettings(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 45,\n    height: 45,\n    viewBox: \"0 0 45 45\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M26.7651 2.16446C26.9529 2.5285 26.9995 2.9947 27.0927 3.92709C27.2692 5.69195 27.3574 6.57438 27.7268 7.05854C28.1953 7.6727 28.9573 7.98832 29.7228 7.88533C30.3263 7.80414 31.0127 7.24257 32.3854 6.11943C33.1106 5.52607 33.4733 5.22939 33.8634 5.10474C34.359 4.94642 34.8952 4.97316 35.3725 5.18001C35.7484 5.34286 36.0796 5.67415 36.7422 6.33673L38.6632 8.25768C39.3258 8.92028 39.6571 9.25158 39.8199 9.62742C40.0268 10.1048 40.0535 10.6409 39.8952 11.1365C39.7705 11.5267 39.4739 11.8893 38.8805 12.6145C37.7573 13.9873 37.1957 14.6737 37.1145 15.2772C37.0116 16.0427 37.3272 16.8047 37.9413 17.2732C38.4255 17.6425 39.3079 17.7308 41.0729 17.9073C42.0053 18.0005 42.4715 18.0472 42.8356 18.2349C43.2979 18.4734 43.6581 18.8714 43.8494 19.3552C44 19.7361 44 20.2046 44 21.1417V23.8585C44 24.7954 44 25.2638 43.8495 25.6446C43.6582 26.1286 43.2979 26.5267 42.8354 26.7652C42.4714 26.9529 42.0053 26.9995 41.0731 27.0927C39.3087 27.2691 38.4265 27.3574 37.9425 27.7265C37.328 28.195 37.0122 28.9573 37.1154 29.7232C37.1967 30.3264 37.7581 31.0126 38.8808 32.3848C39.474 33.1098 39.7705 33.4723 39.8952 33.8623C40.0536 34.358 40.0269 34.8944 39.8199 35.3719C39.6571 35.7476 39.3259 36.0788 38.6635 36.7411L36.7423 38.6623C36.0797 39.3249 35.7485 39.6562 35.3726 39.819C34.8953 40.0259 34.3591 40.0526 33.8635 39.8943C33.4734 39.7697 33.1107 39.473 32.3855 38.8796C31.0128 37.7565 30.3264 37.1949 29.7229 37.1137C28.9574 37.0107 28.1954 37.3263 27.7269 37.9405C27.3575 38.4247 27.2693 39.3072 27.0928 41.0724C26.9995 42.0052 26.9528 42.4716 26.765 42.8358C26.5265 43.2979 26.1286 43.658 25.645 43.8493C25.264 44 24.7953 44 23.858 44H21.1417C20.2046 44 19.7361 44 19.3552 43.8494C18.8714 43.6581 18.4734 43.2979 18.2349 42.8356C18.0472 42.4715 18.0005 42.0053 17.9073 41.0729C17.7308 39.3079 17.6425 38.4255 17.2732 37.9413C16.8047 37.3272 16.0428 37.0116 15.2772 37.1146C14.6737 37.1957 13.9873 37.7573 12.6145 38.8805C11.8892 39.4739 11.5265 39.7707 11.1364 39.8953C10.6408 40.0536 10.1047 40.0269 9.62735 39.82C9.25149 39.6572 8.92018 39.3259 8.25756 38.6632L6.33666 36.7424C5.67406 36.0797 5.34275 35.7484 5.1799 35.3726C4.97307 34.8953 4.94633 34.3591 5.10464 33.8636C5.22928 33.4734 5.52598 33.1107 6.11937 32.3855C7.24254 31.0127 7.80413 30.3263 7.88532 29.7228C7.9883 28.9573 7.67268 28.1953 7.05854 27.7268C6.57438 27.3574 5.69194 27.2692 3.92708 27.0927C2.99469 26.9995 2.5285 26.9528 2.16447 26.7651C1.7021 26.5266 1.34188 26.1286 1.1506 25.6448C1 25.2639 1 24.7954 1 23.8583V21.1419C1 20.2047 1 19.736 1.15068 19.355C1.34196 18.8714 1.70206 18.4735 2.16427 18.235C2.52839 18.0472 2.9947 18.0005 3.92733 17.9073C5.69267 17.7307 6.57535 17.6425 7.0596 17.2729C7.67349 16.8045 7.989 16.0428 7.88617 15.2774C7.80505 14.6737 7.24328 13.9871 6.11975 12.6139C5.5261 11.8883 5.22928 11.5256 5.10464 11.1352C4.94647 10.6398 4.9732 10.1039 5.17988 9.62673C5.34274 9.25072 5.67417 8.91929 6.33702 8.25644L8.25766 6.3358C8.92028 5.67318 9.25159 5.34187 9.62745 5.17901C10.1048 4.9722 10.6409 4.94546 11.1365 5.10375C11.5267 5.2284 11.8893 5.52515 12.6147 6.11864C13.9873 7.24167 14.6736 7.80319 15.277 7.88444C16.0427 7.98757 16.8049 7.67185 17.2735 7.05745C17.6427 6.57337 17.7309 5.69118 17.9073 3.92681C18.0005 2.99468 18.0471 2.52861 18.2348 2.16466C18.4733 1.70214 18.8715 1.34181 19.3554 1.15052C19.7362 1 20.2046 1 21.1414 1H23.8583C24.7954 1 25.2639 1 25.6448 1.1506C26.1286 1.34188 26.5266 1.7021 26.7651 2.16446ZM22.5 31.1C27.2496 31.1 31.1 27.2496 31.1 22.5C31.1 17.7504 27.2496 13.9 22.5 13.9C17.7504 13.9 13.9 17.7504 13.9 22.5C13.9 27.2496 17.7504 31.1 22.5 31.1Z\",\n    fill: \"#939393\",\n    stroke: \"black\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettings);\nexport default __webpack_public_path__ + \"static/media/Settings.83836ff3aa439c00cdfc9ced4cd1e090.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useRef, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { ProductsState, useProducts } from '../../context/ProductContext';\r\nimport ProductItem from './ProductItem/ProductItem';\r\nimport SettingsModal from '../SettingsModal/SettingsModal';\r\nimport SettingsIcon from '../../assets/Settings.svg';\r\nimport Correct3Dings from '../../assets/audio/Correct3Dings.mp3';\r\nimport BuzzerIncorrect from '../../assets/audio/BuzzerIncorrect.mp3';\r\n\r\nconst ProdutScreen = () => {\r\n  const { products } = useProducts();\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n  const correctAudioRef = useRef<any>(null);\r\n  const incorrectAudioRef = useRef<any>(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handlePlayCorrectAudio = () => {\r\n    correctAudioRef.current.pause();\r\n    incorrectAudioRef.current.pause();\r\n    correctAudioRef.current.currentTime = 0;\r\n    correctAudioRef.current.play();\r\n  };\r\n\r\n  const handlePlayIncorrectAudio = () => {\r\n    correctAudioRef.current.pause();\r\n    incorrectAudioRef.current.pause();\r\n    incorrectAudioRef.current.currentTime = 0;\r\n    incorrectAudioRef.current.play();\r\n  };\r\n\r\n  const handleKeyDown = (event: KeyboardEvent) => {\r\n    if ((event.key === 'y' || event.key === 'Y') && !isModalOpen) {\r\n      handlePlayCorrectAudio();\r\n    } else if ((event.key === 'n' || event.key === 'N') && !isModalOpen) {\r\n      handlePlayIncorrectAudio();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [isModalOpen]);\r\n  return (\r\n    <>\r\n      <audio ref={correctAudioRef} src={Correct3Dings} preload='auto' />\r\n      <audio ref={incorrectAudioRef} src={BuzzerIncorrect} preload='auto' />\r\n      <div className='relative h-screen bg-[#FFFFEE] px-5 pt-[70px] pb-[77px]  transition-opacity duration-75 animate-fadeIn'>\r\n        <div className='bg-[#ecddb4] h-full w-full border-[2px] border-solid border-black border-t-[5px] rounded-[60px] p-[24px] pb-0 overflow-hidden'>\r\n          <div className='bg-[#96E3F5] h-full w-full border-[2px] border-solid border-black border-b-0 rounded-t-[60px] flex gap-3 justify-around p-3 pb-0 items-end'>\r\n            {Object.entries(products).map(([key, product]) => (\r\n              <ProductItem\r\n                key={key}\r\n                product={product}\r\n                productKey={key as keyof ProductsState}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className='absolute bottom-[16px] left-0 px-[70px] z-40 flex w-full items-center justify-between'>\r\n          <button\r\n            className='hover:rotate-[20deg] active:rotate-[35deg] active:scale-[0.97] transition'\r\n            onClick={() => setIsModalOpen(true)}\r\n          >\r\n            <img src={SettingsIcon} alt='Settings icon' />\r\n          </button>\r\n          <button\r\n            style={{\r\n              textShadow: '0 2px 1px 0 rgba(0, 0, 0, 0.25)',\r\n              boxShadow:\r\n                'inset 3px -2px 4px 0 rgba(144, 144, 144, 0.25), inset -2px 0 4px 0 rgba(92, 92, 92, 0.25)',\r\n            }}\r\n            className='w-[111px] h-[43px] px-1 bg-[#56639d] hover:bg-[#56639d]/70 active:bg-[#56639d]/50 text-[#fff] text-[28px] font-bold rounded-[5px] uppercase transition'\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <SettingsModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProdutScreen;\r\n","import { HashRouter, Routes, Route } from 'react-router-dom';\r\n\r\nimport GameScreen from './components/GameScreen/GameScreen';\r\nimport ProdutScreen from './components/ProductScreen/ProdutScreen';\r\n\r\nconst App = () => {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path='/' element={<GameScreen />} />\r\n        <Route path='/products' element={<ProdutScreen />} />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport App from './App';\r\nimport { ProductsProvider } from './context/ProductContext';\r\nimport { GameProvider } from './context/GameContext';\r\n\r\nimport './index.css';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement,\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <GameProvider>\r\n      <ProductsProvider>\r\n        <App />\r\n      </ProductsProvider>\r\n    </GameProvider>\r\n  </React.StrictMode>,\r\n);\r\n\r\nreportWebVitals();\r\n"],"names":["aa","require","ca","p","a","b","c","arguments","length","encodeURIComponent","da","Set","ea","fa","ha","add","ia","window","document","createElement","ja","Object","prototype","hasOwnProperty","ka","la","ma","v","d","e","f","g","this","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","forEach","toLowerCase","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","call","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","Error","stack","trim","match","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","l","h","k","displayName","includes","name","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","apply","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","id","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","key","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","concat","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","bind","capture","passive","n","t","J","x","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Mg","join","Ng","Og","index","Pg","Qg","props","Rg","implementation","Sg","Tg","q","r","y","next","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","callback","nh","K","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","L","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","hi","ii","create","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","R","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","defaultProps","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","state","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","message","digest","Ki","Li","console","error","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","ceil","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","version","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","exports","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","module","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","map","count","toArray","only","Component","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","leafPrototypes","getProto","getPrototypeOf","obj","__esModule","ns","def","getOwnPropertyNames","definition","o","chunkId","all","reduce","promises","miniCssF","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","i","s","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","doneFns","fn","head","toStringTag","installedChunks","j","installedChunkData","promise","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Action","PopStateEventType","invariant","warning","cond","warn","getHistoryState","usr","idx","createLocation","to","_extends","pathname","hash","parsePath","substr","createPath","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","DOMException","Replace","go","ResultType","matchRoutes","routes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","filter","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","startIndex","nextChar","getInvalidPathError","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","DataRouterContext","React","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","UNSAFE_invariant","useIsomorphicLayoutEffect","static","useNavigate","router","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","future","routePathnamesJson","UNSAFE_getResolveToMatches","parse","relative","useNavigateUnstable","useRoutesImpl","dataRouterState","parentMatches","routeMatch","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","parentSegments","renderedMatches","_renderMatches","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","routeId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","super","revalidation","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState","_future","v7_partialHydration","initialized","errorIndex","findIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","alreadyWarned","getChildren","hookName","ctx","useRouteContext","thisRoute","Route","_props","Router","_ref5","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","handle","__reactRouterVersion","startTransitionImpl","ReactDOM","HashRouter","historyRef","querySelector","setStateImpl","v7_startTransition","newState","GameContext","GameProvider","remainingMoves","setRemainingMoves","positionX","setPositionX","positionY","setPositionY","savedPositionX","setSavesPositionX","savedPositionY","setSavesPositionY","startPoint","setStartPoint","startPositionY","setStartPositionY","startPositionX","setStartPositionX","_jsx","resetGame","useGame","GameScreen","yodelAudioRef","climberStopsMovingAudioRef","winningAudioRef","fallAudioRef","startPointContext","setStartPointContext","falling","setFalling","isYodeling","setIsYodeling","outerRocksSize","setOuterRocksSize","headerHeight","setHeaderHeight","isGameStarted","setIsGmeStarted","rightLimit","setRightLimit","leftLimit","setLeftLimit","points","setPoints","isRendered","setIsRendered","isMainBgLoaded","setMainBgLoaded","isGameContainerLoaded","setGameContainerLoaded","gameBackgroundElement","setGameBackgroundElement","yodelyGuyElement","setYodelyGuyElement","rulerElement","setRulerElement","handlePlayFallAudioRef","pause","currentTime","play","handleKeyDown","prevPositionX","max","innerWidth","prevPositionY","innerHeight","handleKeyUp","centerPosition","closestKey","entries","getClosestPointKey","timer","yodelyGuyRect","getBoundingClientRect","gameBackgroundRect","relativeX","relativeY","bottom","rulerRect","adjustedDistance","right","koeficient","moveForBigScreen","numberOfPoints","pointDistance","pointsObject","updateDimensions","getElementById","offsetWidth","offsetHeight","updateDimensionsBackground","updateDimensionsHeader","updateDimensionsYodelyGuy","updateDimensionsRuler","rerender1","rerender2","fallAnimation","abs","_jsxs","className","ThePriceIsRightYodelling","preload","SingleDing","WinningDingX10","ScreamCrash","OuterRocksCut","alt","onLoad","Header","maxWidth","GameBackgroundWide","GameBackground","maxHeight","YellowRulerRotate","YodelyGuy","initialProductsValues","product1","imgSrc","productPrice","productName","priceOpened","nameOpened","product2","product3","ProductsContext","ProductsProvider","products","setProducts","setProduct","resetProducts","useProducts","productKey","product","setProductName","productImage","setProductImage","setProductPrice","parentHeight","setParentHeight","containerRef","parentElement","clientHeight","boxShadow","handleShowName","ProductItemBG","isOpen","onClose","onReset","textShadow","openConfirmationModal","setOpenConfirmationModal","setProduct1","setProduct2","setProduct3","imagePreview1","setImagePreview1","imagePreview2","setImagePreview2","imagePreview3","setImagePreview3","handleFileChange","productSetter","setImagePreview","_e$target$files","file","files","reader","FileReader","onloadend","readAsDataURL","tabIndex","CrossIcon","onChange","placeholder","_Fragment","AcceptImages","accept","ConfirmationPopup","ProdutScreen","isModalOpen","setIsModalOpen","correctAudioRef","incorrectAudioRef","Correct3Dings","BuzzerIncorrect","ProductItem","SettingsIcon","SettingsModal","App","reportWebVitals"],"sourceRoot":""}